// generated by ThinkMeta.Music.Notation.Fonts.Smufl.Metadata.Generator
namespace ThinkMeta.Music.Notation.Fonts.Smufl.Metadata.Generated;

/// <summary>
/// All glyph names.
/// </summary>
public static class GlyphNames
{
    /// <summary>
    /// 4-string tab clef.
    /// </summary>
    public const string FourStringTabClef = "4stringTabClef";
    /// <summary>
    /// 6-string tab clef.
    /// </summary>
    public const string SixStringTabClef = "6stringTabClef";
    /// <summary>
    /// 11 large diesis down, 3° down [46 EDO].
    /// </summary>
    public const string AccSagittal11LargeDiesisDown = "accSagittal11LargeDiesisDown";
    /// <summary>
    /// 11 large diesis up, (11L), (sharp less 11M), 3° up [46 EDO].
    /// </summary>
    public const string AccSagittal11LargeDiesisUp = "accSagittal11LargeDiesisUp";
    /// <summary>
    /// 11 medium diesis down, 1°[17 31] 2°46 down, 1/4-tone down.
    /// </summary>
    public const string AccSagittal11MediumDiesisDown = "accSagittal11MediumDiesisDown";
    /// <summary>
    /// 11 medium diesis up, (11M), 1°[17 31] 2°46 up, 1/4-tone up.
    /// </summary>
    public const string AccSagittal11MediumDiesisUp = "accSagittal11MediumDiesisUp";
    /// <summary>
    /// 11:19 large diesis down.
    /// </summary>
    public const string AccSagittal11v19LargeDiesisDown = "accSagittal11v19LargeDiesisDown";
    /// <summary>
    /// 11:19 large diesis up, (11:19L, apotome less 11:19M).
    /// </summary>
    public const string AccSagittal11v19LargeDiesisUp = "accSagittal11v19LargeDiesisUp";
    /// <summary>
    /// 11:19 medium diesis down.
    /// </summary>
    public const string AccSagittal11v19MediumDiesisDown = "accSagittal11v19MediumDiesisDown";
    /// <summary>
    /// 11:19 medium diesis up, (11:19M, 11M plus 19s).
    /// </summary>
    public const string AccSagittal11v19MediumDiesisUp = "accSagittal11v19MediumDiesisUp";
    /// <summary>
    /// 11:49 comma down.
    /// </summary>
    public const string AccSagittal11v49CommaDown = "accSagittal11v49CommaDown";
    /// <summary>
    /// 11:49 comma up, (11:49C, 11M less 49C).
    /// </summary>
    public const string AccSagittal11v49CommaUp = "accSagittal11v49CommaUp";
    /// <summary>
    /// 143 comma down.
    /// </summary>
    public const string AccSagittal143CommaDown = "accSagittal143CommaDown";
    /// <summary>
    /// 143 comma up, (143C, 13L less 11M).
    /// </summary>
    public const string AccSagittal143CommaUp = "accSagittal143CommaUp";
    /// <summary>
    /// 17 comma down.
    /// </summary>
    public const string AccSagittal17CommaDown = "accSagittal17CommaDown";
    /// <summary>
    /// 17 comma up, (17C).
    /// </summary>
    public const string AccSagittal17CommaUp = "accSagittal17CommaUp";
    /// <summary>
    /// 17 kleisma down.
    /// </summary>
    public const string AccSagittal17KleismaDown = "accSagittal17KleismaDown";
    /// <summary>
    /// 17 kleisma up, (17k).
    /// </summary>
    public const string AccSagittal17KleismaUp = "accSagittal17KleismaUp";
    /// <summary>
    /// 19 comma down.
    /// </summary>
    public const string AccSagittal19CommaDown = "accSagittal19CommaDown";
    /// <summary>
    /// 19 comma up, (19C).
    /// </summary>
    public const string AccSagittal19CommaUp = "accSagittal19CommaUp";
    /// <summary>
    /// 19 schisma down.
    /// </summary>
    public const string AccSagittal19SchismaDown = "accSagittal19SchismaDown";
    /// <summary>
    /// 19 schisma up, (19s).
    /// </summary>
    public const string AccSagittal19SchismaUp = "accSagittal19SchismaUp";
    /// <summary>
    /// 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down.
    /// </summary>
    public const string AccSagittal1MinaDown = "accSagittal1MinaDown";
    /// <summary>
    /// 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up.
    /// </summary>
    public const string AccSagittal1MinaUp = "accSagittal1MinaUp";
    /// <summary>
    /// 1 tina down, 7²⋅11⋅19/5-schismina down, 0.17 cents down.
    /// </summary>
    public const string AccSagittal1TinaDown = "accSagittal1TinaDown";
    /// <summary>
    /// 1 tina up, 7²⋅11⋅19/5-schismina up, 0.17 cents up.
    /// </summary>
    public const string AccSagittal1TinaUp = "accSagittal1TinaUp";
    /// <summary>
    /// 23 comma down, 2° down [96 EDO], 1/8-tone down.
    /// </summary>
    public const string AccSagittal23CommaDown = "accSagittal23CommaDown";
    /// <summary>
    /// 23 comma up, (23C), 2° up [96 EDO], 1/8-tone up.
    /// </summary>
    public const string AccSagittal23CommaUp = "accSagittal23CommaUp";
    /// <summary>
    /// 23 small diesis down.
    /// </summary>
    public const string AccSagittal23SmallDiesisDown = "accSagittal23SmallDiesisDown";
    /// <summary>
    /// 23 small diesis up, (23S).
    /// </summary>
    public const string AccSagittal23SmallDiesisUp = "accSagittal23SmallDiesisUp";
    /// <summary>
    /// 25 small diesis down, 2° down [53 EDO].
    /// </summary>
    public const string AccSagittal25SmallDiesisDown = "accSagittal25SmallDiesisDown";
    /// <summary>
    /// 25 small diesis up, (25S, ~5:13S, ~37S, 5C plus 5C), 2° up [53 EDO].
    /// </summary>
    public const string AccSagittal25SmallDiesisUp = "accSagittal25SmallDiesisUp";
    /// <summary>
    /// 2 minas down, 65/77-schismina down, 0.83 cents down.
    /// </summary>
    public const string AccSagittal2MinasDown = "accSagittal2MinasDown";
    /// <summary>
    /// 2 minas up, 65/77-schismina up, 0.83 cents up.
    /// </summary>
    public const string AccSagittal2MinasUp = "accSagittal2MinasUp";
    /// <summary>
    /// 2 tinas down, 1/(7³⋅17)-schismina down, 0.30 cents down.
    /// </summary>
    public const string AccSagittal2TinasDown = "accSagittal2TinasDown";
    /// <summary>
    /// 2 tinas up, 1/(7³⋅17)-schismina up, 0.30 cents up.
    /// </summary>
    public const string AccSagittal2TinasUp = "accSagittal2TinasUp";
    /// <summary>
    /// 35 large diesis down, 2° down [50 EDO], 5/18-tone down.
    /// </summary>
    public const string AccSagittal35LargeDiesisDown = "accSagittal35LargeDiesisDown";
    /// <summary>
    /// 35 large diesis up, (35L, ~13L, ~125L, sharp less 35M), 2°50 up.
    /// </summary>
    public const string AccSagittal35LargeDiesisUp = "accSagittal35LargeDiesisUp";
    /// <summary>
    /// 35 medium diesis down, 1°[50] 2°[27] down, 2/9-tone down.
    /// </summary>
    public const string AccSagittal35MediumDiesisDown = "accSagittal35MediumDiesisDown";
    /// <summary>
    /// 35 medium diesis up, (35M, ~13M, ~125M, 5C plus 7C), 2/9-tone up.
    /// </summary>
    public const string AccSagittal35MediumDiesisUp = "accSagittal35MediumDiesisUp";
    /// <summary>
    /// 3 tinas down, 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down.
    /// </summary>
    public const string AccSagittal3TinasDown = "accSagittal3TinasDown";
    /// <summary>
    /// 3 tinas up, 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up.
    /// </summary>
    public const string AccSagittal3TinasUp = "accSagittal3TinasUp";
    /// <summary>
    /// 49 large diesis down.
    /// </summary>
    public const string AccSagittal49LargeDiesisDown = "accSagittal49LargeDiesisDown";
    /// <summary>
    /// 49 large diesis up, (49L, ~31L, apotome less 49M).
    /// </summary>
    public const string AccSagittal49LargeDiesisUp = "accSagittal49LargeDiesisUp";
    /// <summary>
    /// 49 medium diesis down.
    /// </summary>
    public const string AccSagittal49MediumDiesisDown = "accSagittal49MediumDiesisDown";
    /// <summary>
    /// 49 medium diesis up, (49M, ~31M, 7C plus 7C).
    /// </summary>
    public const string AccSagittal49MediumDiesisUp = "accSagittal49MediumDiesisUp";
    /// <summary>
    /// 49 small diesis down.
    /// </summary>
    public const string AccSagittal49SmallDiesisDown = "accSagittal49SmallDiesisDown";
    /// <summary>
    /// 49 small diesis up, (49S, ~31S).
    /// </summary>
    public const string AccSagittal49SmallDiesisUp = "accSagittal49SmallDiesisUp";
    /// <summary>
    /// 4 tinas down, 5²⋅11²/7-schismina down, 0.57 cents down.
    /// </summary>
    public const string AccSagittal4TinasDown = "accSagittal4TinasDown";
    /// <summary>
    /// 4 tinas up, 5²⋅11²/7-schismina up, 0.57 cents up.
    /// </summary>
    public const string AccSagittal4TinasUp = "accSagittal4TinasUp";
    /// <summary>
    /// 55 comma down, 3° down [96 EDO], 3/16-tone down.
    /// </summary>
    public const string AccSagittal55CommaDown = "accSagittal55CommaDown";
    /// <summary>
    /// 55 comma up, (55C, 11M less 5C), 3°up [96 EDO], 3/16-tone up.
    /// </summary>
    public const string AccSagittal55CommaUp = "accSagittal55CommaUp";
    /// <summary>
    /// 5 comma down, 1° down [22 27 29 34 41 46 53 96 EDOs], 1/12-tone down.
    /// </summary>
    public const string AccSagittal5CommaDown = "accSagittal5CommaDown";
    /// <summary>
    /// 5 comma up, (5C), 1° up [22 27 29 34 41 46 53 96 EDOs], 1/12-tone up.
    /// </summary>
    public const string AccSagittal5CommaUp = "accSagittal5CommaUp";
    /// <summary>
    /// 5 tinas down, 7⁴/25-schismina down, 0.72 cents down.
    /// </summary>
    public const string AccSagittal5TinasDown = "accSagittal5TinasDown";
    /// <summary>
    /// 5 tinas up, 7⁴/25-schismina up, 0.72 cents up.
    /// </summary>
    public const string AccSagittal5TinasUp = "accSagittal5TinasUp";
    /// <summary>
    /// 5:11 small diesis down.
    /// </summary>
    public const string AccSagittal5v11SmallDiesisDown = "accSagittal5v11SmallDiesisDown";
    /// <summary>
    /// 5:11 small diesis up, (5:11S, ~7:13S, ~11:17S, 5:7k plus 7:11C).
    /// </summary>
    public const string AccSagittal5v11SmallDiesisUp = "accSagittal5v11SmallDiesisUp";
    /// <summary>
    /// 5:13 large diesis down.
    /// </summary>
    public const string AccSagittal5v13LargeDiesisDown = "accSagittal5v13LargeDiesisDown";
    /// <summary>
    /// 5:13 large diesis up, (5:13L, ~37L, apotome less 5:13M).
    /// </summary>
    public const string AccSagittal5v13LargeDiesisUp = "accSagittal5v13LargeDiesisUp";
    /// <summary>
    /// 5:13 medium diesis down.
    /// </summary>
    public const string AccSagittal5v13MediumDiesisDown = "accSagittal5v13MediumDiesisDown";
    /// <summary>
    /// 5:13 medium diesis up, (5:13M, ~37M, 5C plus 13C).
    /// </summary>
    public const string AccSagittal5v13MediumDiesisUp = "accSagittal5v13MediumDiesisUp";
    /// <summary>
    /// 5:19 comma down, 1/20-tone down.
    /// </summary>
    public const string AccSagittal5v19CommaDown = "accSagittal5v19CommaDown";
    /// <summary>
    /// 5:19 comma up, (5:19C, 5C plus 19s), 1/20-tone up.
    /// </summary>
    public const string AccSagittal5v19CommaUp = "accSagittal5v19CommaUp";
    /// <summary>
    /// 5:23 small diesis down, 2° down [60 EDO], 1/5-tone down.
    /// </summary>
    public const string AccSagittal5v23SmallDiesisDown = "accSagittal5v23SmallDiesisDown";
    /// <summary>
    /// 5:23 small diesis up, (5:23S, 5C plus 23C), 2° up [60 EDO], 1/5-tone up.
    /// </summary>
    public const string AccSagittal5v23SmallDiesisUp = "accSagittal5v23SmallDiesisUp";
    /// <summary>
    /// 5:49 medium diesis down.
    /// </summary>
    public const string AccSagittal5v49MediumDiesisDown = "accSagittal5v49MediumDiesisDown";
    /// <summary>
    /// 5:49 medium diesis up, (5:49M, half apotome).
    /// </summary>
    public const string AccSagittal5v49MediumDiesisUp = "accSagittal5v49MediumDiesisUp";
    /// <summary>
    /// 5:7 kleisma down.
    /// </summary>
    public const string AccSagittal5v7KleismaDown = "accSagittal5v7KleismaDown";
    /// <summary>
    /// 5:7 kleisma up, (5:7k, ~11:13k, 7C less 5C).
    /// </summary>
    public const string AccSagittal5v7KleismaUp = "accSagittal5v7KleismaUp";
    /// <summary>
    /// 6 tinas down, 2 minas down, 65/77-schismina down, 0.83 cents down.
    /// </summary>
    public const string AccSagittal6TinasDown = "accSagittal6TinasDown";
    /// <summary>
    /// 6 tinas up, 2 minas up, 65/77-schismina up, 0.83 cents up.
    /// </summary>
    public const string AccSagittal6TinasUp = "accSagittal6TinasUp";
    /// <summary>
    /// 7 comma down, 1° down [43 EDO], 2° down [72 EDO], 1/6-tone down.
    /// </summary>
    public const string AccSagittal7CommaDown = "accSagittal7CommaDown";
    /// <summary>
    /// 7 comma up, (7C), 1° up [43 EDO], 2° up [72 EDO], 1/6-tone up.
    /// </summary>
    public const string AccSagittal7CommaUp = "accSagittal7CommaUp";
    /// <summary>
    /// 7 tinas down, 7/(5²⋅17)-schismina down, 1.02 cents down.
    /// </summary>
    public const string AccSagittal7TinasDown = "accSagittal7TinasDown";
    /// <summary>
    /// 7 tinas up, 7/(5²⋅17)-schismina up, 1.02 cents up.
    /// </summary>
    public const string AccSagittal7TinasUp = "accSagittal7TinasUp";
    /// <summary>
    /// 7:11 comma down, 1° down [60 EDO], 1/10-tone down.
    /// </summary>
    public const string AccSagittal7v11CommaDown = "accSagittal7v11CommaDown";
    /// <summary>
    /// 7:11 comma up, (7:11C, ~13:17S, ~29S, 11L less 7C), 1° up [60 EDO].
    /// </summary>
    public const string AccSagittal7v11CommaUp = "accSagittal7v11CommaUp";
    /// <summary>
    /// 7:11 kleisma down.
    /// </summary>
    public const string AccSagittal7v11KleismaDown = "accSagittal7v11KleismaDown";
    /// <summary>
    /// 7:11 kleisma up, (7:11k, ~29k).
    /// </summary>
    public const string AccSagittal7v11KleismaUp = "accSagittal7v11KleismaUp";
    /// <summary>
    /// 7:19 comma down.
    /// </summary>
    public const string AccSagittal7v19CommaDown = "accSagittal7v19CommaDown";
    /// <summary>
    /// 7:19 comma up, (7:19C, 7C less 19s).
    /// </summary>
    public const string AccSagittal7v19CommaUp = "accSagittal7v19CommaUp";
    /// <summary>
    /// 8 tinas down, 11⋅17/(5²⋅7)-schismina down, 1.14 cents down.
    /// </summary>
    public const string AccSagittal8TinasDown = "accSagittal8TinasDown";
    /// <summary>
    /// 8 tinas up, 11⋅17/(5²⋅7)-schismina up, 1.14 cents up.
    /// </summary>
    public const string AccSagittal8TinasUp = "accSagittal8TinasUp";
    /// <summary>
    /// 9 tinas down, 1/(7²⋅11)-schismina down, 1.26 cents down.
    /// </summary>
    public const string AccSagittal9TinasDown = "accSagittal9TinasDown";
    /// <summary>
    /// 9 tinas up, 1/(7²⋅11)-schismina up, 1.26 cents up.
    /// </summary>
    public const string AccSagittal9TinasUp = "accSagittal9TinasUp";
    /// <summary>
    /// Acute, 5 schisma up (5s), 2 cents up.
    /// </summary>
    public const string AccSagittalAcute = "accSagittalAcute";
    /// <summary>
    /// Double flat, (2 apotomes down)[almost all EDOs], whole-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat = "accSagittalDoubleFlat";
    /// <summary>
    /// Double flat 11:49C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat11v49CUp = "accSagittalDoubleFlat11v49CUp";
    /// <summary>
    /// Double flat 143C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat143CUp = "accSagittalDoubleFlat143CUp";
    /// <summary>
    /// Double flat 17C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat17CUp = "accSagittalDoubleFlat17CUp";
    /// <summary>
    /// Double flat 17k-up.
    /// </summary>
    public const string AccSagittalDoubleFlat17kUp = "accSagittalDoubleFlat17kUp";
    /// <summary>
    /// Double flat 19C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat19CUp = "accSagittalDoubleFlat19CUp";
    /// <summary>
    /// Double flat 19s-up.
    /// </summary>
    public const string AccSagittalDoubleFlat19sUp = "accSagittalDoubleFlat19sUp";
    /// <summary>
    /// Double flat 23C-up, 14° down [96 EDO], 7/8-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat23CUp = "accSagittalDoubleFlat23CUp";
    /// <summary>
    /// Double flat 23S-up.
    /// </summary>
    public const string AccSagittalDoubleFlat23SUp = "accSagittalDoubleFlat23SUp";
    /// <summary>
    /// Double flat 25S-up, 8°down [53 EDO].
    /// </summary>
    public const string AccSagittalDoubleFlat25SUp = "accSagittalDoubleFlat25SUp";
    /// <summary>
    /// Double flat 49S-up.
    /// </summary>
    public const string AccSagittalDoubleFlat49SUp = "accSagittalDoubleFlat49SUp";
    /// <summary>
    /// Double flat 55C-up, 13° down [96 EDO], 13/16-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat55CUp = "accSagittalDoubleFlat55CUp";
    /// <summary>
    /// Double flat 5C-up, 5°[22 29] 7°[34 41] 9°53 down, 11/12 tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat5CUp = "accSagittalDoubleFlat5CUp";
    /// <summary>
    /// Double flat 5:11S-up.
    /// </summary>
    public const string AccSagittalDoubleFlat5v11SUp = "accSagittalDoubleFlat5v11SUp";
    /// <summary>
    /// Double flat 5:19C-up, 19/20-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat5v19CUp = "accSagittalDoubleFlat5v19CUp";
    /// <summary>
    /// Double flat 5:23S-up, 8° down [60 EDO], 4/5-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat5v23SUp = "accSagittalDoubleFlat5v23SUp";
    /// <summary>
    /// Double flat 5:7k-up.
    /// </summary>
    public const string AccSagittalDoubleFlat5v7kUp = "accSagittalDoubleFlat5v7kUp";
    /// <summary>
    /// Double flat 7C-up, 5° down [43 EDO], 10° down [72 EDO], 5/6-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat7CUp = "accSagittalDoubleFlat7CUp";
    /// <summary>
    /// Double flat 7:11C-up, 9° down [60 EDO], 9/10-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat7v11CUp = "accSagittalDoubleFlat7v11CUp";
    /// <summary>
    /// Double flat 7:11k-up.
    /// </summary>
    public const string AccSagittalDoubleFlat7v11kUp = "accSagittalDoubleFlat7v11kUp";
    /// <summary>
    /// Double flat 7:19C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat7v19CUp = "accSagittalDoubleFlat7v19CUp";
    /// <summary>
    /// Double sharp, (2 apotomes up)[almost all EDOs], whole-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp = "accSagittalDoubleSharp";
    /// <summary>
    /// Double sharp 11:49C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp11v49CDown = "accSagittalDoubleSharp11v49CDown";
    /// <summary>
    /// Double sharp 143C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp143CDown = "accSagittalDoubleSharp143CDown";
    /// <summary>
    /// Double sharp 17C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp17CDown = "accSagittalDoubleSharp17CDown";
    /// <summary>
    /// Double sharp 17k-down.
    /// </summary>
    public const string AccSagittalDoubleSharp17kDown = "accSagittalDoubleSharp17kDown";
    /// <summary>
    /// Double sharp 19C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp19CDown = "accSagittalDoubleSharp19CDown";
    /// <summary>
    /// Double sharp 19s-down.
    /// </summary>
    public const string AccSagittalDoubleSharp19sDown = "accSagittalDoubleSharp19sDown";
    /// <summary>
    /// Double sharp 23C-down, 14°up [96 EDO], 7/8-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp23CDown = "accSagittalDoubleSharp23CDown";
    /// <summary>
    /// Double sharp 23S-down.
    /// </summary>
    public const string AccSagittalDoubleSharp23SDown = "accSagittalDoubleSharp23SDown";
    /// <summary>
    /// Double sharp 25S-down, 8°up [53 EDO].
    /// </summary>
    public const string AccSagittalDoubleSharp25SDown = "accSagittalDoubleSharp25SDown";
    /// <summary>
    /// Double sharp 49S-down.
    /// </summary>
    public const string AccSagittalDoubleSharp49SDown = "accSagittalDoubleSharp49SDown";
    /// <summary>
    /// Double sharp 55C-down, 13° up [96 EDO], 13/16-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp55CDown = "accSagittalDoubleSharp55CDown";
    /// <summary>
    /// Double sharp 5C-down, 5°[22 29] 7°[34 41] 9°53 up, 11/12 tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp5CDown = "accSagittalDoubleSharp5CDown";
    /// <summary>
    /// Double sharp 5:11S-down.
    /// </summary>
    public const string AccSagittalDoubleSharp5v11SDown = "accSagittalDoubleSharp5v11SDown";
    /// <summary>
    /// Double sharp 5:19C-down, 19/20-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp5v19CDown = "accSagittalDoubleSharp5v19CDown";
    /// <summary>
    /// Double sharp 5:23S-down, 8° up [60 EDO], 4/5-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp5v23SDown = "accSagittalDoubleSharp5v23SDown";
    /// <summary>
    /// Double sharp 5:7k-down.
    /// </summary>
    public const string AccSagittalDoubleSharp5v7kDown = "accSagittalDoubleSharp5v7kDown";
    /// <summary>
    /// Double sharp 7C-down, 5°[43] 10°[72] up, 5/6-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp7CDown = "accSagittalDoubleSharp7CDown";
    /// <summary>
    /// Double sharp 7:11C-down, 9° up [60 EDO], 9/10-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp7v11CDown = "accSagittalDoubleSharp7v11CDown";
    /// <summary>
    /// Double sharp 7:11k-down.
    /// </summary>
    public const string AccSagittalDoubleSharp7v11kDown = "accSagittalDoubleSharp7v11kDown";
    /// <summary>
    /// Double sharp 7:19C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp7v19CDown = "accSagittalDoubleSharp7v19CDown";
    /// <summary>
    /// Flat, (apotome down)[almost all EDOs], 1/2-tone down.
    /// </summary>
    public const string AccSagittalFlat = "accSagittalFlat";
    /// <summary>
    /// Flat 11L-down, 8° up [46 EDO].
    /// </summary>
    public const string AccSagittalFlat11LDown = "accSagittalFlat11LDown";
    /// <summary>
    /// Flat 11M-down, 3° down [17 31 EDOs], 7° down [46 EDO], 3/4-tone down.
    /// </summary>
    public const string AccSagittalFlat11MDown = "accSagittalFlat11MDown";
    /// <summary>
    /// Flat 11:19L-down.
    /// </summary>
    public const string AccSagittalFlat11v19LDown = "accSagittalFlat11v19LDown";
    /// <summary>
    /// Flat 11:19M-down.
    /// </summary>
    public const string AccSagittalFlat11v19MDown = "accSagittalFlat11v19MDown";
    /// <summary>
    /// Flat 11:49C-down.
    /// </summary>
    public const string AccSagittalFlat11v49CDown = "accSagittalFlat11v49CDown";
    /// <summary>
    /// Flat 11:49C-up.
    /// </summary>
    public const string AccSagittalFlat11v49CUp = "accSagittalFlat11v49CUp";
    /// <summary>
    /// Flat 143C-down.
    /// </summary>
    public const string AccSagittalFlat143CDown = "accSagittalFlat143CDown";
    /// <summary>
    /// Flat 143C-up.
    /// </summary>
    public const string AccSagittalFlat143CUp = "accSagittalFlat143CUp";
    /// <summary>
    /// Flat 17C-down.
    /// </summary>
    public const string AccSagittalFlat17CDown = "accSagittalFlat17CDown";
    /// <summary>
    /// Flat 17C-up.
    /// </summary>
    public const string AccSagittalFlat17CUp = "accSagittalFlat17CUp";
    /// <summary>
    /// Flat 17k-down.
    /// </summary>
    public const string AccSagittalFlat17kDown = "accSagittalFlat17kDown";
    /// <summary>
    /// Flat 17k-up.
    /// </summary>
    public const string AccSagittalFlat17kUp = "accSagittalFlat17kUp";
    /// <summary>
    /// Flat 19C-down.
    /// </summary>
    public const string AccSagittalFlat19CDown = "accSagittalFlat19CDown";
    /// <summary>
    /// Flat 19C-up.
    /// </summary>
    public const string AccSagittalFlat19CUp = "accSagittalFlat19CUp";
    /// <summary>
    /// Flat 19s-down.
    /// </summary>
    public const string AccSagittalFlat19sDown = "accSagittalFlat19sDown";
    /// <summary>
    /// Flat 19s-up.
    /// </summary>
    public const string AccSagittalFlat19sUp = "accSagittalFlat19sUp";
    /// <summary>
    /// Flat 23C-down, 10° down [96 EDO], 5/8-tone down.
    /// </summary>
    public const string AccSagittalFlat23CDown = "accSagittalFlat23CDown";
    /// <summary>
    /// Flat 23C-up, 6° down [96 EDO], 3/8-tone down.
    /// </summary>
    public const string AccSagittalFlat23CUp = "accSagittalFlat23CUp";
    /// <summary>
    /// Flat 23S-down.
    /// </summary>
    public const string AccSagittalFlat23SDown = "accSagittalFlat23SDown";
    /// <summary>
    /// Flat 23S-up.
    /// </summary>
    public const string AccSagittalFlat23SUp = "accSagittalFlat23SUp";
    /// <summary>
    /// Flat 25S-down, 7° down [53 EDO].
    /// </summary>
    public const string AccSagittalFlat25SDown = "accSagittalFlat25SDown";
    /// <summary>
    /// Flat 25S-up, 3° down [53 EDO].
    /// </summary>
    public const string AccSagittalFlat25SUp = "accSagittalFlat25SUp";
    /// <summary>
    /// Flat 35L-down, 5° down [50 EDO].
    /// </summary>
    public const string AccSagittalFlat35LDown = "accSagittalFlat35LDown";
    /// <summary>
    /// Flat 35M-down, 4° down [50 EDO], 6° down [27 EDO], 13/18-tone down.
    /// </summary>
    public const string AccSagittalFlat35MDown = "accSagittalFlat35MDown";
    /// <summary>
    /// Flat 49L-down.
    /// </summary>
    public const string AccSagittalFlat49LDown = "accSagittalFlat49LDown";
    /// <summary>
    /// Flat 49M-down.
    /// </summary>
    public const string AccSagittalFlat49MDown = "accSagittalFlat49MDown";
    /// <summary>
    /// Flat 49S-down.
    /// </summary>
    public const string AccSagittalFlat49SDown = "accSagittalFlat49SDown";
    /// <summary>
    /// Flat 49S-up.
    /// </summary>
    public const string AccSagittalFlat49SUp = "accSagittalFlat49SUp";
    /// <summary>
    /// Flat 55C-down, 11° down [96 EDO], 11/16-tone down.
    /// </summary>
    public const string AccSagittalFlat55CDown = "accSagittalFlat55CDown";
    /// <summary>
    /// Flat 55C-up, 5° down [96 EDO], 5/16-tone down.
    /// </summary>
    public const string AccSagittalFlat55CUp = "accSagittalFlat55CUp";
    /// <summary>
    /// Flat 5C-down, 4°[22 29] 5°[27 34 41] 6°[39 46 53] down, 7/12-tone down.
    /// </summary>
    public const string AccSagittalFlat5CDown = "accSagittalFlat5CDown";
    /// <summary>
    /// Flat 5C-up, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°72 7°[96] down, 5/12-tone down.
    /// </summary>
    public const string AccSagittalFlat5CUp = "accSagittalFlat5CUp";
    /// <summary>
    /// Flat 5:11S-down.
    /// </summary>
    public const string AccSagittalFlat5v11SDown = "accSagittalFlat5v11SDown";
    /// <summary>
    /// Flat 5:11S-up.
    /// </summary>
    public const string AccSagittalFlat5v11SUp = "accSagittalFlat5v11SUp";
    /// <summary>
    /// Flat 5:13L-down.
    /// </summary>
    public const string AccSagittalFlat5v13LDown = "accSagittalFlat5v13LDown";
    /// <summary>
    /// Flat 5:13M-down.
    /// </summary>
    public const string AccSagittalFlat5v13MDown = "accSagittalFlat5v13MDown";
    /// <summary>
    /// Flat 5:19C-down, 11/20-tone down.
    /// </summary>
    public const string AccSagittalFlat5v19CDown = "accSagittalFlat5v19CDown";
    /// <summary>
    /// Flat 5:19C-up, 9/20-tone down.
    /// </summary>
    public const string AccSagittalFlat5v19CUp = "accSagittalFlat5v19CUp";
    /// <summary>
    /// Flat 5:23S-down, 7° down [60 EDO], 7/10-tone down.
    /// </summary>
    public const string AccSagittalFlat5v23SDown = "accSagittalFlat5v23SDown";
    /// <summary>
    /// Flat 5:23S-up, 3° down [60 EDO], 3/10-tone down.
    /// </summary>
    public const string AccSagittalFlat5v23SUp = "accSagittalFlat5v23SUp";
    /// <summary>
    /// Flat 5:49M-down.
    /// </summary>
    public const string AccSagittalFlat5v49MDown = "accSagittalFlat5v49MDown";
    /// <summary>
    /// Flat 5:7k-down.
    /// </summary>
    public const string AccSagittalFlat5v7kDown = "accSagittalFlat5v7kDown";
    /// <summary>
    /// Flat 5:7k-up.
    /// </summary>
    public const string AccSagittalFlat5v7kUp = "accSagittalFlat5v7kUp";
    /// <summary>
    /// Flat 7C-down, 4° down [43 EDO], 8° down [72 EDO], 2/3-tone down.
    /// </summary>
    public const string AccSagittalFlat7CDown = "accSagittalFlat7CDown";
    /// <summary>
    /// Flat 7C-up, 2° down [43 EDO], 4° down [72 EDO], 1/3-tone down.
    /// </summary>
    public const string AccSagittalFlat7CUp = "accSagittalFlat7CUp";
    /// <summary>
    /// Flat 7:11C-down, 6° down [60 EDO], 3/5- tone down.
    /// </summary>
    public const string AccSagittalFlat7v11CDown = "accSagittalFlat7v11CDown";
    /// <summary>
    /// Flat 7:11C-up, 4° down [60 EDO], 2/5-tone down.
    /// </summary>
    public const string AccSagittalFlat7v11CUp = "accSagittalFlat7v11CUp";
    /// <summary>
    /// Flat 7:11k-down.
    /// </summary>
    public const string AccSagittalFlat7v11kDown = "accSagittalFlat7v11kDown";
    /// <summary>
    /// Flat 7:11k-up.
    /// </summary>
    public const string AccSagittalFlat7v11kUp = "accSagittalFlat7v11kUp";
    /// <summary>
    /// Flat 7:19C-down.
    /// </summary>
    public const string AccSagittalFlat7v19CDown = "accSagittalFlat7v19CDown";
    /// <summary>
    /// Flat 7:19C-up.
    /// </summary>
    public const string AccSagittalFlat7v19CUp = "accSagittalFlat7v19CUp";
    /// <summary>
    /// Fractional tina down, 77/(5⋅37)-schismina down, 0.08 cents down.
    /// </summary>
    public const string AccSagittalFractionalTinaDown = "accSagittalFractionalTinaDown";
    /// <summary>
    /// Fractional tina up, 77/(5⋅37)-schismina up, 0.08 cents up.
    /// </summary>
    public const string AccSagittalFractionalTinaUp = "accSagittalFractionalTinaUp";
    /// <summary>
    /// Grave, 5 schisma down, 2 cents down.
    /// </summary>
    public const string AccSagittalGrave = "accSagittalGrave";
    /// <summary>
    /// Shaft down, (natural for use with only diacritics down).
    /// </summary>
    public const string AccSagittalShaftDown = "accSagittalShaftDown";
    /// <summary>
    /// Shaft up, (natural for use with only diacritics up).
    /// </summary>
    public const string AccSagittalShaftUp = "accSagittalShaftUp";
    /// <summary>
    /// Sharp, (apotome up)[almost all EDOs], 1/2-tone up.
    /// </summary>
    public const string AccSagittalSharp = "accSagittalSharp";
    /// <summary>
    /// Sharp 11L-up, 8° up [46 EDO].
    /// </summary>
    public const string AccSagittalSharp11LUp = "accSagittalSharp11LUp";
    /// <summary>
    /// Sharp 11M-up, 3° up [17 31 EDOs], 7° up [46 EDO], 3/4-tone up.
    /// </summary>
    public const string AccSagittalSharp11MUp = "accSagittalSharp11MUp";
    /// <summary>
    /// Sharp 11:19L-up.
    /// </summary>
    public const string AccSagittalSharp11v19LUp = "accSagittalSharp11v19LUp";
    /// <summary>
    /// Sharp 11:19M-up.
    /// </summary>
    public const string AccSagittalSharp11v19MUp = "accSagittalSharp11v19MUp";
    /// <summary>
    /// Sharp 11:49C-down.
    /// </summary>
    public const string AccSagittalSharp11v49CDown = "accSagittalSharp11v49CDown";
    /// <summary>
    /// Sharp 11:49C-up.
    /// </summary>
    public const string AccSagittalSharp11v49CUp = "accSagittalSharp11v49CUp";
    /// <summary>
    /// Sharp 143C-down.
    /// </summary>
    public const string AccSagittalSharp143CDown = "accSagittalSharp143CDown";
    /// <summary>
    /// Sharp 143C-up.
    /// </summary>
    public const string AccSagittalSharp143CUp = "accSagittalSharp143CUp";
    /// <summary>
    /// Sharp 17C-down.
    /// </summary>
    public const string AccSagittalSharp17CDown = "accSagittalSharp17CDown";
    /// <summary>
    /// Sharp 17C-up.
    /// </summary>
    public const string AccSagittalSharp17CUp = "accSagittalSharp17CUp";
    /// <summary>
    /// Sharp 17k-down.
    /// </summary>
    public const string AccSagittalSharp17kDown = "accSagittalSharp17kDown";
    /// <summary>
    /// Sharp 17k-up.
    /// </summary>
    public const string AccSagittalSharp17kUp = "accSagittalSharp17kUp";
    /// <summary>
    /// Sharp 19C-down.
    /// </summary>
    public const string AccSagittalSharp19CDown = "accSagittalSharp19CDown";
    /// <summary>
    /// Sharp 19C-up.
    /// </summary>
    public const string AccSagittalSharp19CUp = "accSagittalSharp19CUp";
    /// <summary>
    /// Sharp 19s-down.
    /// </summary>
    public const string AccSagittalSharp19sDown = "accSagittalSharp19sDown";
    /// <summary>
    /// Sharp 19s-up.
    /// </summary>
    public const string AccSagittalSharp19sUp = "accSagittalSharp19sUp";
    /// <summary>
    /// Sharp 23C-down, 6° up [96 EDO], 3/8-tone up.
    /// </summary>
    public const string AccSagittalSharp23CDown = "accSagittalSharp23CDown";
    /// <summary>
    /// Sharp 23C-up, 10° up [96 EDO], 5/8-tone up.
    /// </summary>
    public const string AccSagittalSharp23CUp = "accSagittalSharp23CUp";
    /// <summary>
    /// Sharp 23S-down.
    /// </summary>
    public const string AccSagittalSharp23SDown = "accSagittalSharp23SDown";
    /// <summary>
    /// Sharp 23S-up.
    /// </summary>
    public const string AccSagittalSharp23SUp = "accSagittalSharp23SUp";
    /// <summary>
    /// Sharp 25S-down, 3° up [53 EDO].
    /// </summary>
    public const string AccSagittalSharp25SDown = "accSagittalSharp25SDown";
    /// <summary>
    /// Sharp 25S-up, 7° up [53 EDO].
    /// </summary>
    public const string AccSagittalSharp25SUp = "accSagittalSharp25SUp";
    /// <summary>
    /// Sharp 35L-up, 5° up [50 EDO].
    /// </summary>
    public const string AccSagittalSharp35LUp = "accSagittalSharp35LUp";
    /// <summary>
    /// Sharp 35M-up, 4° up [50 EDO], 6° up [27 EDO], 13/18-tone up.
    /// </summary>
    public const string AccSagittalSharp35MUp = "accSagittalSharp35MUp";
    /// <summary>
    /// Sharp 49L-up.
    /// </summary>
    public const string AccSagittalSharp49LUp = "accSagittalSharp49LUp";
    /// <summary>
    /// Sharp 49M-up.
    /// </summary>
    public const string AccSagittalSharp49MUp = "accSagittalSharp49MUp";
    /// <summary>
    /// Sharp 49S-down.
    /// </summary>
    public const string AccSagittalSharp49SDown = "accSagittalSharp49SDown";
    /// <summary>
    /// Sharp 49S-up.
    /// </summary>
    public const string AccSagittalSharp49SUp = "accSagittalSharp49SUp";
    /// <summary>
    /// Sharp 55C-down, 5° up [96 EDO], 5/16-tone up.
    /// </summary>
    public const string AccSagittalSharp55CDown = "accSagittalSharp55CDown";
    /// <summary>
    /// Sharp 55C-up, 11° up [96 EDO], 11/16-tone up.
    /// </summary>
    public const string AccSagittalSharp55CUp = "accSagittalSharp55CUp";
    /// <summary>
    /// Sharp 5C-down, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°[72] 7°[96] up, 5/12-tone up.
    /// </summary>
    public const string AccSagittalSharp5CDown = "accSagittalSharp5CDown";
    /// <summary>
    /// Sharp 5C-up, 4°[22 29] 5°[27 34 41] 6°[39 46 53] up, 7/12-tone up.
    /// </summary>
    public const string AccSagittalSharp5CUp = "accSagittalSharp5CUp";
    /// <summary>
    /// Sharp 5:11S-down.
    /// </summary>
    public const string AccSagittalSharp5v11SDown = "accSagittalSharp5v11SDown";
    /// <summary>
    /// Sharp 5:11S-up.
    /// </summary>
    public const string AccSagittalSharp5v11SUp = "accSagittalSharp5v11SUp";
    /// <summary>
    /// Sharp 5:13L-up.
    /// </summary>
    public const string AccSagittalSharp5v13LUp = "accSagittalSharp5v13LUp";
    /// <summary>
    /// Sharp 5:13M-up.
    /// </summary>
    public const string AccSagittalSharp5v13MUp = "accSagittalSharp5v13MUp";
    /// <summary>
    /// Sharp 5:19C-down, 9/20-tone up.
    /// </summary>
    public const string AccSagittalSharp5v19CDown = "accSagittalSharp5v19CDown";
    /// <summary>
    /// Sharp 5:19C-up, 11/20-tone up.
    /// </summary>
    public const string AccSagittalSharp5v19CUp = "accSagittalSharp5v19CUp";
    /// <summary>
    /// Sharp 5:23S-down, 3° up [60 EDO], 3/10-tone up.
    /// </summary>
    public const string AccSagittalSharp5v23SDown = "accSagittalSharp5v23SDown";
    /// <summary>
    /// Sharp 5:23S-up, 7° up [60 EDO], 7/10-tone up.
    /// </summary>
    public const string AccSagittalSharp5v23SUp = "accSagittalSharp5v23SUp";
    /// <summary>
    /// Sharp 5:49M-up, (one and a half apotomes).
    /// </summary>
    public const string AccSagittalSharp5v49MUp = "accSagittalSharp5v49MUp";
    /// <summary>
    /// Sharp 5:7k-down.
    /// </summary>
    public const string AccSagittalSharp5v7kDown = "accSagittalSharp5v7kDown";
    /// <summary>
    /// Sharp 5:7k-up.
    /// </summary>
    public const string AccSagittalSharp5v7kUp = "accSagittalSharp5v7kUp";
    /// <summary>
    /// Sharp 7C-down, 2° up [43 EDO], 4° up [72 EDO], 1/3-tone up.
    /// </summary>
    public const string AccSagittalSharp7CDown = "accSagittalSharp7CDown";
    /// <summary>
    /// Sharp 7C-up, 4° up [43 EDO], 8° up [72 EDO], 2/3-tone up.
    /// </summary>
    public const string AccSagittalSharp7CUp = "accSagittalSharp7CUp";
    /// <summary>
    /// Sharp 7:11C-down, 4° up [60 EDO], 2/5-tone up.
    /// </summary>
    public const string AccSagittalSharp7v11CDown = "accSagittalSharp7v11CDown";
    /// <summary>
    /// Sharp 7:11C-up, 6° up [60 EDO], 3/5- tone up.
    /// </summary>
    public const string AccSagittalSharp7v11CUp = "accSagittalSharp7v11CUp";
    /// <summary>
    /// Sharp 7:11k-down.
    /// </summary>
    public const string AccSagittalSharp7v11kDown = "accSagittalSharp7v11kDown";
    /// <summary>
    /// Sharp 7:11k-up.
    /// </summary>
    public const string AccSagittalSharp7v11kUp = "accSagittalSharp7v11kUp";
    /// <summary>
    /// Sharp 7:19C-down.
    /// </summary>
    public const string AccSagittalSharp7v19CDown = "accSagittalSharp7v19CDown";
    /// <summary>
    /// Sharp 7:19C-up.
    /// </summary>
    public const string AccSagittalSharp7v19CUp = "accSagittalSharp7v19CUp";
    /// <summary>
    /// Unused.
    /// </summary>
    public const string AccSagittalUnused1 = "accSagittalUnused1";
    /// <summary>
    /// Unused.
    /// </summary>
    public const string AccSagittalUnused2 = "accSagittalUnused2";
    /// <summary>
    /// Unused.
    /// </summary>
    public const string AccSagittalUnused3 = "accSagittalUnused3";
    /// <summary>
    /// Unused.
    /// </summary>
    public const string AccSagittalUnused4 = "accSagittalUnused4";
    /// <summary>
    /// Combining accordion coupler dot.
    /// </summary>
    public const string AccdnCombDot = "accdnCombDot";
    /// <summary>
    /// Combining left hand, 2 ranks, empty.
    /// </summary>
    public const string AccdnCombLH2RanksEmpty = "accdnCombLH2RanksEmpty";
    /// <summary>
    /// Combining left hand, 3 ranks, empty (square).
    /// </summary>
    public const string AccdnCombLH3RanksEmptySquare = "accdnCombLH3RanksEmptySquare";
    /// <summary>
    /// Combining right hand, 3 ranks, empty.
    /// </summary>
    public const string AccdnCombRH3RanksEmpty = "accdnCombRH3RanksEmpty";
    /// <summary>
    /// Combining right hand, 4 ranks, empty.
    /// </summary>
    public const string AccdnCombRH4RanksEmpty = "accdnCombRH4RanksEmpty";
    /// <summary>
    /// Diatonic accordion clef.
    /// </summary>
    public const string AccdnDiatonicClef = "accdnDiatonicClef";
    /// <summary>
    /// Left hand, 2 ranks, 16' stop (round).
    /// </summary>
    public const string AccdnLH2Ranks16Round = "accdnLH2Ranks16Round";
    /// <summary>
    /// Left hand, 2 ranks, 8' stop + 16' stop (round).
    /// </summary>
    public const string AccdnLH2Ranks8Plus16Round = "accdnLH2Ranks8Plus16Round";
    /// <summary>
    /// Left hand, 2 ranks, 8' stop (round).
    /// </summary>
    public const string AccdnLH2Ranks8Round = "accdnLH2Ranks8Round";
    /// <summary>
    /// Left hand, 2 ranks, full master (round).
    /// </summary>
    public const string AccdnLH2RanksFullMasterRound = "accdnLH2RanksFullMasterRound";
    /// <summary>
    /// Left hand, 2 ranks, master + 16' stop (round).
    /// </summary>
    public const string AccdnLH2RanksMasterPlus16Round = "accdnLH2RanksMasterPlus16Round";
    /// <summary>
    /// Left hand, 2 ranks, master (round).
    /// </summary>
    public const string AccdnLH2RanksMasterRound = "accdnLH2RanksMasterRound";
    /// <summary>
    /// Left hand, 3 ranks, 2' stop + 8' stop (square).
    /// </summary>
    public const string AccdnLH3Ranks2Plus8Square = "accdnLH3Ranks2Plus8Square";
    /// <summary>
    /// Left hand, 3 ranks, 2' stop (square).
    /// </summary>
    public const string AccdnLH3Ranks2Square = "accdnLH3Ranks2Square";
    /// <summary>
    /// Left hand, 3 ranks, 8' stop (square).
    /// </summary>
    public const string AccdnLH3Ranks8Square = "accdnLH3Ranks8Square";
    /// <summary>
    /// Left hand, 3 ranks, double 8' stop (square).
    /// </summary>
    public const string AccdnLH3RanksDouble8Square = "accdnLH3RanksDouble8Square";
    /// <summary>
    /// Left hand, 3 ranks, 2' stop + double 8' stop (tutti) (square).
    /// </summary>
    public const string AccdnLH3RanksTuttiSquare = "accdnLH3RanksTuttiSquare";
    /// <summary>
    /// Pull.
    /// </summary>
    public const string AccdnPull = "accdnPull";
    /// <summary>
    /// Push.
    /// </summary>
    public const string AccdnPush = "accdnPush";
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + upper tremolo 8' stop + 16' stop (accordion).
    /// </summary>
    public const string AccdnRH3RanksAccordion = "accdnRH3RanksAccordion";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop (authentic musette).
    /// </summary>
    public const string AccdnRH3RanksAuthenticMusette = "accdnRH3RanksAuthenticMusette";
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + 16' stop (bandoneón).
    /// </summary>
    public const string AccdnRH3RanksBandoneon = "accdnRH3RanksBandoneon";
    /// <summary>
    /// Right hand, 3 ranks, 16' stop (bassoon).
    /// </summary>
    public const string AccdnRH3RanksBassoon = "accdnRH3RanksBassoon";
    /// <summary>
    /// Right hand, 3 ranks, 8' stop (clarinet).
    /// </summary>
    public const string AccdnRH3RanksClarinet = "accdnRH3RanksClarinet";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const string AccdnRH3RanksDoubleTremoloLower8ve = "accdnRH3RanksDoubleTremoloLower8ve";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksDoubleTremoloUpper8ve = "accdnRH3RanksDoubleTremoloUpper8ve";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const string AccdnRH3RanksFullFactory = "accdnRH3RanksFullFactory";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop + 16' stop (harmonium).
    /// </summary>
    public const string AccdnRH3RanksHarmonium = "accdnRH3RanksHarmonium";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop + upper tremolo 8' stop (imitation musette).
    /// </summary>
    public const string AccdnRH3RanksImitationMusette = "accdnRH3RanksImitationMusette";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksLowerTremolo8 = "accdnRH3RanksLowerTremolo8";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop + 16' stop (master).
    /// </summary>
    public const string AccdnRH3RanksMaster = "accdnRH3RanksMaster";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop (oboe).
    /// </summary>
    public const string AccdnRH3RanksOboe = "accdnRH3RanksOboe";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 16' stop (organ).
    /// </summary>
    public const string AccdnRH3RanksOrgan = "accdnRH3RanksOrgan";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop (piccolo).
    /// </summary>
    public const string AccdnRH3RanksPiccolo = "accdnRH3RanksPiccolo";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const string AccdnRH3RanksTremoloLower8ve = "accdnRH3RanksTremoloLower8ve";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksTremoloUpper8ve = "accdnRH3RanksTremoloUpper8ve";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksTwoChoirs = "accdnRH3RanksTwoChoirs";
    /// <summary>
    /// Right hand, 3 ranks, upper tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksUpperTremolo8 = "accdnRH3RanksUpperTremolo8";
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + upper tremolo 8' stop (violin).
    /// </summary>
    public const string AccdnRH3RanksViolin = "accdnRH3RanksViolin";
    /// <summary>
    /// Right hand, 4 ranks, alto.
    /// </summary>
    public const string AccdnRH4RanksAlto = "accdnRH4RanksAlto";
    /// <summary>
    /// Right hand, 4 ranks, bass/alto.
    /// </summary>
    public const string AccdnRH4RanksBassAlto = "accdnRH4RanksBassAlto";
    /// <summary>
    /// Right hand, 4 ranks, master.
    /// </summary>
    public const string AccdnRH4RanksMaster = "accdnRH4RanksMaster";
    /// <summary>
    /// Right hand, 4 ranks, soft bass.
    /// </summary>
    public const string AccdnRH4RanksSoftBass = "accdnRH4RanksSoftBass";
    /// <summary>
    /// Right hand, 4 ranks, soft tenor.
    /// </summary>
    public const string AccdnRH4RanksSoftTenor = "accdnRH4RanksSoftTenor";
    /// <summary>
    /// Right hand, 4 ranks, soprano.
    /// </summary>
    public const string AccdnRH4RanksSoprano = "accdnRH4RanksSoprano";
    /// <summary>
    /// Right hand, 4 ranks, tenor.
    /// </summary>
    public const string AccdnRH4RanksTenor = "accdnRH4RanksTenor";
    /// <summary>
    /// Ricochet (2 tones).
    /// </summary>
    public const string AccdnRicochet2 = "accdnRicochet2";
    /// <summary>
    /// Ricochet (3 tones).
    /// </summary>
    public const string AccdnRicochet3 = "accdnRicochet3";
    /// <summary>
    /// Ricochet (4 tones).
    /// </summary>
    public const string AccdnRicochet4 = "accdnRicochet4";
    /// <summary>
    /// Ricochet (5 tones).
    /// </summary>
    public const string AccdnRicochet5 = "accdnRicochet5";
    /// <summary>
    /// Ricochet (6 tones).
    /// </summary>
    public const string AccdnRicochet6 = "accdnRicochet6";
    /// <summary>
    /// Combining ricochet for stem (2 tones).
    /// </summary>
    public const string AccdnRicochetStem2 = "accdnRicochetStem2";
    /// <summary>
    /// Combining ricochet for stem (3 tones).
    /// </summary>
    public const string AccdnRicochetStem3 = "accdnRicochetStem3";
    /// <summary>
    /// Combining ricochet for stem (4 tones).
    /// </summary>
    public const string AccdnRicochetStem4 = "accdnRicochetStem4";
    /// <summary>
    /// Combining ricochet for stem (5 tones).
    /// </summary>
    public const string AccdnRicochetStem5 = "accdnRicochetStem5";
    /// <summary>
    /// Combining ricochet for stem (6 tones).
    /// </summary>
    public const string AccdnRicochetStem6 = "accdnRicochetStem6";
    /// <summary>
    /// 1-comma flat.
    /// </summary>
    public const string Accidental1CommaFlat = "accidental1CommaFlat";
    /// <summary>
    /// 1-comma sharp.
    /// </summary>
    public const string Accidental1CommaSharp = "accidental1CommaSharp";
    /// <summary>
    /// 2-comma flat.
    /// </summary>
    public const string Accidental2CommaFlat = "accidental2CommaFlat";
    /// <summary>
    /// 2-comma sharp.
    /// </summary>
    public const string Accidental2CommaSharp = "accidental2CommaSharp";
    /// <summary>
    /// 3-comma flat.
    /// </summary>
    public const string Accidental3CommaFlat = "accidental3CommaFlat";
    /// <summary>
    /// 3-comma sharp.
    /// </summary>
    public const string Accidental3CommaSharp = "accidental3CommaSharp";
    /// <summary>
    /// 4-comma flat.
    /// </summary>
    public const string Accidental4CommaFlat = "accidental4CommaFlat";
    /// <summary>
    /// 5-comma sharp.
    /// </summary>
    public const string Accidental5CommaSharp = "accidental5CommaSharp";
    /// <summary>
    /// Arrow down (lower by one quarter-tone).
    /// </summary>
    public const string AccidentalArrowDown = "accidentalArrowDown";
    /// <summary>
    /// Arrow up (raise by one quarter-tone).
    /// </summary>
    public const string AccidentalArrowUp = "accidentalArrowUp";
    /// <summary>
    /// Bakiye (flat).
    /// </summary>
    public const string AccidentalBakiyeFlat = "accidentalBakiyeFlat";
    /// <summary>
    /// Bakiye (sharp).
    /// </summary>
    public const string AccidentalBakiyeSharp = "accidentalBakiyeSharp";
    /// <summary>
    /// Accidental bracket, left.
    /// </summary>
    public const string AccidentalBracketLeft = "accidentalBracketLeft";
    /// <summary>
    /// Accidental bracket, right.
    /// </summary>
    public const string AccidentalBracketRight = "accidentalBracketRight";
    /// <summary>
    /// Büyük mücenneb (flat).
    /// </summary>
    public const string AccidentalBuyukMucennebFlat = "accidentalBuyukMucennebFlat";
    /// <summary>
    /// Büyük mücenneb (sharp).
    /// </summary>
    public const string AccidentalBuyukMucennebSharp = "accidentalBuyukMucennebSharp";
    /// <summary>
    /// Combining close curly brace.
    /// </summary>
    public const string AccidentalCombiningCloseCurlyBrace = "accidentalCombiningCloseCurlyBrace";
    /// <summary>
    /// Combining lower by one 17-limit schisma.
    /// </summary>
    public const string AccidentalCombiningLower17Schisma = "accidentalCombiningLower17Schisma";
    /// <summary>
    /// Combining lower by one 19-limit schisma.
    /// </summary>
    public const string AccidentalCombiningLower19Schisma = "accidentalCombiningLower19Schisma";
    /// <summary>
    /// Combining lower by one 23-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower23Limit29LimitComma = "accidentalCombiningLower23Limit29LimitComma";
    /// <summary>
    /// Combining lower by one 29-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower29LimitComma = "accidentalCombiningLower29LimitComma";
    /// <summary>
    /// Combining lower by one 31-limit schisma.
    /// </summary>
    public const string AccidentalCombiningLower31Schisma = "accidentalCombiningLower31Schisma";
    /// <summary>
    /// Combining lower by one 37-limit quartertone.
    /// </summary>
    public const string AccidentalCombiningLower37Quartertone = "accidentalCombiningLower37Quartertone";
    /// <summary>
    /// Combining lower by one 41-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower41Comma = "accidentalCombiningLower41Comma";
    /// <summary>
    /// Combining lower by one 43-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower43Comma = "accidentalCombiningLower43Comma";
    /// <summary>
    /// Combining lower by one 47-limit quartertone.
    /// </summary>
    public const string AccidentalCombiningLower47Quartertone = "accidentalCombiningLower47Quartertone";
    /// <summary>
    /// Combining lower by one 53-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower53LimitComma = "accidentalCombiningLower53LimitComma";
    /// <summary>
    /// Combining open curly brace.
    /// </summary>
    public const string AccidentalCombiningOpenCurlyBrace = "accidentalCombiningOpenCurlyBrace";
    /// <summary>
    /// Combining raise by one 17-limit schisma.
    /// </summary>
    public const string AccidentalCombiningRaise17Schisma = "accidentalCombiningRaise17Schisma";
    /// <summary>
    /// Combining raise by one 19-limit schisma.
    /// </summary>
    public const string AccidentalCombiningRaise19Schisma = "accidentalCombiningRaise19Schisma";
    /// <summary>
    /// Combining raise by one 23-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise23Limit29LimitComma = "accidentalCombiningRaise23Limit29LimitComma";
    /// <summary>
    /// Combining raise by one 29-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise29LimitComma = "accidentalCombiningRaise29LimitComma";
    /// <summary>
    /// Combining raise by one 31-limit schisma.
    /// </summary>
    public const string AccidentalCombiningRaise31Schisma = "accidentalCombiningRaise31Schisma";
    /// <summary>
    /// Combining raise by one 37-limit quartertone.
    /// </summary>
    public const string AccidentalCombiningRaise37Quartertone = "accidentalCombiningRaise37Quartertone";
    /// <summary>
    /// Combining raise by one 41-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise41Comma = "accidentalCombiningRaise41Comma";
    /// <summary>
    /// Combining raise by one 43-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise43Comma = "accidentalCombiningRaise43Comma";
    /// <summary>
    /// Combining raise by one 47-limit quartertone.
    /// </summary>
    public const string AccidentalCombiningRaise47Quartertone = "accidentalCombiningRaise47Quartertone";
    /// <summary>
    /// Combining raise by one 53-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise53LimitComma = "accidentalCombiningRaise53LimitComma";
    /// <summary>
    /// Syntonic/Didymus comma (80:81) down (Bosanquet).
    /// </summary>
    public const string AccidentalCommaSlashDown = "accidentalCommaSlashDown";
    /// <summary>
    /// Syntonic/Didymus comma (80:81) up (Bosanquet).
    /// </summary>
    public const string AccidentalCommaSlashUp = "accidentalCommaSlashUp";
    /// <summary>
    /// Double flat.
    /// </summary>
    public const string AccidentalDoubleFlat = "accidentalDoubleFlat";
    /// <summary>
    /// Arabic double flat.
    /// </summary>
    public const string AccidentalDoubleFlatArabic = "accidentalDoubleFlatArabic";
    /// <summary>
    /// Double flat equal tempered semitone.
    /// </summary>
    public const string AccidentalDoubleFlatEqualTempered = "accidentalDoubleFlatEqualTempered";
    /// <summary>
    /// Double flat lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalDoubleFlatOneArrowDown = "accidentalDoubleFlatOneArrowDown";
    /// <summary>
    /// Double flat raised by one syntonic comma.
    /// </summary>
    public const string AccidentalDoubleFlatOneArrowUp = "accidentalDoubleFlatOneArrowUp";
    /// <summary>
    /// Reversed double flat.
    /// </summary>
    public const string AccidentalDoubleFlatReversed = "accidentalDoubleFlatReversed";
    /// <summary>
    /// Double flat lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalDoubleFlatThreeArrowsDown = "accidentalDoubleFlatThreeArrowsDown";
    /// <summary>
    /// Double flat raised by three syntonic commas.
    /// </summary>
    public const string AccidentalDoubleFlatThreeArrowsUp = "accidentalDoubleFlatThreeArrowsUp";
    /// <summary>
    /// Turned double flat.
    /// </summary>
    public const string AccidentalDoubleFlatTurned = "accidentalDoubleFlatTurned";
    /// <summary>
    /// Double flat lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalDoubleFlatTwoArrowsDown = "accidentalDoubleFlatTwoArrowsDown";
    /// <summary>
    /// Double flat raised by two syntonic commas.
    /// </summary>
    public const string AccidentalDoubleFlatTwoArrowsUp = "accidentalDoubleFlatTwoArrowsUp";
    /// <summary>
    /// Double sharp.
    /// </summary>
    public const string AccidentalDoubleSharp = "accidentalDoubleSharp";
    /// <summary>
    /// Arabic double sharp.
    /// </summary>
    public const string AccidentalDoubleSharpArabic = "accidentalDoubleSharpArabic";
    /// <summary>
    /// Double sharp equal tempered semitone.
    /// </summary>
    public const string AccidentalDoubleSharpEqualTempered = "accidentalDoubleSharpEqualTempered";
    /// <summary>
    /// Double sharp lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalDoubleSharpOneArrowDown = "accidentalDoubleSharpOneArrowDown";
    /// <summary>
    /// Double sharp raised by one syntonic comma.
    /// </summary>
    public const string AccidentalDoubleSharpOneArrowUp = "accidentalDoubleSharpOneArrowUp";
    /// <summary>
    /// Double sharp lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalDoubleSharpThreeArrowsDown = "accidentalDoubleSharpThreeArrowsDown";
    /// <summary>
    /// Double sharp raised by three syntonic commas.
    /// </summary>
    public const string AccidentalDoubleSharpThreeArrowsUp = "accidentalDoubleSharpThreeArrowsUp";
    /// <summary>
    /// Double sharp lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalDoubleSharpTwoArrowsDown = "accidentalDoubleSharpTwoArrowsDown";
    /// <summary>
    /// Double sharp raised by two syntonic commas.
    /// </summary>
    public const string AccidentalDoubleSharpTwoArrowsUp = "accidentalDoubleSharpTwoArrowsUp";
    /// <summary>
    /// Enharmonically reinterpret accidental almost equal to.
    /// </summary>
    public const string AccidentalEnharmonicAlmostEqualTo = "accidentalEnharmonicAlmostEqualTo";
    /// <summary>
    /// Enharmonically reinterpret accidental equals.
    /// </summary>
    public const string AccidentalEnharmonicEquals = "accidentalEnharmonicEquals";
    /// <summary>
    /// Enharmonically reinterpret accidental tilde.
    /// </summary>
    public const string AccidentalEnharmonicTilde = "accidentalEnharmonicTilde";
    /// <summary>
    /// Filled reversed flat and flat.
    /// </summary>
    public const string AccidentalFilledReversedFlatAndFlat = "accidentalFilledReversedFlatAndFlat";
    /// <summary>
    /// Filled reversed flat and flat with arrow down.
    /// </summary>
    public const string AccidentalFilledReversedFlatAndFlatArrowDown = "accidentalFilledReversedFlatAndFlatArrowDown";
    /// <summary>
    /// Filled reversed flat and flat with arrow up.
    /// </summary>
    public const string AccidentalFilledReversedFlatAndFlatArrowUp = "accidentalFilledReversedFlatAndFlatArrowUp";
    /// <summary>
    /// Filled reversed flat with arrow down.
    /// </summary>
    public const string AccidentalFilledReversedFlatArrowDown = "accidentalFilledReversedFlatArrowDown";
    /// <summary>
    /// Filled reversed flat with arrow up.
    /// </summary>
    public const string AccidentalFilledReversedFlatArrowUp = "accidentalFilledReversedFlatArrowUp";
    /// <summary>
    /// Five-quarter-tones flat.
    /// </summary>
    public const string AccidentalFiveQuarterTonesFlatArrowDown = "accidentalFiveQuarterTonesFlatArrowDown";
    /// <summary>
    /// Five-quarter-tones sharp.
    /// </summary>
    public const string AccidentalFiveQuarterTonesSharpArrowUp = "accidentalFiveQuarterTonesSharpArrowUp";
    /// <summary>
    /// Flat.
    /// </summary>
    public const string AccidentalFlat = "accidentalFlat";
    /// <summary>
    /// Arabic half-tone flat.
    /// </summary>
    public const string AccidentalFlatArabic = "accidentalFlatArabic";
    /// <summary>
    /// Flat equal tempered semitone.
    /// </summary>
    public const string AccidentalFlatEqualTempered = "accidentalFlatEqualTempered";
    /// <summary>
    /// Lowered flat (Stockhausen).
    /// </summary>
    public const string AccidentalFlatLoweredStockhausen = "accidentalFlatLoweredStockhausen";
    /// <summary>
    /// Flat lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalFlatOneArrowDown = "accidentalFlatOneArrowDown";
    /// <summary>
    /// Flat raised by one syntonic comma.
    /// </summary>
    public const string AccidentalFlatOneArrowUp = "accidentalFlatOneArrowUp";
    /// <summary>
    /// Raised flat (Stockhausen).
    /// </summary>
    public const string AccidentalFlatRaisedStockhausen = "accidentalFlatRaisedStockhausen";
    /// <summary>
    /// Repeated flat, note on line (Stockhausen).
    /// </summary>
    public const string AccidentalFlatRepeatedLineStockhausen = "accidentalFlatRepeatedLineStockhausen";
    /// <summary>
    /// Repeated flat, note in space (Stockhausen).
    /// </summary>
    public const string AccidentalFlatRepeatedSpaceStockhausen = "accidentalFlatRepeatedSpaceStockhausen";
    /// <summary>
    /// Flat lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalFlatThreeArrowsDown = "accidentalFlatThreeArrowsDown";
    /// <summary>
    /// Flat raised by three syntonic commas.
    /// </summary>
    public const string AccidentalFlatThreeArrowsUp = "accidentalFlatThreeArrowsUp";
    /// <summary>
    /// Turned flat.
    /// </summary>
    public const string AccidentalFlatTurned = "accidentalFlatTurned";
    /// <summary>
    /// Flat lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalFlatTwoArrowsDown = "accidentalFlatTwoArrowsDown";
    /// <summary>
    /// Flat raised by two syntonic commas.
    /// </summary>
    public const string AccidentalFlatTwoArrowsUp = "accidentalFlatTwoArrowsUp";
    /// <summary>
    /// Quarter-tone higher (Alois Hába).
    /// </summary>
    public const string AccidentalHabaFlatQuarterToneHigher = "accidentalHabaFlatQuarterToneHigher";
    /// <summary>
    /// Three quarter-tones lower (Alois Hába).
    /// </summary>
    public const string AccidentalHabaFlatThreeQuarterTonesLower = "accidentalHabaFlatThreeQuarterTonesLower";
    /// <summary>
    /// Quarter-tone higher (Alois Hába).
    /// </summary>
    public const string AccidentalHabaQuarterToneHigher = "accidentalHabaQuarterToneHigher";
    /// <summary>
    /// Quarter-tone lower (Alois Hába).
    /// </summary>
    public const string AccidentalHabaQuarterToneLower = "accidentalHabaQuarterToneLower";
    /// <summary>
    /// Quarter-tone lower (Alois Hába).
    /// </summary>
    public const string AccidentalHabaSharpQuarterToneLower = "accidentalHabaSharpQuarterToneLower";
    /// <summary>
    /// Three quarter-tones higher (Alois Hába).
    /// </summary>
    public const string AccidentalHabaSharpThreeQuarterTonesHigher = "accidentalHabaSharpThreeQuarterTonesHigher";
    /// <summary>
    /// Half sharp with arrow down.
    /// </summary>
    public const string AccidentalHalfSharpArrowDown = "accidentalHalfSharpArrowDown";
    /// <summary>
    /// Half sharp with arrow up.
    /// </summary>
    public const string AccidentalHalfSharpArrowUp = "accidentalHalfSharpArrowUp";
    /// <summary>
    /// Thirteen (raise by 65:64).
    /// </summary>
    public const string AccidentalJohnston13 = "accidentalJohnston13";
    /// <summary>
    /// Inverted 13 (lower by 65:64).
    /// </summary>
    public const string AccidentalJohnston31 = "accidentalJohnston31";
    /// <summary>
    /// Down arrow (lower by 33:32).
    /// </summary>
    public const string AccidentalJohnstonDown = "accidentalJohnstonDown";
    /// <summary>
    /// Inverted seven (raise by 36:35).
    /// </summary>
    public const string AccidentalJohnstonEl = "accidentalJohnstonEl";
    /// <summary>
    /// Minus (lower by 81:80).
    /// </summary>
    public const string AccidentalJohnstonMinus = "accidentalJohnstonMinus";
    /// <summary>
    /// Plus (raise by 81:80).
    /// </summary>
    public const string AccidentalJohnstonPlus = "accidentalJohnstonPlus";
    /// <summary>
    /// Seven (lower by 36:35).
    /// </summary>
    public const string AccidentalJohnstonSeven = "accidentalJohnstonSeven";
    /// <summary>
    /// Up arrow (raise by 33:32).
    /// </summary>
    public const string AccidentalJohnstonUp = "accidentalJohnstonUp";
    /// <summary>
    /// Koma (flat).
    /// </summary>
    public const string AccidentalKomaFlat = "accidentalKomaFlat";
    /// <summary>
    /// Koma (sharp).
    /// </summary>
    public const string AccidentalKomaSharp = "accidentalKomaSharp";
    /// <summary>
    /// Koron (quarter tone flat).
    /// </summary>
    public const string AccidentalKoron = "accidentalKoron";
    /// <summary>
    /// Küçük mücenneb (flat).
    /// </summary>
    public const string AccidentalKucukMucennebFlat = "accidentalKucukMucennebFlat";
    /// <summary>
    /// Küçük mücenneb (sharp).
    /// </summary>
    public const string AccidentalKucukMucennebSharp = "accidentalKucukMucennebSharp";
    /// <summary>
    /// Large double sharp.
    /// </summary>
    public const string AccidentalLargeDoubleSharp = "accidentalLargeDoubleSharp";
    /// <summary>
    /// Lower by one septimal comma.
    /// </summary>
    public const string AccidentalLowerOneSeptimalComma = "accidentalLowerOneSeptimalComma";
    /// <summary>
    /// Lower by one tridecimal quartertone.
    /// </summary>
    public const string AccidentalLowerOneTridecimalQuartertone = "accidentalLowerOneTridecimalQuartertone";
    /// <summary>
    /// Lower by one undecimal quartertone.
    /// </summary>
    public const string AccidentalLowerOneUndecimalQuartertone = "accidentalLowerOneUndecimalQuartertone";
    /// <summary>
    /// Lower by two septimal commas.
    /// </summary>
    public const string AccidentalLowerTwoSeptimalCommas = "accidentalLowerTwoSeptimalCommas";
    /// <summary>
    /// Lowered (Stockhausen).
    /// </summary>
    public const string AccidentalLoweredStockhausen = "accidentalLoweredStockhausen";
    /// <summary>
    /// Narrow reversed flat(quarter-tone flat).
    /// </summary>
    public const string AccidentalNarrowReversedFlat = "accidentalNarrowReversedFlat";
    /// <summary>
    /// Narrow reversed flat and flat(three-quarter-tones flat).
    /// </summary>
    public const string AccidentalNarrowReversedFlatAndFlat = "accidentalNarrowReversedFlatAndFlat";
    /// <summary>
    /// Natural.
    /// </summary>
    public const string AccidentalNatural = "accidentalNatural";
    /// <summary>
    /// Arabic natural.
    /// </summary>
    public const string AccidentalNaturalArabic = "accidentalNaturalArabic";
    /// <summary>
    /// Natural equal tempered semitone.
    /// </summary>
    public const string AccidentalNaturalEqualTempered = "accidentalNaturalEqualTempered";
    /// <summary>
    /// Natural flat.
    /// </summary>
    public const string AccidentalNaturalFlat = "accidentalNaturalFlat";
    /// <summary>
    /// Lowered natural (Stockhausen).
    /// </summary>
    public const string AccidentalNaturalLoweredStockhausen = "accidentalNaturalLoweredStockhausen";
    /// <summary>
    /// Natural lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalNaturalOneArrowDown = "accidentalNaturalOneArrowDown";
    /// <summary>
    /// Natural raised by one syntonic comma.
    /// </summary>
    public const string AccidentalNaturalOneArrowUp = "accidentalNaturalOneArrowUp";
    /// <summary>
    /// Raised natural (Stockhausen).
    /// </summary>
    public const string AccidentalNaturalRaisedStockhausen = "accidentalNaturalRaisedStockhausen";
    /// <summary>
    /// Reversed natural.
    /// </summary>
    public const string AccidentalNaturalReversed = "accidentalNaturalReversed";
    /// <summary>
    /// Natural sharp.
    /// </summary>
    public const string AccidentalNaturalSharp = "accidentalNaturalSharp";
    /// <summary>
    /// Natural lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalNaturalThreeArrowsDown = "accidentalNaturalThreeArrowsDown";
    /// <summary>
    /// Natural raised by three syntonic commas.
    /// </summary>
    public const string AccidentalNaturalThreeArrowsUp = "accidentalNaturalThreeArrowsUp";
    /// <summary>
    /// Natural lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalNaturalTwoArrowsDown = "accidentalNaturalTwoArrowsDown";
    /// <summary>
    /// Natural raised by two syntonic commas.
    /// </summary>
    public const string AccidentalNaturalTwoArrowsUp = "accidentalNaturalTwoArrowsUp";
    /// <summary>
    /// One and a half sharps with arrow down.
    /// </summary>
    public const string AccidentalOneAndAHalfSharpsArrowDown = "accidentalOneAndAHalfSharpsArrowDown";
    /// <summary>
    /// One and a half sharps with arrow up.
    /// </summary>
    public const string AccidentalOneAndAHalfSharpsArrowUp = "accidentalOneAndAHalfSharpsArrowUp";
    /// <summary>
    /// One-quarter-tone flat (Ferneyhough).
    /// </summary>
    public const string AccidentalOneQuarterToneFlatFerneyhough = "accidentalOneQuarterToneFlatFerneyhough";
    /// <summary>
    /// One-quarter-tone flat (Stockhausen).
    /// </summary>
    public const string AccidentalOneQuarterToneFlatStockhausen = "accidentalOneQuarterToneFlatStockhausen";
    /// <summary>
    /// One-quarter-tone sharp (Ferneyhough).
    /// </summary>
    public const string AccidentalOneQuarterToneSharpFerneyhough = "accidentalOneQuarterToneSharpFerneyhough";
    /// <summary>
    /// One-quarter-tone sharp (Stockhausen).
    /// </summary>
    public const string AccidentalOneQuarterToneSharpStockhausen = "accidentalOneQuarterToneSharpStockhausen";
    /// <summary>
    /// One-third-tone flat (Ferneyhough).
    /// </summary>
    public const string AccidentalOneThirdToneFlatFerneyhough = "accidentalOneThirdToneFlatFerneyhough";
    /// <summary>
    /// One-third-tone sharp (Ferneyhough).
    /// </summary>
    public const string AccidentalOneThirdToneSharpFerneyhough = "accidentalOneThirdToneSharpFerneyhough";
    /// <summary>
    /// Accidental parenthesis, left.
    /// </summary>
    public const string AccidentalParensLeft = "accidentalParensLeft";
    /// <summary>
    /// Accidental parenthesis, right.
    /// </summary>
    public const string AccidentalParensRight = "accidentalParensRight";
    /// <summary>
    /// Lower by one equal tempered quarter-tone.
    /// </summary>
    public const string AccidentalQuarterFlatEqualTempered = "accidentalQuarterFlatEqualTempered";
    /// <summary>
    /// Raise by one equal tempered quarter tone.
    /// </summary>
    public const string AccidentalQuarterSharpEqualTempered = "accidentalQuarterSharpEqualTempered";
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const string AccidentalQuarterToneFlat4 = "accidentalQuarterToneFlat4";
    /// <summary>
    /// Arabic quarter-tone flat.
    /// </summary>
    public const string AccidentalQuarterToneFlatArabic = "accidentalQuarterToneFlatArabic";
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const string AccidentalQuarterToneFlatArrowUp = "accidentalQuarterToneFlatArrowUp";
    /// <summary>
    /// Filled reversed flat (quarter-tone flat).
    /// </summary>
    public const string AccidentalQuarterToneFlatFilledReversed = "accidentalQuarterToneFlatFilledReversed";
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const string AccidentalQuarterToneFlatNaturalArrowDown = "accidentalQuarterToneFlatNaturalArrowDown";
    /// <summary>
    /// Quarter tone flat (Penderecki).
    /// </summary>
    public const string AccidentalQuarterToneFlatPenderecki = "accidentalQuarterToneFlatPenderecki";
    /// <summary>
    /// Reversed flat (quarter-tone flat) (Stein).
    /// </summary>
    public const string AccidentalQuarterToneFlatStein = "accidentalQuarterToneFlatStein";
    /// <summary>
    /// Quarter-tone flat (van Blankenburg).
    /// </summary>
    public const string AccidentalQuarterToneFlatVanBlankenburg = "accidentalQuarterToneFlatVanBlankenburg";
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const string AccidentalQuarterToneSharp4 = "accidentalQuarterToneSharp4";
    /// <summary>
    /// Arabic quarter-tone sharp.
    /// </summary>
    public const string AccidentalQuarterToneSharpArabic = "accidentalQuarterToneSharpArabic";
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const string AccidentalQuarterToneSharpArrowDown = "accidentalQuarterToneSharpArrowDown";
    /// <summary>
    /// Quarter tone sharp (Bussotti).
    /// </summary>
    public const string AccidentalQuarterToneSharpBusotti = "accidentalQuarterToneSharpBusotti";
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const string AccidentalQuarterToneSharpNaturalArrowUp = "accidentalQuarterToneSharpNaturalArrowUp";
    /// <summary>
    /// Half sharp (quarter-tone sharp) (Stein).
    /// </summary>
    public const string AccidentalQuarterToneSharpStein = "accidentalQuarterToneSharpStein";
    /// <summary>
    /// Quarter tone sharp with wiggly tail.
    /// </summary>
    public const string AccidentalQuarterToneSharpWiggle = "accidentalQuarterToneSharpWiggle";
    /// <summary>
    /// Raise by one septimal comma.
    /// </summary>
    public const string AccidentalRaiseOneSeptimalComma = "accidentalRaiseOneSeptimalComma";
    /// <summary>
    /// Raise by one tridecimal quartertone.
    /// </summary>
    public const string AccidentalRaiseOneTridecimalQuartertone = "accidentalRaiseOneTridecimalQuartertone";
    /// <summary>
    /// Raise by one undecimal quartertone.
    /// </summary>
    public const string AccidentalRaiseOneUndecimalQuartertone = "accidentalRaiseOneUndecimalQuartertone";
    /// <summary>
    /// Raise by two septimal commas.
    /// </summary>
    public const string AccidentalRaiseTwoSeptimalCommas = "accidentalRaiseTwoSeptimalCommas";
    /// <summary>
    /// Raised (Stockhausen).
    /// </summary>
    public const string AccidentalRaisedStockhausen = "accidentalRaisedStockhausen";
    /// <summary>
    /// Reversed flat and flat with arrow down.
    /// </summary>
    public const string AccidentalReversedFlatAndFlatArrowDown = "accidentalReversedFlatAndFlatArrowDown";
    /// <summary>
    /// Reversed flat and flat with arrow up.
    /// </summary>
    public const string AccidentalReversedFlatAndFlatArrowUp = "accidentalReversedFlatAndFlatArrowUp";
    /// <summary>
    /// Reversed flat with arrow down.
    /// </summary>
    public const string AccidentalReversedFlatArrowDown = "accidentalReversedFlatArrowDown";
    /// <summary>
    /// Reversed flat with arrow up.
    /// </summary>
    public const string AccidentalReversedFlatArrowUp = "accidentalReversedFlatArrowUp";
    /// <summary>
    /// Sharp.
    /// </summary>
    public const string AccidentalSharp = "accidentalSharp";
    /// <summary>
    /// Arabic half-tone sharp.
    /// </summary>
    public const string AccidentalSharpArabic = "accidentalSharpArabic";
    /// <summary>
    /// Sharp equal tempered semitone.
    /// </summary>
    public const string AccidentalSharpEqualTempered = "accidentalSharpEqualTempered";
    /// <summary>
    /// Lowered sharp (Stockhausen).
    /// </summary>
    public const string AccidentalSharpLoweredStockhausen = "accidentalSharpLoweredStockhausen";
    /// <summary>
    /// Sharp lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalSharpOneArrowDown = "accidentalSharpOneArrowDown";
    /// <summary>
    /// Sharp raised by one syntonic comma.
    /// </summary>
    public const string AccidentalSharpOneArrowUp = "accidentalSharpOneArrowUp";
    /// <summary>
    /// One or three quarter tones sharp.
    /// </summary>
    public const string AccidentalSharpOneHorizontalStroke = "accidentalSharpOneHorizontalStroke";
    /// <summary>
    /// Raised sharp (Stockhausen).
    /// </summary>
    public const string AccidentalSharpRaisedStockhausen = "accidentalSharpRaisedStockhausen";
    /// <summary>
    /// Repeated sharp, note on line (Stockhausen).
    /// </summary>
    public const string AccidentalSharpRepeatedLineStockhausen = "accidentalSharpRepeatedLineStockhausen";
    /// <summary>
    /// Repeated sharp, note in space (Stockhausen).
    /// </summary>
    public const string AccidentalSharpRepeatedSpaceStockhausen = "accidentalSharpRepeatedSpaceStockhausen";
    /// <summary>
    /// Reversed sharp.
    /// </summary>
    public const string AccidentalSharpReversed = "accidentalSharpReversed";
    /// <summary>
    /// Sharp sharp.
    /// </summary>
    public const string AccidentalSharpSharp = "accidentalSharpSharp";
    /// <summary>
    /// Sharp lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalSharpThreeArrowsDown = "accidentalSharpThreeArrowsDown";
    /// <summary>
    /// Sharp raised by three syntonic commas.
    /// </summary>
    public const string AccidentalSharpThreeArrowsUp = "accidentalSharpThreeArrowsUp";
    /// <summary>
    /// Sharp lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalSharpTwoArrowsDown = "accidentalSharpTwoArrowsDown";
    /// <summary>
    /// Sharp raised by two syntonic commas.
    /// </summary>
    public const string AccidentalSharpTwoArrowsUp = "accidentalSharpTwoArrowsUp";
    /// <summary>
    /// 1/12 tone low.
    /// </summary>
    public const string AccidentalSims12Down = "accidentalSims12Down";
    /// <summary>
    /// 1/12 tone high.
    /// </summary>
    public const string AccidentalSims12Up = "accidentalSims12Up";
    /// <summary>
    /// 1/4 tone low.
    /// </summary>
    public const string AccidentalSims4Down = "accidentalSims4Down";
    /// <summary>
    /// 1/4 tone high.
    /// </summary>
    public const string AccidentalSims4Up = "accidentalSims4Up";
    /// <summary>
    /// 1/6 tone low.
    /// </summary>
    public const string AccidentalSims6Down = "accidentalSims6Down";
    /// <summary>
    /// 1/6 tone high.
    /// </summary>
    public const string AccidentalSims6Up = "accidentalSims6Up";
    /// <summary>
    /// Sori (quarter tone sharp).
    /// </summary>
    public const string AccidentalSori = "accidentalSori";
    /// <summary>
    /// Byzantine-style Bakiye flat (Tavener).
    /// </summary>
    public const string AccidentalTavenerFlat = "accidentalTavenerFlat";
    /// <summary>
    /// Byzantine-style Büyük mücenneb sharp (Tavener).
    /// </summary>
    public const string AccidentalTavenerSharp = "accidentalTavenerSharp";
    /// <summary>
    /// Arabic three-quarter-tones flat.
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatArabic = "accidentalThreeQuarterTonesFlatArabic";
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatArrowDown = "accidentalThreeQuarterTonesFlatArrowDown";
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatArrowUp = "accidentalThreeQuarterTonesFlatArrowUp";
    /// <summary>
    /// Three-quarter-tones flat (Couper).
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatCouper = "accidentalThreeQuarterTonesFlatCouper";
    /// <summary>
    /// Three-quarter-tones flat (Grisey).
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatGrisey = "accidentalThreeQuarterTonesFlatGrisey";
    /// <summary>
    /// Three-quarter-tones flat (Tartini).
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatTartini = "accidentalThreeQuarterTonesFlatTartini";
    /// <summary>
    /// Reversed flat and flat (three-quarter-tones flat) (Zimmermann).
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatZimmermann = "accidentalThreeQuarterTonesFlatZimmermann";
    /// <summary>
    /// Arabic three-quarter-tones sharp.
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpArabic = "accidentalThreeQuarterTonesSharpArabic";
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpArrowDown = "accidentalThreeQuarterTonesSharpArrowDown";
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpArrowUp = "accidentalThreeQuarterTonesSharpArrowUp";
    /// <summary>
    /// Three quarter tones sharp (Bussotti).
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpBusotti = "accidentalThreeQuarterTonesSharpBusotti";
    /// <summary>
    /// One and a half sharps (three-quarter-tones sharp) (Stein).
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpStein = "accidentalThreeQuarterTonesSharpStein";
    /// <summary>
    /// Three-quarter-tones sharp (Stockhausen).
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpStockhausen = "accidentalThreeQuarterTonesSharpStockhausen";
    /// <summary>
    /// Triple flat.
    /// </summary>
    public const string AccidentalTripleFlat = "accidentalTripleFlat";
    /// <summary>
    /// Triple sharp.
    /// </summary>
    public const string AccidentalTripleSharp = "accidentalTripleSharp";
    /// <summary>
    /// Two-third-tones flat (Ferneyhough).
    /// </summary>
    public const string AccidentalTwoThirdTonesFlatFerneyhough = "accidentalTwoThirdTonesFlatFerneyhough";
    /// <summary>
    /// Two-third-tones sharp (Ferneyhough).
    /// </summary>
    public const string AccidentalTwoThirdTonesSharpFerneyhough = "accidentalTwoThirdTonesSharpFerneyhough";
    /// <summary>
    /// Accidental down.
    /// </summary>
    public const string AccidentalUpsAndDownsDown = "accidentalUpsAndDownsDown";
    /// <summary>
    /// Accidental less.
    /// </summary>
    public const string AccidentalUpsAndDownsLess = "accidentalUpsAndDownsLess";
    /// <summary>
    /// Accidental more.
    /// </summary>
    public const string AccidentalUpsAndDownsMore = "accidentalUpsAndDownsMore";
    /// <summary>
    /// Accidental up.
    /// </summary>
    public const string AccidentalUpsAndDownsUp = "accidentalUpsAndDownsUp";
    /// <summary>
    /// Wilson minus (5 comma down).
    /// </summary>
    public const string AccidentalWilsonMinus = "accidentalWilsonMinus";
    /// <summary>
    /// Wilson plus (5 comma up).
    /// </summary>
    public const string AccidentalWilsonPlus = "accidentalWilsonPlus";
    /// <summary>
    /// 5/6 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky10TwelfthsFlat = "accidentalWyschnegradsky10TwelfthsFlat";
    /// <summary>
    /// 5/6 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky10TwelfthsSharp = "accidentalWyschnegradsky10TwelfthsSharp";
    /// <summary>
    /// 11/12 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky11TwelfthsFlat = "accidentalWyschnegradsky11TwelfthsFlat";
    /// <summary>
    /// 11/12 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky11TwelfthsSharp = "accidentalWyschnegradsky11TwelfthsSharp";
    /// <summary>
    /// 1/12 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky1TwelfthsFlat = "accidentalWyschnegradsky1TwelfthsFlat";
    /// <summary>
    /// 1/12 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky1TwelfthsSharp = "accidentalWyschnegradsky1TwelfthsSharp";
    /// <summary>
    /// 1/6 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky2TwelfthsFlat = "accidentalWyschnegradsky2TwelfthsFlat";
    /// <summary>
    /// 1/6 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky2TwelfthsSharp = "accidentalWyschnegradsky2TwelfthsSharp";
    /// <summary>
    /// 1/4 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky3TwelfthsFlat = "accidentalWyschnegradsky3TwelfthsFlat";
    /// <summary>
    /// 1/4 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky3TwelfthsSharp = "accidentalWyschnegradsky3TwelfthsSharp";
    /// <summary>
    /// 1/3 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky4TwelfthsFlat = "accidentalWyschnegradsky4TwelfthsFlat";
    /// <summary>
    /// 1/3 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky4TwelfthsSharp = "accidentalWyschnegradsky4TwelfthsSharp";
    /// <summary>
    /// 5/12 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky5TwelfthsFlat = "accidentalWyschnegradsky5TwelfthsFlat";
    /// <summary>
    /// 5/12 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky5TwelfthsSharp = "accidentalWyschnegradsky5TwelfthsSharp";
    /// <summary>
    /// 1/2 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky6TwelfthsFlat = "accidentalWyschnegradsky6TwelfthsFlat";
    /// <summary>
    /// 1/2 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky6TwelfthsSharp = "accidentalWyschnegradsky6TwelfthsSharp";
    /// <summary>
    /// 7/12 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky7TwelfthsFlat = "accidentalWyschnegradsky7TwelfthsFlat";
    /// <summary>
    /// 7/12 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky7TwelfthsSharp = "accidentalWyschnegradsky7TwelfthsSharp";
    /// <summary>
    /// 2/3 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky8TwelfthsFlat = "accidentalWyschnegradsky8TwelfthsFlat";
    /// <summary>
    /// 2/3 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky8TwelfthsSharp = "accidentalWyschnegradsky8TwelfthsSharp";
    /// <summary>
    /// 3/4 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky9TwelfthsFlat = "accidentalWyschnegradsky9TwelfthsFlat";
    /// <summary>
    /// 3/4 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky9TwelfthsSharp = "accidentalWyschnegradsky9TwelfthsSharp";
    /// <summary>
    /// One-third-tone sharp (Xenakis).
    /// </summary>
    public const string AccidentalXenakisOneThirdToneSharp = "accidentalXenakisOneThirdToneSharp";
    /// <summary>
    /// Two-third-tones sharp (Xenakis).
    /// </summary>
    public const string AccidentalXenakisTwoThirdTonesSharp = "accidentalXenakisTwoThirdTonesSharp";
    /// <summary>
    /// Choralmelodie (Berg).
    /// </summary>
    public const string AnalyticsChoralmelodie = "analyticsChoralmelodie";
    /// <summary>
    /// End of stimme.
    /// </summary>
    public const string AnalyticsEndStimme = "analyticsEndStimme";
    /// <summary>
    /// Hauptrhythmus (Berg).
    /// </summary>
    public const string AnalyticsHauptrhythmus = "analyticsHauptrhythmus";
    /// <summary>
    /// Hauptstimme.
    /// </summary>
    public const string AnalyticsHauptstimme = "analyticsHauptstimme";
    /// <summary>
    /// Inversion 1.
    /// </summary>
    public const string AnalyticsInversion1 = "analyticsInversion1";
    /// <summary>
    /// Nebenstimme.
    /// </summary>
    public const string AnalyticsNebenstimme = "analyticsNebenstimme";
    /// <summary>
    /// Start of stimme.
    /// </summary>
    public const string AnalyticsStartStimme = "analyticsStartStimme";
    /// <summary>
    /// Theme.
    /// </summary>
    public const string AnalyticsTheme = "analyticsTheme";
    /// <summary>
    /// Theme 1.
    /// </summary>
    public const string AnalyticsTheme1 = "analyticsTheme1";
    /// <summary>
    /// Inversion of theme.
    /// </summary>
    public const string AnalyticsThemeInversion = "analyticsThemeInversion";
    /// <summary>
    /// Retrograde of theme.
    /// </summary>
    public const string AnalyticsThemeRetrograde = "analyticsThemeRetrograde";
    /// <summary>
    /// Retrograde inversion of theme.
    /// </summary>
    public const string AnalyticsThemeRetrogradeInversion = "analyticsThemeRetrogradeInversion";
    /// <summary>
    /// Arpeggiato.
    /// </summary>
    public const string Arpeggiato = "arpeggiato";
    /// <summary>
    /// Arpeggiato down.
    /// </summary>
    public const string ArpeggiatoDown = "arpeggiatoDown";
    /// <summary>
    /// Arpeggiato up.
    /// </summary>
    public const string ArpeggiatoUp = "arpeggiatoUp";
    /// <summary>
    /// Black arrow down (S).
    /// </summary>
    public const string ArrowBlackDown = "arrowBlackDown";
    /// <summary>
    /// Black arrow down-left (SW).
    /// </summary>
    public const string ArrowBlackDownLeft = "arrowBlackDownLeft";
    /// <summary>
    /// Black arrow down-right (SE).
    /// </summary>
    public const string ArrowBlackDownRight = "arrowBlackDownRight";
    /// <summary>
    /// Black arrow left (W).
    /// </summary>
    public const string ArrowBlackLeft = "arrowBlackLeft";
    /// <summary>
    /// Black arrow right (E).
    /// </summary>
    public const string ArrowBlackRight = "arrowBlackRight";
    /// <summary>
    /// Black arrow up (N).
    /// </summary>
    public const string ArrowBlackUp = "arrowBlackUp";
    /// <summary>
    /// Black arrow up-left (NW).
    /// </summary>
    public const string ArrowBlackUpLeft = "arrowBlackUpLeft";
    /// <summary>
    /// Black arrow up-right (NE).
    /// </summary>
    public const string ArrowBlackUpRight = "arrowBlackUpRight";
    /// <summary>
    /// Open arrow down (S).
    /// </summary>
    public const string ArrowOpenDown = "arrowOpenDown";
    /// <summary>
    /// Open arrow down-left (SW).
    /// </summary>
    public const string ArrowOpenDownLeft = "arrowOpenDownLeft";
    /// <summary>
    /// Open arrow down-right (SE).
    /// </summary>
    public const string ArrowOpenDownRight = "arrowOpenDownRight";
    /// <summary>
    /// Open arrow left (W).
    /// </summary>
    public const string ArrowOpenLeft = "arrowOpenLeft";
    /// <summary>
    /// Open arrow right (E).
    /// </summary>
    public const string ArrowOpenRight = "arrowOpenRight";
    /// <summary>
    /// Open arrow up (N).
    /// </summary>
    public const string ArrowOpenUp = "arrowOpenUp";
    /// <summary>
    /// Open arrow up-left (NW).
    /// </summary>
    public const string ArrowOpenUpLeft = "arrowOpenUpLeft";
    /// <summary>
    /// Open arrow up-right (NE).
    /// </summary>
    public const string ArrowOpenUpRight = "arrowOpenUpRight";
    /// <summary>
    /// White arrow down (S).
    /// </summary>
    public const string ArrowWhiteDown = "arrowWhiteDown";
    /// <summary>
    /// White arrow down-left (SW).
    /// </summary>
    public const string ArrowWhiteDownLeft = "arrowWhiteDownLeft";
    /// <summary>
    /// White arrow down-right (SE).
    /// </summary>
    public const string ArrowWhiteDownRight = "arrowWhiteDownRight";
    /// <summary>
    /// White arrow left (W).
    /// </summary>
    public const string ArrowWhiteLeft = "arrowWhiteLeft";
    /// <summary>
    /// White arrow right (E).
    /// </summary>
    public const string ArrowWhiteRight = "arrowWhiteRight";
    /// <summary>
    /// White arrow up (N).
    /// </summary>
    public const string ArrowWhiteUp = "arrowWhiteUp";
    /// <summary>
    /// White arrow up-left (NW).
    /// </summary>
    public const string ArrowWhiteUpLeft = "arrowWhiteUpLeft";
    /// <summary>
    /// White arrow up-right (NE).
    /// </summary>
    public const string ArrowWhiteUpRight = "arrowWhiteUpRight";
    /// <summary>
    /// Black arrowhead down (S).
    /// </summary>
    public const string ArrowheadBlackDown = "arrowheadBlackDown";
    /// <summary>
    /// Black arrowhead down-left (SW).
    /// </summary>
    public const string ArrowheadBlackDownLeft = "arrowheadBlackDownLeft";
    /// <summary>
    /// Black arrowhead down-right (SE).
    /// </summary>
    public const string ArrowheadBlackDownRight = "arrowheadBlackDownRight";
    /// <summary>
    /// Black arrowhead left (W).
    /// </summary>
    public const string ArrowheadBlackLeft = "arrowheadBlackLeft";
    /// <summary>
    /// Black arrowhead right (E).
    /// </summary>
    public const string ArrowheadBlackRight = "arrowheadBlackRight";
    /// <summary>
    /// Black arrowhead up (N).
    /// </summary>
    public const string ArrowheadBlackUp = "arrowheadBlackUp";
    /// <summary>
    /// Black arrowhead up-left (NW).
    /// </summary>
    public const string ArrowheadBlackUpLeft = "arrowheadBlackUpLeft";
    /// <summary>
    /// Black arrowhead up-right (NE).
    /// </summary>
    public const string ArrowheadBlackUpRight = "arrowheadBlackUpRight";
    /// <summary>
    /// Open arrowhead down (S).
    /// </summary>
    public const string ArrowheadOpenDown = "arrowheadOpenDown";
    /// <summary>
    /// Open arrowhead down-left (SW).
    /// </summary>
    public const string ArrowheadOpenDownLeft = "arrowheadOpenDownLeft";
    /// <summary>
    /// Open arrowhead down-right (SE).
    /// </summary>
    public const string ArrowheadOpenDownRight = "arrowheadOpenDownRight";
    /// <summary>
    /// Open arrowhead left (W).
    /// </summary>
    public const string ArrowheadOpenLeft = "arrowheadOpenLeft";
    /// <summary>
    /// Open arrowhead right (E).
    /// </summary>
    public const string ArrowheadOpenRight = "arrowheadOpenRight";
    /// <summary>
    /// Open arrowhead up (N).
    /// </summary>
    public const string ArrowheadOpenUp = "arrowheadOpenUp";
    /// <summary>
    /// Open arrowhead up-left (NW).
    /// </summary>
    public const string ArrowheadOpenUpLeft = "arrowheadOpenUpLeft";
    /// <summary>
    /// Open arrowhead up-right (NE).
    /// </summary>
    public const string ArrowheadOpenUpRight = "arrowheadOpenUpRight";
    /// <summary>
    /// White arrowhead down (S).
    /// </summary>
    public const string ArrowheadWhiteDown = "arrowheadWhiteDown";
    /// <summary>
    /// White arrowhead down-left (SW).
    /// </summary>
    public const string ArrowheadWhiteDownLeft = "arrowheadWhiteDownLeft";
    /// <summary>
    /// White arrowhead down-right (SE).
    /// </summary>
    public const string ArrowheadWhiteDownRight = "arrowheadWhiteDownRight";
    /// <summary>
    /// White arrowhead left (W).
    /// </summary>
    public const string ArrowheadWhiteLeft = "arrowheadWhiteLeft";
    /// <summary>
    /// White arrowhead right (E).
    /// </summary>
    public const string ArrowheadWhiteRight = "arrowheadWhiteRight";
    /// <summary>
    /// White arrowhead up (N).
    /// </summary>
    public const string ArrowheadWhiteUp = "arrowheadWhiteUp";
    /// <summary>
    /// White arrowhead up-left (NW).
    /// </summary>
    public const string ArrowheadWhiteUpLeft = "arrowheadWhiteUpLeft";
    /// <summary>
    /// White arrowhead up-right (NE).
    /// </summary>
    public const string ArrowheadWhiteUpRight = "arrowheadWhiteUpRight";
    /// <summary>
    /// Accent above.
    /// </summary>
    public const string ArticAccentAbove = "articAccentAbove";
    /// <summary>
    /// Accent below.
    /// </summary>
    public const string ArticAccentBelow = "articAccentBelow";
    /// <summary>
    /// Accent-staccato above.
    /// </summary>
    public const string ArticAccentStaccatoAbove = "articAccentStaccatoAbove";
    /// <summary>
    /// Accent-staccato below.
    /// </summary>
    public const string ArticAccentStaccatoBelow = "articAccentStaccatoBelow";
    /// <summary>
    /// Laissez vibrer (l.v.) above.
    /// </summary>
    public const string ArticLaissezVibrerAbove = "articLaissezVibrerAbove";
    /// <summary>
    /// Laissez vibrer (l.v.) below.
    /// </summary>
    public const string ArticLaissezVibrerBelow = "articLaissezVibrerBelow";
    /// <summary>
    /// Marcato above.
    /// </summary>
    public const string ArticMarcatoAbove = "articMarcatoAbove";
    /// <summary>
    /// Marcato below.
    /// </summary>
    public const string ArticMarcatoBelow = "articMarcatoBelow";
    /// <summary>
    /// Marcato-staccato above.
    /// </summary>
    public const string ArticMarcatoStaccatoAbove = "articMarcatoStaccatoAbove";
    /// <summary>
    /// Marcato-staccato below.
    /// </summary>
    public const string ArticMarcatoStaccatoBelow = "articMarcatoStaccatoBelow";
    /// <summary>
    /// Marcato-tenuto above.
    /// </summary>
    public const string ArticMarcatoTenutoAbove = "articMarcatoTenutoAbove";
    /// <summary>
    /// Marcato-tenuto below.
    /// </summary>
    public const string ArticMarcatoTenutoBelow = "articMarcatoTenutoBelow";
    /// <summary>
    /// Soft accent above.
    /// </summary>
    public const string ArticSoftAccentAbove = "articSoftAccentAbove";
    /// <summary>
    /// Soft accent below.
    /// </summary>
    public const string ArticSoftAccentBelow = "articSoftAccentBelow";
    /// <summary>
    /// Soft accent-staccato above.
    /// </summary>
    public const string ArticSoftAccentStaccatoAbove = "articSoftAccentStaccatoAbove";
    /// <summary>
    /// Soft accent-staccato below.
    /// </summary>
    public const string ArticSoftAccentStaccatoBelow = "articSoftAccentStaccatoBelow";
    /// <summary>
    /// Soft accent-tenuto above.
    /// </summary>
    public const string ArticSoftAccentTenutoAbove = "articSoftAccentTenutoAbove";
    /// <summary>
    /// Soft accent-tenuto below.
    /// </summary>
    public const string ArticSoftAccentTenutoBelow = "articSoftAccentTenutoBelow";
    /// <summary>
    /// Soft accent-tenuto-staccato above.
    /// </summary>
    public const string ArticSoftAccentTenutoStaccatoAbove = "articSoftAccentTenutoStaccatoAbove";
    /// <summary>
    /// Soft accent-tenuto-staccato below.
    /// </summary>
    public const string ArticSoftAccentTenutoStaccatoBelow = "articSoftAccentTenutoStaccatoBelow";
    /// <summary>
    /// Staccatissimo above.
    /// </summary>
    public const string ArticStaccatissimoAbove = "articStaccatissimoAbove";
    /// <summary>
    /// Staccatissimo below.
    /// </summary>
    public const string ArticStaccatissimoBelow = "articStaccatissimoBelow";
    /// <summary>
    /// Staccatissimo stroke above.
    /// </summary>
    public const string ArticStaccatissimoStrokeAbove = "articStaccatissimoStrokeAbove";
    /// <summary>
    /// Staccatissimo stroke below.
    /// </summary>
    public const string ArticStaccatissimoStrokeBelow = "articStaccatissimoStrokeBelow";
    /// <summary>
    /// Staccatissimo wedge above.
    /// </summary>
    public const string ArticStaccatissimoWedgeAbove = "articStaccatissimoWedgeAbove";
    /// <summary>
    /// Staccatissimo wedge below.
    /// </summary>
    public const string ArticStaccatissimoWedgeBelow = "articStaccatissimoWedgeBelow";
    /// <summary>
    /// Staccato above.
    /// </summary>
    public const string ArticStaccatoAbove = "articStaccatoAbove";
    /// <summary>
    /// Staccato below.
    /// </summary>
    public const string ArticStaccatoBelow = "articStaccatoBelow";
    /// <summary>
    /// Stress above.
    /// </summary>
    public const string ArticStressAbove = "articStressAbove";
    /// <summary>
    /// Stress below.
    /// </summary>
    public const string ArticStressBelow = "articStressBelow";
    /// <summary>
    /// Tenuto above.
    /// </summary>
    public const string ArticTenutoAbove = "articTenutoAbove";
    /// <summary>
    /// Tenuto-accent above.
    /// </summary>
    public const string ArticTenutoAccentAbove = "articTenutoAccentAbove";
    /// <summary>
    /// Tenuto-accent below.
    /// </summary>
    public const string ArticTenutoAccentBelow = "articTenutoAccentBelow";
    /// <summary>
    /// Tenuto below.
    /// </summary>
    public const string ArticTenutoBelow = "articTenutoBelow";
    /// <summary>
    /// Louré (tenuto-staccato) above.
    /// </summary>
    public const string ArticTenutoStaccatoAbove = "articTenutoStaccatoAbove";
    /// <summary>
    /// Louré (tenuto-staccato) below.
    /// </summary>
    public const string ArticTenutoStaccatoBelow = "articTenutoStaccatoBelow";
    /// <summary>
    /// Unstress above.
    /// </summary>
    public const string ArticUnstressAbove = "articUnstressAbove";
    /// <summary>
    /// Unstress below.
    /// </summary>
    public const string ArticUnstressBelow = "articUnstressBelow";
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const string AugmentationDot = "augmentationDot";
    /// <summary>
    /// Dashed barline.
    /// </summary>
    public const string BarlineDashed = "barlineDashed";
    /// <summary>
    /// Dotted barline.
    /// </summary>
    public const string BarlineDotted = "barlineDotted";
    /// <summary>
    /// Double barline.
    /// </summary>
    public const string BarlineDouble = "barlineDouble";
    /// <summary>
    /// Final barline.
    /// </summary>
    public const string BarlineFinal = "barlineFinal";
    /// <summary>
    /// Heavy barline.
    /// </summary>
    public const string BarlineHeavy = "barlineHeavy";
    /// <summary>
    /// Heavy double barline.
    /// </summary>
    public const string BarlineHeavyHeavy = "barlineHeavyHeavy";
    /// <summary>
    /// Reverse final barline.
    /// </summary>
    public const string BarlineReverseFinal = "barlineReverseFinal";
    /// <summary>
    /// Short barline.
    /// </summary>
    public const string BarlineShort = "barlineShort";
    /// <summary>
    /// Single barline.
    /// </summary>
    public const string BarlineSingle = "barlineSingle";
    /// <summary>
    /// Tick barline.
    /// </summary>
    public const string BarlineTick = "barlineTick";
    /// <summary>
    /// Accel./rit. beam 1 (widest).
    /// </summary>
    public const string BeamAccelRit1 = "beamAccelRit1";
    /// <summary>
    /// Accel./rit. beam 10.
    /// </summary>
    public const string BeamAccelRit10 = "beamAccelRit10";
    /// <summary>
    /// Accel./rit. beam 11.
    /// </summary>
    public const string BeamAccelRit11 = "beamAccelRit11";
    /// <summary>
    /// Accel./rit. beam 12.
    /// </summary>
    public const string BeamAccelRit12 = "beamAccelRit12";
    /// <summary>
    /// Accel./rit. beam 13.
    /// </summary>
    public const string BeamAccelRit13 = "beamAccelRit13";
    /// <summary>
    /// Accel./rit. beam 14.
    /// </summary>
    public const string BeamAccelRit14 = "beamAccelRit14";
    /// <summary>
    /// Accel./rit. beam 15 (narrowest).
    /// </summary>
    public const string BeamAccelRit15 = "beamAccelRit15";
    /// <summary>
    /// Accel./rit. beam 2.
    /// </summary>
    public const string BeamAccelRit2 = "beamAccelRit2";
    /// <summary>
    /// Accel./rit. beam 3.
    /// </summary>
    public const string BeamAccelRit3 = "beamAccelRit3";
    /// <summary>
    /// Accel./rit. beam 4.
    /// </summary>
    public const string BeamAccelRit4 = "beamAccelRit4";
    /// <summary>
    /// Accel./rit. beam 5.
    /// </summary>
    public const string BeamAccelRit5 = "beamAccelRit5";
    /// <summary>
    /// Accel./rit. beam 6.
    /// </summary>
    public const string BeamAccelRit6 = "beamAccelRit6";
    /// <summary>
    /// Accel./rit. beam 7.
    /// </summary>
    public const string BeamAccelRit7 = "beamAccelRit7";
    /// <summary>
    /// Accel./rit. beam 8.
    /// </summary>
    public const string BeamAccelRit8 = "beamAccelRit8";
    /// <summary>
    /// Accel./rit. beam 9.
    /// </summary>
    public const string BeamAccelRit9 = "beamAccelRit9";
    /// <summary>
    /// Accel./rit. beam terminating line.
    /// </summary>
    public const string BeamAccelRitFinal = "beamAccelRitFinal";
    /// <summary>
    /// Brace.
    /// </summary>
    public const string Brace = "brace";
    /// <summary>
    /// Bracket.
    /// </summary>
    public const string Bracket = "bracket";
    /// <summary>
    /// Bracket bottom.
    /// </summary>
    public const string BracketBottom = "bracketBottom";
    /// <summary>
    /// Bracket top.
    /// </summary>
    public const string BracketTop = "bracketTop";
    /// <summary>
    /// Bend.
    /// </summary>
    public const string BrassBend = "brassBend";
    /// <summary>
    /// Doit, long.
    /// </summary>
    public const string BrassDoitLong = "brassDoitLong";
    /// <summary>
    /// Doit, medium.
    /// </summary>
    public const string BrassDoitMedium = "brassDoitMedium";
    /// <summary>
    /// Doit, short.
    /// </summary>
    public const string BrassDoitShort = "brassDoitShort";
    /// <summary>
    /// Lip fall, long.
    /// </summary>
    public const string BrassFallLipLong = "brassFallLipLong";
    /// <summary>
    /// Lip fall, medium.
    /// </summary>
    public const string BrassFallLipMedium = "brassFallLipMedium";
    /// <summary>
    /// Lip fall, short.
    /// </summary>
    public const string BrassFallLipShort = "brassFallLipShort";
    /// <summary>
    /// Rough fall, long.
    /// </summary>
    public const string BrassFallRoughLong = "brassFallRoughLong";
    /// <summary>
    /// Rough fall, medium.
    /// </summary>
    public const string BrassFallRoughMedium = "brassFallRoughMedium";
    /// <summary>
    /// Rough fall, short.
    /// </summary>
    public const string BrassFallRoughShort = "brassFallRoughShort";
    /// <summary>
    /// Smooth fall, long.
    /// </summary>
    public const string BrassFallSmoothLong = "brassFallSmoothLong";
    /// <summary>
    /// Smooth fall, medium.
    /// </summary>
    public const string BrassFallSmoothMedium = "brassFallSmoothMedium";
    /// <summary>
    /// Smooth fall, short.
    /// </summary>
    public const string BrassFallSmoothShort = "brassFallSmoothShort";
    /// <summary>
    /// Flip.
    /// </summary>
    public const string BrassFlip = "brassFlip";
    /// <summary>
    /// Harmon mute, stem in.
    /// </summary>
    public const string BrassHarmonMuteClosed = "brassHarmonMuteClosed";
    /// <summary>
    /// Harmon mute, stem extended, left.
    /// </summary>
    public const string BrassHarmonMuteStemHalfLeft = "brassHarmonMuteStemHalfLeft";
    /// <summary>
    /// Harmon mute, stem extended, right.
    /// </summary>
    public const string BrassHarmonMuteStemHalfRight = "brassHarmonMuteStemHalfRight";
    /// <summary>
    /// Harmon mute, stem out.
    /// </summary>
    public const string BrassHarmonMuteStemOpen = "brassHarmonMuteStemOpen";
    /// <summary>
    /// Jazz turn.
    /// </summary>
    public const string BrassJazzTurn = "brassJazzTurn";
    /// <summary>
    /// Lift, long.
    /// </summary>
    public const string BrassLiftLong = "brassLiftLong";
    /// <summary>
    /// Lift, medium.
    /// </summary>
    public const string BrassLiftMedium = "brassLiftMedium";
    /// <summary>
    /// Lift, short.
    /// </summary>
    public const string BrassLiftShort = "brassLiftShort";
    /// <summary>
    /// Smooth lift, long.
    /// </summary>
    public const string BrassLiftSmoothLong = "brassLiftSmoothLong";
    /// <summary>
    /// Smooth lift, medium.
    /// </summary>
    public const string BrassLiftSmoothMedium = "brassLiftSmoothMedium";
    /// <summary>
    /// Smooth lift, short.
    /// </summary>
    public const string BrassLiftSmoothShort = "brassLiftSmoothShort";
    /// <summary>
    /// Muted (closed).
    /// </summary>
    public const string BrassMuteClosed = "brassMuteClosed";
    /// <summary>
    /// Half-muted (half-closed).
    /// </summary>
    public const string BrassMuteHalfClosed = "brassMuteHalfClosed";
    /// <summary>
    /// Open.
    /// </summary>
    public const string BrassMuteOpen = "brassMuteOpen";
    /// <summary>
    /// Plop.
    /// </summary>
    public const string BrassPlop = "brassPlop";
    /// <summary>
    /// Scoop.
    /// </summary>
    public const string BrassScoop = "brassScoop";
    /// <summary>
    /// Smear.
    /// </summary>
    public const string BrassSmear = "brassSmear";
    /// <summary>
    /// Valve trill.
    /// </summary>
    public const string BrassValveTrill = "brassValveTrill";
    /// <summary>
    /// Breath mark (comma).
    /// </summary>
    public const string BreathMarkComma = "breathMarkComma";
    /// <summary>
    /// Breath mark (Salzedo).
    /// </summary>
    public const string BreathMarkSalzedo = "breathMarkSalzedo";
    /// <summary>
    /// Breath mark (tick-like).
    /// </summary>
    public const string BreathMarkTick = "breathMarkTick";
    /// <summary>
    /// Breath mark (upbow-like).
    /// </summary>
    public const string BreathMarkUpbow = "breathMarkUpbow";
    /// <summary>
    /// Bridge clef.
    /// </summary>
    public const string BridgeClef = "bridgeClef";
    /// <summary>
    /// Buzz roll.
    /// </summary>
    public const string BuzzRoll = "buzzRoll";
    /// <summary>
    /// C clef.
    /// </summary>
    public const string CClef = "cClef";
    /// <summary>
    /// C clef ottava bassa.
    /// </summary>
    public const string CClef8vb = "cClef8vb";
    /// <summary>
    /// C clef, arrow down.
    /// </summary>
    public const string CClefArrowDown = "cClefArrowDown";
    /// <summary>
    /// C clef, arrow up.
    /// </summary>
    public const string CClefArrowUp = "cClefArrowUp";
    /// <summary>
    /// C clef change.
    /// </summary>
    public const string CClefChange = "cClefChange";
    /// <summary>
    /// Combining C clef.
    /// </summary>
    public const string CClefCombining = "cClefCombining";
    /// <summary>
    /// Reversed C clef.
    /// </summary>
    public const string CClefReversed = "cClefReversed";
    /// <summary>
    /// C clef (19th century).
    /// </summary>
    public const string CClefSquare = "cClefSquare";
    /// <summary>
    /// Caesura.
    /// </summary>
    public const string Caesura = "caesura";
    /// <summary>
    /// Curved caesura.
    /// </summary>
    public const string CaesuraCurved = "caesuraCurved";
    /// <summary>
    /// Short caesura.
    /// </summary>
    public const string CaesuraShort = "caesuraShort";
    /// <summary>
    /// Single stroke caesura.
    /// </summary>
    public const string CaesuraSingleStroke = "caesuraSingleStroke";
    /// <summary>
    /// Thick caesura.
    /// </summary>
    public const string CaesuraThick = "caesuraThick";
    /// <summary>
    /// Accentus above.
    /// </summary>
    public const string ChantAccentusAbove = "chantAccentusAbove";
    /// <summary>
    /// Accentus below.
    /// </summary>
    public const string ChantAccentusBelow = "chantAccentusBelow";
    /// <summary>
    /// Punctum auctum, ascending.
    /// </summary>
    public const string ChantAuctumAsc = "chantAuctumAsc";
    /// <summary>
    /// Punctum auctum, descending.
    /// </summary>
    public const string ChantAuctumDesc = "chantAuctumDesc";
    /// <summary>
    /// Augmentum (mora).
    /// </summary>
    public const string ChantAugmentum = "chantAugmentum";
    /// <summary>
    /// Caesura.
    /// </summary>
    public const string ChantCaesura = "chantCaesura";
    /// <summary>
    /// Plainchant C clef.
    /// </summary>
    public const string ChantCclef = "chantCclef";
    /// <summary>
    /// Circulus above.
    /// </summary>
    public const string ChantCirculusAbove = "chantCirculusAbove";
    /// <summary>
    /// Circulus below.
    /// </summary>
    public const string ChantCirculusBelow = "chantCirculusBelow";
    /// <summary>
    /// Connecting line, ascending 2nd.
    /// </summary>
    public const string ChantConnectingLineAsc2nd = "chantConnectingLineAsc2nd";
    /// <summary>
    /// Connecting line, ascending 3rd.
    /// </summary>
    public const string ChantConnectingLineAsc3rd = "chantConnectingLineAsc3rd";
    /// <summary>
    /// Connecting line, ascending 4th.
    /// </summary>
    public const string ChantConnectingLineAsc4th = "chantConnectingLineAsc4th";
    /// <summary>
    /// Connecting line, ascending 5th.
    /// </summary>
    public const string ChantConnectingLineAsc5th = "chantConnectingLineAsc5th";
    /// <summary>
    /// Connecting line, ascending 6th.
    /// </summary>
    public const string ChantConnectingLineAsc6th = "chantConnectingLineAsc6th";
    /// <summary>
    /// Plainchant custos, stem down, high position.
    /// </summary>
    public const string ChantCustosStemDownPosHigh = "chantCustosStemDownPosHigh";
    /// <summary>
    /// Plainchant custos, stem down, highest position.
    /// </summary>
    public const string ChantCustosStemDownPosHighest = "chantCustosStemDownPosHighest";
    /// <summary>
    /// Plainchant custos, stem down, middle position.
    /// </summary>
    public const string ChantCustosStemDownPosMiddle = "chantCustosStemDownPosMiddle";
    /// <summary>
    /// Plainchant custos, stem up, low position.
    /// </summary>
    public const string ChantCustosStemUpPosLow = "chantCustosStemUpPosLow";
    /// <summary>
    /// Plainchant custos, stem up, lowest position.
    /// </summary>
    public const string ChantCustosStemUpPosLowest = "chantCustosStemUpPosLowest";
    /// <summary>
    /// Plainchant custos, stem up, middle position.
    /// </summary>
    public const string ChantCustosStemUpPosMiddle = "chantCustosStemUpPosMiddle";
    /// <summary>
    /// Punctum deminutum, lower.
    /// </summary>
    public const string ChantDeminutumLower = "chantDeminutumLower";
    /// <summary>
    /// Punctum deminutum, upper.
    /// </summary>
    public const string ChantDeminutumUpper = "chantDeminutumUpper";
    /// <summary>
    /// Divisio finalis.
    /// </summary>
    public const string ChantDivisioFinalis = "chantDivisioFinalis";
    /// <summary>
    /// Divisio maior.
    /// </summary>
    public const string ChantDivisioMaior = "chantDivisioMaior";
    /// <summary>
    /// Divisio maxima.
    /// </summary>
    public const string ChantDivisioMaxima = "chantDivisioMaxima";
    /// <summary>
    /// Divisio minima.
    /// </summary>
    public const string ChantDivisioMinima = "chantDivisioMinima";
    /// <summary>
    /// Entry line, ascending 2nd.
    /// </summary>
    public const string ChantEntryLineAsc2nd = "chantEntryLineAsc2nd";
    /// <summary>
    /// Entry line, ascending 3rd.
    /// </summary>
    public const string ChantEntryLineAsc3rd = "chantEntryLineAsc3rd";
    /// <summary>
    /// Entry line, ascending 4th.
    /// </summary>
    public const string ChantEntryLineAsc4th = "chantEntryLineAsc4th";
    /// <summary>
    /// Entry line, ascending 5th.
    /// </summary>
    public const string ChantEntryLineAsc5th = "chantEntryLineAsc5th";
    /// <summary>
    /// Entry line, ascending 6th.
    /// </summary>
    public const string ChantEntryLineAsc6th = "chantEntryLineAsc6th";
    /// <summary>
    /// Episema.
    /// </summary>
    public const string ChantEpisema = "chantEpisema";
    /// <summary>
    /// Plainchant F clef.
    /// </summary>
    public const string ChantFclef = "chantFclef";
    /// <summary>
    /// Ictus above.
    /// </summary>
    public const string ChantIctusAbove = "chantIctusAbove";
    /// <summary>
    /// Ictus below.
    /// </summary>
    public const string ChantIctusBelow = "chantIctusBelow";
    /// <summary>
    /// Ligated stroke, descending 2nd.
    /// </summary>
    public const string ChantLigaturaDesc2nd = "chantLigaturaDesc2nd";
    /// <summary>
    /// Ligated stroke, descending 3rd.
    /// </summary>
    public const string ChantLigaturaDesc3rd = "chantLigaturaDesc3rd";
    /// <summary>
    /// Ligated stroke, descending 4th.
    /// </summary>
    public const string ChantLigaturaDesc4th = "chantLigaturaDesc4th";
    /// <summary>
    /// Ligated stroke, descending 5th.
    /// </summary>
    public const string ChantLigaturaDesc5th = "chantLigaturaDesc5th";
    /// <summary>
    /// Oriscus ascending.
    /// </summary>
    public const string ChantOriscusAscending = "chantOriscusAscending";
    /// <summary>
    /// Oriscus descending.
    /// </summary>
    public const string ChantOriscusDescending = "chantOriscusDescending";
    /// <summary>
    /// Oriscus liquescens.
    /// </summary>
    public const string ChantOriscusLiquescens = "chantOriscusLiquescens";
    /// <summary>
    /// Podatus, lower.
    /// </summary>
    public const string ChantPodatusLower = "chantPodatusLower";
    /// <summary>
    /// Podatus, upper.
    /// </summary>
    public const string ChantPodatusUpper = "chantPodatusUpper";
    /// <summary>
    /// Punctum.
    /// </summary>
    public const string ChantPunctum = "chantPunctum";
    /// <summary>
    /// Punctum cavum.
    /// </summary>
    public const string ChantPunctumCavum = "chantPunctumCavum";
    /// <summary>
    /// Punctum deminutum.
    /// </summary>
    public const string ChantPunctumDeminutum = "chantPunctumDeminutum";
    /// <summary>
    /// Punctum inclinatum.
    /// </summary>
    public const string ChantPunctumInclinatum = "chantPunctumInclinatum";
    /// <summary>
    /// Punctum inclinatum auctum.
    /// </summary>
    public const string ChantPunctumInclinatumAuctum = "chantPunctumInclinatumAuctum";
    /// <summary>
    /// Punctum inclinatum deminutum.
    /// </summary>
    public const string ChantPunctumInclinatumDeminutum = "chantPunctumInclinatumDeminutum";
    /// <summary>
    /// Punctum linea.
    /// </summary>
    public const string ChantPunctumLinea = "chantPunctumLinea";
    /// <summary>
    /// Punctum linea cavum.
    /// </summary>
    public const string ChantPunctumLineaCavum = "chantPunctumLineaCavum";
    /// <summary>
    /// Punctum virga.
    /// </summary>
    public const string ChantPunctumVirga = "chantPunctumVirga";
    /// <summary>
    /// Punctum virga, reversed.
    /// </summary>
    public const string ChantPunctumVirgaReversed = "chantPunctumVirgaReversed";
    /// <summary>
    /// Quilisma.
    /// </summary>
    public const string ChantQuilisma = "chantQuilisma";
    /// <summary>
    /// Semicirculus above.
    /// </summary>
    public const string ChantSemicirculusAbove = "chantSemicirculusAbove";
    /// <summary>
    /// Semicirculus below.
    /// </summary>
    public const string ChantSemicirculusBelow = "chantSemicirculusBelow";
    /// <summary>
    /// Plainchant staff.
    /// </summary>
    public const string ChantStaff = "chantStaff";
    /// <summary>
    /// Plainchant staff (narrow).
    /// </summary>
    public const string ChantStaffNarrow = "chantStaffNarrow";
    /// <summary>
    /// Plainchant staff (wide).
    /// </summary>
    public const string ChantStaffWide = "chantStaffWide";
    /// <summary>
    /// Strophicus.
    /// </summary>
    public const string ChantStrophicus = "chantStrophicus";
    /// <summary>
    /// Strophicus auctus.
    /// </summary>
    public const string ChantStrophicusAuctus = "chantStrophicusAuctus";
    /// <summary>
    /// Strophicus liquescens, 2nd.
    /// </summary>
    public const string ChantStrophicusLiquescens2nd = "chantStrophicusLiquescens2nd";
    /// <summary>
    /// Strophicus liquescens, 3rd.
    /// </summary>
    public const string ChantStrophicusLiquescens3rd = "chantStrophicusLiquescens3rd";
    /// <summary>
    /// Strophicus liquescens, 4th.
    /// </summary>
    public const string ChantStrophicusLiquescens4th = "chantStrophicusLiquescens4th";
    /// <summary>
    /// Strophicus liquescens, 5th.
    /// </summary>
    public const string ChantStrophicusLiquescens5th = "chantStrophicusLiquescens5th";
    /// <summary>
    /// Virgula.
    /// </summary>
    public const string ChantVirgula = "chantVirgula";
    /// <summary>
    /// 15 for clefs.
    /// </summary>
    public const string Clef15 = "clef15";
    /// <summary>
    /// 8 for clefs.
    /// </summary>
    public const string Clef8 = "clef8";
    /// <summary>
    /// Combining clef change.
    /// </summary>
    public const string ClefChangeCombining = "clefChangeCombining";
    /// <summary>
    /// Coda.
    /// </summary>
    public const string Coda = "coda";
    /// <summary>
    /// Square coda.
    /// </summary>
    public const string CodaSquare = "codaSquare";
    /// <summary>
    /// Beat 2, compound time.
    /// </summary>
    public const string ConductorBeat2Compound = "conductorBeat2Compound";
    /// <summary>
    /// Beat 2, simple time.
    /// </summary>
    public const string ConductorBeat2Simple = "conductorBeat2Simple";
    /// <summary>
    /// Beat 3, compound time.
    /// </summary>
    public const string ConductorBeat3Compound = "conductorBeat3Compound";
    /// <summary>
    /// Beat 3, simple time.
    /// </summary>
    public const string ConductorBeat3Simple = "conductorBeat3Simple";
    /// <summary>
    /// Beat 4, compound time.
    /// </summary>
    public const string ConductorBeat4Compound = "conductorBeat4Compound";
    /// <summary>
    /// Beat 4, simple time.
    /// </summary>
    public const string ConductorBeat4Simple = "conductorBeat4Simple";
    /// <summary>
    /// Left-hand beat or cue.
    /// </summary>
    public const string ConductorLeftBeat = "conductorLeftBeat";
    /// <summary>
    /// Right-hand beat or cue.
    /// </summary>
    public const string ConductorRightBeat = "conductorRightBeat";
    /// <summary>
    /// Strong beat or cue.
    /// </summary>
    public const string ConductorStrongBeat = "conductorStrongBeat";
    /// <summary>
    /// Unconducted/free passages.
    /// </summary>
    public const string ConductorUnconducted = "conductorUnconducted";
    /// <summary>
    /// Weak beat or cue.
    /// </summary>
    public const string ConductorWeakBeat = "conductorWeakBeat";
    /// <summary>
    /// Begin beam.
    /// </summary>
    public const string ControlBeginBeam = "controlBeginBeam";
    /// <summary>
    /// Begin phrase.
    /// </summary>
    public const string ControlBeginPhrase = "controlBeginPhrase";
    /// <summary>
    /// Begin slur.
    /// </summary>
    public const string ControlBeginSlur = "controlBeginSlur";
    /// <summary>
    /// Begin tie.
    /// </summary>
    public const string ControlBeginTie = "controlBeginTie";
    /// <summary>
    /// End beam.
    /// </summary>
    public const string ControlEndBeam = "controlEndBeam";
    /// <summary>
    /// End phrase.
    /// </summary>
    public const string ControlEndPhrase = "controlEndPhrase";
    /// <summary>
    /// End slur.
    /// </summary>
    public const string ControlEndSlur = "controlEndSlur";
    /// <summary>
    /// End tie.
    /// </summary>
    public const string ControlEndTie = "controlEndTie";
    /// <summary>
    /// Double flat.
    /// </summary>
    public const string CsymAccidentalDoubleFlat = "csymAccidentalDoubleFlat";
    /// <summary>
    /// Double sharp.
    /// </summary>
    public const string CsymAccidentalDoubleSharp = "csymAccidentalDoubleSharp";
    /// <summary>
    /// Flat.
    /// </summary>
    public const string CsymAccidentalFlat = "csymAccidentalFlat";
    /// <summary>
    /// Natural.
    /// </summary>
    public const string CsymAccidentalNatural = "csymAccidentalNatural";
    /// <summary>
    /// Sharp.
    /// </summary>
    public const string CsymAccidentalSharp = "csymAccidentalSharp";
    /// <summary>
    /// Triple flat.
    /// </summary>
    public const string CsymAccidentalTripleFlat = "csymAccidentalTripleFlat";
    /// <summary>
    /// Triple sharp.
    /// </summary>
    public const string CsymAccidentalTripleSharp = "csymAccidentalTripleSharp";
    /// <summary>
    /// Slash for altered bass note.
    /// </summary>
    public const string CsymAlteredBassSlash = "csymAlteredBassSlash";
    /// <summary>
    /// Augmented.
    /// </summary>
    public const string CsymAugmented = "csymAugmented";
    /// <summary>
    /// Double-height left bracket.
    /// </summary>
    public const string CsymBracketLeftTall = "csymBracketLeftTall";
    /// <summary>
    /// Double-height right bracket.
    /// </summary>
    public const string CsymBracketRightTall = "csymBracketRightTall";
    /// <summary>
    /// Slash for chord symbols arranged diagonally.
    /// </summary>
    public const string CsymDiagonalArrangementSlash = "csymDiagonalArrangementSlash";
    /// <summary>
    /// Diminished.
    /// </summary>
    public const string CsymDiminished = "csymDiminished";
    /// <summary>
    /// Half-diminished.
    /// </summary>
    public const string CsymHalfDiminished = "csymHalfDiminished";
    /// <summary>
    /// Major seventh.
    /// </summary>
    public const string CsymMajorSeventh = "csymMajorSeventh";
    /// <summary>
    /// Minor.
    /// </summary>
    public const string CsymMinor = "csymMinor";
    /// <summary>
    /// Double-height left parenthesis.
    /// </summary>
    public const string CsymParensLeftTall = "csymParensLeftTall";
    /// <summary>
    /// Triple-height left parenthesis.
    /// </summary>
    public const string CsymParensLeftVeryTall = "csymParensLeftVeryTall";
    /// <summary>
    /// Double-height right parenthesis.
    /// </summary>
    public const string CsymParensRightTall = "csymParensRightTall";
    /// <summary>
    /// Triple-height right parenthesis.
    /// </summary>
    public const string CsymParensRightVeryTall = "csymParensRightVeryTall";
    /// <summary>
    /// Curlew (Britten).
    /// </summary>
    public const string CurlewSign = "curlewSign";
    /// <summary>
    /// Da capo.
    /// </summary>
    public const string DaCapo = "daCapo";
    /// <summary>
    /// Dal segno.
    /// </summary>
    public const string DalSegno = "dalSegno";
    /// <summary>
    /// Daseian excellentes 1.
    /// </summary>
    public const string DaseianExcellentes1 = "daseianExcellentes1";
    /// <summary>
    /// Daseian excellentes 2.
    /// </summary>
    public const string DaseianExcellentes2 = "daseianExcellentes2";
    /// <summary>
    /// Daseian excellentes 3.
    /// </summary>
    public const string DaseianExcellentes3 = "daseianExcellentes3";
    /// <summary>
    /// Daseian excellentes 4.
    /// </summary>
    public const string DaseianExcellentes4 = "daseianExcellentes4";
    /// <summary>
    /// Daseian finales 1.
    /// </summary>
    public const string DaseianFinales1 = "daseianFinales1";
    /// <summary>
    /// Daseian finales 2.
    /// </summary>
    public const string DaseianFinales2 = "daseianFinales2";
    /// <summary>
    /// Daseian finales 3.
    /// </summary>
    public const string DaseianFinales3 = "daseianFinales3";
    /// <summary>
    /// Daseian finales 4.
    /// </summary>
    public const string DaseianFinales4 = "daseianFinales4";
    /// <summary>
    /// Daseian graves 1.
    /// </summary>
    public const string DaseianGraves1 = "daseianGraves1";
    /// <summary>
    /// Daseian graves 2.
    /// </summary>
    public const string DaseianGraves2 = "daseianGraves2";
    /// <summary>
    /// Daseian graves 3.
    /// </summary>
    public const string DaseianGraves3 = "daseianGraves3";
    /// <summary>
    /// Daseian graves 4.
    /// </summary>
    public const string DaseianGraves4 = "daseianGraves4";
    /// <summary>
    /// Daseian residua 1.
    /// </summary>
    public const string DaseianResidua1 = "daseianResidua1";
    /// <summary>
    /// Daseian residua 2.
    /// </summary>
    public const string DaseianResidua2 = "daseianResidua2";
    /// <summary>
    /// Daseian superiores 1.
    /// </summary>
    public const string DaseianSuperiores1 = "daseianSuperiores1";
    /// <summary>
    /// Daseian superiores 2.
    /// </summary>
    public const string DaseianSuperiores2 = "daseianSuperiores2";
    /// <summary>
    /// Daseian superiores 3.
    /// </summary>
    public const string DaseianSuperiores3 = "daseianSuperiores3";
    /// <summary>
    /// Daseian superiores 4.
    /// </summary>
    public const string DaseianSuperiores4 = "daseianSuperiores4";
    /// <summary>
    /// Double lateral roll (Stevens).
    /// </summary>
    public const string DoubleLateralRollStevens = "doubleLateralRollStevens";
    /// <summary>
    /// Double-tongue above.
    /// </summary>
    public const string DoubleTongueAbove = "doubleTongueAbove";
    /// <summary>
    /// Double-tongue below.
    /// </summary>
    public const string DoubleTongueBelow = "doubleTongueBelow";
    /// <summary>
    /// Colon separator for combined dynamics.
    /// </summary>
    public const string DynamicCombinedSeparatorColon = "dynamicCombinedSeparatorColon";
    /// <summary>
    /// Hyphen separator for combined dynamics.
    /// </summary>
    public const string DynamicCombinedSeparatorHyphen = "dynamicCombinedSeparatorHyphen";
    /// <summary>
    /// Slash separator for combined dynamics.
    /// </summary>
    public const string DynamicCombinedSeparatorSlash = "dynamicCombinedSeparatorSlash";
    /// <summary>
    /// Space separator for combined dynamics.
    /// </summary>
    public const string DynamicCombinedSeparatorSpace = "dynamicCombinedSeparatorSpace";
    /// <summary>
    /// Crescendo.
    /// </summary>
    public const string DynamicCrescendoHairpin = "dynamicCrescendoHairpin";
    /// <summary>
    /// Diminuendo.
    /// </summary>
    public const string DynamicDiminuendoHairpin = "dynamicDiminuendoHairpin";
    /// <summary>
    /// ff.
    /// </summary>
    public const string DynamicFF = "dynamicFF";
    /// <summary>
    /// fff.
    /// </summary>
    public const string DynamicFFF = "dynamicFFF";
    /// <summary>
    /// ffff.
    /// </summary>
    public const string DynamicFFFF = "dynamicFFFF";
    /// <summary>
    /// fffff.
    /// </summary>
    public const string DynamicFFFFF = "dynamicFFFFF";
    /// <summary>
    /// ffffff.
    /// </summary>
    public const string DynamicFFFFFF = "dynamicFFFFFF";
    /// <summary>
    /// Forte.
    /// </summary>
    public const string DynamicForte = "dynamicForte";
    /// <summary>
    /// Forte-piano.
    /// </summary>
    public const string DynamicFortePiano = "dynamicFortePiano";
    /// <summary>
    /// Forzando.
    /// </summary>
    public const string DynamicForzando = "dynamicForzando";
    /// <summary>
    /// Left bracket (for hairpins).
    /// </summary>
    public const string DynamicHairpinBracketLeft = "dynamicHairpinBracketLeft";
    /// <summary>
    /// Right bracket (for hairpins).
    /// </summary>
    public const string DynamicHairpinBracketRight = "dynamicHairpinBracketRight";
    /// <summary>
    /// Left parenthesis (for hairpins).
    /// </summary>
    public const string DynamicHairpinParenthesisLeft = "dynamicHairpinParenthesisLeft";
    /// <summary>
    /// Right parenthesis (for hairpins).
    /// </summary>
    public const string DynamicHairpinParenthesisRight = "dynamicHairpinParenthesisRight";
    /// <summary>
    /// mf.
    /// </summary>
    public const string DynamicMF = "dynamicMF";
    /// <summary>
    /// mp.
    /// </summary>
    public const string DynamicMP = "dynamicMP";
    /// <summary>
    /// Messa di voce.
    /// </summary>
    public const string DynamicMessaDiVoce = "dynamicMessaDiVoce";
    /// <summary>
    /// Mezzo.
    /// </summary>
    public const string DynamicMezzo = "dynamicMezzo";
    /// <summary>
    /// Niente.
    /// </summary>
    public const string DynamicNiente = "dynamicNiente";
    /// <summary>
    /// Niente (for hairpins).
    /// </summary>
    public const string DynamicNienteForHairpin = "dynamicNienteForHairpin";
    /// <summary>
    /// pf.
    /// </summary>
    public const string DynamicPF = "dynamicPF";
    /// <summary>
    /// pp.
    /// </summary>
    public const string DynamicPP = "dynamicPP";
    /// <summary>
    /// ppp.
    /// </summary>
    public const string DynamicPPP = "dynamicPPP";
    /// <summary>
    /// pppp.
    /// </summary>
    public const string DynamicPPPP = "dynamicPPPP";
    /// <summary>
    /// ppppp.
    /// </summary>
    public const string DynamicPPPPP = "dynamicPPPPP";
    /// <summary>
    /// pppppp.
    /// </summary>
    public const string DynamicPPPPPP = "dynamicPPPPPP";
    /// <summary>
    /// Piano.
    /// </summary>
    public const string DynamicPiano = "dynamicPiano";
    /// <summary>
    /// Rinforzando.
    /// </summary>
    public const string DynamicRinforzando = "dynamicRinforzando";
    /// <summary>
    /// Rinforzando 1.
    /// </summary>
    public const string DynamicRinforzando1 = "dynamicRinforzando1";
    /// <summary>
    /// Rinforzando 2.
    /// </summary>
    public const string DynamicRinforzando2 = "dynamicRinforzando2";
    /// <summary>
    /// Sforzando.
    /// </summary>
    public const string DynamicSforzando = "dynamicSforzando";
    /// <summary>
    /// Sforzando 1.
    /// </summary>
    public const string DynamicSforzando1 = "dynamicSforzando1";
    /// <summary>
    /// Sforzando-pianissimo.
    /// </summary>
    public const string DynamicSforzandoPianissimo = "dynamicSforzandoPianissimo";
    /// <summary>
    /// Sforzando-piano.
    /// </summary>
    public const string DynamicSforzandoPiano = "dynamicSforzandoPiano";
    /// <summary>
    /// Sforzato.
    /// </summary>
    public const string DynamicSforzato = "dynamicSforzato";
    /// <summary>
    /// Sforzatissimo.
    /// </summary>
    public const string DynamicSforzatoFF = "dynamicSforzatoFF";
    /// <summary>
    /// Sforzato-piano.
    /// </summary>
    public const string DynamicSforzatoPiano = "dynamicSforzatoPiano";
    /// <summary>
    /// Z.
    /// </summary>
    public const string DynamicZ = "dynamicZ";
    /// <summary>
    /// Eight channels (7.1 surround).
    /// </summary>
    public const string ElecAudioChannelsEight = "elecAudioChannelsEight";
    /// <summary>
    /// Five channels.
    /// </summary>
    public const string ElecAudioChannelsFive = "elecAudioChannelsFive";
    /// <summary>
    /// Four channels.
    /// </summary>
    public const string ElecAudioChannelsFour = "elecAudioChannelsFour";
    /// <summary>
    /// One channel (mono).
    /// </summary>
    public const string ElecAudioChannelsOne = "elecAudioChannelsOne";
    /// <summary>
    /// Seven channels.
    /// </summary>
    public const string ElecAudioChannelsSeven = "elecAudioChannelsSeven";
    /// <summary>
    /// Six channels (5.1 surround).
    /// </summary>
    public const string ElecAudioChannelsSix = "elecAudioChannelsSix";
    /// <summary>
    /// Three channels (frontal).
    /// </summary>
    public const string ElecAudioChannelsThreeFrontal = "elecAudioChannelsThreeFrontal";
    /// <summary>
    /// Three channels (surround).
    /// </summary>
    public const string ElecAudioChannelsThreeSurround = "elecAudioChannelsThreeSurround";
    /// <summary>
    /// Two channels (stereo).
    /// </summary>
    public const string ElecAudioChannelsTwo = "elecAudioChannelsTwo";
    /// <summary>
    /// Audio in.
    /// </summary>
    public const string ElecAudioIn = "elecAudioIn";
    /// <summary>
    /// Mono audio setup.
    /// </summary>
    public const string ElecAudioMono = "elecAudioMono";
    /// <summary>
    /// Audio out.
    /// </summary>
    public const string ElecAudioOut = "elecAudioOut";
    /// <summary>
    /// Stereo audio setup.
    /// </summary>
    public const string ElecAudioStereo = "elecAudioStereo";
    /// <summary>
    /// Camera.
    /// </summary>
    public const string ElecCamera = "elecCamera";
    /// <summary>
    /// Data in.
    /// </summary>
    public const string ElecDataIn = "elecDataIn";
    /// <summary>
    /// Data out.
    /// </summary>
    public const string ElecDataOut = "elecDataOut";
    /// <summary>
    /// Disc.
    /// </summary>
    public const string ElecDisc = "elecDisc";
    /// <summary>
    /// Download.
    /// </summary>
    public const string ElecDownload = "elecDownload";
    /// <summary>
    /// Eject.
    /// </summary>
    public const string ElecEject = "elecEject";
    /// <summary>
    /// Fast-forward.
    /// </summary>
    public const string ElecFastForward = "elecFastForward";
    /// <summary>
    /// Headphones.
    /// </summary>
    public const string ElecHeadphones = "elecHeadphones";
    /// <summary>
    /// Headset.
    /// </summary>
    public const string ElecHeadset = "elecHeadset";
    /// <summary>
    /// Line in.
    /// </summary>
    public const string ElecLineIn = "elecLineIn";
    /// <summary>
    /// Line out.
    /// </summary>
    public const string ElecLineOut = "elecLineOut";
    /// <summary>
    /// Loop.
    /// </summary>
    public const string ElecLoop = "elecLoop";
    /// <summary>
    /// Loudspeaker.
    /// </summary>
    public const string ElecLoudspeaker = "elecLoudspeaker";
    /// <summary>
    /// MIDI controller 0%.
    /// </summary>
    public const string ElecMIDIController0 = "elecMIDIController0";
    /// <summary>
    /// MIDI controller 100%.
    /// </summary>
    public const string ElecMIDIController100 = "elecMIDIController100";
    /// <summary>
    /// MIDI controller 20%.
    /// </summary>
    public const string ElecMIDIController20 = "elecMIDIController20";
    /// <summary>
    /// MIDI controller 40%.
    /// </summary>
    public const string ElecMIDIController40 = "elecMIDIController40";
    /// <summary>
    /// MIDI controller 60%.
    /// </summary>
    public const string ElecMIDIController60 = "elecMIDIController60";
    /// <summary>
    /// MIDI controller 80%.
    /// </summary>
    public const string ElecMIDIController80 = "elecMIDIController80";
    /// <summary>
    /// MIDI in.
    /// </summary>
    public const string ElecMIDIIn = "elecMIDIIn";
    /// <summary>
    /// MIDI out.
    /// </summary>
    public const string ElecMIDIOut = "elecMIDIOut";
    /// <summary>
    /// Microphone.
    /// </summary>
    public const string ElecMicrophone = "elecMicrophone";
    /// <summary>
    /// Mute microphone.
    /// </summary>
    public const string ElecMicrophoneMute = "elecMicrophoneMute";
    /// <summary>
    /// Unmute microphone.
    /// </summary>
    public const string ElecMicrophoneUnmute = "elecMicrophoneUnmute";
    /// <summary>
    /// Mixing console.
    /// </summary>
    public const string ElecMixingConsole = "elecMixingConsole";
    /// <summary>
    /// Monitor.
    /// </summary>
    public const string ElecMonitor = "elecMonitor";
    /// <summary>
    /// Mute.
    /// </summary>
    public const string ElecMute = "elecMute";
    /// <summary>
    /// Pause.
    /// </summary>
    public const string ElecPause = "elecPause";
    /// <summary>
    /// Play.
    /// </summary>
    public const string ElecPlay = "elecPlay";
    /// <summary>
    /// Power on/off.
    /// </summary>
    public const string ElecPowerOnOff = "elecPowerOnOff";
    /// <summary>
    /// Projector.
    /// </summary>
    public const string ElecProjector = "elecProjector";
    /// <summary>
    /// Replay.
    /// </summary>
    public const string ElecReplay = "elecReplay";
    /// <summary>
    /// Rewind.
    /// </summary>
    public const string ElecRewind = "elecRewind";
    /// <summary>
    /// Shuffle.
    /// </summary>
    public const string ElecShuffle = "elecShuffle";
    /// <summary>
    /// Skip backwards.
    /// </summary>
    public const string ElecSkipBackwards = "elecSkipBackwards";
    /// <summary>
    /// Skip forwards.
    /// </summary>
    public const string ElecSkipForwards = "elecSkipForwards";
    /// <summary>
    /// Stop.
    /// </summary>
    public const string ElecStop = "elecStop";
    /// <summary>
    /// Tape.
    /// </summary>
    public const string ElecTape = "elecTape";
    /// <summary>
    /// USB connection.
    /// </summary>
    public const string ElecUSB = "elecUSB";
    /// <summary>
    /// Unmute.
    /// </summary>
    public const string ElecUnmute = "elecUnmute";
    /// <summary>
    /// Upload.
    /// </summary>
    public const string ElecUpload = "elecUpload";
    /// <summary>
    /// Video camera.
    /// </summary>
    public const string ElecVideoCamera = "elecVideoCamera";
    /// <summary>
    /// Video in.
    /// </summary>
    public const string ElecVideoIn = "elecVideoIn";
    /// <summary>
    /// Video out.
    /// </summary>
    public const string ElecVideoOut = "elecVideoOut";
    /// <summary>
    /// Combining volume fader.
    /// </summary>
    public const string ElecVolumeFader = "elecVolumeFader";
    /// <summary>
    /// Combining volume fader thumb.
    /// </summary>
    public const string ElecVolumeFaderThumb = "elecVolumeFaderThumb";
    /// <summary>
    /// Volume level 0%.
    /// </summary>
    public const string ElecVolumeLevel0 = "elecVolumeLevel0";
    /// <summary>
    /// Volume level 100%.
    /// </summary>
    public const string ElecVolumeLevel100 = "elecVolumeLevel100";
    /// <summary>
    /// Volume level 20%.
    /// </summary>
    public const string ElecVolumeLevel20 = "elecVolumeLevel20";
    /// <summary>
    /// Volume level 40%.
    /// </summary>
    public const string ElecVolumeLevel40 = "elecVolumeLevel40";
    /// <summary>
    /// Volume level 60%.
    /// </summary>
    public const string ElecVolumeLevel60 = "elecVolumeLevel60";
    /// <summary>
    /// Volume level 80%.
    /// </summary>
    public const string ElecVolumeLevel80 = "elecVolumeLevel80";
    /// <summary>
    /// F clef.
    /// </summary>
    public const string FClef = "fClef";
    /// <summary>
    /// F clef quindicesima alta.
    /// </summary>
    public const string FClef15ma = "fClef15ma";
    /// <summary>
    /// F clef quindicesima bassa.
    /// </summary>
    public const string FClef15mb = "fClef15mb";
    /// <summary>
    /// F clef ottava alta.
    /// </summary>
    public const string FClef8va = "fClef8va";
    /// <summary>
    /// F clef ottava bassa.
    /// </summary>
    public const string FClef8vb = "fClef8vb";
    /// <summary>
    /// F clef, arrow down.
    /// </summary>
    public const string FClefArrowDown = "fClefArrowDown";
    /// <summary>
    /// F clef, arrow up.
    /// </summary>
    public const string FClefArrowUp = "fClefArrowUp";
    /// <summary>
    /// F clef change.
    /// </summary>
    public const string FClefChange = "fClefChange";
    /// <summary>
    /// Reversed F clef.
    /// </summary>
    public const string FClefReversed = "fClefReversed";
    /// <summary>
    /// Turned F clef.
    /// </summary>
    public const string FClefTurned = "fClefTurned";
    /// <summary>
    /// Fermata above.
    /// </summary>
    public const string FermataAbove = "fermataAbove";
    /// <summary>
    /// Fermata below.
    /// </summary>
    public const string FermataBelow = "fermataBelow";
    /// <summary>
    /// Long fermata above.
    /// </summary>
    public const string FermataLongAbove = "fermataLongAbove";
    /// <summary>
    /// Long fermata below.
    /// </summary>
    public const string FermataLongBelow = "fermataLongBelow";
    /// <summary>
    /// Long fermata (Henze) above.
    /// </summary>
    public const string FermataLongHenzeAbove = "fermataLongHenzeAbove";
    /// <summary>
    /// Long fermata (Henze) below.
    /// </summary>
    public const string FermataLongHenzeBelow = "fermataLongHenzeBelow";
    /// <summary>
    /// Short fermata above.
    /// </summary>
    public const string FermataShortAbove = "fermataShortAbove";
    /// <summary>
    /// Short fermata below.
    /// </summary>
    public const string FermataShortBelow = "fermataShortBelow";
    /// <summary>
    /// Short fermata (Henze) above.
    /// </summary>
    public const string FermataShortHenzeAbove = "fermataShortHenzeAbove";
    /// <summary>
    /// Short fermata (Henze) below.
    /// </summary>
    public const string FermataShortHenzeBelow = "fermataShortHenzeBelow";
    /// <summary>
    /// Very long fermata above.
    /// </summary>
    public const string FermataVeryLongAbove = "fermataVeryLongAbove";
    /// <summary>
    /// Very long fermata below.
    /// </summary>
    public const string FermataVeryLongBelow = "fermataVeryLongBelow";
    /// <summary>
    /// Very short fermata above.
    /// </summary>
    public const string FermataVeryShortAbove = "fermataVeryShortAbove";
    /// <summary>
    /// Very short fermata below.
    /// </summary>
    public const string FermataVeryShortBelow = "fermataVeryShortBelow";
    /// <summary>
    /// Figured bass 0.
    /// </summary>
    public const string Figbass0 = "figbass0";
    /// <summary>
    /// Figured bass 1.
    /// </summary>
    public const string Figbass1 = "figbass1";
    /// <summary>
    /// Figured bass 2.
    /// </summary>
    public const string Figbass2 = "figbass2";
    /// <summary>
    /// Figured bass 2 raised by half-step.
    /// </summary>
    public const string Figbass2Raised = "figbass2Raised";
    /// <summary>
    /// Figured bass 3.
    /// </summary>
    public const string Figbass3 = "figbass3";
    /// <summary>
    /// Figured bass 4.
    /// </summary>
    public const string Figbass4 = "figbass4";
    /// <summary>
    /// Figured bass 4 raised by half-step.
    /// </summary>
    public const string Figbass4Raised = "figbass4Raised";
    /// <summary>
    /// Figured bass 5.
    /// </summary>
    public const string Figbass5 = "figbass5";
    /// <summary>
    /// Figured bass 5 raised by half-step.
    /// </summary>
    public const string Figbass5Raised1 = "figbass5Raised1";
    /// <summary>
    /// Figured bass 5 raised by half-step 2.
    /// </summary>
    public const string Figbass5Raised2 = "figbass5Raised2";
    /// <summary>
    /// Figured bass diminished 5.
    /// </summary>
    public const string Figbass5Raised3 = "figbass5Raised3";
    /// <summary>
    /// Figured bass 6.
    /// </summary>
    public const string Figbass6 = "figbass6";
    /// <summary>
    /// Figured bass 6 raised by half-step.
    /// </summary>
    public const string Figbass6Raised = "figbass6Raised";
    /// <summary>
    /// Figured bass 6 raised by half-step 2.
    /// </summary>
    public const string Figbass6Raised2 = "figbass6Raised2";
    /// <summary>
    /// Figured bass 7.
    /// </summary>
    public const string Figbass7 = "figbass7";
    /// <summary>
    /// Figured bass 7 diminished.
    /// </summary>
    public const string Figbass7Diminished = "figbass7Diminished";
    /// <summary>
    /// Figured bass 7 raised by half-step.
    /// </summary>
    public const string Figbass7Raised1 = "figbass7Raised1";
    /// <summary>
    /// Figured bass 7 lowered by a half-step.
    /// </summary>
    public const string Figbass7Raised2 = "figbass7Raised2";
    /// <summary>
    /// Figured bass 8.
    /// </summary>
    public const string Figbass8 = "figbass8";
    /// <summary>
    /// Figured bass 9.
    /// </summary>
    public const string Figbass9 = "figbass9";
    /// <summary>
    /// Figured bass 9 raised by half-step.
    /// </summary>
    public const string Figbass9Raised = "figbass9Raised";
    /// <summary>
    /// Figured bass [.
    /// </summary>
    public const string FigbassBracketLeft = "figbassBracketLeft";
    /// <summary>
    /// Figured bass ].
    /// </summary>
    public const string FigbassBracketRight = "figbassBracketRight";
    /// <summary>
    /// Combining lower.
    /// </summary>
    public const string FigbassCombiningLowering = "figbassCombiningLowering";
    /// <summary>
    /// Combining raise.
    /// </summary>
    public const string FigbassCombiningRaising = "figbassCombiningRaising";
    /// <summary>
    /// Figured bass double flat.
    /// </summary>
    public const string FigbassDoubleFlat = "figbassDoubleFlat";
    /// <summary>
    /// Figured bass double sharp.
    /// </summary>
    public const string FigbassDoubleSharp = "figbassDoubleSharp";
    /// <summary>
    /// Figured bass flat.
    /// </summary>
    public const string FigbassFlat = "figbassFlat";
    /// <summary>
    /// Figured bass natural.
    /// </summary>
    public const string FigbassNatural = "figbassNatural";
    /// <summary>
    /// Figured bass (.
    /// </summary>
    public const string FigbassParensLeft = "figbassParensLeft";
    /// <summary>
    /// Figured bass ).
    /// </summary>
    public const string FigbassParensRight = "figbassParensRight";
    /// <summary>
    /// Figured bass +.
    /// </summary>
    public const string FigbassPlus = "figbassPlus";
    /// <summary>
    /// Figured bass sharp.
    /// </summary>
    public const string FigbassSharp = "figbassSharp";
    /// <summary>
    /// Figured bass triple flat.
    /// </summary>
    public const string FigbassTripleFlat = "figbassTripleFlat";
    /// <summary>
    /// Figured bass triple sharp.
    /// </summary>
    public const string FigbassTripleSharp = "figbassTripleSharp";
    /// <summary>
    /// Fingering 0 (open string).
    /// </summary>
    public const string Fingering0 = "fingering0";
    /// <summary>
    /// Fingering 0 italic (open string).
    /// </summary>
    public const string Fingering0Italic = "fingering0Italic";
    /// <summary>
    /// Fingering 1 (thumb).
    /// </summary>
    public const string Fingering1 = "fingering1";
    /// <summary>
    /// Fingering 1 italic (thumb).
    /// </summary>
    public const string Fingering1Italic = "fingering1Italic";
    /// <summary>
    /// Fingering 2 (index finger).
    /// </summary>
    public const string Fingering2 = "fingering2";
    /// <summary>
    /// Fingering 2 italic (index finger).
    /// </summary>
    public const string Fingering2Italic = "fingering2Italic";
    /// <summary>
    /// Fingering 3 (middle finger).
    /// </summary>
    public const string Fingering3 = "fingering3";
    /// <summary>
    /// Fingering 3 italic (middle finger).
    /// </summary>
    public const string Fingering3Italic = "fingering3Italic";
    /// <summary>
    /// Fingering 4 (ring finger).
    /// </summary>
    public const string Fingering4 = "fingering4";
    /// <summary>
    /// Fingering 4 italic (ring finger).
    /// </summary>
    public const string Fingering4Italic = "fingering4Italic";
    /// <summary>
    /// Fingering 5 (little finger).
    /// </summary>
    public const string Fingering5 = "fingering5";
    /// <summary>
    /// Fingering 5 italic (little finger).
    /// </summary>
    public const string Fingering5Italic = "fingering5Italic";
    /// <summary>
    /// Fingering 6.
    /// </summary>
    public const string Fingering6 = "fingering6";
    /// <summary>
    /// Fingering 6 italic.
    /// </summary>
    public const string Fingering6Italic = "fingering6Italic";
    /// <summary>
    /// Fingering 7.
    /// </summary>
    public const string Fingering7 = "fingering7";
    /// <summary>
    /// Fingering 7 italic.
    /// </summary>
    public const string Fingering7Italic = "fingering7Italic";
    /// <summary>
    /// Fingering 8.
    /// </summary>
    public const string Fingering8 = "fingering8";
    /// <summary>
    /// Fingering 8 italic.
    /// </summary>
    public const string Fingering8Italic = "fingering8Italic";
    /// <summary>
    /// Fingering 9.
    /// </summary>
    public const string Fingering9 = "fingering9";
    /// <summary>
    /// Fingering 9 italic.
    /// </summary>
    public const string Fingering9Italic = "fingering9Italic";
    /// <summary>
    /// Fingering a (anular; right-hand ring finger for guitar).
    /// </summary>
    public const string FingeringALower = "fingeringALower";
    /// <summary>
    /// Fingering c (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringCLower = "fingeringCLower";
    /// <summary>
    /// Fingering e (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringELower = "fingeringELower";
    /// <summary>
    /// Fingering i (indicio; right-hand index finger for guitar).
    /// </summary>
    public const string FingeringILower = "fingeringILower";
    /// <summary>
    /// Fingering left bracket.
    /// </summary>
    public const string FingeringLeftBracket = "fingeringLeftBracket";
    /// <summary>
    /// Fingering left bracket italic.
    /// </summary>
    public const string FingeringLeftBracketItalic = "fingeringLeftBracketItalic";
    /// <summary>
    /// Fingering left parenthesis.
    /// </summary>
    public const string FingeringLeftParenthesis = "fingeringLeftParenthesis";
    /// <summary>
    /// Fingering left parenthesis italic.
    /// </summary>
    public const string FingeringLeftParenthesisItalic = "fingeringLeftParenthesisItalic";
    /// <summary>
    /// Fingering m (medio; right-hand middle finger for guitar).
    /// </summary>
    public const string FingeringMLower = "fingeringMLower";
    /// <summary>
    /// Multiple notes played by thumb or single finger.
    /// </summary>
    public const string FingeringMultipleNotes = "fingeringMultipleNotes";
    /// <summary>
    /// Fingering o (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringOLower = "fingeringOLower";
    /// <summary>
    /// Fingering p (pulgar; right-hand thumb for guitar).
    /// </summary>
    public const string FingeringPLower = "fingeringPLower";
    /// <summary>
    /// Fingering q (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringQLower = "fingeringQLower";
    /// <summary>
    /// Fingering right bracket.
    /// </summary>
    public const string FingeringRightBracket = "fingeringRightBracket";
    /// <summary>
    /// Fingering right bracket italic.
    /// </summary>
    public const string FingeringRightBracketItalic = "fingeringRightBracketItalic";
    /// <summary>
    /// Fingering right parenthesis.
    /// </summary>
    public const string FingeringRightParenthesis = "fingeringRightParenthesis";
    /// <summary>
    /// Fingering right parenthesis italic.
    /// </summary>
    public const string FingeringRightParenthesisItalic = "fingeringRightParenthesisItalic";
    /// <summary>
    /// Fingering s (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringSLower = "fingeringSLower";
    /// <summary>
    /// Fingering middle dot separator.
    /// </summary>
    public const string FingeringSeparatorMiddleDot = "fingeringSeparatorMiddleDot";
    /// <summary>
    /// Fingering white middle dot separator.
    /// </summary>
    public const string FingeringSeparatorMiddleDotWhite = "fingeringSeparatorMiddleDotWhite";
    /// <summary>
    /// Fingering forward slash separator.
    /// </summary>
    public const string FingeringSeparatorSlash = "fingeringSeparatorSlash";
    /// <summary>
    /// Finger substitution above.
    /// </summary>
    public const string FingeringSubstitutionAbove = "fingeringSubstitutionAbove";
    /// <summary>
    /// Finger substitution below.
    /// </summary>
    public const string FingeringSubstitutionBelow = "fingeringSubstitutionBelow";
    /// <summary>
    /// Finger substitution dash.
    /// </summary>
    public const string FingeringSubstitutionDash = "fingeringSubstitutionDash";
    /// <summary>
    /// Fingering t (right-hand thumb for guitar).
    /// </summary>
    public const string FingeringTLower = "fingeringTLower";
    /// <summary>
    /// Fingering T (left-hand thumb for guitar).
    /// </summary>
    public const string FingeringTUpper = "fingeringTUpper";
    /// <summary>
    /// Fingering x (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringXLower = "fingeringXLower";
    /// <summary>
    /// Combining flag 8 (1024th) below.
    /// </summary>
    public const string Flag1024thDown = "flag1024thDown";
    /// <summary>
    /// Combining flag 8 (1024th) above.
    /// </summary>
    public const string Flag1024thUp = "flag1024thUp";
    /// <summary>
    /// Combining flag 5 (128th) below.
    /// </summary>
    public const string Flag128thDown = "flag128thDown";
    /// <summary>
    /// Combining flag 5 (128th) above.
    /// </summary>
    public const string Flag128thUp = "flag128thUp";
    /// <summary>
    /// Combining flag 2 (16th) below.
    /// </summary>
    public const string Flag16thDown = "flag16thDown";
    /// <summary>
    /// Combining flag 2 (16th) above.
    /// </summary>
    public const string Flag16thUp = "flag16thUp";
    /// <summary>
    /// Combining flag 6 (256th) below.
    /// </summary>
    public const string Flag256thDown = "flag256thDown";
    /// <summary>
    /// Combining flag 6 (256th) above.
    /// </summary>
    public const string Flag256thUp = "flag256thUp";
    /// <summary>
    /// Combining flag 3 (32nd) below.
    /// </summary>
    public const string Flag32ndDown = "flag32ndDown";
    /// <summary>
    /// Combining flag 3 (32nd) above.
    /// </summary>
    public const string Flag32ndUp = "flag32ndUp";
    /// <summary>
    /// Combining flag 7 (512th) below.
    /// </summary>
    public const string Flag512thDown = "flag512thDown";
    /// <summary>
    /// Combining flag 7 (512th) above.
    /// </summary>
    public const string Flag512thUp = "flag512thUp";
    /// <summary>
    /// Combining flag 4 (64th) below.
    /// </summary>
    public const string Flag64thDown = "flag64thDown";
    /// <summary>
    /// Combining flag 4 (64th) above.
    /// </summary>
    public const string Flag64thUp = "flag64thUp";
    /// <summary>
    /// Combining flag 1 (8th) below.
    /// </summary>
    public const string Flag8thDown = "flag8thDown";
    /// <summary>
    /// Combining flag 1 (8th) above.
    /// </summary>
    public const string Flag8thUp = "flag8thUp";
    /// <summary>
    /// Internal combining flag below.
    /// </summary>
    public const string FlagInternalDown = "flagInternalDown";
    /// <summary>
    /// Internal combining flag above.
    /// </summary>
    public const string FlagInternalUp = "flagInternalUp";
    /// <summary>
    /// 3-string fretboard.
    /// </summary>
    public const string Fretboard3String = "fretboard3String";
    /// <summary>
    /// 3-string fretboard at nut.
    /// </summary>
    public const string Fretboard3StringNut = "fretboard3StringNut";
    /// <summary>
    /// 4-string fretboard.
    /// </summary>
    public const string Fretboard4String = "fretboard4String";
    /// <summary>
    /// 4-string fretboard at nut.
    /// </summary>
    public const string Fretboard4StringNut = "fretboard4StringNut";
    /// <summary>
    /// 5-string fretboard.
    /// </summary>
    public const string Fretboard5String = "fretboard5String";
    /// <summary>
    /// 5-string fretboard at nut.
    /// </summary>
    public const string Fretboard5StringNut = "fretboard5StringNut";
    /// <summary>
    /// 6-string fretboard.
    /// </summary>
    public const string Fretboard6String = "fretboard6String";
    /// <summary>
    /// 6-string fretboard at nut.
    /// </summary>
    public const string Fretboard6StringNut = "fretboard6StringNut";
    /// <summary>
    /// Fingered fret (filled circle).
    /// </summary>
    public const string FretboardFilledCircle = "fretboardFilledCircle";
    /// <summary>
    /// Open string (O).
    /// </summary>
    public const string FretboardO = "fretboardO";
    /// <summary>
    /// String not played (X).
    /// </summary>
    public const string FretboardX = "fretboardX";
    /// <summary>
    /// Function theory angle bracket left.
    /// </summary>
    public const string FunctionAngleLeft = "functionAngleLeft";
    /// <summary>
    /// Function theory angle bracket right.
    /// </summary>
    public const string FunctionAngleRight = "functionAngleRight";
    /// <summary>
    /// Function theory bracket left.
    /// </summary>
    public const string FunctionBracketLeft = "functionBracketLeft";
    /// <summary>
    /// Function theory bracket right.
    /// </summary>
    public const string FunctionBracketRight = "functionBracketRight";
    /// <summary>
    /// Function theory dominant of dominant.
    /// </summary>
    public const string FunctionDD = "functionDD";
    /// <summary>
    /// Function theory minor dominant.
    /// </summary>
    public const string FunctionDLower = "functionDLower";
    /// <summary>
    /// Function theory major dominant.
    /// </summary>
    public const string FunctionDUpper = "functionDUpper";
    /// <summary>
    /// Function theory 8.
    /// </summary>
    public const string FunctionEight = "functionEight";
    /// <summary>
    /// Function theory F.
    /// </summary>
    public const string FunctionFUpper = "functionFUpper";
    /// <summary>
    /// Function theory 5.
    /// </summary>
    public const string FunctionFive = "functionFive";
    /// <summary>
    /// Function theory 4.
    /// </summary>
    public const string FunctionFour = "functionFour";
    /// <summary>
    /// Function theory g.
    /// </summary>
    public const string FunctionGLower = "functionGLower";
    /// <summary>
    /// Function theory G.
    /// </summary>
    public const string FunctionGUpper = "functionGUpper";
    /// <summary>
    /// Function theory greater than.
    /// </summary>
    public const string FunctionGreaterThan = "functionGreaterThan";
    /// <summary>
    /// Function theory i.
    /// </summary>
    public const string FunctionILower = "functionILower";
    /// <summary>
    /// Function theory I.
    /// </summary>
    public const string FunctionIUpper = "functionIUpper";
    /// <summary>
    /// Function theory k.
    /// </summary>
    public const string FunctionKLower = "functionKLower";
    /// <summary>
    /// Function theory K.
    /// </summary>
    public const string FunctionKUpper = "functionKUpper";
    /// <summary>
    /// Function theory l.
    /// </summary>
    public const string FunctionLLower = "functionLLower";
    /// <summary>
    /// Function theory L.
    /// </summary>
    public const string FunctionLUpper = "functionLUpper";
    /// <summary>
    /// Function theory less than.
    /// </summary>
    public const string FunctionLessThan = "functionLessThan";
    /// <summary>
    /// Function theory m.
    /// </summary>
    public const string FunctionMLower = "functionMLower";
    /// <summary>
    /// Function theory M.
    /// </summary>
    public const string FunctionMUpper = "functionMUpper";
    /// <summary>
    /// Function theory minus.
    /// </summary>
    public const string FunctionMinus = "functionMinus";
    /// <summary>
    /// Function theory n.
    /// </summary>
    public const string FunctionNLower = "functionNLower";
    /// <summary>
    /// Function theory N.
    /// </summary>
    public const string FunctionNUpper = "functionNUpper";
    /// <summary>
    /// Function theory superscript N.
    /// </summary>
    public const string FunctionNUpperSuperscript = "functionNUpperSuperscript";
    /// <summary>
    /// Function theory 9.
    /// </summary>
    public const string FunctionNine = "functionNine";
    /// <summary>
    /// Function theory 1.
    /// </summary>
    public const string FunctionOne = "functionOne";
    /// <summary>
    /// Function theory p.
    /// </summary>
    public const string FunctionPLower = "functionPLower";
    /// <summary>
    /// Function theory P.
    /// </summary>
    public const string FunctionPUpper = "functionPUpper";
    /// <summary>
    /// Function theory parenthesis left.
    /// </summary>
    public const string FunctionParensLeft = "functionParensLeft";
    /// <summary>
    /// Function theory parenthesis right.
    /// </summary>
    public const string FunctionParensRight = "functionParensRight";
    /// <summary>
    /// Function theory prefix plus.
    /// </summary>
    public const string FunctionPlus = "functionPlus";
    /// <summary>
    /// Function theory r.
    /// </summary>
    public const string FunctionRLower = "functionRLower";
    /// <summary>
    /// Function theory repetition 1.
    /// </summary>
    public const string FunctionRepetition1 = "functionRepetition1";
    /// <summary>
    /// Function theory repetition 2.
    /// </summary>
    public const string FunctionRepetition2 = "functionRepetition2";
    /// <summary>
    /// Function theory prefix ring.
    /// </summary>
    public const string FunctionRing = "functionRing";
    /// <summary>
    /// Function theory minor subdominant.
    /// </summary>
    public const string FunctionSLower = "functionSLower";
    /// <summary>
    /// Function theory minor subdominant of subdominant.
    /// </summary>
    public const string FunctionSSLower = "functionSSLower";
    /// <summary>
    /// Function theory major subdominant of subdominant.
    /// </summary>
    public const string FunctionSSUpper = "functionSSUpper";
    /// <summary>
    /// Function theory major subdominant.
    /// </summary>
    public const string FunctionSUpper = "functionSUpper";
    /// <summary>
    /// Function theory 7.
    /// </summary>
    public const string FunctionSeven = "functionSeven";
    /// <summary>
    /// Function theory 6.
    /// </summary>
    public const string FunctionSix = "functionSix";
    /// <summary>
    /// Function theory double dominant seventh.
    /// </summary>
    public const string FunctionSlashedDD = "functionSlashedDD";
    /// <summary>
    /// Function theory minor tonic.
    /// </summary>
    public const string FunctionTLower = "functionTLower";
    /// <summary>
    /// Function theory tonic.
    /// </summary>
    public const string FunctionTUpper = "functionTUpper";
    /// <summary>
    /// Function theory 3.
    /// </summary>
    public const string FunctionThree = "functionThree";
    /// <summary>
    /// Function theory 2.
    /// </summary>
    public const string FunctionTwo = "functionTwo";
    /// <summary>
    /// Function theory v.
    /// </summary>
    public const string FunctionVLower = "functionVLower";
    /// <summary>
    /// Function theory V.
    /// </summary>
    public const string FunctionVUpper = "functionVUpper";
    /// <summary>
    /// Function theory 0.
    /// </summary>
    public const string FunctionZero = "functionZero";
    /// <summary>
    /// G clef.
    /// </summary>
    public const string GClef = "gClef";
    /// <summary>
    /// G clef quindicesima alta.
    /// </summary>
    public const string GClef15ma = "gClef15ma";
    /// <summary>
    /// G clef quindicesima bassa.
    /// </summary>
    public const string GClef15mb = "gClef15mb";
    /// <summary>
    /// G clef ottava alta.
    /// </summary>
    public const string GClef8va = "gClef8va";
    /// <summary>
    /// G clef ottava bassa.
    /// </summary>
    public const string GClef8vb = "gClef8vb";
    /// <summary>
    /// G clef ottava bassa with C clef.
    /// </summary>
    public const string GClef8vbCClef = "gClef8vbCClef";
    /// <summary>
    /// G clef ottava bassa (old style).
    /// </summary>
    public const string GClef8vbOld = "gClef8vbOld";
    /// <summary>
    /// G clef, optionally ottava bassa.
    /// </summary>
    public const string GClef8vbParens = "gClef8vbParens";
    /// <summary>
    /// G clef, arrow down.
    /// </summary>
    public const string GClefArrowDown = "gClefArrowDown";
    /// <summary>
    /// G clef, arrow up.
    /// </summary>
    public const string GClefArrowUp = "gClefArrowUp";
    /// <summary>
    /// G clef change.
    /// </summary>
    public const string GClefChange = "gClefChange";
    /// <summary>
    /// Combining G clef, number above.
    /// </summary>
    public const string GClefLigatedNumberAbove = "gClefLigatedNumberAbove";
    /// <summary>
    /// Combining G clef, number below.
    /// </summary>
    public const string GClefLigatedNumberBelow = "gClefLigatedNumberBelow";
    /// <summary>
    /// Reversed G clef.
    /// </summary>
    public const string GClefReversed = "gClefReversed";
    /// <summary>
    /// Turned G clef.
    /// </summary>
    public const string GClefTurned = "gClefTurned";
    /// <summary>
    /// Glissando down.
    /// </summary>
    public const string GlissandoDown = "glissandoDown";
    /// <summary>
    /// Glissando up.
    /// </summary>
    public const string GlissandoUp = "glissandoUp";
    /// <summary>
    /// Slashed grace note stem down.
    /// </summary>
    public const string GraceNoteAcciaccaturaStemDown = "graceNoteAcciaccaturaStemDown";
    /// <summary>
    /// Slashed grace note stem up.
    /// </summary>
    public const string GraceNoteAcciaccaturaStemUp = "graceNoteAcciaccaturaStemUp";
    /// <summary>
    /// Grace note stem down.
    /// </summary>
    public const string GraceNoteAppoggiaturaStemDown = "graceNoteAppoggiaturaStemDown";
    /// <summary>
    /// Grace note stem up.
    /// </summary>
    public const string GraceNoteAppoggiaturaStemUp = "graceNoteAppoggiaturaStemUp";
    /// <summary>
    /// Slash for stem down grace note.
    /// </summary>
    public const string GraceNoteSlashStemDown = "graceNoteSlashStemDown";
    /// <summary>
    /// Slash for stem up grace note.
    /// </summary>
    public const string GraceNoteSlashStemUp = "graceNoteSlashStemUp";
    /// <summary>
    /// Full barré.
    /// </summary>
    public const string GuitarBarreFull = "guitarBarreFull";
    /// <summary>
    /// Half barré.
    /// </summary>
    public const string GuitarBarreHalf = "guitarBarreHalf";
    /// <summary>
    /// Closed wah/volume pedal.
    /// </summary>
    public const string GuitarClosePedal = "guitarClosePedal";
    /// <summary>
    /// Fade in.
    /// </summary>
    public const string GuitarFadeIn = "guitarFadeIn";
    /// <summary>
    /// Fade out.
    /// </summary>
    public const string GuitarFadeOut = "guitarFadeOut";
    /// <summary>
    /// Golpe (tapping the pick guard).
    /// </summary>
    public const string GuitarGolpe = "guitarGolpe";
    /// <summary>
    /// Half-open wah/volume pedal.
    /// </summary>
    public const string GuitarHalfOpenPedal = "guitarHalfOpenPedal";
    /// <summary>
    /// Left-hand tapping.
    /// </summary>
    public const string GuitarLeftHandTapping = "guitarLeftHandTapping";
    /// <summary>
    /// Open wah/volume pedal.
    /// </summary>
    public const string GuitarOpenPedal = "guitarOpenPedal";
    /// <summary>
    /// Right-hand tapping.
    /// </summary>
    public const string GuitarRightHandTapping = "guitarRightHandTapping";
    /// <summary>
    /// Guitar shake.
    /// </summary>
    public const string GuitarShake = "guitarShake";
    /// <summary>
    /// String number 0.
    /// </summary>
    public const string GuitarString0 = "guitarString0";
    /// <summary>
    /// String number 1.
    /// </summary>
    public const string GuitarString1 = "guitarString1";
    /// <summary>
    /// String number 10.
    /// </summary>
    public const string GuitarString10 = "guitarString10";
    /// <summary>
    /// String number 11.
    /// </summary>
    public const string GuitarString11 = "guitarString11";
    /// <summary>
    /// String number 12.
    /// </summary>
    public const string GuitarString12 = "guitarString12";
    /// <summary>
    /// String number 13.
    /// </summary>
    public const string GuitarString13 = "guitarString13";
    /// <summary>
    /// String number 2.
    /// </summary>
    public const string GuitarString2 = "guitarString2";
    /// <summary>
    /// String number 3.
    /// </summary>
    public const string GuitarString3 = "guitarString3";
    /// <summary>
    /// String number 4.
    /// </summary>
    public const string GuitarString4 = "guitarString4";
    /// <summary>
    /// String number 5.
    /// </summary>
    public const string GuitarString5 = "guitarString5";
    /// <summary>
    /// String number 6.
    /// </summary>
    public const string GuitarString6 = "guitarString6";
    /// <summary>
    /// String number 7.
    /// </summary>
    public const string GuitarString7 = "guitarString7";
    /// <summary>
    /// String number 8.
    /// </summary>
    public const string GuitarString8 = "guitarString8";
    /// <summary>
    /// String number 9.
    /// </summary>
    public const string GuitarString9 = "guitarString9";
    /// <summary>
    /// Strum direction down.
    /// </summary>
    public const string GuitarStrumDown = "guitarStrumDown";
    /// <summary>
    /// Strum direction up.
    /// </summary>
    public const string GuitarStrumUp = "guitarStrumUp";
    /// <summary>
    /// Guitar vibrato bar dip.
    /// </summary>
    public const string GuitarVibratoBarDip = "guitarVibratoBarDip";
    /// <summary>
    /// Guitar vibrato bar scoop.
    /// </summary>
    public const string GuitarVibratoBarScoop = "guitarVibratoBarScoop";
    /// <summary>
    /// Vibrato wiggle segment.
    /// </summary>
    public const string GuitarVibratoStroke = "guitarVibratoStroke";
    /// <summary>
    /// Volume swell.
    /// </summary>
    public const string GuitarVolumeSwell = "guitarVolumeSwell";
    /// <summary>
    /// Wide vibrato wiggle segment.
    /// </summary>
    public const string GuitarWideVibratoStroke = "guitarWideVibratoStroke";
    /// <summary>
    /// Belltree.
    /// </summary>
    public const string HandbellsBelltree = "handbellsBelltree";
    /// <summary>
    /// Damp 3.
    /// </summary>
    public const string HandbellsDamp3 = "handbellsDamp3";
    /// <summary>
    /// Echo.
    /// </summary>
    public const string HandbellsEcho1 = "handbellsEcho1";
    /// <summary>
    /// Echo 2.
    /// </summary>
    public const string HandbellsEcho2 = "handbellsEcho2";
    /// <summary>
    /// Gyro.
    /// </summary>
    public const string HandbellsGyro = "handbellsGyro";
    /// <summary>
    /// Hand martellato.
    /// </summary>
    public const string HandbellsHandMartellato = "handbellsHandMartellato";
    /// <summary>
    /// Mallet, bell on table.
    /// </summary>
    public const string HandbellsMalletBellOnTable = "handbellsMalletBellOnTable";
    /// <summary>
    /// Mallet, bell suspended.
    /// </summary>
    public const string HandbellsMalletBellSuspended = "handbellsMalletBellSuspended";
    /// <summary>
    /// Mallet lift.
    /// </summary>
    public const string HandbellsMalletLft = "handbellsMalletLft";
    /// <summary>
    /// Martellato.
    /// </summary>
    public const string HandbellsMartellato = "handbellsMartellato";
    /// <summary>
    /// Martellato lift.
    /// </summary>
    public const string HandbellsMartellatoLift = "handbellsMartellatoLift";
    /// <summary>
    /// Muted martellato.
    /// </summary>
    public const string HandbellsMutedMartellato = "handbellsMutedMartellato";
    /// <summary>
    /// Pluck lift.
    /// </summary>
    public const string HandbellsPluckLift = "handbellsPluckLift";
    /// <summary>
    /// Swing.
    /// </summary>
    public const string HandbellsSwing = "handbellsSwing";
    /// <summary>
    /// Swing down.
    /// </summary>
    public const string HandbellsSwingDown = "handbellsSwingDown";
    /// <summary>
    /// Swing up.
    /// </summary>
    public const string HandbellsSwingUp = "handbellsSwingUp";
    /// <summary>
    /// Table pair of handbells.
    /// </summary>
    public const string HandbellsTablePairBells = "handbellsTablePairBells";
    /// <summary>
    /// Table single handbell.
    /// </summary>
    public const string HandbellsTableSingleBell = "handbellsTableSingleBell";
    /// <summary>
    /// Metal rod pictogram.
    /// </summary>
    public const string HarpMetalRod = "harpMetalRod";
    /// <summary>
    /// Harp pedal centered (natural).
    /// </summary>
    public const string HarpPedalCentered = "harpPedalCentered";
    /// <summary>
    /// Harp pedal divider.
    /// </summary>
    public const string HarpPedalDivider = "harpPedalDivider";
    /// <summary>
    /// Harp pedal lowered (sharp).
    /// </summary>
    public const string HarpPedalLowered = "harpPedalLowered";
    /// <summary>
    /// Harp pedal raised (flat).
    /// </summary>
    public const string HarpPedalRaised = "harpPedalRaised";
    /// <summary>
    /// Ascending aeolian chords (Salzedo).
    /// </summary>
    public const string HarpSalzedoAeolianAscending = "harpSalzedoAeolianAscending";
    /// <summary>
    /// Descending aeolian chords (Salzedo).
    /// </summary>
    public const string HarpSalzedoAeolianDescending = "harpSalzedoAeolianDescending";
    /// <summary>
    /// Damp above (Salzedo).
    /// </summary>
    public const string HarpSalzedoDampAbove = "harpSalzedoDampAbove";
    /// <summary>
    /// Damp below (Salzedo).
    /// </summary>
    public const string HarpSalzedoDampBelow = "harpSalzedoDampBelow";
    /// <summary>
    /// Damp with both hands (Salzedo).
    /// </summary>
    public const string HarpSalzedoDampBothHands = "harpSalzedoDampBothHands";
    /// <summary>
    /// Damp only low strings (Salzedo).
    /// </summary>
    public const string HarpSalzedoDampLowStrings = "harpSalzedoDampLowStrings";
    /// <summary>
    /// Fluidic sounds, left hand (Salzedo).
    /// </summary>
    public const string HarpSalzedoFluidicSoundsLeft = "harpSalzedoFluidicSoundsLeft";
    /// <summary>
    /// Fluidic sounds, right hand (Salzedo).
    /// </summary>
    public const string HarpSalzedoFluidicSoundsRight = "harpSalzedoFluidicSoundsRight";
    /// <summary>
    /// Isolated sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoIsolatedSounds = "harpSalzedoIsolatedSounds";
    /// <summary>
    /// Metallic sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoMetallicSounds = "harpSalzedoMetallicSounds";
    /// <summary>
    /// Metallic sounds, one string (Salzedo).
    /// </summary>
    public const string HarpSalzedoMetallicSoundsOneString = "harpSalzedoMetallicSoundsOneString";
    /// <summary>
    /// Muffle totally (Salzedo).
    /// </summary>
    public const string HarpSalzedoMuffleTotally = "harpSalzedoMuffleTotally";
    /// <summary>
    /// Oboic flux (Salzedo).
    /// </summary>
    public const string HarpSalzedoOboicFlux = "harpSalzedoOboicFlux";
    /// <summary>
    /// Play at upper end of strings (Salzedo).
    /// </summary>
    public const string HarpSalzedoPlayUpperEnd = "harpSalzedoPlayUpperEnd";
    /// <summary>
    /// Slide with suppleness (Salzedo).
    /// </summary>
    public const string HarpSalzedoSlideWithSuppleness = "harpSalzedoSlideWithSuppleness";
    /// <summary>
    /// Snare drum effect (Salzedo).
    /// </summary>
    public const string HarpSalzedoSnareDrum = "harpSalzedoSnareDrum";
    /// <summary>
    /// Tam-tam sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoTamTamSounds = "harpSalzedoTamTamSounds";
    /// <summary>
    /// Thunder effect (Salzedo).
    /// </summary>
    public const string HarpSalzedoThunderEffect = "harpSalzedoThunderEffect";
    /// <summary>
    /// Timpanic sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoTimpanicSounds = "harpSalzedoTimpanicSounds";
    /// <summary>
    /// Whistling sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoWhistlingSounds = "harpSalzedoWhistlingSounds";
    /// <summary>
    /// Combining string noise for stem.
    /// </summary>
    public const string HarpStringNoiseStem = "harpStringNoiseStem";
    /// <summary>
    /// Tuning key pictogram.
    /// </summary>
    public const string HarpTuningKey = "harpTuningKey";
    /// <summary>
    /// Retune strings for glissando.
    /// </summary>
    public const string HarpTuningKeyGlissando = "harpTuningKeyGlissando";
    /// <summary>
    /// Use handle of tuning key pictogram.
    /// </summary>
    public const string HarpTuningKeyHandle = "harpTuningKeyHandle";
    /// <summary>
    /// Use shank of tuning key pictogram.
    /// </summary>
    public const string HarpTuningKeyShank = "harpTuningKeyShank";
    /// <summary>
    /// Indian drum clef.
    /// </summary>
    public const string IndianDrumClef = "indianDrumClef";
    /// <summary>
    /// Back-chug.
    /// </summary>
    public const string KahnBackChug = "kahnBackChug";
    /// <summary>
    /// Back-flap.
    /// </summary>
    public const string KahnBackFlap = "kahnBackFlap";
    /// <summary>
    /// Back-riff.
    /// </summary>
    public const string KahnBackRiff = "kahnBackRiff";
    /// <summary>
    /// Back-rip.
    /// </summary>
    public const string KahnBackRip = "kahnBackRip";
    /// <summary>
    /// Ball-change.
    /// </summary>
    public const string KahnBallChange = "kahnBallChange";
    /// <summary>
    /// Ball-dig.
    /// </summary>
    public const string KahnBallDig = "kahnBallDig";
    /// <summary>
    /// Brush-backward.
    /// </summary>
    public const string KahnBrushBackward = "kahnBrushBackward";
    /// <summary>
    /// Brush-forward.
    /// </summary>
    public const string KahnBrushForward = "kahnBrushForward";
    /// <summary>
    /// Chug.
    /// </summary>
    public const string KahnChug = "kahnChug";
    /// <summary>
    /// Clap.
    /// </summary>
    public const string KahnClap = "kahnClap";
    /// <summary>
    /// Double-snap.
    /// </summary>
    public const string KahnDoubleSnap = "kahnDoubleSnap";
    /// <summary>
    /// Double-wing.
    /// </summary>
    public const string KahnDoubleWing = "kahnDoubleWing";
    /// <summary>
    /// Draw-step.
    /// </summary>
    public const string KahnDrawStep = "kahnDrawStep";
    /// <summary>
    /// Draw-tap.
    /// </summary>
    public const string KahnDrawTap = "kahnDrawTap";
    /// <summary>
    /// Flam.
    /// </summary>
    public const string KahnFlam = "kahnFlam";
    /// <summary>
    /// Flap.
    /// </summary>
    public const string KahnFlap = "kahnFlap";
    /// <summary>
    /// Flap-step.
    /// </summary>
    public const string KahnFlapStep = "kahnFlapStep";
    /// <summary>
    /// Flat.
    /// </summary>
    public const string KahnFlat = "kahnFlat";
    /// <summary>
    /// Flea-hop.
    /// </summary>
    public const string KahnFleaHop = "kahnFleaHop";
    /// <summary>
    /// Flea-tap.
    /// </summary>
    public const string KahnFleaTap = "kahnFleaTap";
    /// <summary>
    /// Grace-tap.
    /// </summary>
    public const string KahnGraceTap = "kahnGraceTap";
    /// <summary>
    /// Grace-tap-change.
    /// </summary>
    public const string KahnGraceTapChange = "kahnGraceTapChange";
    /// <summary>
    /// Grace-tap-hop.
    /// </summary>
    public const string KahnGraceTapHop = "kahnGraceTapHop";
    /// <summary>
    /// Grace-tap-stamp.
    /// </summary>
    public const string KahnGraceTapStamp = "kahnGraceTapStamp";
    /// <summary>
    /// Heel.
    /// </summary>
    public const string KahnHeel = "kahnHeel";
    /// <summary>
    /// Heel-change.
    /// </summary>
    public const string KahnHeelChange = "kahnHeelChange";
    /// <summary>
    /// Heel-click.
    /// </summary>
    public const string KahnHeelClick = "kahnHeelClick";
    /// <summary>
    /// Heel-drop.
    /// </summary>
    public const string KahnHeelDrop = "kahnHeelDrop";
    /// <summary>
    /// Heel-step.
    /// </summary>
    public const string KahnHeelStep = "kahnHeelStep";
    /// <summary>
    /// Heel-tap.
    /// </summary>
    public const string KahnHeelTap = "kahnHeelTap";
    /// <summary>
    /// Hop.
    /// </summary>
    public const string KahnHop = "kahnHop";
    /// <summary>
    /// Jump-apart.
    /// </summary>
    public const string KahnJumpApart = "kahnJumpApart";
    /// <summary>
    /// Jump-together.
    /// </summary>
    public const string KahnJumpTogether = "kahnJumpTogether";
    /// <summary>
    /// Knee-inward.
    /// </summary>
    public const string KahnKneeInward = "kahnKneeInward";
    /// <summary>
    /// Knee-outward.
    /// </summary>
    public const string KahnKneeOutward = "kahnKneeOutward";
    /// <summary>
    /// Leap.
    /// </summary>
    public const string KahnLeap = "kahnLeap";
    /// <summary>
    /// Leap-flat-foot.
    /// </summary>
    public const string KahnLeapFlatFoot = "kahnLeapFlatFoot";
    /// <summary>
    /// Leap-heel-click.
    /// </summary>
    public const string KahnLeapHeelClick = "kahnLeapHeelClick";
    /// <summary>
    /// Left-catch.
    /// </summary>
    public const string KahnLeftCatch = "kahnLeftCatch";
    /// <summary>
    /// Left-cross.
    /// </summary>
    public const string KahnLeftCross = "kahnLeftCross";
    /// <summary>
    /// Left-foot.
    /// </summary>
    public const string KahnLeftFoot = "kahnLeftFoot";
    /// <summary>
    /// Left-toe-strike.
    /// </summary>
    public const string KahnLeftToeStrike = "kahnLeftToeStrike";
    /// <summary>
    /// Left-turn.
    /// </summary>
    public const string KahnLeftTurn = "kahnLeftTurn";
    /// <summary>
    /// Over-the-top.
    /// </summary>
    public const string KahnOverTheTop = "kahnOverTheTop";
    /// <summary>
    /// Over-the-top-tap.
    /// </summary>
    public const string KahnOverTheTopTap = "kahnOverTheTopTap";
    /// <summary>
    /// Pull.
    /// </summary>
    public const string KahnPull = "kahnPull";
    /// <summary>
    /// Push.
    /// </summary>
    public const string KahnPush = "kahnPush";
    /// <summary>
    /// Riff.
    /// </summary>
    public const string KahnRiff = "kahnRiff";
    /// <summary>
    /// Riffle.
    /// </summary>
    public const string KahnRiffle = "kahnRiffle";
    /// <summary>
    /// Right-catch.
    /// </summary>
    public const string KahnRightCatch = "kahnRightCatch";
    /// <summary>
    /// Right-cross.
    /// </summary>
    public const string KahnRightCross = "kahnRightCross";
    /// <summary>
    /// Right-foot.
    /// </summary>
    public const string KahnRightFoot = "kahnRightFoot";
    /// <summary>
    /// Right-toe-strike.
    /// </summary>
    public const string KahnRightToeStrike = "kahnRightToeStrike";
    /// <summary>
    /// Right-turn.
    /// </summary>
    public const string KahnRightTurn = "kahnRightTurn";
    /// <summary>
    /// Rip.
    /// </summary>
    public const string KahnRip = "kahnRip";
    /// <summary>
    /// Ripple.
    /// </summary>
    public const string KahnRipple = "kahnRipple";
    /// <summary>
    /// Scrape.
    /// </summary>
    public const string KahnScrape = "kahnScrape";
    /// <summary>
    /// Scuff.
    /// </summary>
    public const string KahnScuff = "kahnScuff";
    /// <summary>
    /// Scuffle.
    /// </summary>
    public const string KahnScuffle = "kahnScuffle";
    /// <summary>
    /// Shuffle.
    /// </summary>
    public const string KahnShuffle = "kahnShuffle";
    /// <summary>
    /// Slam.
    /// </summary>
    public const string KahnSlam = "kahnSlam";
    /// <summary>
    /// Slap.
    /// </summary>
    public const string KahnSlap = "kahnSlap";
    /// <summary>
    /// Slide-step.
    /// </summary>
    public const string KahnSlideStep = "kahnSlideStep";
    /// <summary>
    /// Slide-tap.
    /// </summary>
    public const string KahnSlideTap = "kahnSlideTap";
    /// <summary>
    /// Snap.
    /// </summary>
    public const string KahnSnap = "kahnSnap";
    /// <summary>
    /// Stamp.
    /// </summary>
    public const string KahnStamp = "kahnStamp";
    /// <summary>
    /// Stamp-stamp.
    /// </summary>
    public const string KahnStampStamp = "kahnStampStamp";
    /// <summary>
    /// Step.
    /// </summary>
    public const string KahnStep = "kahnStep";
    /// <summary>
    /// Step-stamp.
    /// </summary>
    public const string KahnStepStamp = "kahnStepStamp";
    /// <summary>
    /// Stomp.
    /// </summary>
    public const string KahnStomp = "kahnStomp";
    /// <summary>
    /// Stomp-brush.
    /// </summary>
    public const string KahnStompBrush = "kahnStompBrush";
    /// <summary>
    /// Tap.
    /// </summary>
    public const string KahnTap = "kahnTap";
    /// <summary>
    /// Toe.
    /// </summary>
    public const string KahnToe = "kahnToe";
    /// <summary>
    /// Toe-click.
    /// </summary>
    public const string KahnToeClick = "kahnToeClick";
    /// <summary>
    /// Toe-drop.
    /// </summary>
    public const string KahnToeDrop = "kahnToeDrop";
    /// <summary>
    /// Toe-step.
    /// </summary>
    public const string KahnToeStep = "kahnToeStep";
    /// <summary>
    /// Toe-tap.
    /// </summary>
    public const string KahnToeTap = "kahnToeTap";
    /// <summary>
    /// Trench.
    /// </summary>
    public const string KahnTrench = "kahnTrench";
    /// <summary>
    /// Wing.
    /// </summary>
    public const string KahnWing = "kahnWing";
    /// <summary>
    /// Wing-change.
    /// </summary>
    public const string KahnWingChange = "kahnWingChange";
    /// <summary>
    /// Zank.
    /// </summary>
    public const string KahnZank = "kahnZank";
    /// <summary>
    /// Zink.
    /// </summary>
    public const string KahnZink = "kahnZink";
    /// <summary>
    /// Clavichord bebung, 2 finger movements (above).
    /// </summary>
    public const string KeyboardBebung2DotsAbove = "keyboardBebung2DotsAbove";
    /// <summary>
    /// Clavichord bebung, 2 finger movements (below).
    /// </summary>
    public const string KeyboardBebung2DotsBelow = "keyboardBebung2DotsBelow";
    /// <summary>
    /// Clavichord bebung, 3 finger movements (above).
    /// </summary>
    public const string KeyboardBebung3DotsAbove = "keyboardBebung3DotsAbove";
    /// <summary>
    /// Clavichord bebung, 3 finger movements (below).
    /// </summary>
    public const string KeyboardBebung3DotsBelow = "keyboardBebung3DotsBelow";
    /// <summary>
    /// Clavichord bebung, 4 finger movements (above).
    /// </summary>
    public const string KeyboardBebung4DotsAbove = "keyboardBebung4DotsAbove";
    /// <summary>
    /// Clavichord bebung, 4 finger movements (below).
    /// </summary>
    public const string KeyboardBebung4DotsBelow = "keyboardBebung4DotsBelow";
    /// <summary>
    /// Left pedal pictogram.
    /// </summary>
    public const string KeyboardLeftPedalPictogram = "keyboardLeftPedalPictogram";
    /// <summary>
    /// Middle pedal pictogram.
    /// </summary>
    public const string KeyboardMiddlePedalPictogram = "keyboardMiddlePedalPictogram";
    /// <summary>
    /// Pedal d.
    /// </summary>
    public const string KeyboardPedalD = "keyboardPedalD";
    /// <summary>
    /// Pedal dot.
    /// </summary>
    public const string KeyboardPedalDot = "keyboardPedalDot";
    /// <summary>
    /// Pedal e.
    /// </summary>
    public const string KeyboardPedalE = "keyboardPedalE";
    /// <summary>
    /// Half-pedal mark.
    /// </summary>
    public const string KeyboardPedalHalf = "keyboardPedalHalf";
    /// <summary>
    /// Half pedal mark 1.
    /// </summary>
    public const string KeyboardPedalHalf2 = "keyboardPedalHalf2";
    /// <summary>
    /// Half pedal mark 2.
    /// </summary>
    public const string KeyboardPedalHalf3 = "keyboardPedalHalf3";
    /// <summary>
    /// Pedal heel 1.
    /// </summary>
    public const string KeyboardPedalHeel1 = "keyboardPedalHeel1";
    /// <summary>
    /// Pedal heel 2.
    /// </summary>
    public const string KeyboardPedalHeel2 = "keyboardPedalHeel2";
    /// <summary>
    /// Pedal heel 3 (Davis).
    /// </summary>
    public const string KeyboardPedalHeel3 = "keyboardPedalHeel3";
    /// <summary>
    /// Pedal heel to toe.
    /// </summary>
    public const string KeyboardPedalHeelToToe = "keyboardPedalHeelToToe";
    /// <summary>
    /// Pedal heel or toe.
    /// </summary>
    public const string KeyboardPedalHeelToe = "keyboardPedalHeelToe";
    /// <summary>
    /// Pedal hook end.
    /// </summary>
    public const string KeyboardPedalHookEnd = "keyboardPedalHookEnd";
    /// <summary>
    /// Pedal hook start.
    /// </summary>
    public const string KeyboardPedalHookStart = "keyboardPedalHookStart";
    /// <summary>
    /// Pedal hyphen.
    /// </summary>
    public const string KeyboardPedalHyphen = "keyboardPedalHyphen";
    /// <summary>
    /// Pedal P.
    /// </summary>
    public const string KeyboardPedalP = "keyboardPedalP";
    /// <summary>
    /// Left parenthesis for pedal marking.
    /// </summary>
    public const string KeyboardPedalParensLeft = "keyboardPedalParensLeft";
    /// <summary>
    /// Right parenthesis for pedal marking.
    /// </summary>
    public const string KeyboardPedalParensRight = "keyboardPedalParensRight";
    /// <summary>
    /// Pedal mark.
    /// </summary>
    public const string KeyboardPedalPed = "keyboardPedalPed";
    /// <summary>
    /// Pedal S.
    /// </summary>
    public const string KeyboardPedalS = "keyboardPedalS";
    /// <summary>
    /// Sostenuto pedal mark.
    /// </summary>
    public const string KeyboardPedalSost = "keyboardPedalSost";
    /// <summary>
    /// Pedal toe 1.
    /// </summary>
    public const string KeyboardPedalToe1 = "keyboardPedalToe1";
    /// <summary>
    /// Pedal toe 2.
    /// </summary>
    public const string KeyboardPedalToe2 = "keyboardPedalToe2";
    /// <summary>
    /// Pedal toe to heel.
    /// </summary>
    public const string KeyboardPedalToeToHeel = "keyboardPedalToeToHeel";
    /// <summary>
    /// Pedal up mark.
    /// </summary>
    public const string KeyboardPedalUp = "keyboardPedalUp";
    /// <summary>
    /// Pedal up notch.
    /// </summary>
    public const string KeyboardPedalUpNotch = "keyboardPedalUpNotch";
    /// <summary>
    /// Pedal up special.
    /// </summary>
    public const string KeyboardPedalUpSpecial = "keyboardPedalUpSpecial";
    /// <summary>
    /// Play with left hand.
    /// </summary>
    public const string KeyboardPlayWithLH = "keyboardPlayWithLH";
    /// <summary>
    /// Play with left hand (end).
    /// </summary>
    public const string KeyboardPlayWithLHEnd = "keyboardPlayWithLHEnd";
    /// <summary>
    /// Play with right hand.
    /// </summary>
    public const string KeyboardPlayWithRH = "keyboardPlayWithRH";
    /// <summary>
    /// Play with right hand (end).
    /// </summary>
    public const string KeyboardPlayWithRHEnd = "keyboardPlayWithRHEnd";
    /// <summary>
    /// Pluck strings inside piano (Maderna).
    /// </summary>
    public const string KeyboardPluckInside = "keyboardPluckInside";
    /// <summary>
    /// Right pedal pictogram.
    /// </summary>
    public const string KeyboardRightPedalPictogram = "keyboardRightPedalPictogram";
    /// <summary>
    /// Kievan flat.
    /// </summary>
    public const string KievanAccidentalFlat = "kievanAccidentalFlat";
    /// <summary>
    /// Kievan sharp.
    /// </summary>
    public const string KievanAccidentalSharp = "kievanAccidentalSharp";
    /// <summary>
    /// Kievan augmentation dot.
    /// </summary>
    public const string KievanAugmentationDot = "kievanAugmentationDot";
    /// <summary>
    /// Kievan C clef (tse-fa-ut).
    /// </summary>
    public const string KievanCClef = "kievanCClef";
    /// <summary>
    /// Kievan ending symbol.
    /// </summary>
    public const string KievanEndingSymbol = "kievanEndingSymbol";
    /// <summary>
    /// Kievan eighth note, stem down.
    /// </summary>
    public const string KievanNote8thStemDown = "kievanNote8thStemDown";
    /// <summary>
    /// Kievan eighth note, stem up.
    /// </summary>
    public const string KievanNote8thStemUp = "kievanNote8thStemUp";
    /// <summary>
    /// Kievan beam.
    /// </summary>
    public const string KievanNoteBeam = "kievanNoteBeam";
    /// <summary>
    /// Kievan half note (on staff line).
    /// </summary>
    public const string KievanNoteHalfStaffLine = "kievanNoteHalfStaffLine";
    /// <summary>
    /// Kievan half note (in staff space).
    /// </summary>
    public const string KievanNoteHalfStaffSpace = "kievanNoteHalfStaffSpace";
    /// <summary>
    /// Kievan quarter note, stem down.
    /// </summary>
    public const string KievanNoteQuarterStemDown = "kievanNoteQuarterStemDown";
    /// <summary>
    /// Kievan quarter note, stem up.
    /// </summary>
    public const string KievanNoteQuarterStemUp = "kievanNoteQuarterStemUp";
    /// <summary>
    /// Kievan reciting note.
    /// </summary>
    public const string KievanNoteReciting = "kievanNoteReciting";
    /// <summary>
    /// Kievan whole note.
    /// </summary>
    public const string KievanNoteWhole = "kievanNoteWhole";
    /// <summary>
    /// Kievan final whole note.
    /// </summary>
    public const string KievanNoteWholeFinal = "kievanNoteWholeFinal";
    /// <summary>
    /// Do hand sign.
    /// </summary>
    public const string KodalyHandDo = "kodalyHandDo";
    /// <summary>
    /// Fa hand sign.
    /// </summary>
    public const string KodalyHandFa = "kodalyHandFa";
    /// <summary>
    /// La hand sign.
    /// </summary>
    public const string KodalyHandLa = "kodalyHandLa";
    /// <summary>
    /// Mi hand sign.
    /// </summary>
    public const string KodalyHandMi = "kodalyHandMi";
    /// <summary>
    /// Re hand sign.
    /// </summary>
    public const string KodalyHandRe = "kodalyHandRe";
    /// <summary>
    /// So hand sign.
    /// </summary>
    public const string KodalyHandSo = "kodalyHandSo";
    /// <summary>
    /// Ti hand sign.
    /// </summary>
    public const string KodalyHandTi = "kodalyHandTi";
    /// <summary>
    /// Left repeat sign within bar.
    /// </summary>
    public const string LeftRepeatSmall = "leftRepeatSmall";
    /// <summary>
    /// Leger line.
    /// </summary>
    public const string LegerLine = "legerLine";
    /// <summary>
    /// Leger line (narrow).
    /// </summary>
    public const string LegerLineNarrow = "legerLineNarrow";
    /// <summary>
    /// Leger line (wide).
    /// </summary>
    public const string LegerLineWide = "legerLineWide";
    /// <summary>
    /// Lute tablature end repeat barline.
    /// </summary>
    public const string LuteBarlineEndRepeat = "luteBarlineEndRepeat";
    /// <summary>
    /// Lute tablature final barline.
    /// </summary>
    public const string LuteBarlineFinal = "luteBarlineFinal";
    /// <summary>
    /// Lute tablature start repeat barline.
    /// </summary>
    public const string LuteBarlineStartRepeat = "luteBarlineStartRepeat";
    /// <summary>
    /// 16th note (semiquaver) duration sign.
    /// </summary>
    public const string LuteDuration16th = "luteDuration16th";
    /// <summary>
    /// 32nd note (demisemiquaver) duration sign.
    /// </summary>
    public const string LuteDuration32nd = "luteDuration32nd";
    /// <summary>
    /// Eighth note (quaver) duration sign.
    /// </summary>
    public const string LuteDuration8th = "luteDuration8th";
    /// <summary>
    /// Double whole note (breve) duration sign.
    /// </summary>
    public const string LuteDurationDoubleWhole = "luteDurationDoubleWhole";
    /// <summary>
    /// Half note (minim) duration sign.
    /// </summary>
    public const string LuteDurationHalf = "luteDurationHalf";
    /// <summary>
    /// Quarter note (crotchet) duration sign.
    /// </summary>
    public const string LuteDurationQuarter = "luteDurationQuarter";
    /// <summary>
    /// Whole note (semibreve) duration sign.
    /// </summary>
    public const string LuteDurationWhole = "luteDurationWhole";
    /// <summary>
    /// Right-hand fingering, first finger.
    /// </summary>
    public const string LuteFingeringRHFirst = "luteFingeringRHFirst";
    /// <summary>
    /// Right-hand fingering, second finger.
    /// </summary>
    public const string LuteFingeringRHSecond = "luteFingeringRHSecond";
    /// <summary>
    /// Right-hand fingering, third finger.
    /// </summary>
    public const string LuteFingeringRHThird = "luteFingeringRHThird";
    /// <summary>
    /// Right-hand fingering, thumb.
    /// </summary>
    public const string LuteFingeringRHThumb = "luteFingeringRHThumb";
    /// <summary>
    /// 10th course (diapason).
    /// </summary>
    public const string LuteFrench10thCourse = "luteFrench10thCourse";
    /// <summary>
    /// Seventh course (diapason).
    /// </summary>
    public const string LuteFrench7thCourse = "luteFrench7thCourse";
    /// <summary>
    /// Eighth course (diapason).
    /// </summary>
    public const string LuteFrench8thCourse = "luteFrench8thCourse";
    /// <summary>
    /// Ninth course (diapason).
    /// </summary>
    public const string LuteFrench9thCourse = "luteFrench9thCourse";
    /// <summary>
    /// Appoggiatura from above.
    /// </summary>
    public const string LuteFrenchAppoggiaturaAbove = "luteFrenchAppoggiaturaAbove";
    /// <summary>
    /// Appoggiatura from below.
    /// </summary>
    public const string LuteFrenchAppoggiaturaBelow = "luteFrenchAppoggiaturaBelow";
    /// <summary>
    /// Open string (a).
    /// </summary>
    public const string LuteFrenchFretA = "luteFrenchFretA";
    /// <summary>
    /// First fret (b).
    /// </summary>
    public const string LuteFrenchFretB = "luteFrenchFretB";
    /// <summary>
    /// Second fret (c).
    /// </summary>
    public const string LuteFrenchFretC = "luteFrenchFretC";
    /// <summary>
    /// Third fret (d).
    /// </summary>
    public const string LuteFrenchFretD = "luteFrenchFretD";
    /// <summary>
    /// Fourth fret (e).
    /// </summary>
    public const string LuteFrenchFretE = "luteFrenchFretE";
    /// <summary>
    /// Fifth fret (f).
    /// </summary>
    public const string LuteFrenchFretF = "luteFrenchFretF";
    /// <summary>
    /// Sixth fret (g).
    /// </summary>
    public const string LuteFrenchFretG = "luteFrenchFretG";
    /// <summary>
    /// Seventh fret (h).
    /// </summary>
    public const string LuteFrenchFretH = "luteFrenchFretH";
    /// <summary>
    /// Eighth fret (i).
    /// </summary>
    public const string LuteFrenchFretI = "luteFrenchFretI";
    /// <summary>
    /// Ninth fret (k).
    /// </summary>
    public const string LuteFrenchFretK = "luteFrenchFretK";
    /// <summary>
    /// 10th fret (l).
    /// </summary>
    public const string LuteFrenchFretL = "luteFrenchFretL";
    /// <summary>
    /// 11th fret (m).
    /// </summary>
    public const string LuteFrenchFretM = "luteFrenchFretM";
    /// <summary>
    /// 12th fret (n).
    /// </summary>
    public const string LuteFrenchFretN = "luteFrenchFretN";
    /// <summary>
    /// Inverted mordent.
    /// </summary>
    public const string LuteFrenchMordentInverted = "luteFrenchMordentInverted";
    /// <summary>
    /// Mordent with lower auxiliary.
    /// </summary>
    public const string LuteFrenchMordentLower = "luteFrenchMordentLower";
    /// <summary>
    /// Mordent with upper auxiliary.
    /// </summary>
    public const string LuteFrenchMordentUpper = "luteFrenchMordentUpper";
    /// <summary>
    /// 5th course, 1st fret (a).
    /// </summary>
    public const string LuteGermanALower = "luteGermanALower";
    /// <summary>
    /// 6th course, 1st fret (A).
    /// </summary>
    public const string LuteGermanAUpper = "luteGermanAUpper";
    /// <summary>
    /// 4th course, 1st fret (b).
    /// </summary>
    public const string LuteGermanBLower = "luteGermanBLower";
    /// <summary>
    /// 6th course, 2nd fret (B).
    /// </summary>
    public const string LuteGermanBUpper = "luteGermanBUpper";
    /// <summary>
    /// 3rd course, 1st fret (c).
    /// </summary>
    public const string LuteGermanCLower = "luteGermanCLower";
    /// <summary>
    /// 6th course, 3rd fret (C).
    /// </summary>
    public const string LuteGermanCUpper = "luteGermanCUpper";
    /// <summary>
    /// 2nd course, 1st fret (d).
    /// </summary>
    public const string LuteGermanDLower = "luteGermanDLower";
    /// <summary>
    /// 6th course, 4th fret (D).
    /// </summary>
    public const string LuteGermanDUpper = "luteGermanDUpper";
    /// <summary>
    /// 1st course, 1st fret (e).
    /// </summary>
    public const string LuteGermanELower = "luteGermanELower";
    /// <summary>
    /// 6th course, 5th fret (E).
    /// </summary>
    public const string LuteGermanEUpper = "luteGermanEUpper";
    /// <summary>
    /// 5th course, 2nd fret (f).
    /// </summary>
    public const string LuteGermanFLower = "luteGermanFLower";
    /// <summary>
    /// 6th course, 6th fret (F).
    /// </summary>
    public const string LuteGermanFUpper = "luteGermanFUpper";
    /// <summary>
    /// 4th course, 2nd fret (g).
    /// </summary>
    public const string LuteGermanGLower = "luteGermanGLower";
    /// <summary>
    /// 6th course, 7th fret (G).
    /// </summary>
    public const string LuteGermanGUpper = "luteGermanGUpper";
    /// <summary>
    /// 3rd course, 2nd fret (h).
    /// </summary>
    public const string LuteGermanHLower = "luteGermanHLower";
    /// <summary>
    /// 6th course, 8th fret (H).
    /// </summary>
    public const string LuteGermanHUpper = "luteGermanHUpper";
    /// <summary>
    /// 2nd course, 2nd fret (i).
    /// </summary>
    public const string LuteGermanILower = "luteGermanILower";
    /// <summary>
    /// 6th course, 9th fret (I).
    /// </summary>
    public const string LuteGermanIUpper = "luteGermanIUpper";
    /// <summary>
    /// 1st course, 2nd fret (k).
    /// </summary>
    public const string LuteGermanKLower = "luteGermanKLower";
    /// <summary>
    /// 6th course, 10th fret (K).
    /// </summary>
    public const string LuteGermanKUpper = "luteGermanKUpper";
    /// <summary>
    /// 5th course, 3rd fret (l).
    /// </summary>
    public const string LuteGermanLLower = "luteGermanLLower";
    /// <summary>
    /// 6th course, 11th fret (L).
    /// </summary>
    public const string LuteGermanLUpper = "luteGermanLUpper";
    /// <summary>
    /// 4th course, 3rd fret (m).
    /// </summary>
    public const string LuteGermanMLower = "luteGermanMLower";
    /// <summary>
    /// 6th course, 12th fret (M).
    /// </summary>
    public const string LuteGermanMUpper = "luteGermanMUpper";
    /// <summary>
    /// 3rd course, 3rd fret (n).
    /// </summary>
    public const string LuteGermanNLower = "luteGermanNLower";
    /// <summary>
    /// 6th course, 13th fret (N).
    /// </summary>
    public const string LuteGermanNUpper = "luteGermanNUpper";
    /// <summary>
    /// 2nd course, 3rd fret (o).
    /// </summary>
    public const string LuteGermanOLower = "luteGermanOLower";
    /// <summary>
    /// 1st course, 3rd fret (p).
    /// </summary>
    public const string LuteGermanPLower = "luteGermanPLower";
    /// <summary>
    /// 5th course, 4th fret (q).
    /// </summary>
    public const string LuteGermanQLower = "luteGermanQLower";
    /// <summary>
    /// 4th course, 4th fret (r).
    /// </summary>
    public const string LuteGermanRLower = "luteGermanRLower";
    /// <summary>
    /// 3rd course, 4th fret (s).
    /// </summary>
    public const string LuteGermanSLower = "luteGermanSLower";
    /// <summary>
    /// 2nd course, 4th fret (t).
    /// </summary>
    public const string LuteGermanTLower = "luteGermanTLower";
    /// <summary>
    /// 1st course, 4th fret (v).
    /// </summary>
    public const string LuteGermanVLower = "luteGermanVLower";
    /// <summary>
    /// 5th course, 5th fret (x).
    /// </summary>
    public const string LuteGermanXLower = "luteGermanXLower";
    /// <summary>
    /// 4th course, 5th fret (y).
    /// </summary>
    public const string LuteGermanYLower = "luteGermanYLower";
    /// <summary>
    /// 3rd course, 5th fret (z).
    /// </summary>
    public const string LuteGermanZLower = "luteGermanZLower";
    /// <summary>
    /// C sol fa ut clef.
    /// </summary>
    public const string LuteItalianClefCSolFaUt = "luteItalianClefCSolFaUt";
    /// <summary>
    /// F fa ut clef.
    /// </summary>
    public const string LuteItalianClefFFaUt = "luteItalianClefFFaUt";
    /// <summary>
    /// Open string (0).
    /// </summary>
    public const string LuteItalianFret0 = "luteItalianFret0";
    /// <summary>
    /// First fret (1).
    /// </summary>
    public const string LuteItalianFret1 = "luteItalianFret1";
    /// <summary>
    /// Second fret (2).
    /// </summary>
    public const string LuteItalianFret2 = "luteItalianFret2";
    /// <summary>
    /// Third fret (3).
    /// </summary>
    public const string LuteItalianFret3 = "luteItalianFret3";
    /// <summary>
    /// Fourth fret (4).
    /// </summary>
    public const string LuteItalianFret4 = "luteItalianFret4";
    /// <summary>
    /// Fifth fret (5).
    /// </summary>
    public const string LuteItalianFret5 = "luteItalianFret5";
    /// <summary>
    /// Sixth fret (6).
    /// </summary>
    public const string LuteItalianFret6 = "luteItalianFret6";
    /// <summary>
    /// Seventh fret (7).
    /// </summary>
    public const string LuteItalianFret7 = "luteItalianFret7";
    /// <summary>
    /// Eighth fret (8).
    /// </summary>
    public const string LuteItalianFret8 = "luteItalianFret8";
    /// <summary>
    /// Ninth fret (9).
    /// </summary>
    public const string LuteItalianFret9 = "luteItalianFret9";
    /// <summary>
    /// Hold finger in place.
    /// </summary>
    public const string LuteItalianHoldFinger = "luteItalianHoldFinger";
    /// <summary>
    /// Hold note.
    /// </summary>
    public const string LuteItalianHoldNote = "luteItalianHoldNote";
    /// <summary>
    /// Release finger.
    /// </summary>
    public const string LuteItalianReleaseFinger = "luteItalianReleaseFinger";
    /// <summary>
    /// Fast tempo indication (de Mudarra).
    /// </summary>
    public const string LuteItalianTempoFast = "luteItalianTempoFast";
    /// <summary>
    /// Neither fast nor slow tempo indication (de Mudarra).
    /// </summary>
    public const string LuteItalianTempoNeitherFastNorSlow = "luteItalianTempoNeitherFastNorSlow";
    /// <summary>
    /// Slow tempo indication (de Mudarra).
    /// </summary>
    public const string LuteItalianTempoSlow = "luteItalianTempoSlow";
    /// <summary>
    /// Somewhat fast tempo indication (de Narvaez).
    /// </summary>
    public const string LuteItalianTempoSomewhatFast = "luteItalianTempoSomewhatFast";
    /// <summary>
    /// Very slow indication (de Narvaez).
    /// </summary>
    public const string LuteItalianTempoVerySlow = "luteItalianTempoVerySlow";
    /// <summary>
    /// Triple time indication.
    /// </summary>
    public const string LuteItalianTimeTriple = "luteItalianTimeTriple";
    /// <summary>
    /// Single-finger tremolo or mordent.
    /// </summary>
    public const string LuteItalianTremolo = "luteItalianTremolo";
    /// <summary>
    /// Vibrato (verre cassé).
    /// </summary>
    public const string LuteItalianVibrato = "luteItalianVibrato";
    /// <summary>
    /// Lute tablature staff, 6 courses.
    /// </summary>
    public const string LuteStaff6Lines = "luteStaff6Lines";
    /// <summary>
    /// Lute tablature staff, 6 courses (narrow).
    /// </summary>
    public const string LuteStaff6LinesNarrow = "luteStaff6LinesNarrow";
    /// <summary>
    /// Lute tablature staff, 6 courses (wide).
    /// </summary>
    public const string LuteStaff6LinesWide = "luteStaff6LinesWide";
    /// <summary>
    /// Elision.
    /// </summary>
    public const string LyricsElision = "lyricsElision";
    /// <summary>
    /// Narrow elision.
    /// </summary>
    public const string LyricsElisionNarrow = "lyricsElisionNarrow";
    /// <summary>
    /// Wide elision.
    /// </summary>
    public const string LyricsElisionWide = "lyricsElisionWide";
    /// <summary>
    /// Baseline hyphen.
    /// </summary>
    public const string LyricsHyphenBaseline = "lyricsHyphenBaseline";
    /// <summary>
    /// Non-breaking baseline hyphen.
    /// </summary>
    public const string LyricsHyphenBaselineNonBreaking = "lyricsHyphenBaselineNonBreaking";
    /// <summary>
    /// Text repeats.
    /// </summary>
    public const string LyricsTextRepeat = "lyricsTextRepeat";
    /// <summary>
    /// Flat, hard b (mi).
    /// </summary>
    public const string MedRenFlatHardB = "medRenFlatHardB";
    /// <summary>
    /// Flat, soft b (fa).
    /// </summary>
    public const string MedRenFlatSoftB = "medRenFlatSoftB";
    /// <summary>
    /// Flat with dot.
    /// </summary>
    public const string MedRenFlatWithDot = "medRenFlatWithDot";
    /// <summary>
    /// G clef (Corpus Monodicum).
    /// </summary>
    public const string MedRenGClefCMN = "medRenGClefCMN";
    /// <summary>
    /// Liquescence.
    /// </summary>
    public const string MedRenLiquescenceCMN = "medRenLiquescenceCMN";
    /// <summary>
    /// Liquescent ascending (Corpus Monodicum).
    /// </summary>
    public const string MedRenLiquescentAscCMN = "medRenLiquescentAscCMN";
    /// <summary>
    /// Liquescent descending (Corpus Monodicum).
    /// </summary>
    public const string MedRenLiquescentDescCMN = "medRenLiquescentDescCMN";
    /// <summary>
    /// Natural.
    /// </summary>
    public const string MedRenNatural = "medRenNatural";
    /// <summary>
    /// Natural with interrupted cross.
    /// </summary>
    public const string MedRenNaturalWithCross = "medRenNaturalWithCross";
    /// <summary>
    /// Oriscus (Corpus Monodicum).
    /// </summary>
    public const string MedRenOriscusCMN = "medRenOriscusCMN";
    /// <summary>
    /// Plica.
    /// </summary>
    public const string MedRenPlicaCMN = "medRenPlicaCMN";
    /// <summary>
    /// Punctum (Corpus Monodicum).
    /// </summary>
    public const string MedRenPunctumCMN = "medRenPunctumCMN";
    /// <summary>
    /// Quilisma (Corpus Monodicum).
    /// </summary>
    public const string MedRenQuilismaCMN = "medRenQuilismaCMN";
    /// <summary>
    /// Croix.
    /// </summary>
    public const string MedRenSharpCroix = "medRenSharpCroix";
    /// <summary>
    /// Strophicus (Corpus Monodicum).
    /// </summary>
    public const string MedRenStrophicusCMN = "medRenStrophicusCMN";
    /// <summary>
    /// Alteration sign.
    /// </summary>
    public const string MensuralAlterationSign = "mensuralAlterationSign";
    /// <summary>
    /// Black mensural brevis.
    /// </summary>
    public const string MensuralBlackBrevis = "mensuralBlackBrevis";
    /// <summary>
    /// Black mensural void brevis.
    /// </summary>
    public const string MensuralBlackBrevisVoid = "mensuralBlackBrevisVoid";
    /// <summary>
    /// Black mensural dragma.
    /// </summary>
    public const string MensuralBlackDragma = "mensuralBlackDragma";
    /// <summary>
    /// Black mensural longa.
    /// </summary>
    public const string MensuralBlackLonga = "mensuralBlackLonga";
    /// <summary>
    /// Black mensural maxima.
    /// </summary>
    public const string MensuralBlackMaxima = "mensuralBlackMaxima";
    /// <summary>
    /// Black mensural minima.
    /// </summary>
    public const string MensuralBlackMinima = "mensuralBlackMinima";
    /// <summary>
    /// Black mensural void minima.
    /// </summary>
    public const string MensuralBlackMinimaVoid = "mensuralBlackMinimaVoid";
    /// <summary>
    /// Black mensural semibrevis.
    /// </summary>
    public const string MensuralBlackSemibrevis = "mensuralBlackSemibrevis";
    /// <summary>
    /// Black mensural semibrevis caudata.
    /// </summary>
    public const string MensuralBlackSemibrevisCaudata = "mensuralBlackSemibrevisCaudata";
    /// <summary>
    /// Black mensural oblique semibrevis.
    /// </summary>
    public const string MensuralBlackSemibrevisOblique = "mensuralBlackSemibrevisOblique";
    /// <summary>
    /// Black mensural void semibrevis.
    /// </summary>
    public const string MensuralBlackSemibrevisVoid = "mensuralBlackSemibrevisVoid";
    /// <summary>
    /// Black mensural semiminima.
    /// </summary>
    public const string MensuralBlackSemiminima = "mensuralBlackSemiminima";
    /// <summary>
    /// Mensural C clef.
    /// </summary>
    public const string MensuralCclef = "mensuralCclef";
    /// <summary>
    /// Petrucci C clef, high position.
    /// </summary>
    public const string MensuralCclefPetrucciPosHigh = "mensuralCclefPetrucciPosHigh";
    /// <summary>
    /// Petrucci C clef, highest position.
    /// </summary>
    public const string MensuralCclefPetrucciPosHighest = "mensuralCclefPetrucciPosHighest";
    /// <summary>
    /// Petrucci C clef, low position.
    /// </summary>
    public const string MensuralCclefPetrucciPosLow = "mensuralCclefPetrucciPosLow";
    /// <summary>
    /// Petrucci C clef, lowest position.
    /// </summary>
    public const string MensuralCclefPetrucciPosLowest = "mensuralCclefPetrucciPosLowest";
    /// <summary>
    /// Petrucci C clef, middle position.
    /// </summary>
    public const string MensuralCclefPetrucciPosMiddle = "mensuralCclefPetrucciPosMiddle";
    /// <summary>
    /// Coloration end, round.
    /// </summary>
    public const string MensuralColorationEndRound = "mensuralColorationEndRound";
    /// <summary>
    /// Coloration end, square.
    /// </summary>
    public const string MensuralColorationEndSquare = "mensuralColorationEndSquare";
    /// <summary>
    /// Coloration start, round.
    /// </summary>
    public const string MensuralColorationStartRound = "mensuralColorationStartRound";
    /// <summary>
    /// Coloration start, square.
    /// </summary>
    public const string MensuralColorationStartSquare = "mensuralColorationStartSquare";
    /// <summary>
    /// Combining stem diagonal.
    /// </summary>
    public const string MensuralCombStemDiagonal = "mensuralCombStemDiagonal";
    /// <summary>
    /// Combining stem down.
    /// </summary>
    public const string MensuralCombStemDown = "mensuralCombStemDown";
    /// <summary>
    /// Combining stem with extended flag down.
    /// </summary>
    public const string MensuralCombStemDownFlagExtended = "mensuralCombStemDownFlagExtended";
    /// <summary>
    /// Combining stem with flared flag down.
    /// </summary>
    public const string MensuralCombStemDownFlagFlared = "mensuralCombStemDownFlagFlared";
    /// <summary>
    /// Combining stem with fusa flag down.
    /// </summary>
    public const string MensuralCombStemDownFlagFusa = "mensuralCombStemDownFlagFusa";
    /// <summary>
    /// Combining stem with flag left down.
    /// </summary>
    public const string MensuralCombStemDownFlagLeft = "mensuralCombStemDownFlagLeft";
    /// <summary>
    /// Combining stem with flag right down.
    /// </summary>
    public const string MensuralCombStemDownFlagRight = "mensuralCombStemDownFlagRight";
    /// <summary>
    /// Combining stem with semiminima flag down.
    /// </summary>
    public const string MensuralCombStemDownFlagSemiminima = "mensuralCombStemDownFlagSemiminima";
    /// <summary>
    /// Combining stem up.
    /// </summary>
    public const string MensuralCombStemUp = "mensuralCombStemUp";
    /// <summary>
    /// Combining stem with extended flag up.
    /// </summary>
    public const string MensuralCombStemUpFlagExtended = "mensuralCombStemUpFlagExtended";
    /// <summary>
    /// Combining stem with flared flag up.
    /// </summary>
    public const string MensuralCombStemUpFlagFlared = "mensuralCombStemUpFlagFlared";
    /// <summary>
    /// Combining stem with fusa flag up.
    /// </summary>
    public const string MensuralCombStemUpFlagFusa = "mensuralCombStemUpFlagFusa";
    /// <summary>
    /// Combining stem with flag left up.
    /// </summary>
    public const string MensuralCombStemUpFlagLeft = "mensuralCombStemUpFlagLeft";
    /// <summary>
    /// Combining stem with flag right up.
    /// </summary>
    public const string MensuralCombStemUpFlagRight = "mensuralCombStemUpFlagRight";
    /// <summary>
    /// Combining stem with semiminima flag up.
    /// </summary>
    public const string MensuralCombStemUpFlagSemiminima = "mensuralCombStemUpFlagSemiminima";
    /// <summary>
    /// Checkmark custos.
    /// </summary>
    public const string MensuralCustosCheckmark = "mensuralCustosCheckmark";
    /// <summary>
    /// Mensural custos down.
    /// </summary>
    public const string MensuralCustosDown = "mensuralCustosDown";
    /// <summary>
    /// Turn-like custos.
    /// </summary>
    public const string MensuralCustosTurn = "mensuralCustosTurn";
    /// <summary>
    /// Mensural custos up.
    /// </summary>
    public const string MensuralCustosUp = "mensuralCustosUp";
    /// <summary>
    /// Mensural F clef.
    /// </summary>
    public const string MensuralFclef = "mensuralFclef";
    /// <summary>
    /// Petrucci F clef.
    /// </summary>
    public const string MensuralFclefPetrucci = "mensuralFclefPetrucci";
    /// <summary>
    /// Mensural G clef.
    /// </summary>
    public const string MensuralGclef = "mensuralGclef";
    /// <summary>
    /// Petrucci G clef.
    /// </summary>
    public const string MensuralGclefPetrucci = "mensuralGclefPetrucci";
    /// <summary>
    /// Modus imperfectum, vertical.
    /// </summary>
    public const string MensuralModusImperfectumVert = "mensuralModusImperfectumVert";
    /// <summary>
    /// Modus perfectum, vertical.
    /// </summary>
    public const string MensuralModusPerfectumVert = "mensuralModusPerfectumVert";
    /// <summary>
    /// Longa/brevis notehead, black.
    /// </summary>
    public const string MensuralNoteheadLongaBlack = "mensuralNoteheadLongaBlack";
    /// <summary>
    /// Longa/brevis notehead, black and void.
    /// </summary>
    public const string MensuralNoteheadLongaBlackVoid = "mensuralNoteheadLongaBlackVoid";
    /// <summary>
    /// Longa/brevis notehead, void.
    /// </summary>
    public const string MensuralNoteheadLongaVoid = "mensuralNoteheadLongaVoid";
    /// <summary>
    /// Longa/brevis notehead, white.
    /// </summary>
    public const string MensuralNoteheadLongaWhite = "mensuralNoteheadLongaWhite";
    /// <summary>
    /// Maxima notehead, black.
    /// </summary>
    public const string MensuralNoteheadMaximaBlack = "mensuralNoteheadMaximaBlack";
    /// <summary>
    /// Maxima notehead, black and void.
    /// </summary>
    public const string MensuralNoteheadMaximaBlackVoid = "mensuralNoteheadMaximaBlackVoid";
    /// <summary>
    /// Maxima notehead, void.
    /// </summary>
    public const string MensuralNoteheadMaximaVoid = "mensuralNoteheadMaximaVoid";
    /// <summary>
    /// Maxima notehead, white.
    /// </summary>
    public const string MensuralNoteheadMaximaWhite = "mensuralNoteheadMaximaWhite";
    /// <summary>
    /// Minima notehead, white.
    /// </summary>
    public const string MensuralNoteheadMinimaWhite = "mensuralNoteheadMinimaWhite";
    /// <summary>
    /// Semibrevis notehead, black.
    /// </summary>
    public const string MensuralNoteheadSemibrevisBlack = "mensuralNoteheadSemibrevisBlack";
    /// <summary>
    /// Semibrevis notehead, black and void.
    /// </summary>
    public const string MensuralNoteheadSemibrevisBlackVoid = "mensuralNoteheadSemibrevisBlackVoid";
    /// <summary>
    /// Semibrevis notehead, black and void (turned).
    /// </summary>
    public const string MensuralNoteheadSemibrevisBlackVoidTurned = "mensuralNoteheadSemibrevisBlackVoidTurned";
    /// <summary>
    /// Semibrevis notehead, void.
    /// </summary>
    public const string MensuralNoteheadSemibrevisVoid = "mensuralNoteheadSemibrevisVoid";
    /// <summary>
    /// Semiminima/fusa notehead, white.
    /// </summary>
    public const string MensuralNoteheadSemiminimaWhite = "mensuralNoteheadSemiminimaWhite";
    /// <summary>
    /// Oblique form, ascending 2nd, black.
    /// </summary>
    public const string MensuralObliqueAsc2ndBlack = "mensuralObliqueAsc2ndBlack";
    /// <summary>
    /// Oblique form, ascending 2nd, black and void.
    /// </summary>
    public const string MensuralObliqueAsc2ndBlackVoid = "mensuralObliqueAsc2ndBlackVoid";
    /// <summary>
    /// Oblique form, ascending 2nd, void.
    /// </summary>
    public const string MensuralObliqueAsc2ndVoid = "mensuralObliqueAsc2ndVoid";
    /// <summary>
    /// Oblique form, ascending 2nd, white.
    /// </summary>
    public const string MensuralObliqueAsc2ndWhite = "mensuralObliqueAsc2ndWhite";
    /// <summary>
    /// Oblique form, ascending 3rd, black.
    /// </summary>
    public const string MensuralObliqueAsc3rdBlack = "mensuralObliqueAsc3rdBlack";
    /// <summary>
    /// Oblique form, ascending 3rd, black and void.
    /// </summary>
    public const string MensuralObliqueAsc3rdBlackVoid = "mensuralObliqueAsc3rdBlackVoid";
    /// <summary>
    /// Oblique form, ascending 3rd, void.
    /// </summary>
    public const string MensuralObliqueAsc3rdVoid = "mensuralObliqueAsc3rdVoid";
    /// <summary>
    /// Oblique form, ascending 3rd, white.
    /// </summary>
    public const string MensuralObliqueAsc3rdWhite = "mensuralObliqueAsc3rdWhite";
    /// <summary>
    /// Oblique form, ascending 4th, black.
    /// </summary>
    public const string MensuralObliqueAsc4thBlack = "mensuralObliqueAsc4thBlack";
    /// <summary>
    /// Oblique form, ascending 4th, black and void.
    /// </summary>
    public const string MensuralObliqueAsc4thBlackVoid = "mensuralObliqueAsc4thBlackVoid";
    /// <summary>
    /// Oblique form, ascending 4th, void.
    /// </summary>
    public const string MensuralObliqueAsc4thVoid = "mensuralObliqueAsc4thVoid";
    /// <summary>
    /// Oblique form, ascending 4th, white.
    /// </summary>
    public const string MensuralObliqueAsc4thWhite = "mensuralObliqueAsc4thWhite";
    /// <summary>
    /// Oblique form, ascending 5th, black.
    /// </summary>
    public const string MensuralObliqueAsc5thBlack = "mensuralObliqueAsc5thBlack";
    /// <summary>
    /// Oblique form, ascending 5th, black and void.
    /// </summary>
    public const string MensuralObliqueAsc5thBlackVoid = "mensuralObliqueAsc5thBlackVoid";
    /// <summary>
    /// Oblique form, ascending 5th, void.
    /// </summary>
    public const string MensuralObliqueAsc5thVoid = "mensuralObliqueAsc5thVoid";
    /// <summary>
    /// Oblique form, ascending 5th, white.
    /// </summary>
    public const string MensuralObliqueAsc5thWhite = "mensuralObliqueAsc5thWhite";
    /// <summary>
    /// Oblique form, descending 2nd, black.
    /// </summary>
    public const string MensuralObliqueDesc2ndBlack = "mensuralObliqueDesc2ndBlack";
    /// <summary>
    /// Oblique form, descending 2nd, black and void.
    /// </summary>
    public const string MensuralObliqueDesc2ndBlackVoid = "mensuralObliqueDesc2ndBlackVoid";
    /// <summary>
    /// Oblique form, descending 2nd, void.
    /// </summary>
    public const string MensuralObliqueDesc2ndVoid = "mensuralObliqueDesc2ndVoid";
    /// <summary>
    /// Oblique form, descending 2nd, white.
    /// </summary>
    public const string MensuralObliqueDesc2ndWhite = "mensuralObliqueDesc2ndWhite";
    /// <summary>
    /// Oblique form, descending 3rd, black.
    /// </summary>
    public const string MensuralObliqueDesc3rdBlack = "mensuralObliqueDesc3rdBlack";
    /// <summary>
    /// Oblique form, descending 3rd, black and void.
    /// </summary>
    public const string MensuralObliqueDesc3rdBlackVoid = "mensuralObliqueDesc3rdBlackVoid";
    /// <summary>
    /// Oblique form, descending 3rd, void.
    /// </summary>
    public const string MensuralObliqueDesc3rdVoid = "mensuralObliqueDesc3rdVoid";
    /// <summary>
    /// Oblique form, descending 3rd, white.
    /// </summary>
    public const string MensuralObliqueDesc3rdWhite = "mensuralObliqueDesc3rdWhite";
    /// <summary>
    /// Oblique form, descending 4th, black.
    /// </summary>
    public const string MensuralObliqueDesc4thBlack = "mensuralObliqueDesc4thBlack";
    /// <summary>
    /// Oblique form, descending 4th, black and void.
    /// </summary>
    public const string MensuralObliqueDesc4thBlackVoid = "mensuralObliqueDesc4thBlackVoid";
    /// <summary>
    /// Oblique form, descending 4th, void.
    /// </summary>
    public const string MensuralObliqueDesc4thVoid = "mensuralObliqueDesc4thVoid";
    /// <summary>
    /// Oblique form, descending 4th, white.
    /// </summary>
    public const string MensuralObliqueDesc4thWhite = "mensuralObliqueDesc4thWhite";
    /// <summary>
    /// Oblique form, descending 5th, black.
    /// </summary>
    public const string MensuralObliqueDesc5thBlack = "mensuralObliqueDesc5thBlack";
    /// <summary>
    /// Oblique form, descending 5th, black and void.
    /// </summary>
    public const string MensuralObliqueDesc5thBlackVoid = "mensuralObliqueDesc5thBlackVoid";
    /// <summary>
    /// Oblique form, descending 5th, void.
    /// </summary>
    public const string MensuralObliqueDesc5thVoid = "mensuralObliqueDesc5thVoid";
    /// <summary>
    /// Oblique form, descending 5th, white.
    /// </summary>
    public const string MensuralObliqueDesc5thWhite = "mensuralObliqueDesc5thWhite";
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta (9/8).
    /// </summary>
    public const string MensuralProlation1 = "mensuralProlation1";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 4.
    /// </summary>
    public const string MensuralProlation10 = "mensuralProlation10";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 5.
    /// </summary>
    public const string MensuralProlation11 = "mensuralProlation11";
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta (3/4).
    /// </summary>
    public const string MensuralProlation2 = "mensuralProlation2";
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta diminution 1 (3/8).
    /// </summary>
    public const string MensuralProlation3 = "mensuralProlation3";
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta diminution 2 (9/16).
    /// </summary>
    public const string MensuralProlation4 = "mensuralProlation4";
    /// <summary>
    /// Tempus imperfectum cum prolatione perfecta (6/8).
    /// </summary>
    public const string MensuralProlation5 = "mensuralProlation5";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta (2/4).
    /// </summary>
    public const string MensuralProlation6 = "mensuralProlation6";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2).
    /// </summary>
    public const string MensuralProlation7 = "mensuralProlation7";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 2 (6/16).
    /// </summary>
    public const string MensuralProlation8 = "mensuralProlation8";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2).
    /// </summary>
    public const string MensuralProlation9 = "mensuralProlation9";
    /// <summary>
    /// Combining dot.
    /// </summary>
    public const string MensuralProlationCombiningDot = "mensuralProlationCombiningDot";
    /// <summary>
    /// Combining void dot.
    /// </summary>
    public const string MensuralProlationCombiningDotVoid = "mensuralProlationCombiningDotVoid";
    /// <summary>
    /// Combining vertical stroke.
    /// </summary>
    public const string MensuralProlationCombiningStroke = "mensuralProlationCombiningStroke";
    /// <summary>
    /// Combining three dots horizontal.
    /// </summary>
    public const string MensuralProlationCombiningThreeDots = "mensuralProlationCombiningThreeDots";
    /// <summary>
    /// Combining three dots triangular.
    /// </summary>
    public const string MensuralProlationCombiningThreeDotsTri = "mensuralProlationCombiningThreeDotsTri";
    /// <summary>
    /// Combining two dots.
    /// </summary>
    public const string MensuralProlationCombiningTwoDots = "mensuralProlationCombiningTwoDots";
    /// <summary>
    /// Mensural proportion 1.
    /// </summary>
    public const string MensuralProportion1 = "mensuralProportion1";
    /// <summary>
    /// Mensural proportion 2.
    /// </summary>
    public const string MensuralProportion2 = "mensuralProportion2";
    /// <summary>
    /// Mensural proportion 3.
    /// </summary>
    public const string MensuralProportion3 = "mensuralProportion3";
    /// <summary>
    /// Mensural proportion 4.
    /// </summary>
    public const string MensuralProportion4 = "mensuralProportion4";
    /// <summary>
    /// Mensural proportion 5.
    /// </summary>
    public const string MensuralProportion5 = "mensuralProportion5";
    /// <summary>
    /// Mensural proportion 6.
    /// </summary>
    public const string MensuralProportion6 = "mensuralProportion6";
    /// <summary>
    /// Mensural proportion 7.
    /// </summary>
    public const string MensuralProportion7 = "mensuralProportion7";
    /// <summary>
    /// Mensural proportion 8.
    /// </summary>
    public const string MensuralProportion8 = "mensuralProportion8";
    /// <summary>
    /// Mensural proportion 9.
    /// </summary>
    public const string MensuralProportion9 = "mensuralProportion9";
    /// <summary>
    /// Mensural proportion major.
    /// </summary>
    public const string MensuralProportionMajor = "mensuralProportionMajor";
    /// <summary>
    /// Mensural proportion minor.
    /// </summary>
    public const string MensuralProportionMinor = "mensuralProportionMinor";
    /// <summary>
    /// Proportio dupla 1.
    /// </summary>
    public const string MensuralProportionProportioDupla1 = "mensuralProportionProportioDupla1";
    /// <summary>
    /// Proportio dupla 2.
    /// </summary>
    public const string MensuralProportionProportioDupla2 = "mensuralProportionProportioDupla2";
    /// <summary>
    /// Proportio quadrupla.
    /// </summary>
    public const string MensuralProportionProportioQuadrupla = "mensuralProportionProportioQuadrupla";
    /// <summary>
    /// Proportio tripla.
    /// </summary>
    public const string MensuralProportionProportioTripla = "mensuralProportionProportioTripla";
    /// <summary>
    /// Tempus perfectum.
    /// </summary>
    public const string MensuralProportionTempusPerfectum = "mensuralProportionTempusPerfectum";
    /// <summary>
    /// Brevis rest.
    /// </summary>
    public const string MensuralRestBrevis = "mensuralRestBrevis";
    /// <summary>
    /// Fusa rest.
    /// </summary>
    public const string MensuralRestFusa = "mensuralRestFusa";
    /// <summary>
    /// Longa imperfecta rest.
    /// </summary>
    public const string MensuralRestLongaImperfecta = "mensuralRestLongaImperfecta";
    /// <summary>
    /// Longa perfecta rest.
    /// </summary>
    public const string MensuralRestLongaPerfecta = "mensuralRestLongaPerfecta";
    /// <summary>
    /// Maxima rest.
    /// </summary>
    public const string MensuralRestMaxima = "mensuralRestMaxima";
    /// <summary>
    /// Minima rest.
    /// </summary>
    public const string MensuralRestMinima = "mensuralRestMinima";
    /// <summary>
    /// Semibrevis rest.
    /// </summary>
    public const string MensuralRestSemibrevis = "mensuralRestSemibrevis";
    /// <summary>
    /// Semifusa rest.
    /// </summary>
    public const string MensuralRestSemifusa = "mensuralRestSemifusa";
    /// <summary>
    /// Semiminima rest.
    /// </summary>
    public const string MensuralRestSemiminima = "mensuralRestSemiminima";
    /// <summary>
    /// Signum congruentiae down.
    /// </summary>
    public const string MensuralSignumDown = "mensuralSignumDown";
    /// <summary>
    /// Signum congruentiae up.
    /// </summary>
    public const string MensuralSignumUp = "mensuralSignumUp";
    /// <summary>
    /// Tempus imperfectum, horizontal.
    /// </summary>
    public const string MensuralTempusImperfectumHoriz = "mensuralTempusImperfectumHoriz";
    /// <summary>
    /// Tempus perfectum, horizontal.
    /// </summary>
    public const string MensuralTempusPerfectumHoriz = "mensuralTempusPerfectumHoriz";
    /// <summary>
    /// White mensural brevis.
    /// </summary>
    public const string MensuralWhiteBrevis = "mensuralWhiteBrevis";
    /// <summary>
    /// White mensural fusa.
    /// </summary>
    public const string MensuralWhiteFusa = "mensuralWhiteFusa";
    /// <summary>
    /// White mensural longa.
    /// </summary>
    public const string MensuralWhiteLonga = "mensuralWhiteLonga";
    /// <summary>
    /// White mensural maxima.
    /// </summary>
    public const string MensuralWhiteMaxima = "mensuralWhiteMaxima";
    /// <summary>
    /// White mensural minima.
    /// </summary>
    public const string MensuralWhiteMinima = "mensuralWhiteMinima";
    /// <summary>
    /// White mensural semibrevis.
    /// </summary>
    public const string MensuralWhiteSemibrevis = "mensuralWhiteSemibrevis";
    /// <summary>
    /// White mensural semiminima.
    /// </summary>
    public const string MensuralWhiteSemiminima = "mensuralWhiteSemiminima";
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const string MetAugmentationDot = "metAugmentationDot";
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote1024thDown = "metNote1024thDown";
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote1024thUp = "metNote1024thUp";
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote128thDown = "metNote128thDown";
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote128thUp = "metNote128thUp";
    /// <summary>
    /// 16th note (semiquaver) stem down.
    /// </summary>
    public const string MetNote16thDown = "metNote16thDown";
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    public const string MetNote16thUp = "metNote16thUp";
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote256thDown = "metNote256thDown";
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote256thUp = "metNote256thUp";
    /// <summary>
    /// 32nd note (demisemiquaver) stem down.
    /// </summary>
    public const string MetNote32ndDown = "metNote32ndDown";
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    public const string MetNote32ndUp = "metNote32ndUp";
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote512thDown = "metNote512thDown";
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote512thUp = "metNote512thUp";
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote64thDown = "metNote64thDown";
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote64thUp = "metNote64thUp";
    /// <summary>
    /// Eighth note (quaver) stem down.
    /// </summary>
    public const string MetNote8thDown = "metNote8thDown";
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    public const string MetNote8thUp = "metNote8thUp";
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    public const string MetNoteDoubleWhole = "metNoteDoubleWhole";
    /// <summary>
    /// Double whole note (square).
    /// </summary>
    public const string MetNoteDoubleWholeSquare = "metNoteDoubleWholeSquare";
    /// <summary>
    /// Half note (minim) stem down.
    /// </summary>
    public const string MetNoteHalfDown = "metNoteHalfDown";
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    public const string MetNoteHalfUp = "metNoteHalfUp";
    /// <summary>
    /// Quarter note (crotchet) stem down.
    /// </summary>
    public const string MetNoteQuarterDown = "metNoteQuarterDown";
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    public const string MetNoteQuarterUp = "metNoteQuarterUp";
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    public const string MetNoteWhole = "metNoteWhole";
    /// <summary>
    /// Left-pointing arrow for metric modulation.
    /// </summary>
    public const string MetricModulationArrowLeft = "metricModulationArrowLeft";
    /// <summary>
    /// Right-pointing arrow for metric modulation.
    /// </summary>
    public const string MetricModulationArrowRight = "metricModulationArrowRight";
    /// <summary>
    /// Do not copy.
    /// </summary>
    public const string MiscDoNotCopy = "miscDoNotCopy";
    /// <summary>
    /// Do not photocopy.
    /// </summary>
    public const string MiscDoNotPhotocopy = "miscDoNotPhotocopy";
    /// <summary>
    /// Eyeglasses.
    /// </summary>
    public const string MiscEyeglasses = "miscEyeglasses";
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string Note1024thDown = "note1024thDown";
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string Note1024thUp = "note1024thUp";
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem down.
    /// </summary>
    public const string Note128thDown = "note128thDown";
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    public const string Note128thUp = "note128thUp";
    /// <summary>
    /// 16th note (semiquaver) stem down.
    /// </summary>
    public const string Note16thDown = "note16thDown";
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    public const string Note16thUp = "note16thUp";
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string Note256thDown = "note256thDown";
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string Note256thUp = "note256thUp";
    /// <summary>
    /// 32nd note (demisemiquaver) stem down.
    /// </summary>
    public const string Note32ndDown = "note32ndDown";
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    public const string Note32ndUp = "note32ndUp";
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string Note512thDown = "note512thDown";
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string Note512thUp = "note512thUp";
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem down.
    /// </summary>
    public const string Note64thDown = "note64thDown";
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    public const string Note64thUp = "note64thUp";
    /// <summary>
    /// Eighth note (quaver) stem down.
    /// </summary>
    public const string Note8thDown = "note8thDown";
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    public const string Note8thUp = "note8thUp";
    /// <summary>
    /// A (black note).
    /// </summary>
    public const string NoteABlack = "noteABlack";
    /// <summary>
    /// A flat (black note).
    /// </summary>
    public const string NoteAFlatBlack = "noteAFlatBlack";
    /// <summary>
    /// A flat (half note).
    /// </summary>
    public const string NoteAFlatHalf = "noteAFlatHalf";
    /// <summary>
    /// A flat (whole note).
    /// </summary>
    public const string NoteAFlatWhole = "noteAFlatWhole";
    /// <summary>
    /// A (half note).
    /// </summary>
    public const string NoteAHalf = "noteAHalf";
    /// <summary>
    /// A sharp (black note).
    /// </summary>
    public const string NoteASharpBlack = "noteASharpBlack";
    /// <summary>
    /// A sharp (half note).
    /// </summary>
    public const string NoteASharpHalf = "noteASharpHalf";
    /// <summary>
    /// A sharp (whole note).
    /// </summary>
    public const string NoteASharpWhole = "noteASharpWhole";
    /// <summary>
    /// A (whole note).
    /// </summary>
    public const string NoteAWhole = "noteAWhole";
    /// <summary>
    /// B (black note).
    /// </summary>
    public const string NoteBBlack = "noteBBlack";
    /// <summary>
    /// B flat (black note).
    /// </summary>
    public const string NoteBFlatBlack = "noteBFlatBlack";
    /// <summary>
    /// B flat (half note).
    /// </summary>
    public const string NoteBFlatHalf = "noteBFlatHalf";
    /// <summary>
    /// B flat (whole note).
    /// </summary>
    public const string NoteBFlatWhole = "noteBFlatWhole";
    /// <summary>
    /// B (half note).
    /// </summary>
    public const string NoteBHalf = "noteBHalf";
    /// <summary>
    /// B sharp (black note).
    /// </summary>
    public const string NoteBSharpBlack = "noteBSharpBlack";
    /// <summary>
    /// B sharp (half note).
    /// </summary>
    public const string NoteBSharpHalf = "noteBSharpHalf";
    /// <summary>
    /// B sharp (whole note).
    /// </summary>
    public const string NoteBSharpWhole = "noteBSharpWhole";
    /// <summary>
    /// B (whole note).
    /// </summary>
    public const string NoteBWhole = "noteBWhole";
    /// <summary>
    /// C (black note).
    /// </summary>
    public const string NoteCBlack = "noteCBlack";
    /// <summary>
    /// C flat (black note).
    /// </summary>
    public const string NoteCFlatBlack = "noteCFlatBlack";
    /// <summary>
    /// C flat (half note).
    /// </summary>
    public const string NoteCFlatHalf = "noteCFlatHalf";
    /// <summary>
    /// C flat (whole note).
    /// </summary>
    public const string NoteCFlatWhole = "noteCFlatWhole";
    /// <summary>
    /// C (half note).
    /// </summary>
    public const string NoteCHalf = "noteCHalf";
    /// <summary>
    /// C sharp (black note).
    /// </summary>
    public const string NoteCSharpBlack = "noteCSharpBlack";
    /// <summary>
    /// C sharp (half note).
    /// </summary>
    public const string NoteCSharpHalf = "noteCSharpHalf";
    /// <summary>
    /// C sharp (whole note).
    /// </summary>
    public const string NoteCSharpWhole = "noteCSharpWhole";
    /// <summary>
    /// C (whole note).
    /// </summary>
    public const string NoteCWhole = "noteCWhole";
    /// <summary>
    /// D (black note).
    /// </summary>
    public const string NoteDBlack = "noteDBlack";
    /// <summary>
    /// D flat (black note).
    /// </summary>
    public const string NoteDFlatBlack = "noteDFlatBlack";
    /// <summary>
    /// D flat (half note).
    /// </summary>
    public const string NoteDFlatHalf = "noteDFlatHalf";
    /// <summary>
    /// D flat (whole note).
    /// </summary>
    public const string NoteDFlatWhole = "noteDFlatWhole";
    /// <summary>
    /// D (half note).
    /// </summary>
    public const string NoteDHalf = "noteDHalf";
    /// <summary>
    /// D sharp (black note).
    /// </summary>
    public const string NoteDSharpBlack = "noteDSharpBlack";
    /// <summary>
    /// D sharp (half note).
    /// </summary>
    public const string NoteDSharpHalf = "noteDSharpHalf";
    /// <summary>
    /// D sharp (whole note).
    /// </summary>
    public const string NoteDSharpWhole = "noteDSharpWhole";
    /// <summary>
    /// D (whole note).
    /// </summary>
    public const string NoteDWhole = "noteDWhole";
    /// <summary>
    /// Di (black note).
    /// </summary>
    public const string NoteDiBlack = "noteDiBlack";
    /// <summary>
    /// Di (half note).
    /// </summary>
    public const string NoteDiHalf = "noteDiHalf";
    /// <summary>
    /// Di (whole note).
    /// </summary>
    public const string NoteDiWhole = "noteDiWhole";
    /// <summary>
    /// Do (black note).
    /// </summary>
    public const string NoteDoBlack = "noteDoBlack";
    /// <summary>
    /// Do (half note).
    /// </summary>
    public const string NoteDoHalf = "noteDoHalf";
    /// <summary>
    /// Do (whole note).
    /// </summary>
    public const string NoteDoWhole = "noteDoWhole";
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    public const string NoteDoubleWhole = "noteDoubleWhole";
    /// <summary>
    /// Double whole note (square).
    /// </summary>
    public const string NoteDoubleWholeSquare = "noteDoubleWholeSquare";
    /// <summary>
    /// E (black note).
    /// </summary>
    public const string NoteEBlack = "noteEBlack";
    /// <summary>
    /// E flat (black note).
    /// </summary>
    public const string NoteEFlatBlack = "noteEFlatBlack";
    /// <summary>
    /// E flat (half note).
    /// </summary>
    public const string NoteEFlatHalf = "noteEFlatHalf";
    /// <summary>
    /// E flat (whole note).
    /// </summary>
    public const string NoteEFlatWhole = "noteEFlatWhole";
    /// <summary>
    /// E (half note).
    /// </summary>
    public const string NoteEHalf = "noteEHalf";
    /// <summary>
    /// E sharp (black note).
    /// </summary>
    public const string NoteESharpBlack = "noteESharpBlack";
    /// <summary>
    /// E sharp (half note).
    /// </summary>
    public const string NoteESharpHalf = "noteESharpHalf";
    /// <summary>
    /// E sharp (whole note).
    /// </summary>
    public const string NoteESharpWhole = "noteESharpWhole";
    /// <summary>
    /// E (whole note).
    /// </summary>
    public const string NoteEWhole = "noteEWhole";
    /// <summary>
    /// Empty black note.
    /// </summary>
    public const string NoteEmptyBlack = "noteEmptyBlack";
    /// <summary>
    /// Empty half note.
    /// </summary>
    public const string NoteEmptyHalf = "noteEmptyHalf";
    /// <summary>
    /// Empty whole note.
    /// </summary>
    public const string NoteEmptyWhole = "noteEmptyWhole";
    /// <summary>
    /// F (black note).
    /// </summary>
    public const string NoteFBlack = "noteFBlack";
    /// <summary>
    /// F flat (black note).
    /// </summary>
    public const string NoteFFlatBlack = "noteFFlatBlack";
    /// <summary>
    /// F flat (half note).
    /// </summary>
    public const string NoteFFlatHalf = "noteFFlatHalf";
    /// <summary>
    /// F flat (whole note).
    /// </summary>
    public const string NoteFFlatWhole = "noteFFlatWhole";
    /// <summary>
    /// F (half note).
    /// </summary>
    public const string NoteFHalf = "noteFHalf";
    /// <summary>
    /// F sharp (black note).
    /// </summary>
    public const string NoteFSharpBlack = "noteFSharpBlack";
    /// <summary>
    /// F sharp (half note).
    /// </summary>
    public const string NoteFSharpHalf = "noteFSharpHalf";
    /// <summary>
    /// F sharp (whole note).
    /// </summary>
    public const string NoteFSharpWhole = "noteFSharpWhole";
    /// <summary>
    /// F (whole note).
    /// </summary>
    public const string NoteFWhole = "noteFWhole";
    /// <summary>
    /// Fa (black note).
    /// </summary>
    public const string NoteFaBlack = "noteFaBlack";
    /// <summary>
    /// Fa (half note).
    /// </summary>
    public const string NoteFaHalf = "noteFaHalf";
    /// <summary>
    /// Fa (whole note).
    /// </summary>
    public const string NoteFaWhole = "noteFaWhole";
    /// <summary>
    /// Fi (black note).
    /// </summary>
    public const string NoteFiBlack = "noteFiBlack";
    /// <summary>
    /// Fi (half note).
    /// </summary>
    public const string NoteFiHalf = "noteFiHalf";
    /// <summary>
    /// Fi (whole note).
    /// </summary>
    public const string NoteFiWhole = "noteFiWhole";
    /// <summary>
    /// G (black note).
    /// </summary>
    public const string NoteGBlack = "noteGBlack";
    /// <summary>
    /// G flat (black note).
    /// </summary>
    public const string NoteGFlatBlack = "noteGFlatBlack";
    /// <summary>
    /// G flat (half note).
    /// </summary>
    public const string NoteGFlatHalf = "noteGFlatHalf";
    /// <summary>
    /// G flat (whole note).
    /// </summary>
    public const string NoteGFlatWhole = "noteGFlatWhole";
    /// <summary>
    /// G (half note).
    /// </summary>
    public const string NoteGHalf = "noteGHalf";
    /// <summary>
    /// G sharp (black note).
    /// </summary>
    public const string NoteGSharpBlack = "noteGSharpBlack";
    /// <summary>
    /// G sharp (half note).
    /// </summary>
    public const string NoteGSharpHalf = "noteGSharpHalf";
    /// <summary>
    /// G sharp (whole note).
    /// </summary>
    public const string NoteGSharpWhole = "noteGSharpWhole";
    /// <summary>
    /// G (whole note).
    /// </summary>
    public const string NoteGWhole = "noteGWhole";
    /// <summary>
    /// H (black note).
    /// </summary>
    public const string NoteHBlack = "noteHBlack";
    /// <summary>
    /// H (half note).
    /// </summary>
    public const string NoteHHalf = "noteHHalf";
    /// <summary>
    /// H sharp (black note).
    /// </summary>
    public const string NoteHSharpBlack = "noteHSharpBlack";
    /// <summary>
    /// H sharp (half note).
    /// </summary>
    public const string NoteHSharpHalf = "noteHSharpHalf";
    /// <summary>
    /// H sharp (whole note).
    /// </summary>
    public const string NoteHSharpWhole = "noteHSharpWhole";
    /// <summary>
    /// H (whole note).
    /// </summary>
    public const string NoteHWhole = "noteHWhole";
    /// <summary>
    /// Half note (minim) stem down.
    /// </summary>
    public const string NoteHalfDown = "noteHalfDown";
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    public const string NoteHalfUp = "noteHalfUp";
    /// <summary>
    /// La (black note).
    /// </summary>
    public const string NoteLaBlack = "noteLaBlack";
    /// <summary>
    /// La (half note).
    /// </summary>
    public const string NoteLaHalf = "noteLaHalf";
    /// <summary>
    /// La (whole note).
    /// </summary>
    public const string NoteLaWhole = "noteLaWhole";
    /// <summary>
    /// Le (black note).
    /// </summary>
    public const string NoteLeBlack = "noteLeBlack";
    /// <summary>
    /// Le (half note).
    /// </summary>
    public const string NoteLeHalf = "noteLeHalf";
    /// <summary>
    /// Le (whole note).
    /// </summary>
    public const string NoteLeWhole = "noteLeWhole";
    /// <summary>
    /// Li (black note).
    /// </summary>
    public const string NoteLiBlack = "noteLiBlack";
    /// <summary>
    /// Li (half note).
    /// </summary>
    public const string NoteLiHalf = "noteLiHalf";
    /// <summary>
    /// Li (whole note).
    /// </summary>
    public const string NoteLiWhole = "noteLiWhole";
    /// <summary>
    /// Me (black note).
    /// </summary>
    public const string NoteMeBlack = "noteMeBlack";
    /// <summary>
    /// Me (half note).
    /// </summary>
    public const string NoteMeHalf = "noteMeHalf";
    /// <summary>
    /// Me (whole note).
    /// </summary>
    public const string NoteMeWhole = "noteMeWhole";
    /// <summary>
    /// Mi (black note).
    /// </summary>
    public const string NoteMiBlack = "noteMiBlack";
    /// <summary>
    /// Mi (half note).
    /// </summary>
    public const string NoteMiHalf = "noteMiHalf";
    /// <summary>
    /// Mi (whole note).
    /// </summary>
    public const string NoteMiWhole = "noteMiWhole";
    /// <summary>
    /// Quarter note (crotchet) stem down.
    /// </summary>
    public const string NoteQuarterDown = "noteQuarterDown";
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    public const string NoteQuarterUp = "noteQuarterUp";
    /// <summary>
    /// Ra (black note).
    /// </summary>
    public const string NoteRaBlack = "noteRaBlack";
    /// <summary>
    /// Ra (half note).
    /// </summary>
    public const string NoteRaHalf = "noteRaHalf";
    /// <summary>
    /// Ra (whole note).
    /// </summary>
    public const string NoteRaWhole = "noteRaWhole";
    /// <summary>
    /// Re (black note).
    /// </summary>
    public const string NoteReBlack = "noteReBlack";
    /// <summary>
    /// Re (half note).
    /// </summary>
    public const string NoteReHalf = "noteReHalf";
    /// <summary>
    /// Re (whole note).
    /// </summary>
    public const string NoteReWhole = "noteReWhole";
    /// <summary>
    /// Ri (black note).
    /// </summary>
    public const string NoteRiBlack = "noteRiBlack";
    /// <summary>
    /// Ri (half note).
    /// </summary>
    public const string NoteRiHalf = "noteRiHalf";
    /// <summary>
    /// Ri (whole note).
    /// </summary>
    public const string NoteRiWhole = "noteRiWhole";
    /// <summary>
    /// Se (black note).
    /// </summary>
    public const string NoteSeBlack = "noteSeBlack";
    /// <summary>
    /// Se (half note).
    /// </summary>
    public const string NoteSeHalf = "noteSeHalf";
    /// <summary>
    /// Se (whole note).
    /// </summary>
    public const string NoteSeWhole = "noteSeWhole";
    /// <summary>
    /// Arrowhead left black (Funk 7-shape re).
    /// </summary>
    public const string NoteShapeArrowheadLeftBlack = "noteShapeArrowheadLeftBlack";
    /// <summary>
    /// Arrowhead left double whole (Funk 7-shape re).
    /// </summary>
    public const string NoteShapeArrowheadLeftDoubleWhole = "noteShapeArrowheadLeftDoubleWhole";
    /// <summary>
    /// Arrowhead left white (Funk 7-shape re).
    /// </summary>
    public const string NoteShapeArrowheadLeftWhite = "noteShapeArrowheadLeftWhite";
    /// <summary>
    /// Diamond black (4-shape mi; 7-shape mi).
    /// </summary>
    public const string NoteShapeDiamondBlack = "noteShapeDiamondBlack";
    /// <summary>
    /// Diamond double whole (4-shape mi; 7-shape mi).
    /// </summary>
    public const string NoteShapeDiamondDoubleWhole = "noteShapeDiamondDoubleWhole";
    /// <summary>
    /// Diamond white (4-shape mi; 7-shape mi).
    /// </summary>
    public const string NoteShapeDiamondWhite = "noteShapeDiamondWhite";
    /// <summary>
    /// Isosceles triangle black (Walker 7-shape ti).
    /// </summary>
    public const string NoteShapeIsoscelesTriangleBlack = "noteShapeIsoscelesTriangleBlack";
    /// <summary>
    /// Isosceles triangle double whole (Walker 7-shape ti).
    /// </summary>
    public const string NoteShapeIsoscelesTriangleDoubleWhole = "noteShapeIsoscelesTriangleDoubleWhole";
    /// <summary>
    /// Isosceles triangle white (Walker 7-shape ti).
    /// </summary>
    public const string NoteShapeIsoscelesTriangleWhite = "noteShapeIsoscelesTriangleWhite";
    /// <summary>
    /// Inverted keystone black (Walker 7-shape do).
    /// </summary>
    public const string NoteShapeKeystoneBlack = "noteShapeKeystoneBlack";
    /// <summary>
    /// Inverted keystone double whole (Walker 7-shape do).
    /// </summary>
    public const string NoteShapeKeystoneDoubleWhole = "noteShapeKeystoneDoubleWhole";
    /// <summary>
    /// Inverted keystone white (Walker 7-shape do).
    /// </summary>
    public const string NoteShapeKeystoneWhite = "noteShapeKeystoneWhite";
    /// <summary>
    /// Moon black (Aikin 7-shape re).
    /// </summary>
    public const string NoteShapeMoonBlack = "noteShapeMoonBlack";
    /// <summary>
    /// Moon double whole (Aikin 7-shape re).
    /// </summary>
    public const string NoteShapeMoonDoubleWhole = "noteShapeMoonDoubleWhole";
    /// <summary>
    /// Moon left black (Funk 7-shape do).
    /// </summary>
    public const string NoteShapeMoonLeftBlack = "noteShapeMoonLeftBlack";
    /// <summary>
    /// Moon left double whole (Funk 7-shape do).
    /// </summary>
    public const string NoteShapeMoonLeftDoubleWhole = "noteShapeMoonLeftDoubleWhole";
    /// <summary>
    /// Moon left white (Funk 7-shape do).
    /// </summary>
    public const string NoteShapeMoonLeftWhite = "noteShapeMoonLeftWhite";
    /// <summary>
    /// Moon white (Aikin 7-shape re).
    /// </summary>
    public const string NoteShapeMoonWhite = "noteShapeMoonWhite";
    /// <summary>
    /// Quarter moon black (Walker 7-shape re).
    /// </summary>
    public const string NoteShapeQuarterMoonBlack = "noteShapeQuarterMoonBlack";
    /// <summary>
    /// Quarter moon double whole (Walker 7-shape re).
    /// </summary>
    public const string NoteShapeQuarterMoonDoubleWhole = "noteShapeQuarterMoonDoubleWhole";
    /// <summary>
    /// Quarter moon white (Walker 7-shape re).
    /// </summary>
    public const string NoteShapeQuarterMoonWhite = "noteShapeQuarterMoonWhite";
    /// <summary>
    /// Round black (4-shape sol; 7-shape so).
    /// </summary>
    public const string NoteShapeRoundBlack = "noteShapeRoundBlack";
    /// <summary>
    /// Round double whole (4-shape sol; 7-shape so).
    /// </summary>
    public const string NoteShapeRoundDoubleWhole = "noteShapeRoundDoubleWhole";
    /// <summary>
    /// Round white (4-shape sol; 7-shape so).
    /// </summary>
    public const string NoteShapeRoundWhite = "noteShapeRoundWhite";
    /// <summary>
    /// Square black (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const string NoteShapeSquareBlack = "noteShapeSquareBlack";
    /// <summary>
    /// Square double whole (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const string NoteShapeSquareDoubleWhole = "noteShapeSquareDoubleWhole";
    /// <summary>
    /// Square white (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const string NoteShapeSquareWhite = "noteShapeSquareWhite";
    /// <summary>
    /// Triangle left black (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleLeftBlack = "noteShapeTriangleLeftBlack";
    /// <summary>
    /// Triangle left double whole (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleLeftDoubleWhole = "noteShapeTriangleLeftDoubleWhole";
    /// <summary>
    /// Triangle left white (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleLeftWhite = "noteShapeTriangleLeftWhite";
    /// <summary>
    /// Triangle right black (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleRightBlack = "noteShapeTriangleRightBlack";
    /// <summary>
    /// Triangle right double whole (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleRightDoubleWhole = "noteShapeTriangleRightDoubleWhole";
    /// <summary>
    /// Triangle right white (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleRightWhite = "noteShapeTriangleRightWhite";
    /// <summary>
    /// Triangle-round black (Aikin 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundBlack = "noteShapeTriangleRoundBlack";
    /// <summary>
    /// Triangle-round white (Aikin 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundDoubleWhole = "noteShapeTriangleRoundDoubleWhole";
    /// <summary>
    /// Triangle-round left black (Funk 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundLeftBlack = "noteShapeTriangleRoundLeftBlack";
    /// <summary>
    /// Triangle-round left double whole (Funk 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundLeftDoubleWhole = "noteShapeTriangleRoundLeftDoubleWhole";
    /// <summary>
    /// Triangle-round left white (Funk 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundLeftWhite = "noteShapeTriangleRoundLeftWhite";
    /// <summary>
    /// Triangle-round white (Aikin 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundWhite = "noteShapeTriangleRoundWhite";
    /// <summary>
    /// Triangle up black (Aikin 7-shape do).
    /// </summary>
    public const string NoteShapeTriangleUpBlack = "noteShapeTriangleUpBlack";
    /// <summary>
    /// Triangle up double whole (Aikin 7-shape do).
    /// </summary>
    public const string NoteShapeTriangleUpDoubleWhole = "noteShapeTriangleUpDoubleWhole";
    /// <summary>
    /// Triangle up white (Aikin 7-shape do).
    /// </summary>
    public const string NoteShapeTriangleUpWhite = "noteShapeTriangleUpWhite";
    /// <summary>
    /// Si (black note).
    /// </summary>
    public const string NoteSiBlack = "noteSiBlack";
    /// <summary>
    /// Si (half note).
    /// </summary>
    public const string NoteSiHalf = "noteSiHalf";
    /// <summary>
    /// Si (whole note).
    /// </summary>
    public const string NoteSiWhole = "noteSiWhole";
    /// <summary>
    /// So (black note).
    /// </summary>
    public const string NoteSoBlack = "noteSoBlack";
    /// <summary>
    /// So (half note).
    /// </summary>
    public const string NoteSoHalf = "noteSoHalf";
    /// <summary>
    /// So (whole note).
    /// </summary>
    public const string NoteSoWhole = "noteSoWhole";
    /// <summary>
    /// Te (black note).
    /// </summary>
    public const string NoteTeBlack = "noteTeBlack";
    /// <summary>
    /// Te (half note).
    /// </summary>
    public const string NoteTeHalf = "noteTeHalf";
    /// <summary>
    /// Te (whole note).
    /// </summary>
    public const string NoteTeWhole = "noteTeWhole";
    /// <summary>
    /// Ti (black note).
    /// </summary>
    public const string NoteTiBlack = "noteTiBlack";
    /// <summary>
    /// Ti (half note).
    /// </summary>
    public const string NoteTiHalf = "noteTiHalf";
    /// <summary>
    /// Ti (whole note).
    /// </summary>
    public const string NoteTiWhole = "noteTiWhole";
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    public const string NoteWhole = "noteWhole";
    /// <summary>
    /// Black notehead.
    /// </summary>
    public const string NoteheadBlack = "noteheadBlack";
    /// <summary>
    /// Circle slash notehead.
    /// </summary>
    public const string NoteheadCircleSlash = "noteheadCircleSlash";
    /// <summary>
    /// Circle X notehead.
    /// </summary>
    public const string NoteheadCircleX = "noteheadCircleX";
    /// <summary>
    /// Circle X double whole.
    /// </summary>
    public const string NoteheadCircleXDoubleWhole = "noteheadCircleXDoubleWhole";
    /// <summary>
    /// Circle X half.
    /// </summary>
    public const string NoteheadCircleXHalf = "noteheadCircleXHalf";
    /// <summary>
    /// Circle X whole.
    /// </summary>
    public const string NoteheadCircleXWhole = "noteheadCircleXWhole";
    /// <summary>
    /// Circled black notehead.
    /// </summary>
    public const string NoteheadCircledBlack = "noteheadCircledBlack";
    /// <summary>
    /// Black notehead in large circle.
    /// </summary>
    public const string NoteheadCircledBlackLarge = "noteheadCircledBlackLarge";
    /// <summary>
    /// Circled double whole notehead.
    /// </summary>
    public const string NoteheadCircledDoubleWhole = "noteheadCircledDoubleWhole";
    /// <summary>
    /// Double whole notehead in large circle.
    /// </summary>
    public const string NoteheadCircledDoubleWholeLarge = "noteheadCircledDoubleWholeLarge";
    /// <summary>
    /// Circled half notehead.
    /// </summary>
    public const string NoteheadCircledHalf = "noteheadCircledHalf";
    /// <summary>
    /// Half notehead in large circle.
    /// </summary>
    public const string NoteheadCircledHalfLarge = "noteheadCircledHalfLarge";
    /// <summary>
    /// Circled whole notehead.
    /// </summary>
    public const string NoteheadCircledWhole = "noteheadCircledWhole";
    /// <summary>
    /// Whole notehead in large circle.
    /// </summary>
    public const string NoteheadCircledWholeLarge = "noteheadCircledWholeLarge";
    /// <summary>
    /// Cross notehead in large circle.
    /// </summary>
    public const string NoteheadCircledXLarge = "noteheadCircledXLarge";
    /// <summary>
    /// Double whole note cluster, 2nd.
    /// </summary>
    public const string NoteheadClusterDoubleWhole2nd = "noteheadClusterDoubleWhole2nd";
    /// <summary>
    /// Double whole note cluster, 3rd.
    /// </summary>
    public const string NoteheadClusterDoubleWhole3rd = "noteheadClusterDoubleWhole3rd";
    /// <summary>
    /// Combining double whole note cluster, bottom.
    /// </summary>
    public const string NoteheadClusterDoubleWholeBottom = "noteheadClusterDoubleWholeBottom";
    /// <summary>
    /// Combining double whole note cluster, middle.
    /// </summary>
    public const string NoteheadClusterDoubleWholeMiddle = "noteheadClusterDoubleWholeMiddle";
    /// <summary>
    /// Combining double whole note cluster, top.
    /// </summary>
    public const string NoteheadClusterDoubleWholeTop = "noteheadClusterDoubleWholeTop";
    /// <summary>
    /// Half note cluster, 2nd.
    /// </summary>
    public const string NoteheadClusterHalf2nd = "noteheadClusterHalf2nd";
    /// <summary>
    /// Half note cluster, 3rd.
    /// </summary>
    public const string NoteheadClusterHalf3rd = "noteheadClusterHalf3rd";
    /// <summary>
    /// Combining half note cluster, bottom.
    /// </summary>
    public const string NoteheadClusterHalfBottom = "noteheadClusterHalfBottom";
    /// <summary>
    /// Combining half note cluster, middle.
    /// </summary>
    public const string NoteheadClusterHalfMiddle = "noteheadClusterHalfMiddle";
    /// <summary>
    /// Combining half note cluster, top.
    /// </summary>
    public const string NoteheadClusterHalfTop = "noteheadClusterHalfTop";
    /// <summary>
    /// Quarter note cluster, 2nd.
    /// </summary>
    public const string NoteheadClusterQuarter2nd = "noteheadClusterQuarter2nd";
    /// <summary>
    /// Quarter note cluster, 3rd.
    /// </summary>
    public const string NoteheadClusterQuarter3rd = "noteheadClusterQuarter3rd";
    /// <summary>
    /// Combining quarter note cluster, bottom.
    /// </summary>
    public const string NoteheadClusterQuarterBottom = "noteheadClusterQuarterBottom";
    /// <summary>
    /// Combining quarter note cluster, middle.
    /// </summary>
    public const string NoteheadClusterQuarterMiddle = "noteheadClusterQuarterMiddle";
    /// <summary>
    /// Combining quarter note cluster, top.
    /// </summary>
    public const string NoteheadClusterQuarterTop = "noteheadClusterQuarterTop";
    /// <summary>
    /// Cluster notehead black (round).
    /// </summary>
    public const string NoteheadClusterRoundBlack = "noteheadClusterRoundBlack";
    /// <summary>
    /// Cluster notehead white (round).
    /// </summary>
    public const string NoteheadClusterRoundWhite = "noteheadClusterRoundWhite";
    /// <summary>
    /// Cluster notehead black (square).
    /// </summary>
    public const string NoteheadClusterSquareBlack = "noteheadClusterSquareBlack";
    /// <summary>
    /// Cluster notehead white (square).
    /// </summary>
    public const string NoteheadClusterSquareWhite = "noteheadClusterSquareWhite";
    /// <summary>
    /// Whole note cluster, 2nd.
    /// </summary>
    public const string NoteheadClusterWhole2nd = "noteheadClusterWhole2nd";
    /// <summary>
    /// Whole note cluster, 3rd.
    /// </summary>
    public const string NoteheadClusterWhole3rd = "noteheadClusterWhole3rd";
    /// <summary>
    /// Combining whole note cluster, bottom.
    /// </summary>
    public const string NoteheadClusterWholeBottom = "noteheadClusterWholeBottom";
    /// <summary>
    /// Combining whole note cluster, middle.
    /// </summary>
    public const string NoteheadClusterWholeMiddle = "noteheadClusterWholeMiddle";
    /// <summary>
    /// Combining whole note cluster, top.
    /// </summary>
    public const string NoteheadClusterWholeTop = "noteheadClusterWholeTop";
    /// <summary>
    /// 4/11 note (eleventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellEleventhNoteSeriesHalf = "noteheadCowellEleventhNoteSeriesHalf";
    /// <summary>
    /// 8/11 note (eleventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellEleventhNoteSeriesWhole = "noteheadCowellEleventhNoteSeriesWhole";
    /// <summary>
    /// 2/11 note (eleventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellEleventhSeriesBlack = "noteheadCowellEleventhSeriesBlack";
    /// <summary>
    /// 2/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifteenthNoteSeriesBlack = "noteheadCowellFifteenthNoteSeriesBlack";
    /// <summary>
    /// 4/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifteenthNoteSeriesHalf = "noteheadCowellFifteenthNoteSeriesHalf";
    /// <summary>
    /// 8/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifteenthNoteSeriesWhole = "noteheadCowellFifteenthNoteSeriesWhole";
    /// <summary>
    /// 1/5 note (fifth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifthNoteSeriesBlack = "noteheadCowellFifthNoteSeriesBlack";
    /// <summary>
    /// 2/5 note (fifth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifthNoteSeriesHalf = "noteheadCowellFifthNoteSeriesHalf";
    /// <summary>
    /// 4/5 note (fifth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifthNoteSeriesWhole = "noteheadCowellFifthNoteSeriesWhole";
    /// <summary>
    /// 2/9 note (ninth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellNinthNoteSeriesBlack = "noteheadCowellNinthNoteSeriesBlack";
    /// <summary>
    /// 4/9 note (ninth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellNinthNoteSeriesHalf = "noteheadCowellNinthNoteSeriesHalf";
    /// <summary>
    /// 8/9 note (ninth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellNinthNoteSeriesWhole = "noteheadCowellNinthNoteSeriesWhole";
    /// <summary>
    /// 1/7 note (seventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellSeventhNoteSeriesBlack = "noteheadCowellSeventhNoteSeriesBlack";
    /// <summary>
    /// 2/7 note (seventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellSeventhNoteSeriesHalf = "noteheadCowellSeventhNoteSeriesHalf";
    /// <summary>
    /// 4/7 note (seventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellSeventhNoteSeriesWhole = "noteheadCowellSeventhNoteSeriesWhole";
    /// <summary>
    /// 1/6 note (third note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirdNoteSeriesBlack = "noteheadCowellThirdNoteSeriesBlack";
    /// <summary>
    /// 1/3 note (third note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirdNoteSeriesHalf = "noteheadCowellThirdNoteSeriesHalf";
    /// <summary>
    /// 2/3 note (third note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirdNoteSeriesWhole = "noteheadCowellThirdNoteSeriesWhole";
    /// <summary>
    /// 2/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirteenthNoteSeriesBlack = "noteheadCowellThirteenthNoteSeriesBlack";
    /// <summary>
    /// 4/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirteenthNoteSeriesHalf = "noteheadCowellThirteenthNoteSeriesHalf";
    /// <summary>
    /// 8/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirteenthNoteSeriesWhole = "noteheadCowellThirteenthNoteSeriesWhole";
    /// <summary>
    /// Diamond black notehead.
    /// </summary>
    public const string NoteheadDiamondBlack = "noteheadDiamondBlack";
    /// <summary>
    /// Diamond black notehead (old).
    /// </summary>
    public const string NoteheadDiamondBlackOld = "noteheadDiamondBlackOld";
    /// <summary>
    /// Diamond black notehead (wide).
    /// </summary>
    public const string NoteheadDiamondBlackWide = "noteheadDiamondBlackWide";
    /// <summary>
    /// Black diamond cluster, 2nd.
    /// </summary>
    public const string NoteheadDiamondClusterBlack2nd = "noteheadDiamondClusterBlack2nd";
    /// <summary>
    /// Black diamond cluster, 3rd.
    /// </summary>
    public const string NoteheadDiamondClusterBlack3rd = "noteheadDiamondClusterBlack3rd";
    /// <summary>
    /// Combining black diamond cluster, bottom.
    /// </summary>
    public const string NoteheadDiamondClusterBlackBottom = "noteheadDiamondClusterBlackBottom";
    /// <summary>
    /// Combining black diamond cluster, middle.
    /// </summary>
    public const string NoteheadDiamondClusterBlackMiddle = "noteheadDiamondClusterBlackMiddle";
    /// <summary>
    /// Combining black diamond cluster, top.
    /// </summary>
    public const string NoteheadDiamondClusterBlackTop = "noteheadDiamondClusterBlackTop";
    /// <summary>
    /// White diamond cluster, 2nd.
    /// </summary>
    public const string NoteheadDiamondClusterWhite2nd = "noteheadDiamondClusterWhite2nd";
    /// <summary>
    /// White diamond cluster, 3rd.
    /// </summary>
    public const string NoteheadDiamondClusterWhite3rd = "noteheadDiamondClusterWhite3rd";
    /// <summary>
    /// Combining white diamond cluster, bottom.
    /// </summary>
    public const string NoteheadDiamondClusterWhiteBottom = "noteheadDiamondClusterWhiteBottom";
    /// <summary>
    /// Combining white diamond cluster, middle.
    /// </summary>
    public const string NoteheadDiamondClusterWhiteMiddle = "noteheadDiamondClusterWhiteMiddle";
    /// <summary>
    /// Combining white diamond cluster, top.
    /// </summary>
    public const string NoteheadDiamondClusterWhiteTop = "noteheadDiamondClusterWhiteTop";
    /// <summary>
    /// Diamond double whole notehead.
    /// </summary>
    public const string NoteheadDiamondDoubleWhole = "noteheadDiamondDoubleWhole";
    /// <summary>
    /// Diamond double whole notehead (old).
    /// </summary>
    public const string NoteheadDiamondDoubleWholeOld = "noteheadDiamondDoubleWholeOld";
    /// <summary>
    /// Diamond half notehead.
    /// </summary>
    public const string NoteheadDiamondHalf = "noteheadDiamondHalf";
    /// <summary>
    /// Half-filled diamond notehead.
    /// </summary>
    public const string NoteheadDiamondHalfFilled = "noteheadDiamondHalfFilled";
    /// <summary>
    /// Diamond half notehead (old).
    /// </summary>
    public const string NoteheadDiamondHalfOld = "noteheadDiamondHalfOld";
    /// <summary>
    /// Diamond half notehead (wide).
    /// </summary>
    public const string NoteheadDiamondHalfWide = "noteheadDiamondHalfWide";
    /// <summary>
    /// Open diamond notehead.
    /// </summary>
    public const string NoteheadDiamondOpen = "noteheadDiamondOpen";
    /// <summary>
    /// Diamond white notehead.
    /// </summary>
    public const string NoteheadDiamondWhite = "noteheadDiamondWhite";
    /// <summary>
    /// Diamond white notehead (wide).
    /// </summary>
    public const string NoteheadDiamondWhiteWide = "noteheadDiamondWhiteWide";
    /// <summary>
    /// Diamond whole notehead.
    /// </summary>
    public const string NoteheadDiamondWhole = "noteheadDiamondWhole";
    /// <summary>
    /// Diamond whole notehead (old).
    /// </summary>
    public const string NoteheadDiamondWholeOld = "noteheadDiamondWholeOld";
    /// <summary>
    /// Double whole (breve) notehead.
    /// </summary>
    public const string NoteheadDoubleWhole = "noteheadDoubleWhole";
    /// <summary>
    /// Double whole (breve) notehead (square).
    /// </summary>
    public const string NoteheadDoubleWholeSquare = "noteheadDoubleWholeSquare";
    /// <summary>
    /// Double whole notehead with X.
    /// </summary>
    public const string NoteheadDoubleWholeWithX = "noteheadDoubleWholeWithX";
    /// <summary>
    /// Half (minim) notehead.
    /// </summary>
    public const string NoteheadHalf = "noteheadHalf";
    /// <summary>
    /// Filled half (minim) notehead.
    /// </summary>
    public const string NoteheadHalfFilled = "noteheadHalfFilled";
    /// <summary>
    /// Half notehead with X.
    /// </summary>
    public const string NoteheadHalfWithX = "noteheadHalfWithX";
    /// <summary>
    /// Heavy X notehead.
    /// </summary>
    public const string NoteheadHeavyX = "noteheadHeavyX";
    /// <summary>
    /// Heavy X with hat notehead.
    /// </summary>
    public const string NoteheadHeavyXHat = "noteheadHeavyXHat";
    /// <summary>
    /// Large arrow down (lowest pitch) black notehead.
    /// </summary>
    public const string NoteheadLargeArrowDownBlack = "noteheadLargeArrowDownBlack";
    /// <summary>
    /// Large arrow down (lowest pitch) double whole notehead.
    /// </summary>
    public const string NoteheadLargeArrowDownDoubleWhole = "noteheadLargeArrowDownDoubleWhole";
    /// <summary>
    /// Large arrow down (lowest pitch) half notehead.
    /// </summary>
    public const string NoteheadLargeArrowDownHalf = "noteheadLargeArrowDownHalf";
    /// <summary>
    /// Large arrow down (lowest pitch) whole notehead.
    /// </summary>
    public const string NoteheadLargeArrowDownWhole = "noteheadLargeArrowDownWhole";
    /// <summary>
    /// Large arrow up (highest pitch) black notehead.
    /// </summary>
    public const string NoteheadLargeArrowUpBlack = "noteheadLargeArrowUpBlack";
    /// <summary>
    /// Large arrow up (highest pitch) double whole notehead.
    /// </summary>
    public const string NoteheadLargeArrowUpDoubleWhole = "noteheadLargeArrowUpDoubleWhole";
    /// <summary>
    /// Large arrow up (highest pitch) half notehead.
    /// </summary>
    public const string NoteheadLargeArrowUpHalf = "noteheadLargeArrowUpHalf";
    /// <summary>
    /// Large arrow up (highest pitch) whole notehead.
    /// </summary>
    public const string NoteheadLargeArrowUpWhole = "noteheadLargeArrowUpWhole";
    /// <summary>
    /// Moon notehead black.
    /// </summary>
    public const string NoteheadMoonBlack = "noteheadMoonBlack";
    /// <summary>
    /// Moon notehead white.
    /// </summary>
    public const string NoteheadMoonWhite = "noteheadMoonWhite";
    /// <summary>
    /// Sine notehead (Nancarrow).
    /// </summary>
    public const string NoteheadNancarrowSine = "noteheadNancarrowSine";
    /// <summary>
    /// Null notehead.
    /// </summary>
    public const string NoteheadNull = "noteheadNull";
    /// <summary>
    /// Parenthesis notehead.
    /// </summary>
    public const string NoteheadParenthesis = "noteheadParenthesis";
    /// <summary>
    /// Opening parenthesis.
    /// </summary>
    public const string NoteheadParenthesisLeft = "noteheadParenthesisLeft";
    /// <summary>
    /// Closing parenthesis.
    /// </summary>
    public const string NoteheadParenthesisRight = "noteheadParenthesisRight";
    /// <summary>
    /// Plus notehead black.
    /// </summary>
    public const string NoteheadPlusBlack = "noteheadPlusBlack";
    /// <summary>
    /// Plus notehead double whole.
    /// </summary>
    public const string NoteheadPlusDoubleWhole = "noteheadPlusDoubleWhole";
    /// <summary>
    /// Plus notehead half.
    /// </summary>
    public const string NoteheadPlusHalf = "noteheadPlusHalf";
    /// <summary>
    /// Plus notehead whole.
    /// </summary>
    public const string NoteheadPlusWhole = "noteheadPlusWhole";
    /// <summary>
    /// Combining black rectangular cluster, bottom.
    /// </summary>
    public const string NoteheadRectangularClusterBlackBottom = "noteheadRectangularClusterBlackBottom";
    /// <summary>
    /// Combining black rectangular cluster, middle.
    /// </summary>
    public const string NoteheadRectangularClusterBlackMiddle = "noteheadRectangularClusterBlackMiddle";
    /// <summary>
    /// Combining black rectangular cluster, top.
    /// </summary>
    public const string NoteheadRectangularClusterBlackTop = "noteheadRectangularClusterBlackTop";
    /// <summary>
    /// Combining white rectangular cluster, bottom.
    /// </summary>
    public const string NoteheadRectangularClusterWhiteBottom = "noteheadRectangularClusterWhiteBottom";
    /// <summary>
    /// Combining white rectangular cluster, middle.
    /// </summary>
    public const string NoteheadRectangularClusterWhiteMiddle = "noteheadRectangularClusterWhiteMiddle";
    /// <summary>
    /// Combining white rectangular cluster, top.
    /// </summary>
    public const string NoteheadRectangularClusterWhiteTop = "noteheadRectangularClusterWhiteTop";
    /// <summary>
    /// Round black notehead.
    /// </summary>
    public const string NoteheadRoundBlack = "noteheadRoundBlack";
    /// <summary>
    /// Round black notehead, double slashed.
    /// </summary>
    public const string NoteheadRoundBlackDoubleSlashed = "noteheadRoundBlackDoubleSlashed";
    /// <summary>
    /// Large round black notehead.
    /// </summary>
    public const string NoteheadRoundBlackLarge = "noteheadRoundBlackLarge";
    /// <summary>
    /// Round black notehead, slashed.
    /// </summary>
    public const string NoteheadRoundBlackSlashed = "noteheadRoundBlackSlashed";
    /// <summary>
    /// Large round black notehead, slashed.
    /// </summary>
    public const string NoteheadRoundBlackSlashedLarge = "noteheadRoundBlackSlashedLarge";
    /// <summary>
    /// Round white notehead.
    /// </summary>
    public const string NoteheadRoundWhite = "noteheadRoundWhite";
    /// <summary>
    /// Round white notehead, double slashed.
    /// </summary>
    public const string NoteheadRoundWhiteDoubleSlashed = "noteheadRoundWhiteDoubleSlashed";
    /// <summary>
    /// Large round white notehead.
    /// </summary>
    public const string NoteheadRoundWhiteLarge = "noteheadRoundWhiteLarge";
    /// <summary>
    /// Round white notehead, slashed.
    /// </summary>
    public const string NoteheadRoundWhiteSlashed = "noteheadRoundWhiteSlashed";
    /// <summary>
    /// Large round white notehead, slashed.
    /// </summary>
    public const string NoteheadRoundWhiteSlashedLarge = "noteheadRoundWhiteSlashedLarge";
    /// <summary>
    /// Round white notehead with dot.
    /// </summary>
    public const string NoteheadRoundWhiteWithDot = "noteheadRoundWhiteWithDot";
    /// <summary>
    /// Large round white notehead with dot.
    /// </summary>
    public const string NoteheadRoundWhiteWithDotLarge = "noteheadRoundWhiteWithDotLarge";
    /// <summary>
    /// Large white diamond.
    /// </summary>
    public const string NoteheadSlashDiamondWhite = "noteheadSlashDiamondWhite";
    /// <summary>
    /// Slash with horizontal ends.
    /// </summary>
    public const string NoteheadSlashHorizontalEnds = "noteheadSlashHorizontalEnds";
    /// <summary>
    /// Muted slash with horizontal ends.
    /// </summary>
    public const string NoteheadSlashHorizontalEndsMuted = "noteheadSlashHorizontalEndsMuted";
    /// <summary>
    /// Slash with vertical ends.
    /// </summary>
    public const string NoteheadSlashVerticalEnds = "noteheadSlashVerticalEnds";
    /// <summary>
    /// Muted slash with vertical ends.
    /// </summary>
    public const string NoteheadSlashVerticalEndsMuted = "noteheadSlashVerticalEndsMuted";
    /// <summary>
    /// Small slash with vertical ends.
    /// </summary>
    public const string NoteheadSlashVerticalEndsSmall = "noteheadSlashVerticalEndsSmall";
    /// <summary>
    /// White slash double whole.
    /// </summary>
    public const string NoteheadSlashWhiteDoubleWhole = "noteheadSlashWhiteDoubleWhole";
    /// <summary>
    /// White slash half.
    /// </summary>
    public const string NoteheadSlashWhiteHalf = "noteheadSlashWhiteHalf";
    /// <summary>
    /// Muted white slash.
    /// </summary>
    public const string NoteheadSlashWhiteMuted = "noteheadSlashWhiteMuted";
    /// <summary>
    /// White slash whole.
    /// </summary>
    public const string NoteheadSlashWhiteWhole = "noteheadSlashWhiteWhole";
    /// <summary>
    /// Large X notehead.
    /// </summary>
    public const string NoteheadSlashX = "noteheadSlashX";
    /// <summary>
    /// Slashed black notehead (bottom left to top right).
    /// </summary>
    public const string NoteheadSlashedBlack1 = "noteheadSlashedBlack1";
    /// <summary>
    /// Slashed black notehead (top left to bottom right).
    /// </summary>
    public const string NoteheadSlashedBlack2 = "noteheadSlashedBlack2";
    /// <summary>
    /// Slashed double whole notehead (bottom left to top right).
    /// </summary>
    public const string NoteheadSlashedDoubleWhole1 = "noteheadSlashedDoubleWhole1";
    /// <summary>
    /// Slashed double whole notehead (top left to bottom right).
    /// </summary>
    public const string NoteheadSlashedDoubleWhole2 = "noteheadSlashedDoubleWhole2";
    /// <summary>
    /// Slashed half notehead (bottom left to top right).
    /// </summary>
    public const string NoteheadSlashedHalf1 = "noteheadSlashedHalf1";
    /// <summary>
    /// Slashed half notehead (top left to bottom right).
    /// </summary>
    public const string NoteheadSlashedHalf2 = "noteheadSlashedHalf2";
    /// <summary>
    /// Slashed whole notehead (bottom left to top right).
    /// </summary>
    public const string NoteheadSlashedWhole1 = "noteheadSlashedWhole1";
    /// <summary>
    /// Slashed whole notehead (top left to bottom right).
    /// </summary>
    public const string NoteheadSlashedWhole2 = "noteheadSlashedWhole2";
    /// <summary>
    /// Square notehead black.
    /// </summary>
    public const string NoteheadSquareBlack = "noteheadSquareBlack";
    /// <summary>
    /// Large square black notehead.
    /// </summary>
    public const string NoteheadSquareBlackLarge = "noteheadSquareBlackLarge";
    /// <summary>
    /// Large square white notehead.
    /// </summary>
    public const string NoteheadSquareBlackWhite = "noteheadSquareBlackWhite";
    /// <summary>
    /// Square notehead white.
    /// </summary>
    public const string NoteheadSquareWhite = "noteheadSquareWhite";
    /// <summary>
    /// Triangle notehead down black.
    /// </summary>
    public const string NoteheadTriangleDownBlack = "noteheadTriangleDownBlack";
    /// <summary>
    /// Triangle notehead down double whole.
    /// </summary>
    public const string NoteheadTriangleDownDoubleWhole = "noteheadTriangleDownDoubleWhole";
    /// <summary>
    /// Triangle notehead down half.
    /// </summary>
    public const string NoteheadTriangleDownHalf = "noteheadTriangleDownHalf";
    /// <summary>
    /// Triangle notehead down white.
    /// </summary>
    public const string NoteheadTriangleDownWhite = "noteheadTriangleDownWhite";
    /// <summary>
    /// Triangle notehead down whole.
    /// </summary>
    public const string NoteheadTriangleDownWhole = "noteheadTriangleDownWhole";
    /// <summary>
    /// Triangle notehead left black.
    /// </summary>
    public const string NoteheadTriangleLeftBlack = "noteheadTriangleLeftBlack";
    /// <summary>
    /// Triangle notehead left white.
    /// </summary>
    public const string NoteheadTriangleLeftWhite = "noteheadTriangleLeftWhite";
    /// <summary>
    /// Triangle notehead right black.
    /// </summary>
    public const string NoteheadTriangleRightBlack = "noteheadTriangleRightBlack";
    /// <summary>
    /// Triangle notehead right white.
    /// </summary>
    public const string NoteheadTriangleRightWhite = "noteheadTriangleRightWhite";
    /// <summary>
    /// Triangle-round notehead down black.
    /// </summary>
    public const string NoteheadTriangleRoundDownBlack = "noteheadTriangleRoundDownBlack";
    /// <summary>
    /// Triangle-round notehead down white.
    /// </summary>
    public const string NoteheadTriangleRoundDownWhite = "noteheadTriangleRoundDownWhite";
    /// <summary>
    /// Triangle notehead up black.
    /// </summary>
    public const string NoteheadTriangleUpBlack = "noteheadTriangleUpBlack";
    /// <summary>
    /// Triangle notehead up double whole.
    /// </summary>
    public const string NoteheadTriangleUpDoubleWhole = "noteheadTriangleUpDoubleWhole";
    /// <summary>
    /// Triangle notehead up half.
    /// </summary>
    public const string NoteheadTriangleUpHalf = "noteheadTriangleUpHalf";
    /// <summary>
    /// Triangle notehead up right black.
    /// </summary>
    public const string NoteheadTriangleUpRightBlack = "noteheadTriangleUpRightBlack";
    /// <summary>
    /// Triangle notehead up right white.
    /// </summary>
    public const string NoteheadTriangleUpRightWhite = "noteheadTriangleUpRightWhite";
    /// <summary>
    /// Triangle notehead up white.
    /// </summary>
    public const string NoteheadTriangleUpWhite = "noteheadTriangleUpWhite";
    /// <summary>
    /// Triangle notehead up whole.
    /// </summary>
    public const string NoteheadTriangleUpWhole = "noteheadTriangleUpWhole";
    /// <summary>
    /// Void notehead with X.
    /// </summary>
    public const string NoteheadVoidWithX = "noteheadVoidWithX";
    /// <summary>
    /// Whole (semibreve) notehead.
    /// </summary>
    public const string NoteheadWhole = "noteheadWhole";
    /// <summary>
    /// Filled whole (semibreve) notehead.
    /// </summary>
    public const string NoteheadWholeFilled = "noteheadWholeFilled";
    /// <summary>
    /// Whole notehead with X.
    /// </summary>
    public const string NoteheadWholeWithX = "noteheadWholeWithX";
    /// <summary>
    /// X notehead black.
    /// </summary>
    public const string NoteheadXBlack = "noteheadXBlack";
    /// <summary>
    /// X notehead double whole.
    /// </summary>
    public const string NoteheadXDoubleWhole = "noteheadXDoubleWhole";
    /// <summary>
    /// X notehead half.
    /// </summary>
    public const string NoteheadXHalf = "noteheadXHalf";
    /// <summary>
    /// Ornate X notehead.
    /// </summary>
    public const string NoteheadXOrnate = "noteheadXOrnate";
    /// <summary>
    /// Ornate X notehead in ellipse.
    /// </summary>
    public const string NoteheadXOrnateEllipse = "noteheadXOrnateEllipse";
    /// <summary>
    /// X notehead whole.
    /// </summary>
    public const string NoteheadXWhole = "noteheadXWhole";
    /// <summary>
    /// a (baseline).
    /// </summary>
    public const string OctaveBaselineA = "octaveBaselineA";
    /// <summary>
    /// b (baseline).
    /// </summary>
    public const string OctaveBaselineB = "octaveBaselineB";
    /// <summary>
    /// m (baseline).
    /// </summary>
    public const string OctaveBaselineM = "octaveBaselineM";
    /// <summary>
    /// v (baseline).
    /// </summary>
    public const string OctaveBaselineV = "octaveBaselineV";
    /// <summary>
    /// Bassa.
    /// </summary>
    public const string OctaveBassa = "octaveBassa";
    /// <summary>
    /// Loco.
    /// </summary>
    public const string OctaveLoco = "octaveLoco";
    /// <summary>
    /// Left parenthesis for octave signs.
    /// </summary>
    public const string OctaveParensLeft = "octaveParensLeft";
    /// <summary>
    /// Right parenthesis for octave signs.
    /// </summary>
    public const string OctaveParensRight = "octaveParensRight";
    /// <summary>
    /// a (superscript).
    /// </summary>
    public const string OctaveSuperscriptA = "octaveSuperscriptA";
    /// <summary>
    /// b (superscript).
    /// </summary>
    public const string OctaveSuperscriptB = "octaveSuperscriptB";
    /// <summary>
    /// m (superscript).
    /// </summary>
    public const string OctaveSuperscriptM = "octaveSuperscriptM";
    /// <summary>
    /// v (superscript).
    /// </summary>
    public const string OctaveSuperscriptV = "octaveSuperscriptV";
    /// <summary>
    /// One-handed roll (Stevens).
    /// </summary>
    public const string OneHandedRollStevens = "oneHandedRollStevens";
    /// <summary>
    /// Two Fusae.
    /// </summary>
    public const string OrganGerman2Fusae = "organGerman2Fusae";
    /// <summary>
    /// Two Minimae.
    /// </summary>
    public const string OrganGerman2Minimae = "organGerman2Minimae";
    /// <summary>
    /// Combining double octave line above.
    /// </summary>
    public const string OrganGerman2OctaveUp = "organGerman2OctaveUp";
    /// <summary>
    /// Two Semifusae.
    /// </summary>
    public const string OrganGerman2Semifusae = "organGerman2Semifusae";
    /// <summary>
    /// Two Semiminimae.
    /// </summary>
    public const string OrganGerman2Semiminimae = "organGerman2Semiminimae";
    /// <summary>
    /// Three Fusae.
    /// </summary>
    public const string OrganGerman3Fusae = "organGerman3Fusae";
    /// <summary>
    /// Three Minimae.
    /// </summary>
    public const string OrganGerman3Minimae = "organGerman3Minimae";
    /// <summary>
    /// Three Semifusae.
    /// </summary>
    public const string OrganGerman3Semifusae = "organGerman3Semifusae";
    /// <summary>
    /// Three Semiminimae.
    /// </summary>
    public const string OrganGerman3Semiminimae = "organGerman3Semiminimae";
    /// <summary>
    /// Four Fusae.
    /// </summary>
    public const string OrganGerman4Fusae = "organGerman4Fusae";
    /// <summary>
    /// Four Minimae.
    /// </summary>
    public const string OrganGerman4Minimae = "organGerman4Minimae";
    /// <summary>
    /// Four Semifusae.
    /// </summary>
    public const string OrganGerman4Semifusae = "organGerman4Semifusae";
    /// <summary>
    /// Four Semiminimae.
    /// </summary>
    public const string OrganGerman4Semiminimae = "organGerman4Semiminimae";
    /// <summary>
    /// Five Fusae.
    /// </summary>
    public const string OrganGerman5Fusae = "organGerman5Fusae";
    /// <summary>
    /// Five Minimae.
    /// </summary>
    public const string OrganGerman5Minimae = "organGerman5Minimae";
    /// <summary>
    /// Five Semifusae.
    /// </summary>
    public const string OrganGerman5Semifusae = "organGerman5Semifusae";
    /// <summary>
    /// Five Semiminimae.
    /// </summary>
    public const string OrganGerman5Semiminimae = "organGerman5Semiminimae";
    /// <summary>
    /// Six Fusae.
    /// </summary>
    public const string OrganGerman6Fusae = "organGerman6Fusae";
    /// <summary>
    /// Six Minimae.
    /// </summary>
    public const string OrganGerman6Minimae = "organGerman6Minimae";
    /// <summary>
    /// Six Semifusae.
    /// </summary>
    public const string OrganGerman6Semifusae = "organGerman6Semifusae";
    /// <summary>
    /// Six Semiminimae.
    /// </summary>
    public const string OrganGerman6Semiminimae = "organGerman6Semiminimae";
    /// <summary>
    /// German organ tablature small A.
    /// </summary>
    public const string OrganGermanALower = "organGermanALower";
    /// <summary>
    /// German organ tablature great A.
    /// </summary>
    public const string OrganGermanAUpper = "organGermanAUpper";
    /// <summary>
    /// Rhythm Dot.
    /// </summary>
    public const string OrganGermanAugmentationDot = "organGermanAugmentationDot";
    /// <summary>
    /// German organ tablature small B.
    /// </summary>
    public const string OrganGermanBLower = "organGermanBLower";
    /// <summary>
    /// German organ tablature great B.
    /// </summary>
    public const string OrganGermanBUpper = "organGermanBUpper";
    /// <summary>
    /// Brevis (Binary) Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerBrevis2 = "organGermanBuxheimerBrevis2";
    /// <summary>
    /// Brevis (Ternary) Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerBrevis3 = "organGermanBuxheimerBrevis3";
    /// <summary>
    /// Minima Rest Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerMinimaRest = "organGermanBuxheimerMinimaRest";
    /// <summary>
    /// Semibrevis Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerSemibrevis = "organGermanBuxheimerSemibrevis";
    /// <summary>
    /// Semibrevis Rest Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerSemibrevisRest = "organGermanBuxheimerSemibrevisRest";
    /// <summary>
    /// German organ tablature small C.
    /// </summary>
    public const string OrganGermanCLower = "organGermanCLower";
    /// <summary>
    /// German organ tablature great C.
    /// </summary>
    public const string OrganGermanCUpper = "organGermanCUpper";
    /// <summary>
    /// German organ tablature small Cis.
    /// </summary>
    public const string OrganGermanCisLower = "organGermanCisLower";
    /// <summary>
    /// German organ tablature great Cis.
    /// </summary>
    public const string OrganGermanCisUpper = "organGermanCisUpper";
    /// <summary>
    /// German organ tablature small D.
    /// </summary>
    public const string OrganGermanDLower = "organGermanDLower";
    /// <summary>
    /// German organ tablature great D.
    /// </summary>
    public const string OrganGermanDUpper = "organGermanDUpper";
    /// <summary>
    /// German organ tablature small Dis.
    /// </summary>
    public const string OrganGermanDisLower = "organGermanDisLower";
    /// <summary>
    /// German organ tablature great Dis.
    /// </summary>
    public const string OrganGermanDisUpper = "organGermanDisUpper";
    /// <summary>
    /// German organ tablature small E.
    /// </summary>
    public const string OrganGermanELower = "organGermanELower";
    /// <summary>
    /// German organ tablature great E.
    /// </summary>
    public const string OrganGermanEUpper = "organGermanEUpper";
    /// <summary>
    /// German organ tablature small F.
    /// </summary>
    public const string OrganGermanFLower = "organGermanFLower";
    /// <summary>
    /// German organ tablature great F.
    /// </summary>
    public const string OrganGermanFUpper = "organGermanFUpper";
    /// <summary>
    /// German organ tablature small Fis.
    /// </summary>
    public const string OrganGermanFisLower = "organGermanFisLower";
    /// <summary>
    /// German organ tablature great Fis.
    /// </summary>
    public const string OrganGermanFisUpper = "organGermanFisUpper";
    /// <summary>
    /// Fusa.
    /// </summary>
    public const string OrganGermanFusa = "organGermanFusa";
    /// <summary>
    /// Fusa Rest.
    /// </summary>
    public const string OrganGermanFusaRest = "organGermanFusaRest";
    /// <summary>
    /// German organ tablature small G.
    /// </summary>
    public const string OrganGermanGLower = "organGermanGLower";
    /// <summary>
    /// German organ tablature great G.
    /// </summary>
    public const string OrganGermanGUpper = "organGermanGUpper";
    /// <summary>
    /// German organ tablature small Gis.
    /// </summary>
    public const string OrganGermanGisLower = "organGermanGisLower";
    /// <summary>
    /// German organ tablature great Gis.
    /// </summary>
    public const string OrganGermanGisUpper = "organGermanGisUpper";
    /// <summary>
    /// German organ tablature small H.
    /// </summary>
    public const string OrganGermanHLower = "organGermanHLower";
    /// <summary>
    /// German organ tablature great H.
    /// </summary>
    public const string OrganGermanHUpper = "organGermanHUpper";
    /// <summary>
    /// Minima.
    /// </summary>
    public const string OrganGermanMinima = "organGermanMinima";
    /// <summary>
    /// Minima Rest.
    /// </summary>
    public const string OrganGermanMinimaRest = "organGermanMinimaRest";
    /// <summary>
    /// Combining single octave line below.
    /// </summary>
    public const string OrganGermanOctaveDown = "organGermanOctaveDown";
    /// <summary>
    /// Combining single octave line above.
    /// </summary>
    public const string OrganGermanOctaveUp = "organGermanOctaveUp";
    /// <summary>
    /// Semibrevis.
    /// </summary>
    public const string OrganGermanSemibrevis = "organGermanSemibrevis";
    /// <summary>
    /// Semibrevis Rest.
    /// </summary>
    public const string OrganGermanSemibrevisRest = "organGermanSemibrevisRest";
    /// <summary>
    /// Semifusa.
    /// </summary>
    public const string OrganGermanSemifusa = "organGermanSemifusa";
    /// <summary>
    /// Semifusa Rest.
    /// </summary>
    public const string OrganGermanSemifusaRest = "organGermanSemifusaRest";
    /// <summary>
    /// Semiminima.
    /// </summary>
    public const string OrganGermanSemiminima = "organGermanSemiminima";
    /// <summary>
    /// Semiminima Rest.
    /// </summary>
    public const string OrganGermanSemiminimaRest = "organGermanSemiminimaRest";
    /// <summary>
    /// Tie.
    /// </summary>
    public const string OrganGermanTie = "organGermanTie";
    /// <summary>
    /// Ornament bottom left concave stroke.
    /// </summary>
    public const string OrnamentBottomLeftConcaveStroke = "ornamentBottomLeftConcaveStroke";
    /// <summary>
    /// Ornament bottom left concave stroke, large.
    /// </summary>
    public const string OrnamentBottomLeftConcaveStrokeLarge = "ornamentBottomLeftConcaveStrokeLarge";
    /// <summary>
    /// Ornament bottom left convex stroke.
    /// </summary>
    public const string OrnamentBottomLeftConvexStroke = "ornamentBottomLeftConvexStroke";
    /// <summary>
    /// Ornament bottom right concave stroke.
    /// </summary>
    public const string OrnamentBottomRightConcaveStroke = "ornamentBottomRightConcaveStroke";
    /// <summary>
    /// Ornament bottom right convex stroke.
    /// </summary>
    public const string OrnamentBottomRightConvexStroke = "ornamentBottomRightConvexStroke";
    /// <summary>
    /// Comma.
    /// </summary>
    public const string OrnamentComma = "ornamentComma";
    /// <summary>
    /// Double oblique straight lines NW-SE.
    /// </summary>
    public const string OrnamentDoubleObliqueLinesAfterNote = "ornamentDoubleObliqueLinesAfterNote";
    /// <summary>
    /// Double oblique straight lines SW-NE.
    /// </summary>
    public const string OrnamentDoubleObliqueLinesBeforeNote = "ornamentDoubleObliqueLinesBeforeNote";
    /// <summary>
    /// Curve below.
    /// </summary>
    public const string OrnamentDownCurve = "ornamentDownCurve";
    /// <summary>
    /// Haydn ornament.
    /// </summary>
    public const string OrnamentHaydn = "ornamentHaydn";
    /// <summary>
    /// Ornament high left concave stroke.
    /// </summary>
    public const string OrnamentHighLeftConcaveStroke = "ornamentHighLeftConcaveStroke";
    /// <summary>
    /// Ornament high left convex stroke.
    /// </summary>
    public const string OrnamentHighLeftConvexStroke = "ornamentHighLeftConvexStroke";
    /// <summary>
    /// Ornament high right concave stroke.
    /// </summary>
    public const string OrnamentHighRightConcaveStroke = "ornamentHighRightConcaveStroke";
    /// <summary>
    /// Ornament high right convex stroke.
    /// </summary>
    public const string OrnamentHighRightConvexStroke = "ornamentHighRightConvexStroke";
    /// <summary>
    /// Hook after note.
    /// </summary>
    public const string OrnamentHookAfterNote = "ornamentHookAfterNote";
    /// <summary>
    /// Hook before note.
    /// </summary>
    public const string OrnamentHookBeforeNote = "ornamentHookBeforeNote";
    /// <summary>
    /// Left-facing half circle.
    /// </summary>
    public const string OrnamentLeftFacingHalfCircle = "ornamentLeftFacingHalfCircle";
    /// <summary>
    /// Left-facing hook.
    /// </summary>
    public const string OrnamentLeftFacingHook = "ornamentLeftFacingHook";
    /// <summary>
    /// Ornament left +.
    /// </summary>
    public const string OrnamentLeftPlus = "ornamentLeftPlus";
    /// <summary>
    /// Ornament left shake t.
    /// </summary>
    public const string OrnamentLeftShakeT = "ornamentLeftShakeT";
    /// <summary>
    /// Ornament left vertical stroke.
    /// </summary>
    public const string OrnamentLeftVerticalStroke = "ornamentLeftVerticalStroke";
    /// <summary>
    /// Ornament left vertical stroke with cross (+).
    /// </summary>
    public const string OrnamentLeftVerticalStrokeWithCross = "ornamentLeftVerticalStrokeWithCross";
    /// <summary>
    /// Ornament low left concave stroke.
    /// </summary>
    public const string OrnamentLowLeftConcaveStroke = "ornamentLowLeftConcaveStroke";
    /// <summary>
    /// Ornament low left convex stroke.
    /// </summary>
    public const string OrnamentLowLeftConvexStroke = "ornamentLowLeftConvexStroke";
    /// <summary>
    /// Ornament low right concave stroke.
    /// </summary>
    public const string OrnamentLowRightConcaveStroke = "ornamentLowRightConcaveStroke";
    /// <summary>
    /// Ornament low right convex stroke.
    /// </summary>
    public const string OrnamentLowRightConvexStroke = "ornamentLowRightConvexStroke";
    /// <summary>
    /// Ornament middle vertical stroke.
    /// </summary>
    public const string OrnamentMiddleVerticalStroke = "ornamentMiddleVerticalStroke";
    /// <summary>
    /// Mordent.
    /// </summary>
    public const string OrnamentMordent = "ornamentMordent";
    /// <summary>
    /// Oblique straight line NW-SE.
    /// </summary>
    public const string OrnamentObliqueLineAfterNote = "ornamentObliqueLineAfterNote";
    /// <summary>
    /// Oblique straight line SW-NE.
    /// </summary>
    public const string OrnamentObliqueLineBeforeNote = "ornamentObliqueLineBeforeNote";
    /// <summary>
    /// Oblique straight line tilted NW-SE.
    /// </summary>
    public const string OrnamentObliqueLineHorizAfterNote = "ornamentObliqueLineHorizAfterNote";
    /// <summary>
    /// Oblique straight line tilted SW-NE.
    /// </summary>
    public const string OrnamentObliqueLineHorizBeforeNote = "ornamentObliqueLineHorizBeforeNote";
    /// <summary>
    /// Oriscus.
    /// </summary>
    public const string OrnamentOriscus = "ornamentOriscus";
    /// <summary>
    /// Pincé (Couperin).
    /// </summary>
    public const string OrnamentPinceCouperin = "ornamentPinceCouperin";
    /// <summary>
    /// Port de voix.
    /// </summary>
    public const string OrnamentPortDeVoixV = "ornamentPortDeVoixV";
    /// <summary>
    /// Supported appoggiatura trill.
    /// </summary>
    public const string OrnamentPrecompAppoggTrill = "ornamentPrecompAppoggTrill";
    /// <summary>
    /// Supported appoggiatura trill with two-note suffix.
    /// </summary>
    public const string OrnamentPrecompAppoggTrillSuffix = "ornamentPrecompAppoggTrillSuffix";
    /// <summary>
    /// Cadence.
    /// </summary>
    public const string OrnamentPrecompCadence = "ornamentPrecompCadence";
    /// <summary>
    /// Cadence with upper prefix.
    /// </summary>
    public const string OrnamentPrecompCadenceUpperPrefix = "ornamentPrecompCadenceUpperPrefix";
    /// <summary>
    /// Cadence with upper prefix and turn.
    /// </summary>
    public const string OrnamentPrecompCadenceUpperPrefixTurn = "ornamentPrecompCadenceUpperPrefixTurn";
    /// <summary>
    /// Cadence with turn.
    /// </summary>
    public const string OrnamentPrecompCadenceWithTurn = "ornamentPrecompCadenceWithTurn";
    /// <summary>
    /// Descending slide.
    /// </summary>
    public const string OrnamentPrecompDescendingSlide = "ornamentPrecompDescendingSlide";
    /// <summary>
    /// Double cadence with lower prefix.
    /// </summary>
    public const string OrnamentPrecompDoubleCadenceLowerPrefix = "ornamentPrecompDoubleCadenceLowerPrefix";
    /// <summary>
    /// Double cadence with upper prefix.
    /// </summary>
    public const string OrnamentPrecompDoubleCadenceUpperPrefix = "ornamentPrecompDoubleCadenceUpperPrefix";
    /// <summary>
    /// Double cadence with upper prefix and turn.
    /// </summary>
    public const string OrnamentPrecompDoubleCadenceUpperPrefixTurn = "ornamentPrecompDoubleCadenceUpperPrefixTurn";
    /// <summary>
    /// Inverted mordent with upper prefix.
    /// </summary>
    public const string OrnamentPrecompInvertedMordentUpperPrefix = "ornamentPrecompInvertedMordentUpperPrefix";
    /// <summary>
    /// Mordent with release.
    /// </summary>
    public const string OrnamentPrecompMordentRelease = "ornamentPrecompMordentRelease";
    /// <summary>
    /// Mordent with upper prefix.
    /// </summary>
    public const string OrnamentPrecompMordentUpperPrefix = "ornamentPrecompMordentUpperPrefix";
    /// <summary>
    /// Pre-beat port de voix followed by multiple mordent (Dandrieu).
    /// </summary>
    public const string OrnamentPrecompPortDeVoixMordent = "ornamentPrecompPortDeVoixMordent";
    /// <summary>
    /// Slide.
    /// </summary>
    public const string OrnamentPrecompSlide = "ornamentPrecompSlide";
    /// <summary>
    /// Slide-trill with two-note suffix (J.S. Bach).
    /// </summary>
    public const string OrnamentPrecompSlideTrillBach = "ornamentPrecompSlideTrillBach";
    /// <summary>
    /// Slide-trill (D'Anglebert).
    /// </summary>
    public const string OrnamentPrecompSlideTrillDAnglebert = "ornamentPrecompSlideTrillDAnglebert";
    /// <summary>
    /// Slide-trill with one-note suffix (Marpurg).
    /// </summary>
    public const string OrnamentPrecompSlideTrillMarpurg = "ornamentPrecompSlideTrillMarpurg";
    /// <summary>
    /// Slide-trill (Muffat).
    /// </summary>
    public const string OrnamentPrecompSlideTrillMuffat = "ornamentPrecompSlideTrillMuffat";
    /// <summary>
    /// Slide-trill with two-note suffix (Muffat).
    /// </summary>
    public const string OrnamentPrecompSlideTrillSuffixMuffat = "ornamentPrecompSlideTrillSuffixMuffat";
    /// <summary>
    /// Trill with lower suffix.
    /// </summary>
    public const string OrnamentPrecompTrillLowerSuffix = "ornamentPrecompTrillLowerSuffix";
    /// <summary>
    /// Trill with two-note suffix (Dandrieu).
    /// </summary>
    public const string OrnamentPrecompTrillSuffixDandrieu = "ornamentPrecompTrillSuffixDandrieu";
    /// <summary>
    /// Trill with mordent.
    /// </summary>
    public const string OrnamentPrecompTrillWithMordent = "ornamentPrecompTrillWithMordent";
    /// <summary>
    /// Turn-trill with two-note suffix (J.S. Bach).
    /// </summary>
    public const string OrnamentPrecompTurnTrillBach = "ornamentPrecompTurnTrillBach";
    /// <summary>
    /// Turn-trill (D'Anglebert).
    /// </summary>
    public const string OrnamentPrecompTurnTrillDAnglebert = "ornamentPrecompTurnTrillDAnglebert";
    /// <summary>
    /// Quilisma.
    /// </summary>
    public const string OrnamentQuilisma = "ornamentQuilisma";
    /// <summary>
    /// Right-facing half circle.
    /// </summary>
    public const string OrnamentRightFacingHalfCircle = "ornamentRightFacingHalfCircle";
    /// <summary>
    /// Right-facing hook.
    /// </summary>
    public const string OrnamentRightFacingHook = "ornamentRightFacingHook";
    /// <summary>
    /// Ornament right vertical stroke.
    /// </summary>
    public const string OrnamentRightVerticalStroke = "ornamentRightVerticalStroke";
    /// <summary>
    /// Schleifer (long mordent).
    /// </summary>
    public const string OrnamentSchleifer = "ornamentSchleifer";
    /// <summary>
    /// Shake.
    /// </summary>
    public const string OrnamentShake3 = "ornamentShake3";
    /// <summary>
    /// Shake (Muffat).
    /// </summary>
    public const string OrnamentShakeMuffat1 = "ornamentShakeMuffat1";
    /// <summary>
    /// Short oblique straight line NW-SE.
    /// </summary>
    public const string OrnamentShortObliqueLineAfterNote = "ornamentShortObliqueLineAfterNote";
    /// <summary>
    /// Short oblique straight line SW-NE.
    /// </summary>
    public const string OrnamentShortObliqueLineBeforeNote = "ornamentShortObliqueLineBeforeNote";
    /// <summary>
    /// Short trill.
    /// </summary>
    public const string OrnamentShortTrill = "ornamentShortTrill";
    /// <summary>
    /// Ornament top left concave stroke.
    /// </summary>
    public const string OrnamentTopLeftConcaveStroke = "ornamentTopLeftConcaveStroke";
    /// <summary>
    /// Ornament top left convex stroke.
    /// </summary>
    public const string OrnamentTopLeftConvexStroke = "ornamentTopLeftConvexStroke";
    /// <summary>
    /// Ornament top right concave stroke.
    /// </summary>
    public const string OrnamentTopRightConcaveStroke = "ornamentTopRightConcaveStroke";
    /// <summary>
    /// Ornament top right convex stroke.
    /// </summary>
    public const string OrnamentTopRightConvexStroke = "ornamentTopRightConvexStroke";
    /// <summary>
    /// Tremblement.
    /// </summary>
    public const string OrnamentTremblement = "ornamentTremblement";
    /// <summary>
    /// Tremblement appuyé (Couperin).
    /// </summary>
    public const string OrnamentTremblementCouperin = "ornamentTremblementCouperin";
    /// <summary>
    /// Trill.
    /// </summary>
    public const string OrnamentTrill = "ornamentTrill";
    /// <summary>
    /// Turn.
    /// </summary>
    public const string OrnamentTurn = "ornamentTurn";
    /// <summary>
    /// Inverted turn.
    /// </summary>
    public const string OrnamentTurnInverted = "ornamentTurnInverted";
    /// <summary>
    /// Turn with slash.
    /// </summary>
    public const string OrnamentTurnSlash = "ornamentTurnSlash";
    /// <summary>
    /// Turn up.
    /// </summary>
    public const string OrnamentTurnUp = "ornamentTurnUp";
    /// <summary>
    /// Inverted turn up.
    /// </summary>
    public const string OrnamentTurnUpS = "ornamentTurnUpS";
    /// <summary>
    /// Curve above.
    /// </summary>
    public const string OrnamentUpCurve = "ornamentUpCurve";
    /// <summary>
    /// Vertical line.
    /// </summary>
    public const string OrnamentVerticalLine = "ornamentVerticalLine";
    /// <summary>
    /// Ornament zig-zag line without right-hand end.
    /// </summary>
    public const string OrnamentZigZagLineNoRightEnd = "ornamentZigZagLineNoRightEnd";
    /// <summary>
    /// Ornament zig-zag line with right-hand end.
    /// </summary>
    public const string OrnamentZigZagLineWithRightEnd = "ornamentZigZagLineWithRightEnd";
    /// <summary>
    /// Ottava.
    /// </summary>
    public const string Ottava = "ottava";
    /// <summary>
    /// Ottava alta.
    /// </summary>
    public const string OttavaAlta = "ottavaAlta";
    /// <summary>
    /// Ottava bassa.
    /// </summary>
    public const string OttavaBassa = "ottavaBassa";
    /// <summary>
    /// Ottava bassa (ba).
    /// </summary>
    public const string OttavaBassaBa = "ottavaBassaBa";
    /// <summary>
    /// Ottava bassa (8vb).
    /// </summary>
    public const string OttavaBassaVb = "ottavaBassaVb";
    /// <summary>
    /// Penderecki unmeasured tremolo.
    /// </summary>
    public const string PendereckiTremolo = "pendereckiTremolo";
    /// <summary>
    /// Agogo.
    /// </summary>
    public const string PictAgogo = "pictAgogo";
    /// <summary>
    /// Almglocken.
    /// </summary>
    public const string PictAlmglocken = "pictAlmglocken";
    /// <summary>
    /// Anvil.
    /// </summary>
    public const string PictAnvil = "pictAnvil";
    /// <summary>
    /// Bamboo tube chimes.
    /// </summary>
    public const string PictBambooChimes = "pictBambooChimes";
    /// <summary>
    /// Bamboo scraper.
    /// </summary>
    public const string PictBambooScraper = "pictBambooScraper";
    /// <summary>
    /// Bass drum.
    /// </summary>
    public const string PictBassDrum = "pictBassDrum";
    /// <summary>
    /// Bass drum on side.
    /// </summary>
    public const string PictBassDrumOnSide = "pictBassDrumOnSide";
    /// <summary>
    /// Bow.
    /// </summary>
    public const string PictBeaterBow = "pictBeaterBow";
    /// <summary>
    /// Box for percussion beater.
    /// </summary>
    public const string PictBeaterBox = "pictBeaterBox";
    /// <summary>
    /// Brass mallets down.
    /// </summary>
    public const string PictBeaterBrassMalletsDown = "pictBeaterBrassMalletsDown";
    /// <summary>
    /// Brass mallets left.
    /// </summary>
    public const string PictBeaterBrassMalletsLeft = "pictBeaterBrassMalletsLeft";
    /// <summary>
    /// Brass mallets right.
    /// </summary>
    public const string PictBeaterBrassMalletsRight = "pictBeaterBrassMalletsRight";
    /// <summary>
    /// Brass mallets up.
    /// </summary>
    public const string PictBeaterBrassMalletsUp = "pictBeaterBrassMalletsUp";
    /// <summary>
    /// Combining dashed circle for round beaters (plated).
    /// </summary>
    public const string PictBeaterCombiningDashedCircle = "pictBeaterCombiningDashedCircle";
    /// <summary>
    /// Combining parentheses for round beaters (padded).
    /// </summary>
    public const string PictBeaterCombiningParentheses = "pictBeaterCombiningParentheses";
    /// <summary>
    /// Double bass drum stick down.
    /// </summary>
    public const string PictBeaterDoubleBassDrumDown = "pictBeaterDoubleBassDrumDown";
    /// <summary>
    /// Double bass drum stick up.
    /// </summary>
    public const string PictBeaterDoubleBassDrumUp = "pictBeaterDoubleBassDrumUp";
    /// <summary>
    /// Finger.
    /// </summary>
    public const string PictBeaterFinger = "pictBeaterFinger";
    /// <summary>
    /// Fingernails.
    /// </summary>
    public const string PictBeaterFingernails = "pictBeaterFingernails";
    /// <summary>
    /// Fist.
    /// </summary>
    public const string PictBeaterFist = "pictBeaterFist";
    /// <summary>
    /// Guiro scraper.
    /// </summary>
    public const string PictBeaterGuiroScraper = "pictBeaterGuiroScraper";
    /// <summary>
    /// Hammer.
    /// </summary>
    public const string PictBeaterHammer = "pictBeaterHammer";
    /// <summary>
    /// Metal hammer, down.
    /// </summary>
    public const string PictBeaterHammerMetalDown = "pictBeaterHammerMetalDown";
    /// <summary>
    /// Metal hammer, up.
    /// </summary>
    public const string PictBeaterHammerMetalUp = "pictBeaterHammerMetalUp";
    /// <summary>
    /// Plastic hammer, down.
    /// </summary>
    public const string PictBeaterHammerPlasticDown = "pictBeaterHammerPlasticDown";
    /// <summary>
    /// Plastic hammer, up.
    /// </summary>
    public const string PictBeaterHammerPlasticUp = "pictBeaterHammerPlasticUp";
    /// <summary>
    /// Wooden hammer, down.
    /// </summary>
    public const string PictBeaterHammerWoodDown = "pictBeaterHammerWoodDown";
    /// <summary>
    /// Wooden hammer, up.
    /// </summary>
    public const string PictBeaterHammerWoodUp = "pictBeaterHammerWoodUp";
    /// <summary>
    /// Hand.
    /// </summary>
    public const string PictBeaterHand = "pictBeaterHand";
    /// <summary>
    /// Hard bass drum stick down.
    /// </summary>
    public const string PictBeaterHardBassDrumDown = "pictBeaterHardBassDrumDown";
    /// <summary>
    /// Hard bass drum stick up.
    /// </summary>
    public const string PictBeaterHardBassDrumUp = "pictBeaterHardBassDrumUp";
    /// <summary>
    /// Hard glockenspiel stick down.
    /// </summary>
    public const string PictBeaterHardGlockenspielDown = "pictBeaterHardGlockenspielDown";
    /// <summary>
    /// Hard glockenspiel stick left.
    /// </summary>
    public const string PictBeaterHardGlockenspielLeft = "pictBeaterHardGlockenspielLeft";
    /// <summary>
    /// Hard glockenspiel stick right.
    /// </summary>
    public const string PictBeaterHardGlockenspielRight = "pictBeaterHardGlockenspielRight";
    /// <summary>
    /// Hard glockenspiel stick up.
    /// </summary>
    public const string PictBeaterHardGlockenspielUp = "pictBeaterHardGlockenspielUp";
    /// <summary>
    /// Hard timpani stick down.
    /// </summary>
    public const string PictBeaterHardTimpaniDown = "pictBeaterHardTimpaniDown";
    /// <summary>
    /// Hard timpani stick left.
    /// </summary>
    public const string PictBeaterHardTimpaniLeft = "pictBeaterHardTimpaniLeft";
    /// <summary>
    /// Hard timpani stick right.
    /// </summary>
    public const string PictBeaterHardTimpaniRight = "pictBeaterHardTimpaniRight";
    /// <summary>
    /// Hard timpani stick up.
    /// </summary>
    public const string PictBeaterHardTimpaniUp = "pictBeaterHardTimpaniUp";
    /// <summary>
    /// Hard xylophone stick down.
    /// </summary>
    public const string PictBeaterHardXylophoneDown = "pictBeaterHardXylophoneDown";
    /// <summary>
    /// Hard xylophone stick left.
    /// </summary>
    public const string PictBeaterHardXylophoneLeft = "pictBeaterHardXylophoneLeft";
    /// <summary>
    /// Hard xylophone stick right.
    /// </summary>
    public const string PictBeaterHardXylophoneRight = "pictBeaterHardXylophoneRight";
    /// <summary>
    /// Hard xylophone stick up.
    /// </summary>
    public const string PictBeaterHardXylophoneUp = "pictBeaterHardXylophoneUp";
    /// <summary>
    /// Hard yarn beater down.
    /// </summary>
    public const string PictBeaterHardYarnDown = "pictBeaterHardYarnDown";
    /// <summary>
    /// Hard yarn beater left.
    /// </summary>
    public const string PictBeaterHardYarnLeft = "pictBeaterHardYarnLeft";
    /// <summary>
    /// Hard yarn beater right.
    /// </summary>
    public const string PictBeaterHardYarnRight = "pictBeaterHardYarnRight";
    /// <summary>
    /// Hard yarn beater up.
    /// </summary>
    public const string PictBeaterHardYarnUp = "pictBeaterHardYarnUp";
    /// <summary>
    /// Jazz sticks down.
    /// </summary>
    public const string PictBeaterJazzSticksDown = "pictBeaterJazzSticksDown";
    /// <summary>
    /// Jazz sticks up.
    /// </summary>
    public const string PictBeaterJazzSticksUp = "pictBeaterJazzSticksUp";
    /// <summary>
    /// Knitting needle.
    /// </summary>
    public const string PictBeaterKnittingNeedle = "pictBeaterKnittingNeedle";
    /// <summary>
    /// Chime hammer up.
    /// </summary>
    public const string PictBeaterMallet = "pictBeaterMallet";
    /// <summary>
    /// Chime hammer down.
    /// </summary>
    public const string PictBeaterMalletDown = "pictBeaterMalletDown";
    /// <summary>
    /// Medium bass drum stick down.
    /// </summary>
    public const string PictBeaterMediumBassDrumDown = "pictBeaterMediumBassDrumDown";
    /// <summary>
    /// Medium bass drum stick up.
    /// </summary>
    public const string PictBeaterMediumBassDrumUp = "pictBeaterMediumBassDrumUp";
    /// <summary>
    /// Medium timpani stick down.
    /// </summary>
    public const string PictBeaterMediumTimpaniDown = "pictBeaterMediumTimpaniDown";
    /// <summary>
    /// Medium timpani stick left.
    /// </summary>
    public const string PictBeaterMediumTimpaniLeft = "pictBeaterMediumTimpaniLeft";
    /// <summary>
    /// Medium timpani stick right.
    /// </summary>
    public const string PictBeaterMediumTimpaniRight = "pictBeaterMediumTimpaniRight";
    /// <summary>
    /// Medium timpani stick up.
    /// </summary>
    public const string PictBeaterMediumTimpaniUp = "pictBeaterMediumTimpaniUp";
    /// <summary>
    /// Medium xylophone stick down.
    /// </summary>
    public const string PictBeaterMediumXylophoneDown = "pictBeaterMediumXylophoneDown";
    /// <summary>
    /// Medium xylophone stick left.
    /// </summary>
    public const string PictBeaterMediumXylophoneLeft = "pictBeaterMediumXylophoneLeft";
    /// <summary>
    /// Medium xylophone stick right.
    /// </summary>
    public const string PictBeaterMediumXylophoneRight = "pictBeaterMediumXylophoneRight";
    /// <summary>
    /// Medium xylophone stick up.
    /// </summary>
    public const string PictBeaterMediumXylophoneUp = "pictBeaterMediumXylophoneUp";
    /// <summary>
    /// Medium yarn beater down.
    /// </summary>
    public const string PictBeaterMediumYarnDown = "pictBeaterMediumYarnDown";
    /// <summary>
    /// Medium yarn beater left.
    /// </summary>
    public const string PictBeaterMediumYarnLeft = "pictBeaterMediumYarnLeft";
    /// <summary>
    /// Medium yarn beater right.
    /// </summary>
    public const string PictBeaterMediumYarnRight = "pictBeaterMediumYarnRight";
    /// <summary>
    /// Medium yarn beater up.
    /// </summary>
    public const string PictBeaterMediumYarnUp = "pictBeaterMediumYarnUp";
    /// <summary>
    /// Metal bass drum stick down.
    /// </summary>
    public const string PictBeaterMetalBassDrumDown = "pictBeaterMetalBassDrumDown";
    /// <summary>
    /// Metal bass drum stick up.
    /// </summary>
    public const string PictBeaterMetalBassDrumUp = "pictBeaterMetalBassDrumUp";
    /// <summary>
    /// Metal beater down.
    /// </summary>
    public const string PictBeaterMetalDown = "pictBeaterMetalDown";
    /// <summary>
    /// Metal hammer.
    /// </summary>
    public const string PictBeaterMetalHammer = "pictBeaterMetalHammer";
    /// <summary>
    /// Metal beater, left.
    /// </summary>
    public const string PictBeaterMetalLeft = "pictBeaterMetalLeft";
    /// <summary>
    /// Metal beater, right.
    /// </summary>
    public const string PictBeaterMetalRight = "pictBeaterMetalRight";
    /// <summary>
    /// Metal beater, up.
    /// </summary>
    public const string PictBeaterMetalUp = "pictBeaterMetalUp";
    /// <summary>
    /// Snare sticks down.
    /// </summary>
    public const string PictBeaterSnareSticksDown = "pictBeaterSnareSticksDown";
    /// <summary>
    /// Snare sticks up.
    /// </summary>
    public const string PictBeaterSnareSticksUp = "pictBeaterSnareSticksUp";
    /// <summary>
    /// Soft bass drum stick down.
    /// </summary>
    public const string PictBeaterSoftBassDrumDown = "pictBeaterSoftBassDrumDown";
    /// <summary>
    /// Soft bass drum stick up.
    /// </summary>
    public const string PictBeaterSoftBassDrumUp = "pictBeaterSoftBassDrumUp";
    /// <summary>
    /// Soft glockenspiel stick down.
    /// </summary>
    public const string PictBeaterSoftGlockenspielDown = "pictBeaterSoftGlockenspielDown";
    /// <summary>
    /// Soft glockenspiel stick left.
    /// </summary>
    public const string PictBeaterSoftGlockenspielLeft = "pictBeaterSoftGlockenspielLeft";
    /// <summary>
    /// Soft glockenspiel stick right.
    /// </summary>
    public const string PictBeaterSoftGlockenspielRight = "pictBeaterSoftGlockenspielRight";
    /// <summary>
    /// Soft glockenspiel stick up.
    /// </summary>
    public const string PictBeaterSoftGlockenspielUp = "pictBeaterSoftGlockenspielUp";
    /// <summary>
    /// Soft timpani stick down.
    /// </summary>
    public const string PictBeaterSoftTimpaniDown = "pictBeaterSoftTimpaniDown";
    /// <summary>
    /// Soft timpani stick left.
    /// </summary>
    public const string PictBeaterSoftTimpaniLeft = "pictBeaterSoftTimpaniLeft";
    /// <summary>
    /// Soft timpani stick right.
    /// </summary>
    public const string PictBeaterSoftTimpaniRight = "pictBeaterSoftTimpaniRight";
    /// <summary>
    /// Soft timpani stick up.
    /// </summary>
    public const string PictBeaterSoftTimpaniUp = "pictBeaterSoftTimpaniUp";
    /// <summary>
    /// Soft xylophone beaters.
    /// </summary>
    public const string PictBeaterSoftXylophone = "pictBeaterSoftXylophone";
    /// <summary>
    /// Soft xylophone stick down.
    /// </summary>
    public const string PictBeaterSoftXylophoneDown = "pictBeaterSoftXylophoneDown";
    /// <summary>
    /// Soft xylophone stick left.
    /// </summary>
    public const string PictBeaterSoftXylophoneLeft = "pictBeaterSoftXylophoneLeft";
    /// <summary>
    /// Soft xylophone stick right.
    /// </summary>
    public const string PictBeaterSoftXylophoneRight = "pictBeaterSoftXylophoneRight";
    /// <summary>
    /// Soft xylophone stick up.
    /// </summary>
    public const string PictBeaterSoftXylophoneUp = "pictBeaterSoftXylophoneUp";
    /// <summary>
    /// Soft yarn beater down.
    /// </summary>
    public const string PictBeaterSoftYarnDown = "pictBeaterSoftYarnDown";
    /// <summary>
    /// Soft yarn beater left.
    /// </summary>
    public const string PictBeaterSoftYarnLeft = "pictBeaterSoftYarnLeft";
    /// <summary>
    /// Soft yarn beater right.
    /// </summary>
    public const string PictBeaterSoftYarnRight = "pictBeaterSoftYarnRight";
    /// <summary>
    /// Soft yarn beater up.
    /// </summary>
    public const string PictBeaterSoftYarnUp = "pictBeaterSoftYarnUp";
    /// <summary>
    /// Spoon-shaped wooden mallet.
    /// </summary>
    public const string PictBeaterSpoonWoodenMallet = "pictBeaterSpoonWoodenMallet";
    /// <summary>
    /// Superball beater down.
    /// </summary>
    public const string PictBeaterSuperballDown = "pictBeaterSuperballDown";
    /// <summary>
    /// Superball beater left.
    /// </summary>
    public const string PictBeaterSuperballLeft = "pictBeaterSuperballLeft";
    /// <summary>
    /// Superball beater right.
    /// </summary>
    public const string PictBeaterSuperballRight = "pictBeaterSuperballRight";
    /// <summary>
    /// Superball beater up.
    /// </summary>
    public const string PictBeaterSuperballUp = "pictBeaterSuperballUp";
    /// <summary>
    /// Triangle beater down.
    /// </summary>
    public const string PictBeaterTriangleDown = "pictBeaterTriangleDown";
    /// <summary>
    /// Triangle beater plain.
    /// </summary>
    public const string PictBeaterTrianglePlain = "pictBeaterTrianglePlain";
    /// <summary>
    /// Triangle beater up.
    /// </summary>
    public const string PictBeaterTriangleUp = "pictBeaterTriangleUp";
    /// <summary>
    /// Wire brushes down.
    /// </summary>
    public const string PictBeaterWireBrushesDown = "pictBeaterWireBrushesDown";
    /// <summary>
    /// Wire brushes up.
    /// </summary>
    public const string PictBeaterWireBrushesUp = "pictBeaterWireBrushesUp";
    /// <summary>
    /// Wood timpani stick down.
    /// </summary>
    public const string PictBeaterWoodTimpaniDown = "pictBeaterWoodTimpaniDown";
    /// <summary>
    /// Wood timpani stick left.
    /// </summary>
    public const string PictBeaterWoodTimpaniLeft = "pictBeaterWoodTimpaniLeft";
    /// <summary>
    /// Wood timpani stick right.
    /// </summary>
    public const string PictBeaterWoodTimpaniRight = "pictBeaterWoodTimpaniRight";
    /// <summary>
    /// Wood timpani stick up.
    /// </summary>
    public const string PictBeaterWoodTimpaniUp = "pictBeaterWoodTimpaniUp";
    /// <summary>
    /// Wood xylophone stick down.
    /// </summary>
    public const string PictBeaterWoodXylophoneDown = "pictBeaterWoodXylophoneDown";
    /// <summary>
    /// Wood xylophone stick left.
    /// </summary>
    public const string PictBeaterWoodXylophoneLeft = "pictBeaterWoodXylophoneLeft";
    /// <summary>
    /// Wood xylophone stick right.
    /// </summary>
    public const string PictBeaterWoodXylophoneRight = "pictBeaterWoodXylophoneRight";
    /// <summary>
    /// Wood xylophone stick up.
    /// </summary>
    public const string PictBeaterWoodXylophoneUp = "pictBeaterWoodXylophoneUp";
    /// <summary>
    /// Bell.
    /// </summary>
    public const string PictBell = "pictBell";
    /// <summary>
    /// Bell of cymbal.
    /// </summary>
    public const string PictBellOfCymbal = "pictBellOfCymbal";
    /// <summary>
    /// Bell plate.
    /// </summary>
    public const string PictBellPlate = "pictBellPlate";
    /// <summary>
    /// Bell tree.
    /// </summary>
    public const string PictBellTree = "pictBellTree";
    /// <summary>
    /// Bird whistle.
    /// </summary>
    public const string PictBirdWhistle = "pictBirdWhistle";
    /// <summary>
    /// Board clapper.
    /// </summary>
    public const string PictBoardClapper = "pictBoardClapper";
    /// <summary>
    /// Bongos.
    /// </summary>
    public const string PictBongos = "pictBongos";
    /// <summary>
    /// Brake drum.
    /// </summary>
    public const string PictBrakeDrum = "pictBrakeDrum";
    /// <summary>
    /// Cabasa.
    /// </summary>
    public const string PictCabasa = "pictCabasa";
    /// <summary>
    /// Cannon.
    /// </summary>
    public const string PictCannon = "pictCannon";
    /// <summary>
    /// Car horn.
    /// </summary>
    public const string PictCarHorn = "pictCarHorn";
    /// <summary>
    /// Castanets.
    /// </summary>
    public const string PictCastanets = "pictCastanets";
    /// <summary>
    /// Castanets with handle.
    /// </summary>
    public const string PictCastanetsWithHandle = "pictCastanetsWithHandle";
    /// <summary>
    /// Celesta.
    /// </summary>
    public const string PictCelesta = "pictCelesta";
    /// <summary>
    /// Cencerro.
    /// </summary>
    public const string PictCencerro = "pictCencerro";
    /// <summary>
    /// Center (Weinberg).
    /// </summary>
    public const string PictCenter1 = "pictCenter1";
    /// <summary>
    /// Center (Ghent).
    /// </summary>
    public const string PictCenter2 = "pictCenter2";
    /// <summary>
    /// Center (Caltabiano).
    /// </summary>
    public const string PictCenter3 = "pictCenter3";
    /// <summary>
    /// Chain rattle.
    /// </summary>
    public const string PictChainRattle = "pictChainRattle";
    /// <summary>
    /// Chimes.
    /// </summary>
    public const string PictChimes = "pictChimes";
    /// <summary>
    /// Chinese cymbal.
    /// </summary>
    public const string PictChineseCymbal = "pictChineseCymbal";
    /// <summary>
    /// Choke (Weinberg).
    /// </summary>
    public const string PictChokeCymbal = "pictChokeCymbal";
    /// <summary>
    /// Claves.
    /// </summary>
    public const string PictClaves = "pictClaves";
    /// <summary>
    /// Coins.
    /// </summary>
    public const string PictCoins = "pictCoins";
    /// <summary>
    /// Conga.
    /// </summary>
    public const string PictConga = "pictConga";
    /// <summary>
    /// Cow bell.
    /// </summary>
    public const string PictCowBell = "pictCowBell";
    /// <summary>
    /// Crash cymbals.
    /// </summary>
    public const string PictCrashCymbals = "pictCrashCymbals";
    /// <summary>
    /// Crotales.
    /// </summary>
    public const string PictCrotales = "pictCrotales";
    /// <summary>
    /// Combining crush for stem.
    /// </summary>
    public const string PictCrushStem = "pictCrushStem";
    /// <summary>
    /// Cuica.
    /// </summary>
    public const string PictCuica = "pictCuica";
    /// <summary>
    /// Cymbal tongs.
    /// </summary>
    public const string PictCymbalTongs = "pictCymbalTongs";
    /// <summary>
    /// Damp.
    /// </summary>
    public const string PictDamp1 = "pictDamp1";
    /// <summary>
    /// Damp 2.
    /// </summary>
    public const string PictDamp2 = "pictDamp2";
    /// <summary>
    /// Damp 3.
    /// </summary>
    public const string PictDamp3 = "pictDamp3";
    /// <summary>
    /// Damp 4.
    /// </summary>
    public const string PictDamp4 = "pictDamp4";
    /// <summary>
    /// Combining X for stem (dead note).
    /// </summary>
    public const string PictDeadNoteStem = "pictDeadNoteStem";
    /// <summary>
    /// Drum stick.
    /// </summary>
    public const string PictDrumStick = "pictDrumStick";
    /// <summary>
    /// Duck call.
    /// </summary>
    public const string PictDuckCall = "pictDuckCall";
    /// <summary>
    /// Edge of cymbal.
    /// </summary>
    public const string PictEdgeOfCymbal = "pictEdgeOfCymbal";
    /// <summary>
    /// Empty trapezoid.
    /// </summary>
    public const string PictEmptyTrap = "pictEmptyTrap";
    /// <summary>
    /// Finger cymbals.
    /// </summary>
    public const string PictFingerCymbals = "pictFingerCymbals";
    /// <summary>
    /// Flexatone.
    /// </summary>
    public const string PictFlexatone = "pictFlexatone";
    /// <summary>
    /// Football rattle.
    /// </summary>
    public const string PictFootballRatchet = "pictFootballRatchet";
    /// <summary>
    /// Glass harmonica.
    /// </summary>
    public const string PictGlassHarmonica = "pictGlassHarmonica";
    /// <summary>
    /// Glass harp.
    /// </summary>
    public const string PictGlassHarp = "pictGlassHarp";
    /// <summary>
    /// Glass plate chimes.
    /// </summary>
    public const string PictGlassPlateChimes = "pictGlassPlateChimes";
    /// <summary>
    /// Glass tube chimes.
    /// </summary>
    public const string PictGlassTubeChimes = "pictGlassTubeChimes";
    /// <summary>
    /// Glockenspiel.
    /// </summary>
    public const string PictGlsp = "pictGlsp";
    /// <summary>
    /// Glockenspiel (Smith Brindle).
    /// </summary>
    public const string PictGlspSmithBrindle = "pictGlspSmithBrindle";
    /// <summary>
    /// Goblet drum (djembe, dumbek).
    /// </summary>
    public const string PictGobletDrum = "pictGobletDrum";
    /// <summary>
    /// Gong.
    /// </summary>
    public const string PictGong = "pictGong";
    /// <summary>
    /// Gong with button (nipple).
    /// </summary>
    public const string PictGongWithButton = "pictGongWithButton";
    /// <summary>
    /// Guiro.
    /// </summary>
    public const string PictGuiro = "pictGuiro";
    /// <summary>
    /// Hard gum beater, down.
    /// </summary>
    public const string PictGumHardDown = "pictGumHardDown";
    /// <summary>
    /// Hard gum beater, left.
    /// </summary>
    public const string PictGumHardLeft = "pictGumHardLeft";
    /// <summary>
    /// Hard gum beater, right.
    /// </summary>
    public const string PictGumHardRight = "pictGumHardRight";
    /// <summary>
    /// Hard gum beater, up.
    /// </summary>
    public const string PictGumHardUp = "pictGumHardUp";
    /// <summary>
    /// Medium gum beater, down.
    /// </summary>
    public const string PictGumMediumDown = "pictGumMediumDown";
    /// <summary>
    /// Medium gum beater, left.
    /// </summary>
    public const string PictGumMediumLeft = "pictGumMediumLeft";
    /// <summary>
    /// Medium gum beater, right.
    /// </summary>
    public const string PictGumMediumRight = "pictGumMediumRight";
    /// <summary>
    /// Medium gum beater, up.
    /// </summary>
    public const string PictGumMediumUp = "pictGumMediumUp";
    /// <summary>
    /// Soft gum beater, down.
    /// </summary>
    public const string PictGumSoftDown = "pictGumSoftDown";
    /// <summary>
    /// Soft gum beater, left.
    /// </summary>
    public const string PictGumSoftLeft = "pictGumSoftLeft";
    /// <summary>
    /// Soft gum beater, right.
    /// </summary>
    public const string PictGumSoftRight = "pictGumSoftRight";
    /// <summary>
    /// Soft gum beater, up.
    /// </summary>
    public const string PictGumSoftUp = "pictGumSoftUp";
    /// <summary>
    /// Half-open.
    /// </summary>
    public const string PictHalfOpen1 = "pictHalfOpen1";
    /// <summary>
    /// Half-open 2 (Weinberg).
    /// </summary>
    public const string PictHalfOpen2 = "pictHalfOpen2";
    /// <summary>
    /// Handbell.
    /// </summary>
    public const string PictHandbell = "pictHandbell";
    /// <summary>
    /// Hi-hat.
    /// </summary>
    public const string PictHiHat = "pictHiHat";
    /// <summary>
    /// Hi-hat cymbals on stand.
    /// </summary>
    public const string PictHiHatOnStand = "pictHiHatOnStand";
    /// <summary>
    /// Jaw harp.
    /// </summary>
    public const string PictJawHarp = "pictJawHarp";
    /// <summary>
    /// Jingle bells.
    /// </summary>
    public const string PictJingleBells = "pictJingleBells";
    /// <summary>
    /// Klaxon horn.
    /// </summary>
    public const string PictKlaxonHorn = "pictKlaxonHorn";
    /// <summary>
    /// Right hand (Agostini).
    /// </summary>
    public const string PictLeftHandCircle = "pictLeftHandCircle";
    /// <summary>
    /// Lion's roar.
    /// </summary>
    public const string PictLionsRoar = "pictLionsRoar";
    /// <summary>
    /// Lithophone.
    /// </summary>
    public const string PictLithophone = "pictLithophone";
    /// <summary>
    /// Log drum.
    /// </summary>
    public const string PictLogDrum = "pictLogDrum";
    /// <summary>
    /// Lotus flute.
    /// </summary>
    public const string PictLotusFlute = "pictLotusFlute";
    /// <summary>
    /// Marimba.
    /// </summary>
    public const string PictMar = "pictMar";
    /// <summary>
    /// Marimba (Smith Brindle).
    /// </summary>
    public const string PictMarSmithBrindle = "pictMarSmithBrindle";
    /// <summary>
    /// Maraca.
    /// </summary>
    public const string PictMaraca = "pictMaraca";
    /// <summary>
    /// Maracas.
    /// </summary>
    public const string PictMaracas = "pictMaracas";
    /// <summary>
    /// Megaphone.
    /// </summary>
    public const string PictMegaphone = "pictMegaphone";
    /// <summary>
    /// Metal plate chimes.
    /// </summary>
    public const string PictMetalPlateChimes = "pictMetalPlateChimes";
    /// <summary>
    /// Metal tube chimes.
    /// </summary>
    public const string PictMetalTubeChimes = "pictMetalTubeChimes";
    /// <summary>
    /// Musical saw.
    /// </summary>
    public const string PictMusicalSaw = "pictMusicalSaw";
    /// <summary>
    /// Normal position (Caltabiano).
    /// </summary>
    public const string PictNormalPosition = "pictNormalPosition";
    /// <summary>
    /// On rim.
    /// </summary>
    public const string PictOnRim = "pictOnRim";
    /// <summary>
    /// Open.
    /// </summary>
    public const string PictOpen = "pictOpen";
    /// <summary>
    /// Closed / rim shot.
    /// </summary>
    public const string PictOpenRimShot = "pictOpenRimShot";
    /// <summary>
    /// Pistol shot.
    /// </summary>
    public const string PictPistolShot = "pictPistolShot";
    /// <summary>
    /// Police whistle.
    /// </summary>
    public const string PictPoliceWhistle = "pictPoliceWhistle";
    /// <summary>
    /// Quijada (jawbone).
    /// </summary>
    public const string PictQuijada = "pictQuijada";
    /// <summary>
    /// Rainstick.
    /// </summary>
    public const string PictRainstick = "pictRainstick";
    /// <summary>
    /// Ratchet.
    /// </summary>
    public const string PictRatchet = "pictRatchet";
    /// <summary>
    /// Reco-reco.
    /// </summary>
    public const string PictRecoReco = "pictRecoReco";
    /// <summary>
    /// Left hand (Agostini).
    /// </summary>
    public const string PictRightHandSquare = "pictRightHandSquare";
    /// <summary>
    /// Rim or edge (Weinberg).
    /// </summary>
    public const string PictRim1 = "pictRim1";
    /// <summary>
    /// Rim (Ghent).
    /// </summary>
    public const string PictRim2 = "pictRim2";
    /// <summary>
    /// Rim (Caltabiano).
    /// </summary>
    public const string PictRim3 = "pictRim3";
    /// <summary>
    /// Rim shot for stem.
    /// </summary>
    public const string PictRimShotOnStem = "pictRimShotOnStem";
    /// <summary>
    /// Sandpaper blocks.
    /// </summary>
    public const string PictSandpaperBlocks = "pictSandpaperBlocks";
    /// <summary>
    /// Scrape around rim (counter-clockwise).
    /// </summary>
    public const string PictScrapeAroundRim = "pictScrapeAroundRim";
    /// <summary>
    /// Scrape around rim (clockwise).
    /// </summary>
    public const string PictScrapeAroundRimClockwise = "pictScrapeAroundRimClockwise";
    /// <summary>
    /// Scrape from center to edge.
    /// </summary>
    public const string PictScrapeCenterToEdge = "pictScrapeCenterToEdge";
    /// <summary>
    /// Scrape from edge to center.
    /// </summary>
    public const string PictScrapeEdgeToCenter = "pictScrapeEdgeToCenter";
    /// <summary>
    /// Shell bells.
    /// </summary>
    public const string PictShellBells = "pictShellBells";
    /// <summary>
    /// Shell chimes.
    /// </summary>
    public const string PictShellChimes = "pictShellChimes";
    /// <summary>
    /// Siren.
    /// </summary>
    public const string PictSiren = "pictSiren";
    /// <summary>
    /// Sistrum.
    /// </summary>
    public const string PictSistrum = "pictSistrum";
    /// <summary>
    /// Sizzle cymbal.
    /// </summary>
    public const string PictSizzleCymbal = "pictSizzleCymbal";
    /// <summary>
    /// Sleigh bell.
    /// </summary>
    public const string PictSleighBell = "pictSleighBell";
    /// <summary>
    /// Slide brush on gong.
    /// </summary>
    public const string PictSlideBrushOnGong = "pictSlideBrushOnGong";
    /// <summary>
    /// Slide whistle.
    /// </summary>
    public const string PictSlideWhistle = "pictSlideWhistle";
    /// <summary>
    /// Slit drum.
    /// </summary>
    public const string PictSlitDrum = "pictSlitDrum";
    /// <summary>
    /// Snare drum.
    /// </summary>
    public const string PictSnareDrum = "pictSnareDrum";
    /// <summary>
    /// Military snare drum.
    /// </summary>
    public const string PictSnareDrumMilitary = "pictSnareDrumMilitary";
    /// <summary>
    /// Snare drum, snares off.
    /// </summary>
    public const string PictSnareDrumSnaresOff = "pictSnareDrumSnaresOff";
    /// <summary>
    /// Steel drums.
    /// </summary>
    public const string PictSteelDrums = "pictSteelDrums";
    /// <summary>
    /// Stick shot.
    /// </summary>
    public const string PictStickShot = "pictStickShot";
    /// <summary>
    /// Superball.
    /// </summary>
    public const string PictSuperball = "pictSuperball";
    /// <summary>
    /// Suspended cymbal.
    /// </summary>
    public const string PictSuspendedCymbal = "pictSuspendedCymbal";
    /// <summary>
    /// Combining swish for stem.
    /// </summary>
    public const string PictSwishStem = "pictSwishStem";
    /// <summary>
    /// Indian tabla.
    /// </summary>
    public const string PictTabla = "pictTabla";
    /// <summary>
    /// Tam-tam.
    /// </summary>
    public const string PictTamTam = "pictTamTam";
    /// <summary>
    /// Tam-tam with beater (Smith Brindle).
    /// </summary>
    public const string PictTamTamWithBeater = "pictTamTamWithBeater";
    /// <summary>
    /// Tambourine.
    /// </summary>
    public const string PictTambourine = "pictTambourine";
    /// <summary>
    /// Temple blocks.
    /// </summary>
    public const string PictTempleBlocks = "pictTempleBlocks";
    /// <summary>
    /// Tenor drum.
    /// </summary>
    public const string PictTenorDrum = "pictTenorDrum";
    /// <summary>
    /// Thundersheet.
    /// </summary>
    public const string PictThundersheet = "pictThundersheet";
    /// <summary>
    /// Timbales.
    /// </summary>
    public const string PictTimbales = "pictTimbales";
    /// <summary>
    /// Timpani.
    /// </summary>
    public const string PictTimpani = "pictTimpani";
    /// <summary>
    /// Tom-tom.
    /// </summary>
    public const string PictTomTom = "pictTomTom";
    /// <summary>
    /// Chinese tom-tom.
    /// </summary>
    public const string PictTomTomChinese = "pictTomTomChinese";
    /// <summary>
    /// Indo-American tom tom.
    /// </summary>
    public const string PictTomTomIndoAmerican = "pictTomTomIndoAmerican";
    /// <summary>
    /// Japanese tom-tom.
    /// </summary>
    public const string PictTomTomJapanese = "pictTomTomJapanese";
    /// <summary>
    /// Triangle.
    /// </summary>
    public const string PictTriangle = "pictTriangle";
    /// <summary>
    /// Tubaphone.
    /// </summary>
    public const string PictTubaphone = "pictTubaphone";
    /// <summary>
    /// Tubular bells.
    /// </summary>
    public const string PictTubularBells = "pictTubularBells";
    /// <summary>
    /// Combining turn left for stem.
    /// </summary>
    public const string PictTurnLeftStem = "pictTurnLeftStem";
    /// <summary>
    /// Combining turn left or right for stem.
    /// </summary>
    public const string PictTurnRightLeftStem = "pictTurnRightLeftStem";
    /// <summary>
    /// Combining turn right for stem.
    /// </summary>
    public const string PictTurnRightStem = "pictTurnRightStem";
    /// <summary>
    /// Vibraphone.
    /// </summary>
    public const string PictVib = "pictVib";
    /// <summary>
    /// Metallophone (vibraphone motor off).
    /// </summary>
    public const string PictVibMotorOff = "pictVibMotorOff";
    /// <summary>
    /// Vibraphone (Smith Brindle).
    /// </summary>
    public const string PictVibSmithBrindle = "pictVibSmithBrindle";
    /// <summary>
    /// Vibraslap.
    /// </summary>
    public const string PictVibraslap = "pictVibraslap";
    /// <summary>
    /// Vietnamese hat cymbal.
    /// </summary>
    public const string PictVietnameseHat = "pictVietnameseHat";
    /// <summary>
    /// Whip.
    /// </summary>
    public const string PictWhip = "pictWhip";
    /// <summary>
    /// Wind chimes (glass).
    /// </summary>
    public const string PictWindChimesGlass = "pictWindChimesGlass";
    /// <summary>
    /// Wind machine.
    /// </summary>
    public const string PictWindMachine = "pictWindMachine";
    /// <summary>
    /// Wind whistle (or mouth siren).
    /// </summary>
    public const string PictWindWhistle = "pictWindWhistle";
    /// <summary>
    /// Wood block.
    /// </summary>
    public const string PictWoodBlock = "pictWoodBlock";
    /// <summary>
    /// Wound beater, hard core down.
    /// </summary>
    public const string PictWoundHardDown = "pictWoundHardDown";
    /// <summary>
    /// Wound beater, hard core left.
    /// </summary>
    public const string PictWoundHardLeft = "pictWoundHardLeft";
    /// <summary>
    /// Wound beater, hard core right.
    /// </summary>
    public const string PictWoundHardRight = "pictWoundHardRight";
    /// <summary>
    /// Wound beater, hard core up.
    /// </summary>
    public const string PictWoundHardUp = "pictWoundHardUp";
    /// <summary>
    /// Wound beater, soft core down.
    /// </summary>
    public const string PictWoundSoftDown = "pictWoundSoftDown";
    /// <summary>
    /// Wound beater, soft core left.
    /// </summary>
    public const string PictWoundSoftLeft = "pictWoundSoftLeft";
    /// <summary>
    /// Wound beater, soft core right.
    /// </summary>
    public const string PictWoundSoftRight = "pictWoundSoftRight";
    /// <summary>
    /// Wound beater, soft core up.
    /// </summary>
    public const string PictWoundSoftUp = "pictWoundSoftUp";
    /// <summary>
    /// Xylophone.
    /// </summary>
    public const string PictXyl = "pictXyl";
    /// <summary>
    /// Bass xylophone.
    /// </summary>
    public const string PictXylBass = "pictXylBass";
    /// <summary>
    /// Xylophone (Smith Brindle).
    /// </summary>
    public const string PictXylSmithBrindle = "pictXylSmithBrindle";
    /// <summary>
    /// Tenor xylophone.
    /// </summary>
    public const string PictXylTenor = "pictXylTenor";
    /// <summary>
    /// Trough tenor xylophone.
    /// </summary>
    public const string PictXylTenorTrough = "pictXylTenorTrough";
    /// <summary>
    /// Trough xylophone.
    /// </summary>
    public const string PictXylTrough = "pictXylTrough";
    /// <summary>
    /// Buzz pizzicato.
    /// </summary>
    public const string PluckedBuzzPizzicato = "pluckedBuzzPizzicato";
    /// <summary>
    /// Damp.
    /// </summary>
    public const string PluckedDamp = "pluckedDamp";
    /// <summary>
    /// Damp all.
    /// </summary>
    public const string PluckedDampAll = "pluckedDampAll";
    /// <summary>
    /// Damp for stem.
    /// </summary>
    public const string PluckedDampOnStem = "pluckedDampOnStem";
    /// <summary>
    /// Fingernail flick.
    /// </summary>
    public const string PluckedFingernailFlick = "pluckedFingernailFlick";
    /// <summary>
    /// Left-hand pizzicato.
    /// </summary>
    public const string PluckedLeftHandPizzicato = "pluckedLeftHandPizzicato";
    /// <summary>
    /// Plectrum.
    /// </summary>
    public const string PluckedPlectrum = "pluckedPlectrum";
    /// <summary>
    /// Snap pizzicato above.
    /// </summary>
    public const string PluckedSnapPizzicatoAbove = "pluckedSnapPizzicatoAbove";
    /// <summary>
    /// Snap pizzicato below.
    /// </summary>
    public const string PluckedSnapPizzicatoBelow = "pluckedSnapPizzicatoBelow";
    /// <summary>
    /// With fingernails.
    /// </summary>
    public const string PluckedWithFingernails = "pluckedWithFingernails";
    /// <summary>
    /// Quindicesima.
    /// </summary>
    public const string Quindicesima = "quindicesima";
    /// <summary>
    /// Quindicesima alta.
    /// </summary>
    public const string QuindicesimaAlta = "quindicesimaAlta";
    /// <summary>
    /// Quindicesima bassa.
    /// </summary>
    public const string QuindicesimaBassa = "quindicesimaBassa";
    /// <summary>
    /// Quindicesima bassa (mb).
    /// </summary>
    public const string QuindicesimaBassaMb = "quindicesimaBassaMb";
    /// <summary>
    /// Repeat last bar.
    /// </summary>
    public const string Repeat1Bar = "repeat1Bar";
    /// <summary>
    /// Repeat last two bars.
    /// </summary>
    public const string Repeat2Bars = "repeat2Bars";
    /// <summary>
    /// Repeat last four bars.
    /// </summary>
    public const string Repeat4Bars = "repeat4Bars";
    /// <summary>
    /// Repeat bar lower dot.
    /// </summary>
    public const string RepeatBarLowerDot = "repeatBarLowerDot";
    /// <summary>
    /// Repeat bar slash.
    /// </summary>
    public const string RepeatBarSlash = "repeatBarSlash";
    /// <summary>
    /// Repeat bar upper dot.
    /// </summary>
    public const string RepeatBarUpperDot = "repeatBarUpperDot";
    /// <summary>
    /// Single repeat dot.
    /// </summary>
    public const string RepeatDot = "repeatDot";
    /// <summary>
    /// Repeat dots.
    /// </summary>
    public const string RepeatDots = "repeatDots";
    /// <summary>
    /// Left (start) repeat sign.
    /// </summary>
    public const string RepeatLeft = "repeatLeft";
    /// <summary>
    /// Right (end) repeat sign.
    /// </summary>
    public const string RepeatRight = "repeatRight";
    /// <summary>
    /// Right and left repeat sign.
    /// </summary>
    public const string RepeatRightLeft = "repeatRightLeft";
    /// <summary>
    /// 1024th rest.
    /// </summary>
    public const string Rest1024th = "rest1024th";
    /// <summary>
    /// 128th (semihemidemisemiquaver) rest.
    /// </summary>
    public const string Rest128th = "rest128th";
    /// <summary>
    /// 16th (semiquaver) rest.
    /// </summary>
    public const string Rest16th = "rest16th";
    /// <summary>
    /// 256th rest.
    /// </summary>
    public const string Rest256th = "rest256th";
    /// <summary>
    /// 32nd (demisemiquaver) rest.
    /// </summary>
    public const string Rest32nd = "rest32nd";
    /// <summary>
    /// 512th rest.
    /// </summary>
    public const string Rest512th = "rest512th";
    /// <summary>
    /// 64th (hemidemisemiquaver) rest.
    /// </summary>
    public const string Rest64th = "rest64th";
    /// <summary>
    /// Eighth (quaver) rest.
    /// </summary>
    public const string Rest8th = "rest8th";
    /// <summary>
    /// Double whole (breve) rest.
    /// </summary>
    public const string RestDoubleWhole = "restDoubleWhole";
    /// <summary>
    /// Double whole rest on leger lines.
    /// </summary>
    public const string RestDoubleWholeLegerLine = "restDoubleWholeLegerLine";
    /// <summary>
    /// Multiple measure rest.
    /// </summary>
    public const string RestHBar = "restHBar";
    /// <summary>
    /// H-bar, left half.
    /// </summary>
    public const string RestHBarLeft = "restHBarLeft";
    /// <summary>
    /// H-bar, middle.
    /// </summary>
    public const string RestHBarMiddle = "restHBarMiddle";
    /// <summary>
    /// H-bar, right half.
    /// </summary>
    public const string RestHBarRight = "restHBarRight";
    /// <summary>
    /// Half (minim) rest.
    /// </summary>
    public const string RestHalf = "restHalf";
    /// <summary>
    /// Half rest on leger line.
    /// </summary>
    public const string RestHalfLegerLine = "restHalfLegerLine";
    /// <summary>
    /// Longa rest.
    /// </summary>
    public const string RestLonga = "restLonga";
    /// <summary>
    /// Maxima rest.
    /// </summary>
    public const string RestMaxima = "restMaxima";
    /// <summary>
    /// Quarter (crotchet) rest.
    /// </summary>
    public const string RestQuarter = "restQuarter";
    /// <summary>
    /// Old-style quarter (crotchet) rest.
    /// </summary>
    public const string RestQuarterOld = "restQuarterOld";
    /// <summary>
    /// Z-style quarter (crotchet) rest.
    /// </summary>
    public const string RestQuarterZ = "restQuarterZ";
    /// <summary>
    /// Whole (semibreve) rest.
    /// </summary>
    public const string RestWhole = "restWhole";
    /// <summary>
    /// Whole rest on leger line.
    /// </summary>
    public const string RestWholeLegerLine = "restWholeLegerLine";
    /// <summary>
    /// Reversed brace.
    /// </summary>
    public const string ReversedBrace = "reversedBrace";
    /// <summary>
    /// Reversed bracket bottom.
    /// </summary>
    public const string ReversedBracketBottom = "reversedBracketBottom";
    /// <summary>
    /// Reversed bracket top.
    /// </summary>
    public const string ReversedBracketTop = "reversedBracketTop";
    /// <summary>
    /// Right repeat sign within bar.
    /// </summary>
    public const string RightRepeatSmall = "rightRepeatSmall";
    /// <summary>
    /// Scale degree 1.
    /// </summary>
    public const string ScaleDegree1 = "scaleDegree1";
    /// <summary>
    /// Scale degree 2.
    /// </summary>
    public const string ScaleDegree2 = "scaleDegree2";
    /// <summary>
    /// Scale degree 3.
    /// </summary>
    public const string ScaleDegree3 = "scaleDegree3";
    /// <summary>
    /// Scale degree 4.
    /// </summary>
    public const string ScaleDegree4 = "scaleDegree4";
    /// <summary>
    /// Scale degree 5.
    /// </summary>
    public const string ScaleDegree5 = "scaleDegree5";
    /// <summary>
    /// Scale degree 6.
    /// </summary>
    public const string ScaleDegree6 = "scaleDegree6";
    /// <summary>
    /// Scale degree 7.
    /// </summary>
    public const string ScaleDegree7 = "scaleDegree7";
    /// <summary>
    /// Scale degree 8.
    /// </summary>
    public const string ScaleDegree8 = "scaleDegree8";
    /// <summary>
    /// Scale degree 9.
    /// </summary>
    public const string ScaleDegree9 = "scaleDegree9";
    /// <summary>
    /// Schäffer clef.
    /// </summary>
    public const string SchaefferClef = "schaefferClef";
    /// <summary>
    /// Schäffer F clef to G clef change.
    /// </summary>
    public const string SchaefferFClefToGClef = "schaefferFClefToGClef";
    /// <summary>
    /// Schäffer G clef to F clef change.
    /// </summary>
    public const string SchaefferGClefToFClef = "schaefferGClefToFClef";
    /// <summary>
    /// Schäffer previous clef.
    /// </summary>
    public const string SchaefferPreviousClef = "schaefferPreviousClef";
    /// <summary>
    /// Segno.
    /// </summary>
    public const string Segno = "segno";
    /// <summary>
    /// Segno (serpent).
    /// </summary>
    public const string SegnoSerpent1 = "segnoSerpent1";
    /// <summary>
    /// Segno (serpent with vertical lines).
    /// </summary>
    public const string SegnoSerpent2 = "segnoSerpent2";
    /// <summary>
    /// Semi-pitched percussion clef 1.
    /// </summary>
    public const string SemipitchedPercussionClef1 = "semipitchedPercussionClef1";
    /// <summary>
    /// Semi-pitched percussion clef 2.
    /// </summary>
    public const string SemipitchedPercussionClef2 = "semipitchedPercussionClef2";
    /// <summary>
    /// Flat.
    /// </summary>
    public const string SmnFlat = "smnFlat";
    /// <summary>
    /// Flat (white).
    /// </summary>
    public const string SmnFlatWhite = "smnFlatWhite";
    /// <summary>
    /// Double flat history sign.
    /// </summary>
    public const string SmnHistoryDoubleFlat = "smnHistoryDoubleFlat";
    /// <summary>
    /// Double sharp history sign.
    /// </summary>
    public const string SmnHistoryDoubleSharp = "smnHistoryDoubleSharp";
    /// <summary>
    /// Flat history sign.
    /// </summary>
    public const string SmnHistoryFlat = "smnHistoryFlat";
    /// <summary>
    /// Sharp history sign.
    /// </summary>
    public const string SmnHistorySharp = "smnHistorySharp";
    /// <summary>
    /// Natural (N).
    /// </summary>
    public const string SmnNatural = "smnNatural";
    /// <summary>
    /// Sharp stem up.
    /// </summary>
    public const string SmnSharp = "smnSharp";
    /// <summary>
    /// Sharp stem down.
    /// </summary>
    public const string SmnSharpDown = "smnSharpDown";
    /// <summary>
    /// Sharp (white) stem up.
    /// </summary>
    public const string SmnSharpWhite = "smnSharpWhite";
    /// <summary>
    /// Sharp (white) stem down.
    /// </summary>
    public const string SmnSharpWhiteDown = "smnSharpWhiteDown";
    /// <summary>
    /// Split bar divider (bar spans a system break).
    /// </summary>
    public const string SplitBarDivider = "splitBarDivider";
    /// <summary>
    /// 1-line staff.
    /// </summary>
    public const string Staff1Line = "staff1Line";
    /// <summary>
    /// 1-line staff (narrow).
    /// </summary>
    public const string Staff1LineNarrow = "staff1LineNarrow";
    /// <summary>
    /// 1-line staff (wide).
    /// </summary>
    public const string Staff1LineWide = "staff1LineWide";
    /// <summary>
    /// 2-line staff.
    /// </summary>
    public const string Staff2Lines = "staff2Lines";
    /// <summary>
    /// 2-line staff (narrow).
    /// </summary>
    public const string Staff2LinesNarrow = "staff2LinesNarrow";
    /// <summary>
    /// 2-line staff (wide).
    /// </summary>
    public const string Staff2LinesWide = "staff2LinesWide";
    /// <summary>
    /// 3-line staff.
    /// </summary>
    public const string Staff3Lines = "staff3Lines";
    /// <summary>
    /// 3-line staff (narrow).
    /// </summary>
    public const string Staff3LinesNarrow = "staff3LinesNarrow";
    /// <summary>
    /// 3-line staff (wide).
    /// </summary>
    public const string Staff3LinesWide = "staff3LinesWide";
    /// <summary>
    /// 4-line staff.
    /// </summary>
    public const string Staff4Lines = "staff4Lines";
    /// <summary>
    /// 4-line staff (narrow).
    /// </summary>
    public const string Staff4LinesNarrow = "staff4LinesNarrow";
    /// <summary>
    /// 4-line staff (wide).
    /// </summary>
    public const string Staff4LinesWide = "staff4LinesWide";
    /// <summary>
    /// 5-line staff.
    /// </summary>
    public const string Staff5Lines = "staff5Lines";
    /// <summary>
    /// 5-line staff (narrow).
    /// </summary>
    public const string Staff5LinesNarrow = "staff5LinesNarrow";
    /// <summary>
    /// 5-line staff (wide).
    /// </summary>
    public const string Staff5LinesWide = "staff5LinesWide";
    /// <summary>
    /// 6-line staff.
    /// </summary>
    public const string Staff6Lines = "staff6Lines";
    /// <summary>
    /// 6-line staff (narrow).
    /// </summary>
    public const string Staff6LinesNarrow = "staff6LinesNarrow";
    /// <summary>
    /// 6-line staff (wide).
    /// </summary>
    public const string Staff6LinesWide = "staff6LinesWide";
    /// <summary>
    /// Staff divide arrow down.
    /// </summary>
    public const string StaffDivideArrowDown = "staffDivideArrowDown";
    /// <summary>
    /// Staff divide arrow up.
    /// </summary>
    public const string StaffDivideArrowUp = "staffDivideArrowUp";
    /// <summary>
    /// Staff divide arrows.
    /// </summary>
    public const string StaffDivideArrowUpDown = "staffDivideArrowUpDown";
    /// <summary>
    /// Lower 1 staff position.
    /// </summary>
    public const string StaffPosLower1 = "staffPosLower1";
    /// <summary>
    /// Lower 2 staff positions.
    /// </summary>
    public const string StaffPosLower2 = "staffPosLower2";
    /// <summary>
    /// Lower 3 staff positions.
    /// </summary>
    public const string StaffPosLower3 = "staffPosLower3";
    /// <summary>
    /// Lower 4 staff positions.
    /// </summary>
    public const string StaffPosLower4 = "staffPosLower4";
    /// <summary>
    /// Lower 5 staff positions.
    /// </summary>
    public const string StaffPosLower5 = "staffPosLower5";
    /// <summary>
    /// Lower 6 staff positions.
    /// </summary>
    public const string StaffPosLower6 = "staffPosLower6";
    /// <summary>
    /// Lower 7 staff positions.
    /// </summary>
    public const string StaffPosLower7 = "staffPosLower7";
    /// <summary>
    /// Lower 8 staff positions.
    /// </summary>
    public const string StaffPosLower8 = "staffPosLower8";
    /// <summary>
    /// Raise 1 staff position.
    /// </summary>
    public const string StaffPosRaise1 = "staffPosRaise1";
    /// <summary>
    /// Raise 2 staff positions.
    /// </summary>
    public const string StaffPosRaise2 = "staffPosRaise2";
    /// <summary>
    /// Raise 3 staff positions.
    /// </summary>
    public const string StaffPosRaise3 = "staffPosRaise3";
    /// <summary>
    /// Raise 4 staff positions.
    /// </summary>
    public const string StaffPosRaise4 = "staffPosRaise4";
    /// <summary>
    /// Raise 5 staff positions.
    /// </summary>
    public const string StaffPosRaise5 = "staffPosRaise5";
    /// <summary>
    /// Raise 6 staff positions.
    /// </summary>
    public const string StaffPosRaise6 = "staffPosRaise6";
    /// <summary>
    /// Raise 7 staff positions.
    /// </summary>
    public const string StaffPosRaise7 = "staffPosRaise7";
    /// <summary>
    /// Raise 8 staff positions.
    /// </summary>
    public const string StaffPosRaise8 = "staffPosRaise8";
    /// <summary>
    /// Combining stem.
    /// </summary>
    public const string Stem = "stem";
    /// <summary>
    /// Combining bow on bridge stem.
    /// </summary>
    public const string StemBowOnBridge = "stemBowOnBridge";
    /// <summary>
    /// Combining bow on tailpiece stem.
    /// </summary>
    public const string StemBowOnTailpiece = "stemBowOnTailpiece";
    /// <summary>
    /// Combining buzz roll stem.
    /// </summary>
    public const string StemBuzzRoll = "stemBuzzRoll";
    /// <summary>
    /// Combining damp stem.
    /// </summary>
    public const string StemDamp = "stemDamp";
    /// <summary>
    /// Combining harp string noise stem.
    /// </summary>
    public const string StemHarpStringNoise = "stemHarpStringNoise";
    /// <summary>
    /// Combining multiphonics (black) stem.
    /// </summary>
    public const string StemMultiphonicsBlack = "stemMultiphonicsBlack";
    /// <summary>
    /// Combining multiphonics (black and white) stem.
    /// </summary>
    public const string StemMultiphonicsBlackWhite = "stemMultiphonicsBlackWhite";
    /// <summary>
    /// Combining multiphonics (white) stem.
    /// </summary>
    public const string StemMultiphonicsWhite = "stemMultiphonicsWhite";
    /// <summary>
    /// Combining Penderecki unmeasured tremolo stem.
    /// </summary>
    public const string StemPendereckiTremolo = "stemPendereckiTremolo";
    /// <summary>
    /// Combining rim shot stem.
    /// </summary>
    public const string StemRimShot = "stemRimShot";
    /// <summary>
    /// Combining sprechgesang stem.
    /// </summary>
    public const string StemSprechgesang = "stemSprechgesang";
    /// <summary>
    /// Combining sul ponticello (bow behind bridge) stem.
    /// </summary>
    public const string StemSulPonticello = "stemSulPonticello";
    /// <summary>
    /// Combining sussurando stem.
    /// </summary>
    public const string StemSussurando = "stemSussurando";
    /// <summary>
    /// Combining swished stem.
    /// </summary>
    public const string StemSwished = "stemSwished";
    /// <summary>
    /// Combining vibrato pulse accent (Saunders) stem.
    /// </summary>
    public const string StemVibratoPulse = "stemVibratoPulse";
    /// <summary>
    /// Stockhausen irregular tremolo ("Morsen", like Morse code).
    /// </summary>
    public const string StockhausenTremolo = "stockhausenTremolo";
    /// <summary>
    /// Bow behind bridge (sul ponticello).
    /// </summary>
    public const string StringsBowBehindBridge = "stringsBowBehindBridge";
    /// <summary>
    /// Bow behind bridge on four strings.
    /// </summary>
    public const string StringsBowBehindBridgeFourStrings = "stringsBowBehindBridgeFourStrings";
    /// <summary>
    /// Bow behind bridge on one string.
    /// </summary>
    public const string StringsBowBehindBridgeOneString = "stringsBowBehindBridgeOneString";
    /// <summary>
    /// Bow behind bridge on three strings.
    /// </summary>
    public const string StringsBowBehindBridgeThreeStrings = "stringsBowBehindBridgeThreeStrings";
    /// <summary>
    /// Bow behind bridge on two strings.
    /// </summary>
    public const string StringsBowBehindBridgeTwoStrings = "stringsBowBehindBridgeTwoStrings";
    /// <summary>
    /// Bow on top of bridge.
    /// </summary>
    public const string StringsBowOnBridge = "stringsBowOnBridge";
    /// <summary>
    /// Bow on tailpiece.
    /// </summary>
    public const string StringsBowOnTailpiece = "stringsBowOnTailpiece";
    /// <summary>
    /// Change bow direction, indeterminate.
    /// </summary>
    public const string StringsChangeBowDirection = "stringsChangeBowDirection";
    /// <summary>
    /// Down bow.
    /// </summary>
    public const string StringsDownBow = "stringsDownBow";
    /// <summary>
    /// Down bow, away from body.
    /// </summary>
    public const string StringsDownBowAwayFromBody = "stringsDownBowAwayFromBody";
    /// <summary>
    /// Down bow, beyond bridge.
    /// </summary>
    public const string StringsDownBowBeyondBridge = "stringsDownBowBeyondBridge";
    /// <summary>
    /// Down bow, towards body.
    /// </summary>
    public const string StringsDownBowTowardsBody = "stringsDownBowTowardsBody";
    /// <summary>
    /// Turned down bow.
    /// </summary>
    public const string StringsDownBowTurned = "stringsDownBowTurned";
    /// <summary>
    /// Fouetté.
    /// </summary>
    public const string StringsFouette = "stringsFouette";
    /// <summary>
    /// Half-harmonic.
    /// </summary>
    public const string StringsHalfHarmonic = "stringsHalfHarmonic";
    /// <summary>
    /// Harmonic.
    /// </summary>
    public const string StringsHarmonic = "stringsHarmonic";
    /// <summary>
    /// Jeté (gettato) above.
    /// </summary>
    public const string StringsJeteAbove = "stringsJeteAbove";
    /// <summary>
    /// Jeté (gettato) below.
    /// </summary>
    public const string StringsJeteBelow = "stringsJeteBelow";
    /// <summary>
    /// Mute off.
    /// </summary>
    public const string StringsMuteOff = "stringsMuteOff";
    /// <summary>
    /// Mute on.
    /// </summary>
    public const string StringsMuteOn = "stringsMuteOn";
    /// <summary>
    /// Overpressure, down bow.
    /// </summary>
    public const string StringsOverpressureDownBow = "stringsOverpressureDownBow";
    /// <summary>
    /// Overpressure, no bow direction.
    /// </summary>
    public const string StringsOverpressureNoDirection = "stringsOverpressureNoDirection";
    /// <summary>
    /// Overpressure possibile, down bow.
    /// </summary>
    public const string StringsOverpressurePossibileDownBow = "stringsOverpressurePossibileDownBow";
    /// <summary>
    /// Overpressure possibile, up bow.
    /// </summary>
    public const string StringsOverpressurePossibileUpBow = "stringsOverpressurePossibileUpBow";
    /// <summary>
    /// Overpressure, up bow.
    /// </summary>
    public const string StringsOverpressureUpBow = "stringsOverpressureUpBow";
    /// <summary>
    /// Scrape, circular clockwise.
    /// </summary>
    public const string StringsScrapeCircularClockwise = "stringsScrapeCircularClockwise";
    /// <summary>
    /// Scrape, circular counter-clockwise.
    /// </summary>
    public const string StringsScrapeCircularCounterclockwise = "stringsScrapeCircularCounterclockwise";
    /// <summary>
    /// Scrape, parallel inward.
    /// </summary>
    public const string StringsScrapeParallelInward = "stringsScrapeParallelInward";
    /// <summary>
    /// Scrape, parallel outward.
    /// </summary>
    public const string StringsScrapeParallelOutward = "stringsScrapeParallelOutward";
    /// <summary>
    /// Thumb position.
    /// </summary>
    public const string StringsThumbPosition = "stringsThumbPosition";
    /// <summary>
    /// Turned thumb position.
    /// </summary>
    public const string StringsThumbPositionTurned = "stringsThumbPositionTurned";
    /// <summary>
    /// Triple chop, inward.
    /// </summary>
    public const string StringsTripleChopInward = "stringsTripleChopInward";
    /// <summary>
    /// Triple chop, outward.
    /// </summary>
    public const string StringsTripleChopOutward = "stringsTripleChopOutward";
    /// <summary>
    /// Up bow.
    /// </summary>
    public const string StringsUpBow = "stringsUpBow";
    /// <summary>
    /// Up bow, away from body.
    /// </summary>
    public const string StringsUpBowAwayFromBody = "stringsUpBowAwayFromBody";
    /// <summary>
    /// Up bow, beyond bridge.
    /// </summary>
    public const string StringsUpBowBeyondBridge = "stringsUpBowBeyondBridge";
    /// <summary>
    /// Up bow, towards body.
    /// </summary>
    public const string StringsUpBowTowardsBody = "stringsUpBowTowardsBody";
    /// <summary>
    /// Turned up bow.
    /// </summary>
    public const string StringsUpBowTurned = "stringsUpBowTurned";
    /// <summary>
    /// Vibrato pulse accent (Saunders) for stem.
    /// </summary>
    public const string StringsVibratoPulse = "stringsVibratoPulse";
    /// <summary>
    /// Swiss rudiments doublé black notehead.
    /// </summary>
    public const string SwissRudimentsNoteheadBlackDouble = "swissRudimentsNoteheadBlackDouble";
    /// <summary>
    /// Swiss rudiments flam black notehead.
    /// </summary>
    public const string SwissRudimentsNoteheadBlackFlam = "swissRudimentsNoteheadBlackFlam";
    /// <summary>
    /// Swiss rudiments doublé half (minim) notehead.
    /// </summary>
    public const string SwissRudimentsNoteheadHalfDouble = "swissRudimentsNoteheadHalfDouble";
    /// <summary>
    /// Swiss rudiments flam half (minim) notehead.
    /// </summary>
    public const string SwissRudimentsNoteheadHalfFlam = "swissRudimentsNoteheadHalfFlam";
    /// <summary>
    /// System divider.
    /// </summary>
    public const string SystemDivider = "systemDivider";
    /// <summary>
    /// Extra long system divider.
    /// </summary>
    public const string SystemDividerExtraLong = "systemDividerExtraLong";
    /// <summary>
    /// Long system divider.
    /// </summary>
    public const string SystemDividerLong = "systemDividerLong";
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const string TextAugmentationDot = "textAugmentationDot";
    /// <summary>
    /// Black note, fractional 16th beam, long stem.
    /// </summary>
    public const string TextBlackNoteFrac16thLongStem = "textBlackNoteFrac16thLongStem";
    /// <summary>
    /// Black note, fractional 16th beam, short stem.
    /// </summary>
    public const string TextBlackNoteFrac16thShortStem = "textBlackNoteFrac16thShortStem";
    /// <summary>
    /// Black note, fractional 32nd beam, long stem.
    /// </summary>
    public const string TextBlackNoteFrac32ndLongStem = "textBlackNoteFrac32ndLongStem";
    /// <summary>
    /// Black note, fractional 8th beam, long stem.
    /// </summary>
    public const string TextBlackNoteFrac8thLongStem = "textBlackNoteFrac8thLongStem";
    /// <summary>
    /// Black note, fractional 8th beam, short stem.
    /// </summary>
    public const string TextBlackNoteFrac8thShortStem = "textBlackNoteFrac8thShortStem";
    /// <summary>
    /// Black note, long stem.
    /// </summary>
    public const string TextBlackNoteLongStem = "textBlackNoteLongStem";
    /// <summary>
    /// Black note, short stem.
    /// </summary>
    public const string TextBlackNoteShortStem = "textBlackNoteShortStem";
    /// <summary>
    /// Continuing 16th beam for long stem.
    /// </summary>
    public const string TextCont16thBeamLongStem = "textCont16thBeamLongStem";
    /// <summary>
    /// Continuing 16th beam for short stem.
    /// </summary>
    public const string TextCont16thBeamShortStem = "textCont16thBeamShortStem";
    /// <summary>
    /// Continuing 32nd beam for long stem.
    /// </summary>
    public const string TextCont32ndBeamLongStem = "textCont32ndBeamLongStem";
    /// <summary>
    /// Continuing 8th beam for long stem.
    /// </summary>
    public const string TextCont8thBeamLongStem = "textCont8thBeamLongStem";
    /// <summary>
    /// Continuing 8th beam for short stem.
    /// </summary>
    public const string TextCont8thBeamShortStem = "textCont8thBeamShortStem";
    /// <summary>
    /// Headless black note, fractional 16th beam, long stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac16thLongStem = "textHeadlessBlackNoteFrac16thLongStem";
    /// <summary>
    /// Headless black note, fractional 16th beam, short stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac16thShortStem = "textHeadlessBlackNoteFrac16thShortStem";
    /// <summary>
    /// Headless black note, fractional 32nd beam, long stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac32ndLongStem = "textHeadlessBlackNoteFrac32ndLongStem";
    /// <summary>
    /// Headless black note, fractional 8th beam, long stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac8thLongStem = "textHeadlessBlackNoteFrac8thLongStem";
    /// <summary>
    /// Headless black note, fractional 8th beam, short stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac8thShortStem = "textHeadlessBlackNoteFrac8thShortStem";
    /// <summary>
    /// Headless black note, long stem.
    /// </summary>
    public const string TextHeadlessBlackNoteLongStem = "textHeadlessBlackNoteLongStem";
    /// <summary>
    /// Headless black note, short stem.
    /// </summary>
    public const string TextHeadlessBlackNoteShortStem = "textHeadlessBlackNoteShortStem";
    /// <summary>
    /// Tie.
    /// </summary>
    public const string TextTie = "textTie";
    /// <summary>
    /// Tuplet number 3 for long stem.
    /// </summary>
    public const string TextTuplet3LongStem = "textTuplet3LongStem";
    /// <summary>
    /// Tuplet number 3 for short stem.
    /// </summary>
    public const string TextTuplet3ShortStem = "textTuplet3ShortStem";
    /// <summary>
    /// Tuplet bracket end for long stem.
    /// </summary>
    public const string TextTupletBracketEndLongStem = "textTupletBracketEndLongStem";
    /// <summary>
    /// Tuplet bracket end for short stem.
    /// </summary>
    public const string TextTupletBracketEndShortStem = "textTupletBracketEndShortStem";
    /// <summary>
    /// Tuplet bracket start for long stem.
    /// </summary>
    public const string TextTupletBracketStartLongStem = "textTupletBracketStartLongStem";
    /// <summary>
    /// Tuplet bracket start for short stem.
    /// </summary>
    public const string TextTupletBracketStartShortStem = "textTupletBracketStartShortStem";
    /// <summary>
    /// Time signature 0.
    /// </summary>
    public const string TimeSig0 = "timeSig0";
    /// <summary>
    /// Reversed time signature 0.
    /// </summary>
    public const string TimeSig0Reversed = "timeSig0Reversed";
    /// <summary>
    /// Turned time signature 0.
    /// </summary>
    public const string TimeSig0Turned = "timeSig0Turned";
    /// <summary>
    /// Time signature 1.
    /// </summary>
    public const string TimeSig1 = "timeSig1";
    /// <summary>
    /// Reversed time signature 1.
    /// </summary>
    public const string TimeSig1Reversed = "timeSig1Reversed";
    /// <summary>
    /// Turned time signature 1.
    /// </summary>
    public const string TimeSig1Turned = "timeSig1Turned";
    /// <summary>
    /// Time signature 2.
    /// </summary>
    public const string TimeSig2 = "timeSig2";
    /// <summary>
    /// Reversed time signature 2.
    /// </summary>
    public const string TimeSig2Reversed = "timeSig2Reversed";
    /// <summary>
    /// Turned time signature 2.
    /// </summary>
    public const string TimeSig2Turned = "timeSig2Turned";
    /// <summary>
    /// Time signature 3.
    /// </summary>
    public const string TimeSig3 = "timeSig3";
    /// <summary>
    /// Reversed time signature 3.
    /// </summary>
    public const string TimeSig3Reversed = "timeSig3Reversed";
    /// <summary>
    /// Turned time signature 3.
    /// </summary>
    public const string TimeSig3Turned = "timeSig3Turned";
    /// <summary>
    /// Time signature 4.
    /// </summary>
    public const string TimeSig4 = "timeSig4";
    /// <summary>
    /// Reversed time signature 4.
    /// </summary>
    public const string TimeSig4Reversed = "timeSig4Reversed";
    /// <summary>
    /// Turned time signature 4.
    /// </summary>
    public const string TimeSig4Turned = "timeSig4Turned";
    /// <summary>
    /// Time signature 5.
    /// </summary>
    public const string TimeSig5 = "timeSig5";
    /// <summary>
    /// Reversed time signature 5.
    /// </summary>
    public const string TimeSig5Reversed = "timeSig5Reversed";
    /// <summary>
    /// Turned time signature 5.
    /// </summary>
    public const string TimeSig5Turned = "timeSig5Turned";
    /// <summary>
    /// Time signature 6.
    /// </summary>
    public const string TimeSig6 = "timeSig6";
    /// <summary>
    /// Reversed time signature 6.
    /// </summary>
    public const string TimeSig6Reversed = "timeSig6Reversed";
    /// <summary>
    /// Turned time signature 6.
    /// </summary>
    public const string TimeSig6Turned = "timeSig6Turned";
    /// <summary>
    /// Time signature 7.
    /// </summary>
    public const string TimeSig7 = "timeSig7";
    /// <summary>
    /// Reversed time signature 7.
    /// </summary>
    public const string TimeSig7Reversed = "timeSig7Reversed";
    /// <summary>
    /// Turned time signature 7.
    /// </summary>
    public const string TimeSig7Turned = "timeSig7Turned";
    /// <summary>
    /// Time signature 8.
    /// </summary>
    public const string TimeSig8 = "timeSig8";
    /// <summary>
    /// Reversed time signature 8.
    /// </summary>
    public const string TimeSig8Reversed = "timeSig8Reversed";
    /// <summary>
    /// Turned time signature 8.
    /// </summary>
    public const string TimeSig8Turned = "timeSig8Turned";
    /// <summary>
    /// Time signature 9.
    /// </summary>
    public const string TimeSig9 = "timeSig9";
    /// <summary>
    /// Reversed time signature 9.
    /// </summary>
    public const string TimeSig9Reversed = "timeSig9Reversed";
    /// <summary>
    /// Turned time signature 9.
    /// </summary>
    public const string TimeSig9Turned = "timeSig9Turned";
    /// <summary>
    /// Left bracket for whole time signature.
    /// </summary>
    public const string TimeSigBracketLeft = "timeSigBracketLeft";
    /// <summary>
    /// Left bracket for numerator only.
    /// </summary>
    public const string TimeSigBracketLeftSmall = "timeSigBracketLeftSmall";
    /// <summary>
    /// Right bracket for whole time signature.
    /// </summary>
    public const string TimeSigBracketRight = "timeSigBracketRight";
    /// <summary>
    /// Right bracket for numerator only.
    /// </summary>
    public const string TimeSigBracketRightSmall = "timeSigBracketRightSmall";
    /// <summary>
    /// Control character for denominator digit.
    /// </summary>
    public const string TimeSigCombDenominator = "timeSigCombDenominator";
    /// <summary>
    /// Control character for numerator digit.
    /// </summary>
    public const string TimeSigCombNumerator = "timeSigCombNumerator";
    /// <summary>
    /// Time signature comma.
    /// </summary>
    public const string TimeSigComma = "timeSigComma";
    /// <summary>
    /// Common time.
    /// </summary>
    public const string TimeSigCommon = "timeSigCommon";
    /// <summary>
    /// Reversed common time.
    /// </summary>
    public const string TimeSigCommonReversed = "timeSigCommonReversed";
    /// <summary>
    /// Turned common time.
    /// </summary>
    public const string TimeSigCommonTurned = "timeSigCommonTurned";
    /// <summary>
    /// Cut time (Bach).
    /// </summary>
    public const string TimeSigCut2 = "timeSigCut2";
    /// <summary>
    /// Cut triple time (9/8).
    /// </summary>
    public const string TimeSigCut3 = "timeSigCut3";
    /// <summary>
    /// Cut time.
    /// </summary>
    public const string TimeSigCutCommon = "timeSigCutCommon";
    /// <summary>
    /// Reversed cut time.
    /// </summary>
    public const string TimeSigCutCommonReversed = "timeSigCutCommonReversed";
    /// <summary>
    /// Turned cut time.
    /// </summary>
    public const string TimeSigCutCommonTurned = "timeSigCutCommonTurned";
    /// <summary>
    /// Time signature equals.
    /// </summary>
    public const string TimeSigEquals = "timeSigEquals";
    /// <summary>
    /// Time signature fraction ½.
    /// </summary>
    public const string TimeSigFractionHalf = "timeSigFractionHalf";
    /// <summary>
    /// Time signature fraction ⅓.
    /// </summary>
    public const string TimeSigFractionOneThird = "timeSigFractionOneThird";
    /// <summary>
    /// Time signature fraction ¼.
    /// </summary>
    public const string TimeSigFractionQuarter = "timeSigFractionQuarter";
    /// <summary>
    /// Time signature fraction ¾.
    /// </summary>
    public const string TimeSigFractionThreeQuarters = "timeSigFractionThreeQuarters";
    /// <summary>
    /// Time signature fraction ⅔.
    /// </summary>
    public const string TimeSigFractionTwoThirds = "timeSigFractionTwoThirds";
    /// <summary>
    /// Time signature fraction slash.
    /// </summary>
    public const string TimeSigFractionalSlash = "timeSigFractionalSlash";
    /// <summary>
    /// Time signature minus.
    /// </summary>
    public const string TimeSigMinus = "timeSigMinus";
    /// <summary>
    /// Time signature multiply.
    /// </summary>
    public const string TimeSigMultiply = "timeSigMultiply";
    /// <summary>
    /// Open time signature (Penderecki).
    /// </summary>
    public const string TimeSigOpenPenderecki = "timeSigOpenPenderecki";
    /// <summary>
    /// Left parenthesis for whole time signature.
    /// </summary>
    public const string TimeSigParensLeft = "timeSigParensLeft";
    /// <summary>
    /// Left parenthesis for numerator only.
    /// </summary>
    public const string TimeSigParensLeftSmall = "timeSigParensLeftSmall";
    /// <summary>
    /// Right parenthesis for whole time signature.
    /// </summary>
    public const string TimeSigParensRight = "timeSigParensRight";
    /// <summary>
    /// Right parenthesis for numerator only.
    /// </summary>
    public const string TimeSigParensRightSmall = "timeSigParensRightSmall";
    /// <summary>
    /// Time signature +.
    /// </summary>
    public const string TimeSigPlus = "timeSigPlus";
    /// <summary>
    /// Time signature + (for numerators).
    /// </summary>
    public const string TimeSigPlusSmall = "timeSigPlusSmall";
    /// <summary>
    /// Time signature slash separator.
    /// </summary>
    public const string TimeSigSlash = "timeSigSlash";
    /// <summary>
    /// Open time signature.
    /// </summary>
    public const string TimeSigX = "timeSigX";
    /// <summary>
    /// Combining tremolo 1.
    /// </summary>
    public const string Tremolo1 = "tremolo1";
    /// <summary>
    /// Combining tremolo 2.
    /// </summary>
    public const string Tremolo2 = "tremolo2";
    /// <summary>
    /// Combining tremolo 3.
    /// </summary>
    public const string Tremolo3 = "tremolo3";
    /// <summary>
    /// Combining tremolo 4.
    /// </summary>
    public const string Tremolo4 = "tremolo4";
    /// <summary>
    /// Combining tremolo 5.
    /// </summary>
    public const string Tremolo5 = "tremolo5";
    /// <summary>
    /// Divide measured tremolo by 2.
    /// </summary>
    public const string TremoloDivisiDots2 = "tremoloDivisiDots2";
    /// <summary>
    /// Divide measured tremolo by 3.
    /// </summary>
    public const string TremoloDivisiDots3 = "tremoloDivisiDots3";
    /// <summary>
    /// Divide measured tremolo by 4.
    /// </summary>
    public const string TremoloDivisiDots4 = "tremoloDivisiDots4";
    /// <summary>
    /// Divide measured tremolo by 6.
    /// </summary>
    public const string TremoloDivisiDots6 = "tremoloDivisiDots6";
    /// <summary>
    /// Fingered tremolo 1.
    /// </summary>
    public const string TremoloFingered1 = "tremoloFingered1";
    /// <summary>
    /// Fingered tremolo 2.
    /// </summary>
    public const string TremoloFingered2 = "tremoloFingered2";
    /// <summary>
    /// Fingered tremolo 3.
    /// </summary>
    public const string TremoloFingered3 = "tremoloFingered3";
    /// <summary>
    /// Fingered tremolo 4.
    /// </summary>
    public const string TremoloFingered4 = "tremoloFingered4";
    /// <summary>
    /// Fingered tremolo 5.
    /// </summary>
    public const string TremoloFingered5 = "tremoloFingered5";
    /// <summary>
    /// Triple-tongue above.
    /// </summary>
    public const string TripleTongueAbove = "tripleTongueAbove";
    /// <summary>
    /// Triple-tongue below.
    /// </summary>
    public const string TripleTongueBelow = "tripleTongueBelow";
    /// <summary>
    /// Tuplet 0.
    /// </summary>
    public const string Tuplet0 = "tuplet0";
    /// <summary>
    /// Tuplet 1.
    /// </summary>
    public const string Tuplet1 = "tuplet1";
    /// <summary>
    /// Tuplet 2.
    /// </summary>
    public const string Tuplet2 = "tuplet2";
    /// <summary>
    /// Tuplet 3.
    /// </summary>
    public const string Tuplet3 = "tuplet3";
    /// <summary>
    /// Tuplet 4.
    /// </summary>
    public const string Tuplet4 = "tuplet4";
    /// <summary>
    /// Tuplet 5.
    /// </summary>
    public const string Tuplet5 = "tuplet5";
    /// <summary>
    /// Tuplet 6.
    /// </summary>
    public const string Tuplet6 = "tuplet6";
    /// <summary>
    /// Tuplet 7.
    /// </summary>
    public const string Tuplet7 = "tuplet7";
    /// <summary>
    /// Tuplet 8.
    /// </summary>
    public const string Tuplet8 = "tuplet8";
    /// <summary>
    /// Tuplet 9.
    /// </summary>
    public const string Tuplet9 = "tuplet9";
    /// <summary>
    /// Tuplet colon.
    /// </summary>
    public const string TupletColon = "tupletColon";
    /// <summary>
    /// Wieniawski unmeasured tremolo.
    /// </summary>
    public const string UnmeasuredTremolo = "unmeasuredTremolo";
    /// <summary>
    /// Wieniawski unmeasured tremolo (simpler).
    /// </summary>
    public const string UnmeasuredTremoloSimple = "unmeasuredTremoloSimple";
    /// <summary>
    /// Unpitched percussion clef 1.
    /// </summary>
    public const string UnpitchedPercussionClef1 = "unpitchedPercussionClef1";
    /// <summary>
    /// Unpitched percussion clef 2.
    /// </summary>
    public const string UnpitchedPercussionClef2 = "unpitchedPercussionClef2";
    /// <summary>
    /// Ventiduesima.
    /// </summary>
    public const string Ventiduesima = "ventiduesima";
    /// <summary>
    /// Ventiduesima alta.
    /// </summary>
    public const string VentiduesimaAlta = "ventiduesimaAlta";
    /// <summary>
    /// Ventiduesima bassa.
    /// </summary>
    public const string VentiduesimaBassa = "ventiduesimaBassa";
    /// <summary>
    /// Ventiduesima bassa (mb).
    /// </summary>
    public const string VentiduesimaBassaMb = "ventiduesimaBassaMb";
    /// <summary>
    /// Finger click (Stockhausen).
    /// </summary>
    public const string VocalFingerClickStockhausen = "vocalFingerClickStockhausen";
    /// <summary>
    /// Halb gesungen (semi-sprechgesang).
    /// </summary>
    public const string VocalHalbGesungen = "vocalHalbGesungen";
    /// <summary>
    /// Mouth closed.
    /// </summary>
    public const string VocalMouthClosed = "vocalMouthClosed";
    /// <summary>
    /// Mouth open.
    /// </summary>
    public const string VocalMouthOpen = "vocalMouthOpen";
    /// <summary>
    /// Mouth pursed.
    /// </summary>
    public const string VocalMouthPursed = "vocalMouthPursed";
    /// <summary>
    /// Mouth slightly open.
    /// </summary>
    public const string VocalMouthSlightlyOpen = "vocalMouthSlightlyOpen";
    /// <summary>
    /// Mouth wide open.
    /// </summary>
    public const string VocalMouthWideOpen = "vocalMouthWideOpen";
    /// <summary>
    /// Nasal voice.
    /// </summary>
    public const string VocalNasalVoice = "vocalNasalVoice";
    /// <summary>
    /// Sprechgesang.
    /// </summary>
    public const string VocalSprechgesang = "vocalSprechgesang";
    /// <summary>
    /// Tongue click (Stockhausen).
    /// </summary>
    public const string VocalTongueClickStockhausen = "vocalTongueClickStockhausen";
    /// <summary>
    /// Tongue and finger click (Stockhausen).
    /// </summary>
    public const string VocalTongueFingerClickStockhausen = "vocalTongueFingerClickStockhausen";
    /// <summary>
    /// Combining sussurando for stem.
    /// </summary>
    public const string VocalsSussurando = "vocalsSussurando";
    /// <summary>
    /// Arpeggiato wiggle segment, downwards.
    /// </summary>
    public const string WiggleArpeggiatoDown = "wiggleArpeggiatoDown";
    /// <summary>
    /// Arpeggiato arrowhead down.
    /// </summary>
    public const string WiggleArpeggiatoDownArrow = "wiggleArpeggiatoDownArrow";
    /// <summary>
    /// Arpeggiato downward swash.
    /// </summary>
    public const string WiggleArpeggiatoDownSwash = "wiggleArpeggiatoDownSwash";
    /// <summary>
    /// Arpeggiato wiggle segment, upwards.
    /// </summary>
    public const string WiggleArpeggiatoUp = "wiggleArpeggiatoUp";
    /// <summary>
    /// Arpeggiato arrowhead up.
    /// </summary>
    public const string WiggleArpeggiatoUpArrow = "wiggleArpeggiatoUpArrow";
    /// <summary>
    /// Arpeggiato upward swash.
    /// </summary>
    public const string WiggleArpeggiatoUpSwash = "wiggleArpeggiatoUpSwash";
    /// <summary>
    /// Circular motion segment.
    /// </summary>
    public const string WiggleCircular = "wiggleCircular";
    /// <summary>
    /// Constant circular motion segment.
    /// </summary>
    public const string WiggleCircularConstant = "wiggleCircularConstant";
    /// <summary>
    /// Constant circular motion segment (flipped).
    /// </summary>
    public const string WiggleCircularConstantFlipped = "wiggleCircularConstantFlipped";
    /// <summary>
    /// Constant circular motion segment (flipped, large).
    /// </summary>
    public const string WiggleCircularConstantFlippedLarge = "wiggleCircularConstantFlippedLarge";
    /// <summary>
    /// Constant circular motion segment (large).
    /// </summary>
    public const string WiggleCircularConstantLarge = "wiggleCircularConstantLarge";
    /// <summary>
    /// Circular motion end.
    /// </summary>
    public const string WiggleCircularEnd = "wiggleCircularEnd";
    /// <summary>
    /// Circular motion segment, large.
    /// </summary>
    public const string WiggleCircularLarge = "wiggleCircularLarge";
    /// <summary>
    /// Circular motion segment, larger.
    /// </summary>
    public const string WiggleCircularLarger = "wiggleCircularLarger";
    /// <summary>
    /// Circular motion segment, larger still.
    /// </summary>
    public const string WiggleCircularLargerStill = "wiggleCircularLargerStill";
    /// <summary>
    /// Circular motion segment, largest.
    /// </summary>
    public const string WiggleCircularLargest = "wiggleCircularLargest";
    /// <summary>
    /// Circular motion segment, small.
    /// </summary>
    public const string WiggleCircularSmall = "wiggleCircularSmall";
    /// <summary>
    /// Circular motion start.
    /// </summary>
    public const string WiggleCircularStart = "wiggleCircularStart";
    /// <summary>
    /// Glissando wiggle segment.
    /// </summary>
    public const string WiggleGlissando = "wiggleGlissando";
    /// <summary>
    /// Group glissando 1.
    /// </summary>
    public const string WiggleGlissandoGroup1 = "wiggleGlissandoGroup1";
    /// <summary>
    /// Group glissando 2.
    /// </summary>
    public const string WiggleGlissandoGroup2 = "wiggleGlissandoGroup2";
    /// <summary>
    /// Group glissando 3.
    /// </summary>
    public const string WiggleGlissandoGroup3 = "wiggleGlissandoGroup3";
    /// <summary>
    /// Quasi-random squiggle 1.
    /// </summary>
    public const string WiggleRandom1 = "wiggleRandom1";
    /// <summary>
    /// Quasi-random squiggle 2.
    /// </summary>
    public const string WiggleRandom2 = "wiggleRandom2";
    /// <summary>
    /// Quasi-random squiggle 3.
    /// </summary>
    public const string WiggleRandom3 = "wiggleRandom3";
    /// <summary>
    /// Quasi-random squiggle 4.
    /// </summary>
    public const string WiggleRandom4 = "wiggleRandom4";
    /// <summary>
    /// Sawtooth line segment.
    /// </summary>
    public const string WiggleSawtooth = "wiggleSawtooth";
    /// <summary>
    /// Narrow sawtooth line segment.
    /// </summary>
    public const string WiggleSawtoothNarrow = "wiggleSawtoothNarrow";
    /// <summary>
    /// Wide sawtooth line segment.
    /// </summary>
    public const string WiggleSawtoothWide = "wiggleSawtoothWide";
    /// <summary>
    /// Square wave line segment.
    /// </summary>
    public const string WiggleSquareWave = "wiggleSquareWave";
    /// <summary>
    /// Narrow square wave line segment.
    /// </summary>
    public const string WiggleSquareWaveNarrow = "wiggleSquareWaveNarrow";
    /// <summary>
    /// Wide square wave line segment.
    /// </summary>
    public const string WiggleSquareWaveWide = "wiggleSquareWaveWide";
    /// <summary>
    /// Trill wiggle segment.
    /// </summary>
    public const string WiggleTrill = "wiggleTrill";
    /// <summary>
    /// Trill wiggle segment, fast.
    /// </summary>
    public const string WiggleTrillFast = "wiggleTrillFast";
    /// <summary>
    /// Trill wiggle segment, faster.
    /// </summary>
    public const string WiggleTrillFaster = "wiggleTrillFaster";
    /// <summary>
    /// Trill wiggle segment, faster still.
    /// </summary>
    public const string WiggleTrillFasterStill = "wiggleTrillFasterStill";
    /// <summary>
    /// Trill wiggle segment, fastest.
    /// </summary>
    public const string WiggleTrillFastest = "wiggleTrillFastest";
    /// <summary>
    /// Trill wiggle segment, slow.
    /// </summary>
    public const string WiggleTrillSlow = "wiggleTrillSlow";
    /// <summary>
    /// Trill wiggle segment, slower.
    /// </summary>
    public const string WiggleTrillSlower = "wiggleTrillSlower";
    /// <summary>
    /// Trill wiggle segment, slower still.
    /// </summary>
    public const string WiggleTrillSlowerStill = "wiggleTrillSlowerStill";
    /// <summary>
    /// Trill wiggle segment, slowest.
    /// </summary>
    public const string WiggleTrillSlowest = "wiggleTrillSlowest";
    /// <summary>
    /// Vibrato largest, slower.
    /// </summary>
    public const string WiggleVIbratoLargestSlower = "wiggleVIbratoLargestSlower";
    /// <summary>
    /// Vibrato medium, slower.
    /// </summary>
    public const string WiggleVIbratoMediumSlower = "wiggleVIbratoMediumSlower";
    /// <summary>
    /// Vibrato / shake wiggle segment.
    /// </summary>
    public const string WiggleVibrato = "wiggleVibrato";
    /// <summary>
    /// Vibrato large, fast.
    /// </summary>
    public const string WiggleVibratoLargeFast = "wiggleVibratoLargeFast";
    /// <summary>
    /// Vibrato large, faster.
    /// </summary>
    public const string WiggleVibratoLargeFaster = "wiggleVibratoLargeFaster";
    /// <summary>
    /// Vibrato large, faster still.
    /// </summary>
    public const string WiggleVibratoLargeFasterStill = "wiggleVibratoLargeFasterStill";
    /// <summary>
    /// Vibrato large, fastest.
    /// </summary>
    public const string WiggleVibratoLargeFastest = "wiggleVibratoLargeFastest";
    /// <summary>
    /// Vibrato large, slow.
    /// </summary>
    public const string WiggleVibratoLargeSlow = "wiggleVibratoLargeSlow";
    /// <summary>
    /// Vibrato large, slower.
    /// </summary>
    public const string WiggleVibratoLargeSlower = "wiggleVibratoLargeSlower";
    /// <summary>
    /// Vibrato large, slowest.
    /// </summary>
    public const string WiggleVibratoLargeSlowest = "wiggleVibratoLargeSlowest";
    /// <summary>
    /// Vibrato largest, fast.
    /// </summary>
    public const string WiggleVibratoLargestFast = "wiggleVibratoLargestFast";
    /// <summary>
    /// Vibrato largest, faster.
    /// </summary>
    public const string WiggleVibratoLargestFaster = "wiggleVibratoLargestFaster";
    /// <summary>
    /// Vibrato largest, faster still.
    /// </summary>
    public const string WiggleVibratoLargestFasterStill = "wiggleVibratoLargestFasterStill";
    /// <summary>
    /// Vibrato largest, fastest.
    /// </summary>
    public const string WiggleVibratoLargestFastest = "wiggleVibratoLargestFastest";
    /// <summary>
    /// Vibrato largest, slow.
    /// </summary>
    public const string WiggleVibratoLargestSlow = "wiggleVibratoLargestSlow";
    /// <summary>
    /// Vibrato largest, slowest.
    /// </summary>
    public const string WiggleVibratoLargestSlowest = "wiggleVibratoLargestSlowest";
    /// <summary>
    /// Vibrato medium, fast.
    /// </summary>
    public const string WiggleVibratoMediumFast = "wiggleVibratoMediumFast";
    /// <summary>
    /// Vibrato medium, faster.
    /// </summary>
    public const string WiggleVibratoMediumFaster = "wiggleVibratoMediumFaster";
    /// <summary>
    /// Vibrato medium, faster still.
    /// </summary>
    public const string WiggleVibratoMediumFasterStill = "wiggleVibratoMediumFasterStill";
    /// <summary>
    /// Vibrato medium, fastest.
    /// </summary>
    public const string WiggleVibratoMediumFastest = "wiggleVibratoMediumFastest";
    /// <summary>
    /// Vibrato medium, slow.
    /// </summary>
    public const string WiggleVibratoMediumSlow = "wiggleVibratoMediumSlow";
    /// <summary>
    /// Vibrato medium, slowest.
    /// </summary>
    public const string WiggleVibratoMediumSlowest = "wiggleVibratoMediumSlowest";
    /// <summary>
    /// Vibrato small, fast.
    /// </summary>
    public const string WiggleVibratoSmallFast = "wiggleVibratoSmallFast";
    /// <summary>
    /// Vibrato small, faster.
    /// </summary>
    public const string WiggleVibratoSmallFaster = "wiggleVibratoSmallFaster";
    /// <summary>
    /// Vibrato small, faster still.
    /// </summary>
    public const string WiggleVibratoSmallFasterStill = "wiggleVibratoSmallFasterStill";
    /// <summary>
    /// Vibrato small, fastest.
    /// </summary>
    public const string WiggleVibratoSmallFastest = "wiggleVibratoSmallFastest";
    /// <summary>
    /// Vibrato small, slow.
    /// </summary>
    public const string WiggleVibratoSmallSlow = "wiggleVibratoSmallSlow";
    /// <summary>
    /// Vibrato small, slower.
    /// </summary>
    public const string WiggleVibratoSmallSlower = "wiggleVibratoSmallSlower";
    /// <summary>
    /// Vibrato small, slowest.
    /// </summary>
    public const string WiggleVibratoSmallSlowest = "wiggleVibratoSmallSlowest";
    /// <summary>
    /// Vibrato smallest, fast.
    /// </summary>
    public const string WiggleVibratoSmallestFast = "wiggleVibratoSmallestFast";
    /// <summary>
    /// Vibrato smallest, faster.
    /// </summary>
    public const string WiggleVibratoSmallestFaster = "wiggleVibratoSmallestFaster";
    /// <summary>
    /// Vibrato smallest, faster still.
    /// </summary>
    public const string WiggleVibratoSmallestFasterStill = "wiggleVibratoSmallestFasterStill";
    /// <summary>
    /// Vibrato smallest, fastest.
    /// </summary>
    public const string WiggleVibratoSmallestFastest = "wiggleVibratoSmallestFastest";
    /// <summary>
    /// Vibrato smallest, slow.
    /// </summary>
    public const string WiggleVibratoSmallestSlow = "wiggleVibratoSmallestSlow";
    /// <summary>
    /// Vibrato smallest, slower.
    /// </summary>
    public const string WiggleVibratoSmallestSlower = "wiggleVibratoSmallestSlower";
    /// <summary>
    /// Vibrato smallest, slowest.
    /// </summary>
    public const string WiggleVibratoSmallestSlowest = "wiggleVibratoSmallestSlowest";
    /// <summary>
    /// Vibrato start.
    /// </summary>
    public const string WiggleVibratoStart = "wiggleVibratoStart";
    /// <summary>
    /// Wide vibrato / shake wiggle segment.
    /// </summary>
    public const string WiggleVibratoWide = "wiggleVibratoWide";
    /// <summary>
    /// Wavy line segment.
    /// </summary>
    public const string WiggleWavy = "wiggleWavy";
    /// <summary>
    /// Narrow wavy line segment.
    /// </summary>
    public const string WiggleWavyNarrow = "wiggleWavyNarrow";
    /// <summary>
    /// Wide wavy line segment.
    /// </summary>
    public const string WiggleWavyWide = "wiggleWavyWide";
    /// <summary>
    /// Closed hole.
    /// </summary>
    public const string WindClosedHole = "windClosedHole";
    /// <summary>
    /// Flatter embouchure.
    /// </summary>
    public const string WindFlatEmbouchure = "windFlatEmbouchure";
    /// <summary>
    /// Half-closed hole.
    /// </summary>
    public const string WindHalfClosedHole1 = "windHalfClosedHole1";
    /// <summary>
    /// Half-closed hole 2.
    /// </summary>
    public const string WindHalfClosedHole2 = "windHalfClosedHole2";
    /// <summary>
    /// Half-open hole.
    /// </summary>
    public const string WindHalfClosedHole3 = "windHalfClosedHole3";
    /// <summary>
    /// Somewhat relaxed embouchure.
    /// </summary>
    public const string WindLessRelaxedEmbouchure = "windLessRelaxedEmbouchure";
    /// <summary>
    /// Somewhat tight embouchure.
    /// </summary>
    public const string WindLessTightEmbouchure = "windLessTightEmbouchure";
    /// <summary>
    /// Mouthpiece or hand pop.
    /// </summary>
    public const string WindMouthpiecePop = "windMouthpiecePop";
    /// <summary>
    /// Combining multiphonics (black) for stem.
    /// </summary>
    public const string WindMultiphonicsBlackStem = "windMultiphonicsBlackStem";
    /// <summary>
    /// Combining multiphonics (black and white) for stem.
    /// </summary>
    public const string WindMultiphonicsBlackWhiteStem = "windMultiphonicsBlackWhiteStem";
    /// <summary>
    /// Combining multiphonics (white) for stem.
    /// </summary>
    public const string WindMultiphonicsWhiteStem = "windMultiphonicsWhiteStem";
    /// <summary>
    /// Open hole.
    /// </summary>
    public const string WindOpenHole = "windOpenHole";
    /// <summary>
    /// Much more reed (push inwards).
    /// </summary>
    public const string WindReedPositionIn = "windReedPositionIn";
    /// <summary>
    /// Normal reed position.
    /// </summary>
    public const string WindReedPositionNormal = "windReedPositionNormal";
    /// <summary>
    /// Very little reed (pull outwards).
    /// </summary>
    public const string WindReedPositionOut = "windReedPositionOut";
    /// <summary>
    /// Relaxed embouchure.
    /// </summary>
    public const string WindRelaxedEmbouchure = "windRelaxedEmbouchure";
    /// <summary>
    /// Rim only.
    /// </summary>
    public const string WindRimOnly = "windRimOnly";
    /// <summary>
    /// Sharper embouchure.
    /// </summary>
    public const string WindSharpEmbouchure = "windSharpEmbouchure";
    /// <summary>
    /// Very tight embouchure / strong air pressure.
    /// </summary>
    public const string WindStrongAirPressure = "windStrongAirPressure";
    /// <summary>
    /// Three-quarters closed hole.
    /// </summary>
    public const string WindThreeQuartersClosedHole = "windThreeQuartersClosedHole";
    /// <summary>
    /// Tight embouchure.
    /// </summary>
    public const string WindTightEmbouchure = "windTightEmbouchure";
    /// <summary>
    /// Trill key.
    /// </summary>
    public const string WindTrillKey = "windTrillKey";
    /// <summary>
    /// Very tight embouchure.
    /// </summary>
    public const string WindVeryTightEmbouchure = "windVeryTightEmbouchure";
    /// <summary>
    /// Very relaxed embouchure / weak air-pressure.
    /// </summary>
    public const string WindWeakAirPressure = "windWeakAirPressure";
}

/// <summary>
/// Glyph names as enums.
/// </summary>
public enum GlyphName
{
    /// <summary>
    /// 4-string tab clef.
    /// </summary>
    FourStringTabClef,
    /// <summary>
    /// 6-string tab clef.
    /// </summary>
    SixStringTabClef,
    /// <summary>
    /// 11 large diesis down, 3° down [46 EDO].
    /// </summary>
    AccSagittal11LargeDiesisDown,
    /// <summary>
    /// 11 large diesis up, (11L), (sharp less 11M), 3° up [46 EDO].
    /// </summary>
    AccSagittal11LargeDiesisUp,
    /// <summary>
    /// 11 medium diesis down, 1°[17 31] 2°46 down, 1/4-tone down.
    /// </summary>
    AccSagittal11MediumDiesisDown,
    /// <summary>
    /// 11 medium diesis up, (11M), 1°[17 31] 2°46 up, 1/4-tone up.
    /// </summary>
    AccSagittal11MediumDiesisUp,
    /// <summary>
    /// 11:19 large diesis down.
    /// </summary>
    AccSagittal11v19LargeDiesisDown,
    /// <summary>
    /// 11:19 large diesis up, (11:19L, apotome less 11:19M).
    /// </summary>
    AccSagittal11v19LargeDiesisUp,
    /// <summary>
    /// 11:19 medium diesis down.
    /// </summary>
    AccSagittal11v19MediumDiesisDown,
    /// <summary>
    /// 11:19 medium diesis up, (11:19M, 11M plus 19s).
    /// </summary>
    AccSagittal11v19MediumDiesisUp,
    /// <summary>
    /// 11:49 comma down.
    /// </summary>
    AccSagittal11v49CommaDown,
    /// <summary>
    /// 11:49 comma up, (11:49C, 11M less 49C).
    /// </summary>
    AccSagittal11v49CommaUp,
    /// <summary>
    /// 143 comma down.
    /// </summary>
    AccSagittal143CommaDown,
    /// <summary>
    /// 143 comma up, (143C, 13L less 11M).
    /// </summary>
    AccSagittal143CommaUp,
    /// <summary>
    /// 17 comma down.
    /// </summary>
    AccSagittal17CommaDown,
    /// <summary>
    /// 17 comma up, (17C).
    /// </summary>
    AccSagittal17CommaUp,
    /// <summary>
    /// 17 kleisma down.
    /// </summary>
    AccSagittal17KleismaDown,
    /// <summary>
    /// 17 kleisma up, (17k).
    /// </summary>
    AccSagittal17KleismaUp,
    /// <summary>
    /// 19 comma down.
    /// </summary>
    AccSagittal19CommaDown,
    /// <summary>
    /// 19 comma up, (19C).
    /// </summary>
    AccSagittal19CommaUp,
    /// <summary>
    /// 19 schisma down.
    /// </summary>
    AccSagittal19SchismaDown,
    /// <summary>
    /// 19 schisma up, (19s).
    /// </summary>
    AccSagittal19SchismaUp,
    /// <summary>
    /// 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down.
    /// </summary>
    AccSagittal1MinaDown,
    /// <summary>
    /// 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up.
    /// </summary>
    AccSagittal1MinaUp,
    /// <summary>
    /// 1 tina down, 7²⋅11⋅19/5-schismina down, 0.17 cents down.
    /// </summary>
    AccSagittal1TinaDown,
    /// <summary>
    /// 1 tina up, 7²⋅11⋅19/5-schismina up, 0.17 cents up.
    /// </summary>
    AccSagittal1TinaUp,
    /// <summary>
    /// 23 comma down, 2° down [96 EDO], 1/8-tone down.
    /// </summary>
    AccSagittal23CommaDown,
    /// <summary>
    /// 23 comma up, (23C), 2° up [96 EDO], 1/8-tone up.
    /// </summary>
    AccSagittal23CommaUp,
    /// <summary>
    /// 23 small diesis down.
    /// </summary>
    AccSagittal23SmallDiesisDown,
    /// <summary>
    /// 23 small diesis up, (23S).
    /// </summary>
    AccSagittal23SmallDiesisUp,
    /// <summary>
    /// 25 small diesis down, 2° down [53 EDO].
    /// </summary>
    AccSagittal25SmallDiesisDown,
    /// <summary>
    /// 25 small diesis up, (25S, ~5:13S, ~37S, 5C plus 5C), 2° up [53 EDO].
    /// </summary>
    AccSagittal25SmallDiesisUp,
    /// <summary>
    /// 2 minas down, 65/77-schismina down, 0.83 cents down.
    /// </summary>
    AccSagittal2MinasDown,
    /// <summary>
    /// 2 minas up, 65/77-schismina up, 0.83 cents up.
    /// </summary>
    AccSagittal2MinasUp,
    /// <summary>
    /// 2 tinas down, 1/(7³⋅17)-schismina down, 0.30 cents down.
    /// </summary>
    AccSagittal2TinasDown,
    /// <summary>
    /// 2 tinas up, 1/(7³⋅17)-schismina up, 0.30 cents up.
    /// </summary>
    AccSagittal2TinasUp,
    /// <summary>
    /// 35 large diesis down, 2° down [50 EDO], 5/18-tone down.
    /// </summary>
    AccSagittal35LargeDiesisDown,
    /// <summary>
    /// 35 large diesis up, (35L, ~13L, ~125L, sharp less 35M), 2°50 up.
    /// </summary>
    AccSagittal35LargeDiesisUp,
    /// <summary>
    /// 35 medium diesis down, 1°[50] 2°[27] down, 2/9-tone down.
    /// </summary>
    AccSagittal35MediumDiesisDown,
    /// <summary>
    /// 35 medium diesis up, (35M, ~13M, ~125M, 5C plus 7C), 2/9-tone up.
    /// </summary>
    AccSagittal35MediumDiesisUp,
    /// <summary>
    /// 3 tinas down, 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down.
    /// </summary>
    AccSagittal3TinasDown,
    /// <summary>
    /// 3 tinas up, 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up.
    /// </summary>
    AccSagittal3TinasUp,
    /// <summary>
    /// 49 large diesis down.
    /// </summary>
    AccSagittal49LargeDiesisDown,
    /// <summary>
    /// 49 large diesis up, (49L, ~31L, apotome less 49M).
    /// </summary>
    AccSagittal49LargeDiesisUp,
    /// <summary>
    /// 49 medium diesis down.
    /// </summary>
    AccSagittal49MediumDiesisDown,
    /// <summary>
    /// 49 medium diesis up, (49M, ~31M, 7C plus 7C).
    /// </summary>
    AccSagittal49MediumDiesisUp,
    /// <summary>
    /// 49 small diesis down.
    /// </summary>
    AccSagittal49SmallDiesisDown,
    /// <summary>
    /// 49 small diesis up, (49S, ~31S).
    /// </summary>
    AccSagittal49SmallDiesisUp,
    /// <summary>
    /// 4 tinas down, 5²⋅11²/7-schismina down, 0.57 cents down.
    /// </summary>
    AccSagittal4TinasDown,
    /// <summary>
    /// 4 tinas up, 5²⋅11²/7-schismina up, 0.57 cents up.
    /// </summary>
    AccSagittal4TinasUp,
    /// <summary>
    /// 55 comma down, 3° down [96 EDO], 3/16-tone down.
    /// </summary>
    AccSagittal55CommaDown,
    /// <summary>
    /// 55 comma up, (55C, 11M less 5C), 3°up [96 EDO], 3/16-tone up.
    /// </summary>
    AccSagittal55CommaUp,
    /// <summary>
    /// 5 comma down, 1° down [22 27 29 34 41 46 53 96 EDOs], 1/12-tone down.
    /// </summary>
    AccSagittal5CommaDown,
    /// <summary>
    /// 5 comma up, (5C), 1° up [22 27 29 34 41 46 53 96 EDOs], 1/12-tone up.
    /// </summary>
    AccSagittal5CommaUp,
    /// <summary>
    /// 5 tinas down, 7⁴/25-schismina down, 0.72 cents down.
    /// </summary>
    AccSagittal5TinasDown,
    /// <summary>
    /// 5 tinas up, 7⁴/25-schismina up, 0.72 cents up.
    /// </summary>
    AccSagittal5TinasUp,
    /// <summary>
    /// 5:11 small diesis down.
    /// </summary>
    AccSagittal5v11SmallDiesisDown,
    /// <summary>
    /// 5:11 small diesis up, (5:11S, ~7:13S, ~11:17S, 5:7k plus 7:11C).
    /// </summary>
    AccSagittal5v11SmallDiesisUp,
    /// <summary>
    /// 5:13 large diesis down.
    /// </summary>
    AccSagittal5v13LargeDiesisDown,
    /// <summary>
    /// 5:13 large diesis up, (5:13L, ~37L, apotome less 5:13M).
    /// </summary>
    AccSagittal5v13LargeDiesisUp,
    /// <summary>
    /// 5:13 medium diesis down.
    /// </summary>
    AccSagittal5v13MediumDiesisDown,
    /// <summary>
    /// 5:13 medium diesis up, (5:13M, ~37M, 5C plus 13C).
    /// </summary>
    AccSagittal5v13MediumDiesisUp,
    /// <summary>
    /// 5:19 comma down, 1/20-tone down.
    /// </summary>
    AccSagittal5v19CommaDown,
    /// <summary>
    /// 5:19 comma up, (5:19C, 5C plus 19s), 1/20-tone up.
    /// </summary>
    AccSagittal5v19CommaUp,
    /// <summary>
    /// 5:23 small diesis down, 2° down [60 EDO], 1/5-tone down.
    /// </summary>
    AccSagittal5v23SmallDiesisDown,
    /// <summary>
    /// 5:23 small diesis up, (5:23S, 5C plus 23C), 2° up [60 EDO], 1/5-tone up.
    /// </summary>
    AccSagittal5v23SmallDiesisUp,
    /// <summary>
    /// 5:49 medium diesis down.
    /// </summary>
    AccSagittal5v49MediumDiesisDown,
    /// <summary>
    /// 5:49 medium diesis up, (5:49M, half apotome).
    /// </summary>
    AccSagittal5v49MediumDiesisUp,
    /// <summary>
    /// 5:7 kleisma down.
    /// </summary>
    AccSagittal5v7KleismaDown,
    /// <summary>
    /// 5:7 kleisma up, (5:7k, ~11:13k, 7C less 5C).
    /// </summary>
    AccSagittal5v7KleismaUp,
    /// <summary>
    /// 6 tinas down, 2 minas down, 65/77-schismina down, 0.83 cents down.
    /// </summary>
    AccSagittal6TinasDown,
    /// <summary>
    /// 6 tinas up, 2 minas up, 65/77-schismina up, 0.83 cents up.
    /// </summary>
    AccSagittal6TinasUp,
    /// <summary>
    /// 7 comma down, 1° down [43 EDO], 2° down [72 EDO], 1/6-tone down.
    /// </summary>
    AccSagittal7CommaDown,
    /// <summary>
    /// 7 comma up, (7C), 1° up [43 EDO], 2° up [72 EDO], 1/6-tone up.
    /// </summary>
    AccSagittal7CommaUp,
    /// <summary>
    /// 7 tinas down, 7/(5²⋅17)-schismina down, 1.02 cents down.
    /// </summary>
    AccSagittal7TinasDown,
    /// <summary>
    /// 7 tinas up, 7/(5²⋅17)-schismina up, 1.02 cents up.
    /// </summary>
    AccSagittal7TinasUp,
    /// <summary>
    /// 7:11 comma down, 1° down [60 EDO], 1/10-tone down.
    /// </summary>
    AccSagittal7v11CommaDown,
    /// <summary>
    /// 7:11 comma up, (7:11C, ~13:17S, ~29S, 11L less 7C), 1° up [60 EDO].
    /// </summary>
    AccSagittal7v11CommaUp,
    /// <summary>
    /// 7:11 kleisma down.
    /// </summary>
    AccSagittal7v11KleismaDown,
    /// <summary>
    /// 7:11 kleisma up, (7:11k, ~29k).
    /// </summary>
    AccSagittal7v11KleismaUp,
    /// <summary>
    /// 7:19 comma down.
    /// </summary>
    AccSagittal7v19CommaDown,
    /// <summary>
    /// 7:19 comma up, (7:19C, 7C less 19s).
    /// </summary>
    AccSagittal7v19CommaUp,
    /// <summary>
    /// 8 tinas down, 11⋅17/(5²⋅7)-schismina down, 1.14 cents down.
    /// </summary>
    AccSagittal8TinasDown,
    /// <summary>
    /// 8 tinas up, 11⋅17/(5²⋅7)-schismina up, 1.14 cents up.
    /// </summary>
    AccSagittal8TinasUp,
    /// <summary>
    /// 9 tinas down, 1/(7²⋅11)-schismina down, 1.26 cents down.
    /// </summary>
    AccSagittal9TinasDown,
    /// <summary>
    /// 9 tinas up, 1/(7²⋅11)-schismina up, 1.26 cents up.
    /// </summary>
    AccSagittal9TinasUp,
    /// <summary>
    /// Acute, 5 schisma up (5s), 2 cents up.
    /// </summary>
    AccSagittalAcute,
    /// <summary>
    /// Double flat, (2 apotomes down)[almost all EDOs], whole-tone down.
    /// </summary>
    AccSagittalDoubleFlat,
    /// <summary>
    /// Double flat 11:49C-up.
    /// </summary>
    AccSagittalDoubleFlat11v49CUp,
    /// <summary>
    /// Double flat 143C-up.
    /// </summary>
    AccSagittalDoubleFlat143CUp,
    /// <summary>
    /// Double flat 17C-up.
    /// </summary>
    AccSagittalDoubleFlat17CUp,
    /// <summary>
    /// Double flat 17k-up.
    /// </summary>
    AccSagittalDoubleFlat17kUp,
    /// <summary>
    /// Double flat 19C-up.
    /// </summary>
    AccSagittalDoubleFlat19CUp,
    /// <summary>
    /// Double flat 19s-up.
    /// </summary>
    AccSagittalDoubleFlat19sUp,
    /// <summary>
    /// Double flat 23C-up, 14° down [96 EDO], 7/8-tone down.
    /// </summary>
    AccSagittalDoubleFlat23CUp,
    /// <summary>
    /// Double flat 23S-up.
    /// </summary>
    AccSagittalDoubleFlat23SUp,
    /// <summary>
    /// Double flat 25S-up, 8°down [53 EDO].
    /// </summary>
    AccSagittalDoubleFlat25SUp,
    /// <summary>
    /// Double flat 49S-up.
    /// </summary>
    AccSagittalDoubleFlat49SUp,
    /// <summary>
    /// Double flat 55C-up, 13° down [96 EDO], 13/16-tone down.
    /// </summary>
    AccSagittalDoubleFlat55CUp,
    /// <summary>
    /// Double flat 5C-up, 5°[22 29] 7°[34 41] 9°53 down, 11/12 tone down.
    /// </summary>
    AccSagittalDoubleFlat5CUp,
    /// <summary>
    /// Double flat 5:11S-up.
    /// </summary>
    AccSagittalDoubleFlat5v11SUp,
    /// <summary>
    /// Double flat 5:19C-up, 19/20-tone down.
    /// </summary>
    AccSagittalDoubleFlat5v19CUp,
    /// <summary>
    /// Double flat 5:23S-up, 8° down [60 EDO], 4/5-tone down.
    /// </summary>
    AccSagittalDoubleFlat5v23SUp,
    /// <summary>
    /// Double flat 5:7k-up.
    /// </summary>
    AccSagittalDoubleFlat5v7kUp,
    /// <summary>
    /// Double flat 7C-up, 5° down [43 EDO], 10° down [72 EDO], 5/6-tone down.
    /// </summary>
    AccSagittalDoubleFlat7CUp,
    /// <summary>
    /// Double flat 7:11C-up, 9° down [60 EDO], 9/10-tone down.
    /// </summary>
    AccSagittalDoubleFlat7v11CUp,
    /// <summary>
    /// Double flat 7:11k-up.
    /// </summary>
    AccSagittalDoubleFlat7v11kUp,
    /// <summary>
    /// Double flat 7:19C-up.
    /// </summary>
    AccSagittalDoubleFlat7v19CUp,
    /// <summary>
    /// Double sharp, (2 apotomes up)[almost all EDOs], whole-tone up.
    /// </summary>
    AccSagittalDoubleSharp,
    /// <summary>
    /// Double sharp 11:49C-down.
    /// </summary>
    AccSagittalDoubleSharp11v49CDown,
    /// <summary>
    /// Double sharp 143C-down.
    /// </summary>
    AccSagittalDoubleSharp143CDown,
    /// <summary>
    /// Double sharp 17C-down.
    /// </summary>
    AccSagittalDoubleSharp17CDown,
    /// <summary>
    /// Double sharp 17k-down.
    /// </summary>
    AccSagittalDoubleSharp17kDown,
    /// <summary>
    /// Double sharp 19C-down.
    /// </summary>
    AccSagittalDoubleSharp19CDown,
    /// <summary>
    /// Double sharp 19s-down.
    /// </summary>
    AccSagittalDoubleSharp19sDown,
    /// <summary>
    /// Double sharp 23C-down, 14°up [96 EDO], 7/8-tone up.
    /// </summary>
    AccSagittalDoubleSharp23CDown,
    /// <summary>
    /// Double sharp 23S-down.
    /// </summary>
    AccSagittalDoubleSharp23SDown,
    /// <summary>
    /// Double sharp 25S-down, 8°up [53 EDO].
    /// </summary>
    AccSagittalDoubleSharp25SDown,
    /// <summary>
    /// Double sharp 49S-down.
    /// </summary>
    AccSagittalDoubleSharp49SDown,
    /// <summary>
    /// Double sharp 55C-down, 13° up [96 EDO], 13/16-tone up.
    /// </summary>
    AccSagittalDoubleSharp55CDown,
    /// <summary>
    /// Double sharp 5C-down, 5°[22 29] 7°[34 41] 9°53 up, 11/12 tone up.
    /// </summary>
    AccSagittalDoubleSharp5CDown,
    /// <summary>
    /// Double sharp 5:11S-down.
    /// </summary>
    AccSagittalDoubleSharp5v11SDown,
    /// <summary>
    /// Double sharp 5:19C-down, 19/20-tone up.
    /// </summary>
    AccSagittalDoubleSharp5v19CDown,
    /// <summary>
    /// Double sharp 5:23S-down, 8° up [60 EDO], 4/5-tone up.
    /// </summary>
    AccSagittalDoubleSharp5v23SDown,
    /// <summary>
    /// Double sharp 5:7k-down.
    /// </summary>
    AccSagittalDoubleSharp5v7kDown,
    /// <summary>
    /// Double sharp 7C-down, 5°[43] 10°[72] up, 5/6-tone up.
    /// </summary>
    AccSagittalDoubleSharp7CDown,
    /// <summary>
    /// Double sharp 7:11C-down, 9° up [60 EDO], 9/10-tone up.
    /// </summary>
    AccSagittalDoubleSharp7v11CDown,
    /// <summary>
    /// Double sharp 7:11k-down.
    /// </summary>
    AccSagittalDoubleSharp7v11kDown,
    /// <summary>
    /// Double sharp 7:19C-down.
    /// </summary>
    AccSagittalDoubleSharp7v19CDown,
    /// <summary>
    /// Flat, (apotome down)[almost all EDOs], 1/2-tone down.
    /// </summary>
    AccSagittalFlat,
    /// <summary>
    /// Flat 11L-down, 8° up [46 EDO].
    /// </summary>
    AccSagittalFlat11LDown,
    /// <summary>
    /// Flat 11M-down, 3° down [17 31 EDOs], 7° down [46 EDO], 3/4-tone down.
    /// </summary>
    AccSagittalFlat11MDown,
    /// <summary>
    /// Flat 11:19L-down.
    /// </summary>
    AccSagittalFlat11v19LDown,
    /// <summary>
    /// Flat 11:19M-down.
    /// </summary>
    AccSagittalFlat11v19MDown,
    /// <summary>
    /// Flat 11:49C-down.
    /// </summary>
    AccSagittalFlat11v49CDown,
    /// <summary>
    /// Flat 11:49C-up.
    /// </summary>
    AccSagittalFlat11v49CUp,
    /// <summary>
    /// Flat 143C-down.
    /// </summary>
    AccSagittalFlat143CDown,
    /// <summary>
    /// Flat 143C-up.
    /// </summary>
    AccSagittalFlat143CUp,
    /// <summary>
    /// Flat 17C-down.
    /// </summary>
    AccSagittalFlat17CDown,
    /// <summary>
    /// Flat 17C-up.
    /// </summary>
    AccSagittalFlat17CUp,
    /// <summary>
    /// Flat 17k-down.
    /// </summary>
    AccSagittalFlat17kDown,
    /// <summary>
    /// Flat 17k-up.
    /// </summary>
    AccSagittalFlat17kUp,
    /// <summary>
    /// Flat 19C-down.
    /// </summary>
    AccSagittalFlat19CDown,
    /// <summary>
    /// Flat 19C-up.
    /// </summary>
    AccSagittalFlat19CUp,
    /// <summary>
    /// Flat 19s-down.
    /// </summary>
    AccSagittalFlat19sDown,
    /// <summary>
    /// Flat 19s-up.
    /// </summary>
    AccSagittalFlat19sUp,
    /// <summary>
    /// Flat 23C-down, 10° down [96 EDO], 5/8-tone down.
    /// </summary>
    AccSagittalFlat23CDown,
    /// <summary>
    /// Flat 23C-up, 6° down [96 EDO], 3/8-tone down.
    /// </summary>
    AccSagittalFlat23CUp,
    /// <summary>
    /// Flat 23S-down.
    /// </summary>
    AccSagittalFlat23SDown,
    /// <summary>
    /// Flat 23S-up.
    /// </summary>
    AccSagittalFlat23SUp,
    /// <summary>
    /// Flat 25S-down, 7° down [53 EDO].
    /// </summary>
    AccSagittalFlat25SDown,
    /// <summary>
    /// Flat 25S-up, 3° down [53 EDO].
    /// </summary>
    AccSagittalFlat25SUp,
    /// <summary>
    /// Flat 35L-down, 5° down [50 EDO].
    /// </summary>
    AccSagittalFlat35LDown,
    /// <summary>
    /// Flat 35M-down, 4° down [50 EDO], 6° down [27 EDO], 13/18-tone down.
    /// </summary>
    AccSagittalFlat35MDown,
    /// <summary>
    /// Flat 49L-down.
    /// </summary>
    AccSagittalFlat49LDown,
    /// <summary>
    /// Flat 49M-down.
    /// </summary>
    AccSagittalFlat49MDown,
    /// <summary>
    /// Flat 49S-down.
    /// </summary>
    AccSagittalFlat49SDown,
    /// <summary>
    /// Flat 49S-up.
    /// </summary>
    AccSagittalFlat49SUp,
    /// <summary>
    /// Flat 55C-down, 11° down [96 EDO], 11/16-tone down.
    /// </summary>
    AccSagittalFlat55CDown,
    /// <summary>
    /// Flat 55C-up, 5° down [96 EDO], 5/16-tone down.
    /// </summary>
    AccSagittalFlat55CUp,
    /// <summary>
    /// Flat 5C-down, 4°[22 29] 5°[27 34 41] 6°[39 46 53] down, 7/12-tone down.
    /// </summary>
    AccSagittalFlat5CDown,
    /// <summary>
    /// Flat 5C-up, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°72 7°[96] down, 5/12-tone down.
    /// </summary>
    AccSagittalFlat5CUp,
    /// <summary>
    /// Flat 5:11S-down.
    /// </summary>
    AccSagittalFlat5v11SDown,
    /// <summary>
    /// Flat 5:11S-up.
    /// </summary>
    AccSagittalFlat5v11SUp,
    /// <summary>
    /// Flat 5:13L-down.
    /// </summary>
    AccSagittalFlat5v13LDown,
    /// <summary>
    /// Flat 5:13M-down.
    /// </summary>
    AccSagittalFlat5v13MDown,
    /// <summary>
    /// Flat 5:19C-down, 11/20-tone down.
    /// </summary>
    AccSagittalFlat5v19CDown,
    /// <summary>
    /// Flat 5:19C-up, 9/20-tone down.
    /// </summary>
    AccSagittalFlat5v19CUp,
    /// <summary>
    /// Flat 5:23S-down, 7° down [60 EDO], 7/10-tone down.
    /// </summary>
    AccSagittalFlat5v23SDown,
    /// <summary>
    /// Flat 5:23S-up, 3° down [60 EDO], 3/10-tone down.
    /// </summary>
    AccSagittalFlat5v23SUp,
    /// <summary>
    /// Flat 5:49M-down.
    /// </summary>
    AccSagittalFlat5v49MDown,
    /// <summary>
    /// Flat 5:7k-down.
    /// </summary>
    AccSagittalFlat5v7kDown,
    /// <summary>
    /// Flat 5:7k-up.
    /// </summary>
    AccSagittalFlat5v7kUp,
    /// <summary>
    /// Flat 7C-down, 4° down [43 EDO], 8° down [72 EDO], 2/3-tone down.
    /// </summary>
    AccSagittalFlat7CDown,
    /// <summary>
    /// Flat 7C-up, 2° down [43 EDO], 4° down [72 EDO], 1/3-tone down.
    /// </summary>
    AccSagittalFlat7CUp,
    /// <summary>
    /// Flat 7:11C-down, 6° down [60 EDO], 3/5- tone down.
    /// </summary>
    AccSagittalFlat7v11CDown,
    /// <summary>
    /// Flat 7:11C-up, 4° down [60 EDO], 2/5-tone down.
    /// </summary>
    AccSagittalFlat7v11CUp,
    /// <summary>
    /// Flat 7:11k-down.
    /// </summary>
    AccSagittalFlat7v11kDown,
    /// <summary>
    /// Flat 7:11k-up.
    /// </summary>
    AccSagittalFlat7v11kUp,
    /// <summary>
    /// Flat 7:19C-down.
    /// </summary>
    AccSagittalFlat7v19CDown,
    /// <summary>
    /// Flat 7:19C-up.
    /// </summary>
    AccSagittalFlat7v19CUp,
    /// <summary>
    /// Fractional tina down, 77/(5⋅37)-schismina down, 0.08 cents down.
    /// </summary>
    AccSagittalFractionalTinaDown,
    /// <summary>
    /// Fractional tina up, 77/(5⋅37)-schismina up, 0.08 cents up.
    /// </summary>
    AccSagittalFractionalTinaUp,
    /// <summary>
    /// Grave, 5 schisma down, 2 cents down.
    /// </summary>
    AccSagittalGrave,
    /// <summary>
    /// Shaft down, (natural for use with only diacritics down).
    /// </summary>
    AccSagittalShaftDown,
    /// <summary>
    /// Shaft up, (natural for use with only diacritics up).
    /// </summary>
    AccSagittalShaftUp,
    /// <summary>
    /// Sharp, (apotome up)[almost all EDOs], 1/2-tone up.
    /// </summary>
    AccSagittalSharp,
    /// <summary>
    /// Sharp 11L-up, 8° up [46 EDO].
    /// </summary>
    AccSagittalSharp11LUp,
    /// <summary>
    /// Sharp 11M-up, 3° up [17 31 EDOs], 7° up [46 EDO], 3/4-tone up.
    /// </summary>
    AccSagittalSharp11MUp,
    /// <summary>
    /// Sharp 11:19L-up.
    /// </summary>
    AccSagittalSharp11v19LUp,
    /// <summary>
    /// Sharp 11:19M-up.
    /// </summary>
    AccSagittalSharp11v19MUp,
    /// <summary>
    /// Sharp 11:49C-down.
    /// </summary>
    AccSagittalSharp11v49CDown,
    /// <summary>
    /// Sharp 11:49C-up.
    /// </summary>
    AccSagittalSharp11v49CUp,
    /// <summary>
    /// Sharp 143C-down.
    /// </summary>
    AccSagittalSharp143CDown,
    /// <summary>
    /// Sharp 143C-up.
    /// </summary>
    AccSagittalSharp143CUp,
    /// <summary>
    /// Sharp 17C-down.
    /// </summary>
    AccSagittalSharp17CDown,
    /// <summary>
    /// Sharp 17C-up.
    /// </summary>
    AccSagittalSharp17CUp,
    /// <summary>
    /// Sharp 17k-down.
    /// </summary>
    AccSagittalSharp17kDown,
    /// <summary>
    /// Sharp 17k-up.
    /// </summary>
    AccSagittalSharp17kUp,
    /// <summary>
    /// Sharp 19C-down.
    /// </summary>
    AccSagittalSharp19CDown,
    /// <summary>
    /// Sharp 19C-up.
    /// </summary>
    AccSagittalSharp19CUp,
    /// <summary>
    /// Sharp 19s-down.
    /// </summary>
    AccSagittalSharp19sDown,
    /// <summary>
    /// Sharp 19s-up.
    /// </summary>
    AccSagittalSharp19sUp,
    /// <summary>
    /// Sharp 23C-down, 6° up [96 EDO], 3/8-tone up.
    /// </summary>
    AccSagittalSharp23CDown,
    /// <summary>
    /// Sharp 23C-up, 10° up [96 EDO], 5/8-tone up.
    /// </summary>
    AccSagittalSharp23CUp,
    /// <summary>
    /// Sharp 23S-down.
    /// </summary>
    AccSagittalSharp23SDown,
    /// <summary>
    /// Sharp 23S-up.
    /// </summary>
    AccSagittalSharp23SUp,
    /// <summary>
    /// Sharp 25S-down, 3° up [53 EDO].
    /// </summary>
    AccSagittalSharp25SDown,
    /// <summary>
    /// Sharp 25S-up, 7° up [53 EDO].
    /// </summary>
    AccSagittalSharp25SUp,
    /// <summary>
    /// Sharp 35L-up, 5° up [50 EDO].
    /// </summary>
    AccSagittalSharp35LUp,
    /// <summary>
    /// Sharp 35M-up, 4° up [50 EDO], 6° up [27 EDO], 13/18-tone up.
    /// </summary>
    AccSagittalSharp35MUp,
    /// <summary>
    /// Sharp 49L-up.
    /// </summary>
    AccSagittalSharp49LUp,
    /// <summary>
    /// Sharp 49M-up.
    /// </summary>
    AccSagittalSharp49MUp,
    /// <summary>
    /// Sharp 49S-down.
    /// </summary>
    AccSagittalSharp49SDown,
    /// <summary>
    /// Sharp 49S-up.
    /// </summary>
    AccSagittalSharp49SUp,
    /// <summary>
    /// Sharp 55C-down, 5° up [96 EDO], 5/16-tone up.
    /// </summary>
    AccSagittalSharp55CDown,
    /// <summary>
    /// Sharp 55C-up, 11° up [96 EDO], 11/16-tone up.
    /// </summary>
    AccSagittalSharp55CUp,
    /// <summary>
    /// Sharp 5C-down, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°[72] 7°[96] up, 5/12-tone up.
    /// </summary>
    AccSagittalSharp5CDown,
    /// <summary>
    /// Sharp 5C-up, 4°[22 29] 5°[27 34 41] 6°[39 46 53] up, 7/12-tone up.
    /// </summary>
    AccSagittalSharp5CUp,
    /// <summary>
    /// Sharp 5:11S-down.
    /// </summary>
    AccSagittalSharp5v11SDown,
    /// <summary>
    /// Sharp 5:11S-up.
    /// </summary>
    AccSagittalSharp5v11SUp,
    /// <summary>
    /// Sharp 5:13L-up.
    /// </summary>
    AccSagittalSharp5v13LUp,
    /// <summary>
    /// Sharp 5:13M-up.
    /// </summary>
    AccSagittalSharp5v13MUp,
    /// <summary>
    /// Sharp 5:19C-down, 9/20-tone up.
    /// </summary>
    AccSagittalSharp5v19CDown,
    /// <summary>
    /// Sharp 5:19C-up, 11/20-tone up.
    /// </summary>
    AccSagittalSharp5v19CUp,
    /// <summary>
    /// Sharp 5:23S-down, 3° up [60 EDO], 3/10-tone up.
    /// </summary>
    AccSagittalSharp5v23SDown,
    /// <summary>
    /// Sharp 5:23S-up, 7° up [60 EDO], 7/10-tone up.
    /// </summary>
    AccSagittalSharp5v23SUp,
    /// <summary>
    /// Sharp 5:49M-up, (one and a half apotomes).
    /// </summary>
    AccSagittalSharp5v49MUp,
    /// <summary>
    /// Sharp 5:7k-down.
    /// </summary>
    AccSagittalSharp5v7kDown,
    /// <summary>
    /// Sharp 5:7k-up.
    /// </summary>
    AccSagittalSharp5v7kUp,
    /// <summary>
    /// Sharp 7C-down, 2° up [43 EDO], 4° up [72 EDO], 1/3-tone up.
    /// </summary>
    AccSagittalSharp7CDown,
    /// <summary>
    /// Sharp 7C-up, 4° up [43 EDO], 8° up [72 EDO], 2/3-tone up.
    /// </summary>
    AccSagittalSharp7CUp,
    /// <summary>
    /// Sharp 7:11C-down, 4° up [60 EDO], 2/5-tone up.
    /// </summary>
    AccSagittalSharp7v11CDown,
    /// <summary>
    /// Sharp 7:11C-up, 6° up [60 EDO], 3/5- tone up.
    /// </summary>
    AccSagittalSharp7v11CUp,
    /// <summary>
    /// Sharp 7:11k-down.
    /// </summary>
    AccSagittalSharp7v11kDown,
    /// <summary>
    /// Sharp 7:11k-up.
    /// </summary>
    AccSagittalSharp7v11kUp,
    /// <summary>
    /// Sharp 7:19C-down.
    /// </summary>
    AccSagittalSharp7v19CDown,
    /// <summary>
    /// Sharp 7:19C-up.
    /// </summary>
    AccSagittalSharp7v19CUp,
    /// <summary>
    /// Unused.
    /// </summary>
    AccSagittalUnused1,
    /// <summary>
    /// Unused.
    /// </summary>
    AccSagittalUnused2,
    /// <summary>
    /// Unused.
    /// </summary>
    AccSagittalUnused3,
    /// <summary>
    /// Unused.
    /// </summary>
    AccSagittalUnused4,
    /// <summary>
    /// Combining accordion coupler dot.
    /// </summary>
    AccdnCombDot,
    /// <summary>
    /// Combining left hand, 2 ranks, empty.
    /// </summary>
    AccdnCombLH2RanksEmpty,
    /// <summary>
    /// Combining left hand, 3 ranks, empty (square).
    /// </summary>
    AccdnCombLH3RanksEmptySquare,
    /// <summary>
    /// Combining right hand, 3 ranks, empty.
    /// </summary>
    AccdnCombRH3RanksEmpty,
    /// <summary>
    /// Combining right hand, 4 ranks, empty.
    /// </summary>
    AccdnCombRH4RanksEmpty,
    /// <summary>
    /// Diatonic accordion clef.
    /// </summary>
    AccdnDiatonicClef,
    /// <summary>
    /// Left hand, 2 ranks, 16' stop (round).
    /// </summary>
    AccdnLH2Ranks16Round,
    /// <summary>
    /// Left hand, 2 ranks, 8' stop + 16' stop (round).
    /// </summary>
    AccdnLH2Ranks8Plus16Round,
    /// <summary>
    /// Left hand, 2 ranks, 8' stop (round).
    /// </summary>
    AccdnLH2Ranks8Round,
    /// <summary>
    /// Left hand, 2 ranks, full master (round).
    /// </summary>
    AccdnLH2RanksFullMasterRound,
    /// <summary>
    /// Left hand, 2 ranks, master + 16' stop (round).
    /// </summary>
    AccdnLH2RanksMasterPlus16Round,
    /// <summary>
    /// Left hand, 2 ranks, master (round).
    /// </summary>
    AccdnLH2RanksMasterRound,
    /// <summary>
    /// Left hand, 3 ranks, 2' stop + 8' stop (square).
    /// </summary>
    AccdnLH3Ranks2Plus8Square,
    /// <summary>
    /// Left hand, 3 ranks, 2' stop (square).
    /// </summary>
    AccdnLH3Ranks2Square,
    /// <summary>
    /// Left hand, 3 ranks, 8' stop (square).
    /// </summary>
    AccdnLH3Ranks8Square,
    /// <summary>
    /// Left hand, 3 ranks, double 8' stop (square).
    /// </summary>
    AccdnLH3RanksDouble8Square,
    /// <summary>
    /// Left hand, 3 ranks, 2' stop + double 8' stop (tutti) (square).
    /// </summary>
    AccdnLH3RanksTuttiSquare,
    /// <summary>
    /// Pull.
    /// </summary>
    AccdnPull,
    /// <summary>
    /// Push.
    /// </summary>
    AccdnPush,
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + upper tremolo 8' stop + 16' stop (accordion).
    /// </summary>
    AccdnRH3RanksAccordion,
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop (authentic musette).
    /// </summary>
    AccdnRH3RanksAuthenticMusette,
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + 16' stop (bandoneón).
    /// </summary>
    AccdnRH3RanksBandoneon,
    /// <summary>
    /// Right hand, 3 ranks, 16' stop (bassoon).
    /// </summary>
    AccdnRH3RanksBassoon,
    /// <summary>
    /// Right hand, 3 ranks, 8' stop (clarinet).
    /// </summary>
    AccdnRH3RanksClarinet,
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    AccdnRH3RanksDoubleTremoloLower8ve,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop.
    /// </summary>
    AccdnRH3RanksDoubleTremoloUpper8ve,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    AccdnRH3RanksFullFactory,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop + 16' stop (harmonium).
    /// </summary>
    AccdnRH3RanksHarmonium,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop + upper tremolo 8' stop (imitation musette).
    /// </summary>
    AccdnRH3RanksImitationMusette,
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop.
    /// </summary>
    AccdnRH3RanksLowerTremolo8,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop + 16' stop (master).
    /// </summary>
    AccdnRH3RanksMaster,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop (oboe).
    /// </summary>
    AccdnRH3RanksOboe,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 16' stop (organ).
    /// </summary>
    AccdnRH3RanksOrgan,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop (piccolo).
    /// </summary>
    AccdnRH3RanksPiccolo,
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    AccdnRH3RanksTremoloLower8ve,
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop.
    /// </summary>
    AccdnRH3RanksTremoloUpper8ve,
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop.
    /// </summary>
    AccdnRH3RanksTwoChoirs,
    /// <summary>
    /// Right hand, 3 ranks, upper tremolo 8' stop.
    /// </summary>
    AccdnRH3RanksUpperTremolo8,
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + upper tremolo 8' stop (violin).
    /// </summary>
    AccdnRH3RanksViolin,
    /// <summary>
    /// Right hand, 4 ranks, alto.
    /// </summary>
    AccdnRH4RanksAlto,
    /// <summary>
    /// Right hand, 4 ranks, bass/alto.
    /// </summary>
    AccdnRH4RanksBassAlto,
    /// <summary>
    /// Right hand, 4 ranks, master.
    /// </summary>
    AccdnRH4RanksMaster,
    /// <summary>
    /// Right hand, 4 ranks, soft bass.
    /// </summary>
    AccdnRH4RanksSoftBass,
    /// <summary>
    /// Right hand, 4 ranks, soft tenor.
    /// </summary>
    AccdnRH4RanksSoftTenor,
    /// <summary>
    /// Right hand, 4 ranks, soprano.
    /// </summary>
    AccdnRH4RanksSoprano,
    /// <summary>
    /// Right hand, 4 ranks, tenor.
    /// </summary>
    AccdnRH4RanksTenor,
    /// <summary>
    /// Ricochet (2 tones).
    /// </summary>
    AccdnRicochet2,
    /// <summary>
    /// Ricochet (3 tones).
    /// </summary>
    AccdnRicochet3,
    /// <summary>
    /// Ricochet (4 tones).
    /// </summary>
    AccdnRicochet4,
    /// <summary>
    /// Ricochet (5 tones).
    /// </summary>
    AccdnRicochet5,
    /// <summary>
    /// Ricochet (6 tones).
    /// </summary>
    AccdnRicochet6,
    /// <summary>
    /// Combining ricochet for stem (2 tones).
    /// </summary>
    AccdnRicochetStem2,
    /// <summary>
    /// Combining ricochet for stem (3 tones).
    /// </summary>
    AccdnRicochetStem3,
    /// <summary>
    /// Combining ricochet for stem (4 tones).
    /// </summary>
    AccdnRicochetStem4,
    /// <summary>
    /// Combining ricochet for stem (5 tones).
    /// </summary>
    AccdnRicochetStem5,
    /// <summary>
    /// Combining ricochet for stem (6 tones).
    /// </summary>
    AccdnRicochetStem6,
    /// <summary>
    /// 1-comma flat.
    /// </summary>
    Accidental1CommaFlat,
    /// <summary>
    /// 1-comma sharp.
    /// </summary>
    Accidental1CommaSharp,
    /// <summary>
    /// 2-comma flat.
    /// </summary>
    Accidental2CommaFlat,
    /// <summary>
    /// 2-comma sharp.
    /// </summary>
    Accidental2CommaSharp,
    /// <summary>
    /// 3-comma flat.
    /// </summary>
    Accidental3CommaFlat,
    /// <summary>
    /// 3-comma sharp.
    /// </summary>
    Accidental3CommaSharp,
    /// <summary>
    /// 4-comma flat.
    /// </summary>
    Accidental4CommaFlat,
    /// <summary>
    /// 5-comma sharp.
    /// </summary>
    Accidental5CommaSharp,
    /// <summary>
    /// Arrow down (lower by one quarter-tone).
    /// </summary>
    AccidentalArrowDown,
    /// <summary>
    /// Arrow up (raise by one quarter-tone).
    /// </summary>
    AccidentalArrowUp,
    /// <summary>
    /// Bakiye (flat).
    /// </summary>
    AccidentalBakiyeFlat,
    /// <summary>
    /// Bakiye (sharp).
    /// </summary>
    AccidentalBakiyeSharp,
    /// <summary>
    /// Accidental bracket, left.
    /// </summary>
    AccidentalBracketLeft,
    /// <summary>
    /// Accidental bracket, right.
    /// </summary>
    AccidentalBracketRight,
    /// <summary>
    /// Büyük mücenneb (flat).
    /// </summary>
    AccidentalBuyukMucennebFlat,
    /// <summary>
    /// Büyük mücenneb (sharp).
    /// </summary>
    AccidentalBuyukMucennebSharp,
    /// <summary>
    /// Combining close curly brace.
    /// </summary>
    AccidentalCombiningCloseCurlyBrace,
    /// <summary>
    /// Combining lower by one 17-limit schisma.
    /// </summary>
    AccidentalCombiningLower17Schisma,
    /// <summary>
    /// Combining lower by one 19-limit schisma.
    /// </summary>
    AccidentalCombiningLower19Schisma,
    /// <summary>
    /// Combining lower by one 23-limit comma.
    /// </summary>
    AccidentalCombiningLower23Limit29LimitComma,
    /// <summary>
    /// Combining lower by one 29-limit comma.
    /// </summary>
    AccidentalCombiningLower29LimitComma,
    /// <summary>
    /// Combining lower by one 31-limit schisma.
    /// </summary>
    AccidentalCombiningLower31Schisma,
    /// <summary>
    /// Combining lower by one 37-limit quartertone.
    /// </summary>
    AccidentalCombiningLower37Quartertone,
    /// <summary>
    /// Combining lower by one 41-limit comma.
    /// </summary>
    AccidentalCombiningLower41Comma,
    /// <summary>
    /// Combining lower by one 43-limit comma.
    /// </summary>
    AccidentalCombiningLower43Comma,
    /// <summary>
    /// Combining lower by one 47-limit quartertone.
    /// </summary>
    AccidentalCombiningLower47Quartertone,
    /// <summary>
    /// Combining lower by one 53-limit comma.
    /// </summary>
    AccidentalCombiningLower53LimitComma,
    /// <summary>
    /// Combining open curly brace.
    /// </summary>
    AccidentalCombiningOpenCurlyBrace,
    /// <summary>
    /// Combining raise by one 17-limit schisma.
    /// </summary>
    AccidentalCombiningRaise17Schisma,
    /// <summary>
    /// Combining raise by one 19-limit schisma.
    /// </summary>
    AccidentalCombiningRaise19Schisma,
    /// <summary>
    /// Combining raise by one 23-limit comma.
    /// </summary>
    AccidentalCombiningRaise23Limit29LimitComma,
    /// <summary>
    /// Combining raise by one 29-limit comma.
    /// </summary>
    AccidentalCombiningRaise29LimitComma,
    /// <summary>
    /// Combining raise by one 31-limit schisma.
    /// </summary>
    AccidentalCombiningRaise31Schisma,
    /// <summary>
    /// Combining raise by one 37-limit quartertone.
    /// </summary>
    AccidentalCombiningRaise37Quartertone,
    /// <summary>
    /// Combining raise by one 41-limit comma.
    /// </summary>
    AccidentalCombiningRaise41Comma,
    /// <summary>
    /// Combining raise by one 43-limit comma.
    /// </summary>
    AccidentalCombiningRaise43Comma,
    /// <summary>
    /// Combining raise by one 47-limit quartertone.
    /// </summary>
    AccidentalCombiningRaise47Quartertone,
    /// <summary>
    /// Combining raise by one 53-limit comma.
    /// </summary>
    AccidentalCombiningRaise53LimitComma,
    /// <summary>
    /// Syntonic/Didymus comma (80:81) down (Bosanquet).
    /// </summary>
    AccidentalCommaSlashDown,
    /// <summary>
    /// Syntonic/Didymus comma (80:81) up (Bosanquet).
    /// </summary>
    AccidentalCommaSlashUp,
    /// <summary>
    /// Double flat.
    /// </summary>
    AccidentalDoubleFlat,
    /// <summary>
    /// Arabic double flat.
    /// </summary>
    AccidentalDoubleFlatArabic,
    /// <summary>
    /// Double flat equal tempered semitone.
    /// </summary>
    AccidentalDoubleFlatEqualTempered,
    /// <summary>
    /// Double flat lowered by one syntonic comma.
    /// </summary>
    AccidentalDoubleFlatOneArrowDown,
    /// <summary>
    /// Double flat raised by one syntonic comma.
    /// </summary>
    AccidentalDoubleFlatOneArrowUp,
    /// <summary>
    /// Reversed double flat.
    /// </summary>
    AccidentalDoubleFlatReversed,
    /// <summary>
    /// Double flat lowered by three syntonic commas.
    /// </summary>
    AccidentalDoubleFlatThreeArrowsDown,
    /// <summary>
    /// Double flat raised by three syntonic commas.
    /// </summary>
    AccidentalDoubleFlatThreeArrowsUp,
    /// <summary>
    /// Turned double flat.
    /// </summary>
    AccidentalDoubleFlatTurned,
    /// <summary>
    /// Double flat lowered by two syntonic commas.
    /// </summary>
    AccidentalDoubleFlatTwoArrowsDown,
    /// <summary>
    /// Double flat raised by two syntonic commas.
    /// </summary>
    AccidentalDoubleFlatTwoArrowsUp,
    /// <summary>
    /// Double sharp.
    /// </summary>
    AccidentalDoubleSharp,
    /// <summary>
    /// Arabic double sharp.
    /// </summary>
    AccidentalDoubleSharpArabic,
    /// <summary>
    /// Double sharp equal tempered semitone.
    /// </summary>
    AccidentalDoubleSharpEqualTempered,
    /// <summary>
    /// Double sharp lowered by one syntonic comma.
    /// </summary>
    AccidentalDoubleSharpOneArrowDown,
    /// <summary>
    /// Double sharp raised by one syntonic comma.
    /// </summary>
    AccidentalDoubleSharpOneArrowUp,
    /// <summary>
    /// Double sharp lowered by three syntonic commas.
    /// </summary>
    AccidentalDoubleSharpThreeArrowsDown,
    /// <summary>
    /// Double sharp raised by three syntonic commas.
    /// </summary>
    AccidentalDoubleSharpThreeArrowsUp,
    /// <summary>
    /// Double sharp lowered by two syntonic commas.
    /// </summary>
    AccidentalDoubleSharpTwoArrowsDown,
    /// <summary>
    /// Double sharp raised by two syntonic commas.
    /// </summary>
    AccidentalDoubleSharpTwoArrowsUp,
    /// <summary>
    /// Enharmonically reinterpret accidental almost equal to.
    /// </summary>
    AccidentalEnharmonicAlmostEqualTo,
    /// <summary>
    /// Enharmonically reinterpret accidental equals.
    /// </summary>
    AccidentalEnharmonicEquals,
    /// <summary>
    /// Enharmonically reinterpret accidental tilde.
    /// </summary>
    AccidentalEnharmonicTilde,
    /// <summary>
    /// Filled reversed flat and flat.
    /// </summary>
    AccidentalFilledReversedFlatAndFlat,
    /// <summary>
    /// Filled reversed flat and flat with arrow down.
    /// </summary>
    AccidentalFilledReversedFlatAndFlatArrowDown,
    /// <summary>
    /// Filled reversed flat and flat with arrow up.
    /// </summary>
    AccidentalFilledReversedFlatAndFlatArrowUp,
    /// <summary>
    /// Filled reversed flat with arrow down.
    /// </summary>
    AccidentalFilledReversedFlatArrowDown,
    /// <summary>
    /// Filled reversed flat with arrow up.
    /// </summary>
    AccidentalFilledReversedFlatArrowUp,
    /// <summary>
    /// Five-quarter-tones flat.
    /// </summary>
    AccidentalFiveQuarterTonesFlatArrowDown,
    /// <summary>
    /// Five-quarter-tones sharp.
    /// </summary>
    AccidentalFiveQuarterTonesSharpArrowUp,
    /// <summary>
    /// Flat.
    /// </summary>
    AccidentalFlat,
    /// <summary>
    /// Arabic half-tone flat.
    /// </summary>
    AccidentalFlatArabic,
    /// <summary>
    /// Flat equal tempered semitone.
    /// </summary>
    AccidentalFlatEqualTempered,
    /// <summary>
    /// Lowered flat (Stockhausen).
    /// </summary>
    AccidentalFlatLoweredStockhausen,
    /// <summary>
    /// Flat lowered by one syntonic comma.
    /// </summary>
    AccidentalFlatOneArrowDown,
    /// <summary>
    /// Flat raised by one syntonic comma.
    /// </summary>
    AccidentalFlatOneArrowUp,
    /// <summary>
    /// Raised flat (Stockhausen).
    /// </summary>
    AccidentalFlatRaisedStockhausen,
    /// <summary>
    /// Repeated flat, note on line (Stockhausen).
    /// </summary>
    AccidentalFlatRepeatedLineStockhausen,
    /// <summary>
    /// Repeated flat, note in space (Stockhausen).
    /// </summary>
    AccidentalFlatRepeatedSpaceStockhausen,
    /// <summary>
    /// Flat lowered by three syntonic commas.
    /// </summary>
    AccidentalFlatThreeArrowsDown,
    /// <summary>
    /// Flat raised by three syntonic commas.
    /// </summary>
    AccidentalFlatThreeArrowsUp,
    /// <summary>
    /// Turned flat.
    /// </summary>
    AccidentalFlatTurned,
    /// <summary>
    /// Flat lowered by two syntonic commas.
    /// </summary>
    AccidentalFlatTwoArrowsDown,
    /// <summary>
    /// Flat raised by two syntonic commas.
    /// </summary>
    AccidentalFlatTwoArrowsUp,
    /// <summary>
    /// Quarter-tone higher (Alois Hába).
    /// </summary>
    AccidentalHabaFlatQuarterToneHigher,
    /// <summary>
    /// Three quarter-tones lower (Alois Hába).
    /// </summary>
    AccidentalHabaFlatThreeQuarterTonesLower,
    /// <summary>
    /// Quarter-tone higher (Alois Hába).
    /// </summary>
    AccidentalHabaQuarterToneHigher,
    /// <summary>
    /// Quarter-tone lower (Alois Hába).
    /// </summary>
    AccidentalHabaQuarterToneLower,
    /// <summary>
    /// Quarter-tone lower (Alois Hába).
    /// </summary>
    AccidentalHabaSharpQuarterToneLower,
    /// <summary>
    /// Three quarter-tones higher (Alois Hába).
    /// </summary>
    AccidentalHabaSharpThreeQuarterTonesHigher,
    /// <summary>
    /// Half sharp with arrow down.
    /// </summary>
    AccidentalHalfSharpArrowDown,
    /// <summary>
    /// Half sharp with arrow up.
    /// </summary>
    AccidentalHalfSharpArrowUp,
    /// <summary>
    /// Thirteen (raise by 65:64).
    /// </summary>
    AccidentalJohnston13,
    /// <summary>
    /// Inverted 13 (lower by 65:64).
    /// </summary>
    AccidentalJohnston31,
    /// <summary>
    /// Down arrow (lower by 33:32).
    /// </summary>
    AccidentalJohnstonDown,
    /// <summary>
    /// Inverted seven (raise by 36:35).
    /// </summary>
    AccidentalJohnstonEl,
    /// <summary>
    /// Minus (lower by 81:80).
    /// </summary>
    AccidentalJohnstonMinus,
    /// <summary>
    /// Plus (raise by 81:80).
    /// </summary>
    AccidentalJohnstonPlus,
    /// <summary>
    /// Seven (lower by 36:35).
    /// </summary>
    AccidentalJohnstonSeven,
    /// <summary>
    /// Up arrow (raise by 33:32).
    /// </summary>
    AccidentalJohnstonUp,
    /// <summary>
    /// Koma (flat).
    /// </summary>
    AccidentalKomaFlat,
    /// <summary>
    /// Koma (sharp).
    /// </summary>
    AccidentalKomaSharp,
    /// <summary>
    /// Koron (quarter tone flat).
    /// </summary>
    AccidentalKoron,
    /// <summary>
    /// Küçük mücenneb (flat).
    /// </summary>
    AccidentalKucukMucennebFlat,
    /// <summary>
    /// Küçük mücenneb (sharp).
    /// </summary>
    AccidentalKucukMucennebSharp,
    /// <summary>
    /// Large double sharp.
    /// </summary>
    AccidentalLargeDoubleSharp,
    /// <summary>
    /// Lower by one septimal comma.
    /// </summary>
    AccidentalLowerOneSeptimalComma,
    /// <summary>
    /// Lower by one tridecimal quartertone.
    /// </summary>
    AccidentalLowerOneTridecimalQuartertone,
    /// <summary>
    /// Lower by one undecimal quartertone.
    /// </summary>
    AccidentalLowerOneUndecimalQuartertone,
    /// <summary>
    /// Lower by two septimal commas.
    /// </summary>
    AccidentalLowerTwoSeptimalCommas,
    /// <summary>
    /// Lowered (Stockhausen).
    /// </summary>
    AccidentalLoweredStockhausen,
    /// <summary>
    /// Narrow reversed flat(quarter-tone flat).
    /// </summary>
    AccidentalNarrowReversedFlat,
    /// <summary>
    /// Narrow reversed flat and flat(three-quarter-tones flat).
    /// </summary>
    AccidentalNarrowReversedFlatAndFlat,
    /// <summary>
    /// Natural.
    /// </summary>
    AccidentalNatural,
    /// <summary>
    /// Arabic natural.
    /// </summary>
    AccidentalNaturalArabic,
    /// <summary>
    /// Natural equal tempered semitone.
    /// </summary>
    AccidentalNaturalEqualTempered,
    /// <summary>
    /// Natural flat.
    /// </summary>
    AccidentalNaturalFlat,
    /// <summary>
    /// Lowered natural (Stockhausen).
    /// </summary>
    AccidentalNaturalLoweredStockhausen,
    /// <summary>
    /// Natural lowered by one syntonic comma.
    /// </summary>
    AccidentalNaturalOneArrowDown,
    /// <summary>
    /// Natural raised by one syntonic comma.
    /// </summary>
    AccidentalNaturalOneArrowUp,
    /// <summary>
    /// Raised natural (Stockhausen).
    /// </summary>
    AccidentalNaturalRaisedStockhausen,
    /// <summary>
    /// Reversed natural.
    /// </summary>
    AccidentalNaturalReversed,
    /// <summary>
    /// Natural sharp.
    /// </summary>
    AccidentalNaturalSharp,
    /// <summary>
    /// Natural lowered by three syntonic commas.
    /// </summary>
    AccidentalNaturalThreeArrowsDown,
    /// <summary>
    /// Natural raised by three syntonic commas.
    /// </summary>
    AccidentalNaturalThreeArrowsUp,
    /// <summary>
    /// Natural lowered by two syntonic commas.
    /// </summary>
    AccidentalNaturalTwoArrowsDown,
    /// <summary>
    /// Natural raised by two syntonic commas.
    /// </summary>
    AccidentalNaturalTwoArrowsUp,
    /// <summary>
    /// One and a half sharps with arrow down.
    /// </summary>
    AccidentalOneAndAHalfSharpsArrowDown,
    /// <summary>
    /// One and a half sharps with arrow up.
    /// </summary>
    AccidentalOneAndAHalfSharpsArrowUp,
    /// <summary>
    /// One-quarter-tone flat (Ferneyhough).
    /// </summary>
    AccidentalOneQuarterToneFlatFerneyhough,
    /// <summary>
    /// One-quarter-tone flat (Stockhausen).
    /// </summary>
    AccidentalOneQuarterToneFlatStockhausen,
    /// <summary>
    /// One-quarter-tone sharp (Ferneyhough).
    /// </summary>
    AccidentalOneQuarterToneSharpFerneyhough,
    /// <summary>
    /// One-quarter-tone sharp (Stockhausen).
    /// </summary>
    AccidentalOneQuarterToneSharpStockhausen,
    /// <summary>
    /// One-third-tone flat (Ferneyhough).
    /// </summary>
    AccidentalOneThirdToneFlatFerneyhough,
    /// <summary>
    /// One-third-tone sharp (Ferneyhough).
    /// </summary>
    AccidentalOneThirdToneSharpFerneyhough,
    /// <summary>
    /// Accidental parenthesis, left.
    /// </summary>
    AccidentalParensLeft,
    /// <summary>
    /// Accidental parenthesis, right.
    /// </summary>
    AccidentalParensRight,
    /// <summary>
    /// Lower by one equal tempered quarter-tone.
    /// </summary>
    AccidentalQuarterFlatEqualTempered,
    /// <summary>
    /// Raise by one equal tempered quarter tone.
    /// </summary>
    AccidentalQuarterSharpEqualTempered,
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    AccidentalQuarterToneFlat4,
    /// <summary>
    /// Arabic quarter-tone flat.
    /// </summary>
    AccidentalQuarterToneFlatArabic,
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    AccidentalQuarterToneFlatArrowUp,
    /// <summary>
    /// Filled reversed flat (quarter-tone flat).
    /// </summary>
    AccidentalQuarterToneFlatFilledReversed,
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    AccidentalQuarterToneFlatNaturalArrowDown,
    /// <summary>
    /// Quarter tone flat (Penderecki).
    /// </summary>
    AccidentalQuarterToneFlatPenderecki,
    /// <summary>
    /// Reversed flat (quarter-tone flat) (Stein).
    /// </summary>
    AccidentalQuarterToneFlatStein,
    /// <summary>
    /// Quarter-tone flat (van Blankenburg).
    /// </summary>
    AccidentalQuarterToneFlatVanBlankenburg,
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    AccidentalQuarterToneSharp4,
    /// <summary>
    /// Arabic quarter-tone sharp.
    /// </summary>
    AccidentalQuarterToneSharpArabic,
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    AccidentalQuarterToneSharpArrowDown,
    /// <summary>
    /// Quarter tone sharp (Bussotti).
    /// </summary>
    AccidentalQuarterToneSharpBusotti,
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    AccidentalQuarterToneSharpNaturalArrowUp,
    /// <summary>
    /// Half sharp (quarter-tone sharp) (Stein).
    /// </summary>
    AccidentalQuarterToneSharpStein,
    /// <summary>
    /// Quarter tone sharp with wiggly tail.
    /// </summary>
    AccidentalQuarterToneSharpWiggle,
    /// <summary>
    /// Raise by one septimal comma.
    /// </summary>
    AccidentalRaiseOneSeptimalComma,
    /// <summary>
    /// Raise by one tridecimal quartertone.
    /// </summary>
    AccidentalRaiseOneTridecimalQuartertone,
    /// <summary>
    /// Raise by one undecimal quartertone.
    /// </summary>
    AccidentalRaiseOneUndecimalQuartertone,
    /// <summary>
    /// Raise by two septimal commas.
    /// </summary>
    AccidentalRaiseTwoSeptimalCommas,
    /// <summary>
    /// Raised (Stockhausen).
    /// </summary>
    AccidentalRaisedStockhausen,
    /// <summary>
    /// Reversed flat and flat with arrow down.
    /// </summary>
    AccidentalReversedFlatAndFlatArrowDown,
    /// <summary>
    /// Reversed flat and flat with arrow up.
    /// </summary>
    AccidentalReversedFlatAndFlatArrowUp,
    /// <summary>
    /// Reversed flat with arrow down.
    /// </summary>
    AccidentalReversedFlatArrowDown,
    /// <summary>
    /// Reversed flat with arrow up.
    /// </summary>
    AccidentalReversedFlatArrowUp,
    /// <summary>
    /// Sharp.
    /// </summary>
    AccidentalSharp,
    /// <summary>
    /// Arabic half-tone sharp.
    /// </summary>
    AccidentalSharpArabic,
    /// <summary>
    /// Sharp equal tempered semitone.
    /// </summary>
    AccidentalSharpEqualTempered,
    /// <summary>
    /// Lowered sharp (Stockhausen).
    /// </summary>
    AccidentalSharpLoweredStockhausen,
    /// <summary>
    /// Sharp lowered by one syntonic comma.
    /// </summary>
    AccidentalSharpOneArrowDown,
    /// <summary>
    /// Sharp raised by one syntonic comma.
    /// </summary>
    AccidentalSharpOneArrowUp,
    /// <summary>
    /// One or three quarter tones sharp.
    /// </summary>
    AccidentalSharpOneHorizontalStroke,
    /// <summary>
    /// Raised sharp (Stockhausen).
    /// </summary>
    AccidentalSharpRaisedStockhausen,
    /// <summary>
    /// Repeated sharp, note on line (Stockhausen).
    /// </summary>
    AccidentalSharpRepeatedLineStockhausen,
    /// <summary>
    /// Repeated sharp, note in space (Stockhausen).
    /// </summary>
    AccidentalSharpRepeatedSpaceStockhausen,
    /// <summary>
    /// Reversed sharp.
    /// </summary>
    AccidentalSharpReversed,
    /// <summary>
    /// Sharp sharp.
    /// </summary>
    AccidentalSharpSharp,
    /// <summary>
    /// Sharp lowered by three syntonic commas.
    /// </summary>
    AccidentalSharpThreeArrowsDown,
    /// <summary>
    /// Sharp raised by three syntonic commas.
    /// </summary>
    AccidentalSharpThreeArrowsUp,
    /// <summary>
    /// Sharp lowered by two syntonic commas.
    /// </summary>
    AccidentalSharpTwoArrowsDown,
    /// <summary>
    /// Sharp raised by two syntonic commas.
    /// </summary>
    AccidentalSharpTwoArrowsUp,
    /// <summary>
    /// 1/12 tone low.
    /// </summary>
    AccidentalSims12Down,
    /// <summary>
    /// 1/12 tone high.
    /// </summary>
    AccidentalSims12Up,
    /// <summary>
    /// 1/4 tone low.
    /// </summary>
    AccidentalSims4Down,
    /// <summary>
    /// 1/4 tone high.
    /// </summary>
    AccidentalSims4Up,
    /// <summary>
    /// 1/6 tone low.
    /// </summary>
    AccidentalSims6Down,
    /// <summary>
    /// 1/6 tone high.
    /// </summary>
    AccidentalSims6Up,
    /// <summary>
    /// Sori (quarter tone sharp).
    /// </summary>
    AccidentalSori,
    /// <summary>
    /// Byzantine-style Bakiye flat (Tavener).
    /// </summary>
    AccidentalTavenerFlat,
    /// <summary>
    /// Byzantine-style Büyük mücenneb sharp (Tavener).
    /// </summary>
    AccidentalTavenerSharp,
    /// <summary>
    /// Arabic three-quarter-tones flat.
    /// </summary>
    AccidentalThreeQuarterTonesFlatArabic,
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    AccidentalThreeQuarterTonesFlatArrowDown,
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    AccidentalThreeQuarterTonesFlatArrowUp,
    /// <summary>
    /// Three-quarter-tones flat (Couper).
    /// </summary>
    AccidentalThreeQuarterTonesFlatCouper,
    /// <summary>
    /// Three-quarter-tones flat (Grisey).
    /// </summary>
    AccidentalThreeQuarterTonesFlatGrisey,
    /// <summary>
    /// Three-quarter-tones flat (Tartini).
    /// </summary>
    AccidentalThreeQuarterTonesFlatTartini,
    /// <summary>
    /// Reversed flat and flat (three-quarter-tones flat) (Zimmermann).
    /// </summary>
    AccidentalThreeQuarterTonesFlatZimmermann,
    /// <summary>
    /// Arabic three-quarter-tones sharp.
    /// </summary>
    AccidentalThreeQuarterTonesSharpArabic,
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    AccidentalThreeQuarterTonesSharpArrowDown,
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    AccidentalThreeQuarterTonesSharpArrowUp,
    /// <summary>
    /// Three quarter tones sharp (Bussotti).
    /// </summary>
    AccidentalThreeQuarterTonesSharpBusotti,
    /// <summary>
    /// One and a half sharps (three-quarter-tones sharp) (Stein).
    /// </summary>
    AccidentalThreeQuarterTonesSharpStein,
    /// <summary>
    /// Three-quarter-tones sharp (Stockhausen).
    /// </summary>
    AccidentalThreeQuarterTonesSharpStockhausen,
    /// <summary>
    /// Triple flat.
    /// </summary>
    AccidentalTripleFlat,
    /// <summary>
    /// Triple sharp.
    /// </summary>
    AccidentalTripleSharp,
    /// <summary>
    /// Two-third-tones flat (Ferneyhough).
    /// </summary>
    AccidentalTwoThirdTonesFlatFerneyhough,
    /// <summary>
    /// Two-third-tones sharp (Ferneyhough).
    /// </summary>
    AccidentalTwoThirdTonesSharpFerneyhough,
    /// <summary>
    /// Accidental down.
    /// </summary>
    AccidentalUpsAndDownsDown,
    /// <summary>
    /// Accidental less.
    /// </summary>
    AccidentalUpsAndDownsLess,
    /// <summary>
    /// Accidental more.
    /// </summary>
    AccidentalUpsAndDownsMore,
    /// <summary>
    /// Accidental up.
    /// </summary>
    AccidentalUpsAndDownsUp,
    /// <summary>
    /// Wilson minus (5 comma down).
    /// </summary>
    AccidentalWilsonMinus,
    /// <summary>
    /// Wilson plus (5 comma up).
    /// </summary>
    AccidentalWilsonPlus,
    /// <summary>
    /// 5/6 tone flat.
    /// </summary>
    AccidentalWyschnegradsky10TwelfthsFlat,
    /// <summary>
    /// 5/6 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky10TwelfthsSharp,
    /// <summary>
    /// 11/12 tone flat.
    /// </summary>
    AccidentalWyschnegradsky11TwelfthsFlat,
    /// <summary>
    /// 11/12 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky11TwelfthsSharp,
    /// <summary>
    /// 1/12 tone flat.
    /// </summary>
    AccidentalWyschnegradsky1TwelfthsFlat,
    /// <summary>
    /// 1/12 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky1TwelfthsSharp,
    /// <summary>
    /// 1/6 tone flat.
    /// </summary>
    AccidentalWyschnegradsky2TwelfthsFlat,
    /// <summary>
    /// 1/6 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky2TwelfthsSharp,
    /// <summary>
    /// 1/4 tone flat.
    /// </summary>
    AccidentalWyschnegradsky3TwelfthsFlat,
    /// <summary>
    /// 1/4 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky3TwelfthsSharp,
    /// <summary>
    /// 1/3 tone flat.
    /// </summary>
    AccidentalWyschnegradsky4TwelfthsFlat,
    /// <summary>
    /// 1/3 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky4TwelfthsSharp,
    /// <summary>
    /// 5/12 tone flat.
    /// </summary>
    AccidentalWyschnegradsky5TwelfthsFlat,
    /// <summary>
    /// 5/12 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky5TwelfthsSharp,
    /// <summary>
    /// 1/2 tone flat.
    /// </summary>
    AccidentalWyschnegradsky6TwelfthsFlat,
    /// <summary>
    /// 1/2 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky6TwelfthsSharp,
    /// <summary>
    /// 7/12 tone flat.
    /// </summary>
    AccidentalWyschnegradsky7TwelfthsFlat,
    /// <summary>
    /// 7/12 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky7TwelfthsSharp,
    /// <summary>
    /// 2/3 tone flat.
    /// </summary>
    AccidentalWyschnegradsky8TwelfthsFlat,
    /// <summary>
    /// 2/3 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky8TwelfthsSharp,
    /// <summary>
    /// 3/4 tone flat.
    /// </summary>
    AccidentalWyschnegradsky9TwelfthsFlat,
    /// <summary>
    /// 3/4 tone sharp.
    /// </summary>
    AccidentalWyschnegradsky9TwelfthsSharp,
    /// <summary>
    /// One-third-tone sharp (Xenakis).
    /// </summary>
    AccidentalXenakisOneThirdToneSharp,
    /// <summary>
    /// Two-third-tones sharp (Xenakis).
    /// </summary>
    AccidentalXenakisTwoThirdTonesSharp,
    /// <summary>
    /// Choralmelodie (Berg).
    /// </summary>
    AnalyticsChoralmelodie,
    /// <summary>
    /// End of stimme.
    /// </summary>
    AnalyticsEndStimme,
    /// <summary>
    /// Hauptrhythmus (Berg).
    /// </summary>
    AnalyticsHauptrhythmus,
    /// <summary>
    /// Hauptstimme.
    /// </summary>
    AnalyticsHauptstimme,
    /// <summary>
    /// Inversion 1.
    /// </summary>
    AnalyticsInversion1,
    /// <summary>
    /// Nebenstimme.
    /// </summary>
    AnalyticsNebenstimme,
    /// <summary>
    /// Start of stimme.
    /// </summary>
    AnalyticsStartStimme,
    /// <summary>
    /// Theme.
    /// </summary>
    AnalyticsTheme,
    /// <summary>
    /// Theme 1.
    /// </summary>
    AnalyticsTheme1,
    /// <summary>
    /// Inversion of theme.
    /// </summary>
    AnalyticsThemeInversion,
    /// <summary>
    /// Retrograde of theme.
    /// </summary>
    AnalyticsThemeRetrograde,
    /// <summary>
    /// Retrograde inversion of theme.
    /// </summary>
    AnalyticsThemeRetrogradeInversion,
    /// <summary>
    /// Arpeggiato.
    /// </summary>
    Arpeggiato,
    /// <summary>
    /// Arpeggiato down.
    /// </summary>
    ArpeggiatoDown,
    /// <summary>
    /// Arpeggiato up.
    /// </summary>
    ArpeggiatoUp,
    /// <summary>
    /// Black arrow down (S).
    /// </summary>
    ArrowBlackDown,
    /// <summary>
    /// Black arrow down-left (SW).
    /// </summary>
    ArrowBlackDownLeft,
    /// <summary>
    /// Black arrow down-right (SE).
    /// </summary>
    ArrowBlackDownRight,
    /// <summary>
    /// Black arrow left (W).
    /// </summary>
    ArrowBlackLeft,
    /// <summary>
    /// Black arrow right (E).
    /// </summary>
    ArrowBlackRight,
    /// <summary>
    /// Black arrow up (N).
    /// </summary>
    ArrowBlackUp,
    /// <summary>
    /// Black arrow up-left (NW).
    /// </summary>
    ArrowBlackUpLeft,
    /// <summary>
    /// Black arrow up-right (NE).
    /// </summary>
    ArrowBlackUpRight,
    /// <summary>
    /// Open arrow down (S).
    /// </summary>
    ArrowOpenDown,
    /// <summary>
    /// Open arrow down-left (SW).
    /// </summary>
    ArrowOpenDownLeft,
    /// <summary>
    /// Open arrow down-right (SE).
    /// </summary>
    ArrowOpenDownRight,
    /// <summary>
    /// Open arrow left (W).
    /// </summary>
    ArrowOpenLeft,
    /// <summary>
    /// Open arrow right (E).
    /// </summary>
    ArrowOpenRight,
    /// <summary>
    /// Open arrow up (N).
    /// </summary>
    ArrowOpenUp,
    /// <summary>
    /// Open arrow up-left (NW).
    /// </summary>
    ArrowOpenUpLeft,
    /// <summary>
    /// Open arrow up-right (NE).
    /// </summary>
    ArrowOpenUpRight,
    /// <summary>
    /// White arrow down (S).
    /// </summary>
    ArrowWhiteDown,
    /// <summary>
    /// White arrow down-left (SW).
    /// </summary>
    ArrowWhiteDownLeft,
    /// <summary>
    /// White arrow down-right (SE).
    /// </summary>
    ArrowWhiteDownRight,
    /// <summary>
    /// White arrow left (W).
    /// </summary>
    ArrowWhiteLeft,
    /// <summary>
    /// White arrow right (E).
    /// </summary>
    ArrowWhiteRight,
    /// <summary>
    /// White arrow up (N).
    /// </summary>
    ArrowWhiteUp,
    /// <summary>
    /// White arrow up-left (NW).
    /// </summary>
    ArrowWhiteUpLeft,
    /// <summary>
    /// White arrow up-right (NE).
    /// </summary>
    ArrowWhiteUpRight,
    /// <summary>
    /// Black arrowhead down (S).
    /// </summary>
    ArrowheadBlackDown,
    /// <summary>
    /// Black arrowhead down-left (SW).
    /// </summary>
    ArrowheadBlackDownLeft,
    /// <summary>
    /// Black arrowhead down-right (SE).
    /// </summary>
    ArrowheadBlackDownRight,
    /// <summary>
    /// Black arrowhead left (W).
    /// </summary>
    ArrowheadBlackLeft,
    /// <summary>
    /// Black arrowhead right (E).
    /// </summary>
    ArrowheadBlackRight,
    /// <summary>
    /// Black arrowhead up (N).
    /// </summary>
    ArrowheadBlackUp,
    /// <summary>
    /// Black arrowhead up-left (NW).
    /// </summary>
    ArrowheadBlackUpLeft,
    /// <summary>
    /// Black arrowhead up-right (NE).
    /// </summary>
    ArrowheadBlackUpRight,
    /// <summary>
    /// Open arrowhead down (S).
    /// </summary>
    ArrowheadOpenDown,
    /// <summary>
    /// Open arrowhead down-left (SW).
    /// </summary>
    ArrowheadOpenDownLeft,
    /// <summary>
    /// Open arrowhead down-right (SE).
    /// </summary>
    ArrowheadOpenDownRight,
    /// <summary>
    /// Open arrowhead left (W).
    /// </summary>
    ArrowheadOpenLeft,
    /// <summary>
    /// Open arrowhead right (E).
    /// </summary>
    ArrowheadOpenRight,
    /// <summary>
    /// Open arrowhead up (N).
    /// </summary>
    ArrowheadOpenUp,
    /// <summary>
    /// Open arrowhead up-left (NW).
    /// </summary>
    ArrowheadOpenUpLeft,
    /// <summary>
    /// Open arrowhead up-right (NE).
    /// </summary>
    ArrowheadOpenUpRight,
    /// <summary>
    /// White arrowhead down (S).
    /// </summary>
    ArrowheadWhiteDown,
    /// <summary>
    /// White arrowhead down-left (SW).
    /// </summary>
    ArrowheadWhiteDownLeft,
    /// <summary>
    /// White arrowhead down-right (SE).
    /// </summary>
    ArrowheadWhiteDownRight,
    /// <summary>
    /// White arrowhead left (W).
    /// </summary>
    ArrowheadWhiteLeft,
    /// <summary>
    /// White arrowhead right (E).
    /// </summary>
    ArrowheadWhiteRight,
    /// <summary>
    /// White arrowhead up (N).
    /// </summary>
    ArrowheadWhiteUp,
    /// <summary>
    /// White arrowhead up-left (NW).
    /// </summary>
    ArrowheadWhiteUpLeft,
    /// <summary>
    /// White arrowhead up-right (NE).
    /// </summary>
    ArrowheadWhiteUpRight,
    /// <summary>
    /// Accent above.
    /// </summary>
    ArticAccentAbove,
    /// <summary>
    /// Accent below.
    /// </summary>
    ArticAccentBelow,
    /// <summary>
    /// Accent-staccato above.
    /// </summary>
    ArticAccentStaccatoAbove,
    /// <summary>
    /// Accent-staccato below.
    /// </summary>
    ArticAccentStaccatoBelow,
    /// <summary>
    /// Laissez vibrer (l.v.) above.
    /// </summary>
    ArticLaissezVibrerAbove,
    /// <summary>
    /// Laissez vibrer (l.v.) below.
    /// </summary>
    ArticLaissezVibrerBelow,
    /// <summary>
    /// Marcato above.
    /// </summary>
    ArticMarcatoAbove,
    /// <summary>
    /// Marcato below.
    /// </summary>
    ArticMarcatoBelow,
    /// <summary>
    /// Marcato-staccato above.
    /// </summary>
    ArticMarcatoStaccatoAbove,
    /// <summary>
    /// Marcato-staccato below.
    /// </summary>
    ArticMarcatoStaccatoBelow,
    /// <summary>
    /// Marcato-tenuto above.
    /// </summary>
    ArticMarcatoTenutoAbove,
    /// <summary>
    /// Marcato-tenuto below.
    /// </summary>
    ArticMarcatoTenutoBelow,
    /// <summary>
    /// Soft accent above.
    /// </summary>
    ArticSoftAccentAbove,
    /// <summary>
    /// Soft accent below.
    /// </summary>
    ArticSoftAccentBelow,
    /// <summary>
    /// Soft accent-staccato above.
    /// </summary>
    ArticSoftAccentStaccatoAbove,
    /// <summary>
    /// Soft accent-staccato below.
    /// </summary>
    ArticSoftAccentStaccatoBelow,
    /// <summary>
    /// Soft accent-tenuto above.
    /// </summary>
    ArticSoftAccentTenutoAbove,
    /// <summary>
    /// Soft accent-tenuto below.
    /// </summary>
    ArticSoftAccentTenutoBelow,
    /// <summary>
    /// Soft accent-tenuto-staccato above.
    /// </summary>
    ArticSoftAccentTenutoStaccatoAbove,
    /// <summary>
    /// Soft accent-tenuto-staccato below.
    /// </summary>
    ArticSoftAccentTenutoStaccatoBelow,
    /// <summary>
    /// Staccatissimo above.
    /// </summary>
    ArticStaccatissimoAbove,
    /// <summary>
    /// Staccatissimo below.
    /// </summary>
    ArticStaccatissimoBelow,
    /// <summary>
    /// Staccatissimo stroke above.
    /// </summary>
    ArticStaccatissimoStrokeAbove,
    /// <summary>
    /// Staccatissimo stroke below.
    /// </summary>
    ArticStaccatissimoStrokeBelow,
    /// <summary>
    /// Staccatissimo wedge above.
    /// </summary>
    ArticStaccatissimoWedgeAbove,
    /// <summary>
    /// Staccatissimo wedge below.
    /// </summary>
    ArticStaccatissimoWedgeBelow,
    /// <summary>
    /// Staccato above.
    /// </summary>
    ArticStaccatoAbove,
    /// <summary>
    /// Staccato below.
    /// </summary>
    ArticStaccatoBelow,
    /// <summary>
    /// Stress above.
    /// </summary>
    ArticStressAbove,
    /// <summary>
    /// Stress below.
    /// </summary>
    ArticStressBelow,
    /// <summary>
    /// Tenuto above.
    /// </summary>
    ArticTenutoAbove,
    /// <summary>
    /// Tenuto-accent above.
    /// </summary>
    ArticTenutoAccentAbove,
    /// <summary>
    /// Tenuto-accent below.
    /// </summary>
    ArticTenutoAccentBelow,
    /// <summary>
    /// Tenuto below.
    /// </summary>
    ArticTenutoBelow,
    /// <summary>
    /// Louré (tenuto-staccato) above.
    /// </summary>
    ArticTenutoStaccatoAbove,
    /// <summary>
    /// Louré (tenuto-staccato) below.
    /// </summary>
    ArticTenutoStaccatoBelow,
    /// <summary>
    /// Unstress above.
    /// </summary>
    ArticUnstressAbove,
    /// <summary>
    /// Unstress below.
    /// </summary>
    ArticUnstressBelow,
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    AugmentationDot,
    /// <summary>
    /// Dashed barline.
    /// </summary>
    BarlineDashed,
    /// <summary>
    /// Dotted barline.
    /// </summary>
    BarlineDotted,
    /// <summary>
    /// Double barline.
    /// </summary>
    BarlineDouble,
    /// <summary>
    /// Final barline.
    /// </summary>
    BarlineFinal,
    /// <summary>
    /// Heavy barline.
    /// </summary>
    BarlineHeavy,
    /// <summary>
    /// Heavy double barline.
    /// </summary>
    BarlineHeavyHeavy,
    /// <summary>
    /// Reverse final barline.
    /// </summary>
    BarlineReverseFinal,
    /// <summary>
    /// Short barline.
    /// </summary>
    BarlineShort,
    /// <summary>
    /// Single barline.
    /// </summary>
    BarlineSingle,
    /// <summary>
    /// Tick barline.
    /// </summary>
    BarlineTick,
    /// <summary>
    /// Accel./rit. beam 1 (widest).
    /// </summary>
    BeamAccelRit1,
    /// <summary>
    /// Accel./rit. beam 10.
    /// </summary>
    BeamAccelRit10,
    /// <summary>
    /// Accel./rit. beam 11.
    /// </summary>
    BeamAccelRit11,
    /// <summary>
    /// Accel./rit. beam 12.
    /// </summary>
    BeamAccelRit12,
    /// <summary>
    /// Accel./rit. beam 13.
    /// </summary>
    BeamAccelRit13,
    /// <summary>
    /// Accel./rit. beam 14.
    /// </summary>
    BeamAccelRit14,
    /// <summary>
    /// Accel./rit. beam 15 (narrowest).
    /// </summary>
    BeamAccelRit15,
    /// <summary>
    /// Accel./rit. beam 2.
    /// </summary>
    BeamAccelRit2,
    /// <summary>
    /// Accel./rit. beam 3.
    /// </summary>
    BeamAccelRit3,
    /// <summary>
    /// Accel./rit. beam 4.
    /// </summary>
    BeamAccelRit4,
    /// <summary>
    /// Accel./rit. beam 5.
    /// </summary>
    BeamAccelRit5,
    /// <summary>
    /// Accel./rit. beam 6.
    /// </summary>
    BeamAccelRit6,
    /// <summary>
    /// Accel./rit. beam 7.
    /// </summary>
    BeamAccelRit7,
    /// <summary>
    /// Accel./rit. beam 8.
    /// </summary>
    BeamAccelRit8,
    /// <summary>
    /// Accel./rit. beam 9.
    /// </summary>
    BeamAccelRit9,
    /// <summary>
    /// Accel./rit. beam terminating line.
    /// </summary>
    BeamAccelRitFinal,
    /// <summary>
    /// Brace.
    /// </summary>
    Brace,
    /// <summary>
    /// Bracket.
    /// </summary>
    Bracket,
    /// <summary>
    /// Bracket bottom.
    /// </summary>
    BracketBottom,
    /// <summary>
    /// Bracket top.
    /// </summary>
    BracketTop,
    /// <summary>
    /// Bend.
    /// </summary>
    BrassBend,
    /// <summary>
    /// Doit, long.
    /// </summary>
    BrassDoitLong,
    /// <summary>
    /// Doit, medium.
    /// </summary>
    BrassDoitMedium,
    /// <summary>
    /// Doit, short.
    /// </summary>
    BrassDoitShort,
    /// <summary>
    /// Lip fall, long.
    /// </summary>
    BrassFallLipLong,
    /// <summary>
    /// Lip fall, medium.
    /// </summary>
    BrassFallLipMedium,
    /// <summary>
    /// Lip fall, short.
    /// </summary>
    BrassFallLipShort,
    /// <summary>
    /// Rough fall, long.
    /// </summary>
    BrassFallRoughLong,
    /// <summary>
    /// Rough fall, medium.
    /// </summary>
    BrassFallRoughMedium,
    /// <summary>
    /// Rough fall, short.
    /// </summary>
    BrassFallRoughShort,
    /// <summary>
    /// Smooth fall, long.
    /// </summary>
    BrassFallSmoothLong,
    /// <summary>
    /// Smooth fall, medium.
    /// </summary>
    BrassFallSmoothMedium,
    /// <summary>
    /// Smooth fall, short.
    /// </summary>
    BrassFallSmoothShort,
    /// <summary>
    /// Flip.
    /// </summary>
    BrassFlip,
    /// <summary>
    /// Harmon mute, stem in.
    /// </summary>
    BrassHarmonMuteClosed,
    /// <summary>
    /// Harmon mute, stem extended, left.
    /// </summary>
    BrassHarmonMuteStemHalfLeft,
    /// <summary>
    /// Harmon mute, stem extended, right.
    /// </summary>
    BrassHarmonMuteStemHalfRight,
    /// <summary>
    /// Harmon mute, stem out.
    /// </summary>
    BrassHarmonMuteStemOpen,
    /// <summary>
    /// Jazz turn.
    /// </summary>
    BrassJazzTurn,
    /// <summary>
    /// Lift, long.
    /// </summary>
    BrassLiftLong,
    /// <summary>
    /// Lift, medium.
    /// </summary>
    BrassLiftMedium,
    /// <summary>
    /// Lift, short.
    /// </summary>
    BrassLiftShort,
    /// <summary>
    /// Smooth lift, long.
    /// </summary>
    BrassLiftSmoothLong,
    /// <summary>
    /// Smooth lift, medium.
    /// </summary>
    BrassLiftSmoothMedium,
    /// <summary>
    /// Smooth lift, short.
    /// </summary>
    BrassLiftSmoothShort,
    /// <summary>
    /// Muted (closed).
    /// </summary>
    BrassMuteClosed,
    /// <summary>
    /// Half-muted (half-closed).
    /// </summary>
    BrassMuteHalfClosed,
    /// <summary>
    /// Open.
    /// </summary>
    BrassMuteOpen,
    /// <summary>
    /// Plop.
    /// </summary>
    BrassPlop,
    /// <summary>
    /// Scoop.
    /// </summary>
    BrassScoop,
    /// <summary>
    /// Smear.
    /// </summary>
    BrassSmear,
    /// <summary>
    /// Valve trill.
    /// </summary>
    BrassValveTrill,
    /// <summary>
    /// Breath mark (comma).
    /// </summary>
    BreathMarkComma,
    /// <summary>
    /// Breath mark (Salzedo).
    /// </summary>
    BreathMarkSalzedo,
    /// <summary>
    /// Breath mark (tick-like).
    /// </summary>
    BreathMarkTick,
    /// <summary>
    /// Breath mark (upbow-like).
    /// </summary>
    BreathMarkUpbow,
    /// <summary>
    /// Bridge clef.
    /// </summary>
    BridgeClef,
    /// <summary>
    /// Buzz roll.
    /// </summary>
    BuzzRoll,
    /// <summary>
    /// C clef.
    /// </summary>
    CClef,
    /// <summary>
    /// C clef ottava bassa.
    /// </summary>
    CClef8vb,
    /// <summary>
    /// C clef, arrow down.
    /// </summary>
    CClefArrowDown,
    /// <summary>
    /// C clef, arrow up.
    /// </summary>
    CClefArrowUp,
    /// <summary>
    /// C clef change.
    /// </summary>
    CClefChange,
    /// <summary>
    /// Combining C clef.
    /// </summary>
    CClefCombining,
    /// <summary>
    /// Reversed C clef.
    /// </summary>
    CClefReversed,
    /// <summary>
    /// C clef (19th century).
    /// </summary>
    CClefSquare,
    /// <summary>
    /// Caesura.
    /// </summary>
    Caesura,
    /// <summary>
    /// Curved caesura.
    /// </summary>
    CaesuraCurved,
    /// <summary>
    /// Short caesura.
    /// </summary>
    CaesuraShort,
    /// <summary>
    /// Single stroke caesura.
    /// </summary>
    CaesuraSingleStroke,
    /// <summary>
    /// Thick caesura.
    /// </summary>
    CaesuraThick,
    /// <summary>
    /// Accentus above.
    /// </summary>
    ChantAccentusAbove,
    /// <summary>
    /// Accentus below.
    /// </summary>
    ChantAccentusBelow,
    /// <summary>
    /// Punctum auctum, ascending.
    /// </summary>
    ChantAuctumAsc,
    /// <summary>
    /// Punctum auctum, descending.
    /// </summary>
    ChantAuctumDesc,
    /// <summary>
    /// Augmentum (mora).
    /// </summary>
    ChantAugmentum,
    /// <summary>
    /// Caesura.
    /// </summary>
    ChantCaesura,
    /// <summary>
    /// Plainchant C clef.
    /// </summary>
    ChantCclef,
    /// <summary>
    /// Circulus above.
    /// </summary>
    ChantCirculusAbove,
    /// <summary>
    /// Circulus below.
    /// </summary>
    ChantCirculusBelow,
    /// <summary>
    /// Connecting line, ascending 2nd.
    /// </summary>
    ChantConnectingLineAsc2nd,
    /// <summary>
    /// Connecting line, ascending 3rd.
    /// </summary>
    ChantConnectingLineAsc3rd,
    /// <summary>
    /// Connecting line, ascending 4th.
    /// </summary>
    ChantConnectingLineAsc4th,
    /// <summary>
    /// Connecting line, ascending 5th.
    /// </summary>
    ChantConnectingLineAsc5th,
    /// <summary>
    /// Connecting line, ascending 6th.
    /// </summary>
    ChantConnectingLineAsc6th,
    /// <summary>
    /// Plainchant custos, stem down, high position.
    /// </summary>
    ChantCustosStemDownPosHigh,
    /// <summary>
    /// Plainchant custos, stem down, highest position.
    /// </summary>
    ChantCustosStemDownPosHighest,
    /// <summary>
    /// Plainchant custos, stem down, middle position.
    /// </summary>
    ChantCustosStemDownPosMiddle,
    /// <summary>
    /// Plainchant custos, stem up, low position.
    /// </summary>
    ChantCustosStemUpPosLow,
    /// <summary>
    /// Plainchant custos, stem up, lowest position.
    /// </summary>
    ChantCustosStemUpPosLowest,
    /// <summary>
    /// Plainchant custos, stem up, middle position.
    /// </summary>
    ChantCustosStemUpPosMiddle,
    /// <summary>
    /// Punctum deminutum, lower.
    /// </summary>
    ChantDeminutumLower,
    /// <summary>
    /// Punctum deminutum, upper.
    /// </summary>
    ChantDeminutumUpper,
    /// <summary>
    /// Divisio finalis.
    /// </summary>
    ChantDivisioFinalis,
    /// <summary>
    /// Divisio maior.
    /// </summary>
    ChantDivisioMaior,
    /// <summary>
    /// Divisio maxima.
    /// </summary>
    ChantDivisioMaxima,
    /// <summary>
    /// Divisio minima.
    /// </summary>
    ChantDivisioMinima,
    /// <summary>
    /// Entry line, ascending 2nd.
    /// </summary>
    ChantEntryLineAsc2nd,
    /// <summary>
    /// Entry line, ascending 3rd.
    /// </summary>
    ChantEntryLineAsc3rd,
    /// <summary>
    /// Entry line, ascending 4th.
    /// </summary>
    ChantEntryLineAsc4th,
    /// <summary>
    /// Entry line, ascending 5th.
    /// </summary>
    ChantEntryLineAsc5th,
    /// <summary>
    /// Entry line, ascending 6th.
    /// </summary>
    ChantEntryLineAsc6th,
    /// <summary>
    /// Episema.
    /// </summary>
    ChantEpisema,
    /// <summary>
    /// Plainchant F clef.
    /// </summary>
    ChantFclef,
    /// <summary>
    /// Ictus above.
    /// </summary>
    ChantIctusAbove,
    /// <summary>
    /// Ictus below.
    /// </summary>
    ChantIctusBelow,
    /// <summary>
    /// Ligated stroke, descending 2nd.
    /// </summary>
    ChantLigaturaDesc2nd,
    /// <summary>
    /// Ligated stroke, descending 3rd.
    /// </summary>
    ChantLigaturaDesc3rd,
    /// <summary>
    /// Ligated stroke, descending 4th.
    /// </summary>
    ChantLigaturaDesc4th,
    /// <summary>
    /// Ligated stroke, descending 5th.
    /// </summary>
    ChantLigaturaDesc5th,
    /// <summary>
    /// Oriscus ascending.
    /// </summary>
    ChantOriscusAscending,
    /// <summary>
    /// Oriscus descending.
    /// </summary>
    ChantOriscusDescending,
    /// <summary>
    /// Oriscus liquescens.
    /// </summary>
    ChantOriscusLiquescens,
    /// <summary>
    /// Podatus, lower.
    /// </summary>
    ChantPodatusLower,
    /// <summary>
    /// Podatus, upper.
    /// </summary>
    ChantPodatusUpper,
    /// <summary>
    /// Punctum.
    /// </summary>
    ChantPunctum,
    /// <summary>
    /// Punctum cavum.
    /// </summary>
    ChantPunctumCavum,
    /// <summary>
    /// Punctum deminutum.
    /// </summary>
    ChantPunctumDeminutum,
    /// <summary>
    /// Punctum inclinatum.
    /// </summary>
    ChantPunctumInclinatum,
    /// <summary>
    /// Punctum inclinatum auctum.
    /// </summary>
    ChantPunctumInclinatumAuctum,
    /// <summary>
    /// Punctum inclinatum deminutum.
    /// </summary>
    ChantPunctumInclinatumDeminutum,
    /// <summary>
    /// Punctum linea.
    /// </summary>
    ChantPunctumLinea,
    /// <summary>
    /// Punctum linea cavum.
    /// </summary>
    ChantPunctumLineaCavum,
    /// <summary>
    /// Punctum virga.
    /// </summary>
    ChantPunctumVirga,
    /// <summary>
    /// Punctum virga, reversed.
    /// </summary>
    ChantPunctumVirgaReversed,
    /// <summary>
    /// Quilisma.
    /// </summary>
    ChantQuilisma,
    /// <summary>
    /// Semicirculus above.
    /// </summary>
    ChantSemicirculusAbove,
    /// <summary>
    /// Semicirculus below.
    /// </summary>
    ChantSemicirculusBelow,
    /// <summary>
    /// Plainchant staff.
    /// </summary>
    ChantStaff,
    /// <summary>
    /// Plainchant staff (narrow).
    /// </summary>
    ChantStaffNarrow,
    /// <summary>
    /// Plainchant staff (wide).
    /// </summary>
    ChantStaffWide,
    /// <summary>
    /// Strophicus.
    /// </summary>
    ChantStrophicus,
    /// <summary>
    /// Strophicus auctus.
    /// </summary>
    ChantStrophicusAuctus,
    /// <summary>
    /// Strophicus liquescens, 2nd.
    /// </summary>
    ChantStrophicusLiquescens2nd,
    /// <summary>
    /// Strophicus liquescens, 3rd.
    /// </summary>
    ChantStrophicusLiquescens3rd,
    /// <summary>
    /// Strophicus liquescens, 4th.
    /// </summary>
    ChantStrophicusLiquescens4th,
    /// <summary>
    /// Strophicus liquescens, 5th.
    /// </summary>
    ChantStrophicusLiquescens5th,
    /// <summary>
    /// Virgula.
    /// </summary>
    ChantVirgula,
    /// <summary>
    /// 15 for clefs.
    /// </summary>
    Clef15,
    /// <summary>
    /// 8 for clefs.
    /// </summary>
    Clef8,
    /// <summary>
    /// Combining clef change.
    /// </summary>
    ClefChangeCombining,
    /// <summary>
    /// Coda.
    /// </summary>
    Coda,
    /// <summary>
    /// Square coda.
    /// </summary>
    CodaSquare,
    /// <summary>
    /// Beat 2, compound time.
    /// </summary>
    ConductorBeat2Compound,
    /// <summary>
    /// Beat 2, simple time.
    /// </summary>
    ConductorBeat2Simple,
    /// <summary>
    /// Beat 3, compound time.
    /// </summary>
    ConductorBeat3Compound,
    /// <summary>
    /// Beat 3, simple time.
    /// </summary>
    ConductorBeat3Simple,
    /// <summary>
    /// Beat 4, compound time.
    /// </summary>
    ConductorBeat4Compound,
    /// <summary>
    /// Beat 4, simple time.
    /// </summary>
    ConductorBeat4Simple,
    /// <summary>
    /// Left-hand beat or cue.
    /// </summary>
    ConductorLeftBeat,
    /// <summary>
    /// Right-hand beat or cue.
    /// </summary>
    ConductorRightBeat,
    /// <summary>
    /// Strong beat or cue.
    /// </summary>
    ConductorStrongBeat,
    /// <summary>
    /// Unconducted/free passages.
    /// </summary>
    ConductorUnconducted,
    /// <summary>
    /// Weak beat or cue.
    /// </summary>
    ConductorWeakBeat,
    /// <summary>
    /// Begin beam.
    /// </summary>
    ControlBeginBeam,
    /// <summary>
    /// Begin phrase.
    /// </summary>
    ControlBeginPhrase,
    /// <summary>
    /// Begin slur.
    /// </summary>
    ControlBeginSlur,
    /// <summary>
    /// Begin tie.
    /// </summary>
    ControlBeginTie,
    /// <summary>
    /// End beam.
    /// </summary>
    ControlEndBeam,
    /// <summary>
    /// End phrase.
    /// </summary>
    ControlEndPhrase,
    /// <summary>
    /// End slur.
    /// </summary>
    ControlEndSlur,
    /// <summary>
    /// End tie.
    /// </summary>
    ControlEndTie,
    /// <summary>
    /// Double flat.
    /// </summary>
    CsymAccidentalDoubleFlat,
    /// <summary>
    /// Double sharp.
    /// </summary>
    CsymAccidentalDoubleSharp,
    /// <summary>
    /// Flat.
    /// </summary>
    CsymAccidentalFlat,
    /// <summary>
    /// Natural.
    /// </summary>
    CsymAccidentalNatural,
    /// <summary>
    /// Sharp.
    /// </summary>
    CsymAccidentalSharp,
    /// <summary>
    /// Triple flat.
    /// </summary>
    CsymAccidentalTripleFlat,
    /// <summary>
    /// Triple sharp.
    /// </summary>
    CsymAccidentalTripleSharp,
    /// <summary>
    /// Slash for altered bass note.
    /// </summary>
    CsymAlteredBassSlash,
    /// <summary>
    /// Augmented.
    /// </summary>
    CsymAugmented,
    /// <summary>
    /// Double-height left bracket.
    /// </summary>
    CsymBracketLeftTall,
    /// <summary>
    /// Double-height right bracket.
    /// </summary>
    CsymBracketRightTall,
    /// <summary>
    /// Slash for chord symbols arranged diagonally.
    /// </summary>
    CsymDiagonalArrangementSlash,
    /// <summary>
    /// Diminished.
    /// </summary>
    CsymDiminished,
    /// <summary>
    /// Half-diminished.
    /// </summary>
    CsymHalfDiminished,
    /// <summary>
    /// Major seventh.
    /// </summary>
    CsymMajorSeventh,
    /// <summary>
    /// Minor.
    /// </summary>
    CsymMinor,
    /// <summary>
    /// Double-height left parenthesis.
    /// </summary>
    CsymParensLeftTall,
    /// <summary>
    /// Triple-height left parenthesis.
    /// </summary>
    CsymParensLeftVeryTall,
    /// <summary>
    /// Double-height right parenthesis.
    /// </summary>
    CsymParensRightTall,
    /// <summary>
    /// Triple-height right parenthesis.
    /// </summary>
    CsymParensRightVeryTall,
    /// <summary>
    /// Curlew (Britten).
    /// </summary>
    CurlewSign,
    /// <summary>
    /// Da capo.
    /// </summary>
    DaCapo,
    /// <summary>
    /// Dal segno.
    /// </summary>
    DalSegno,
    /// <summary>
    /// Daseian excellentes 1.
    /// </summary>
    DaseianExcellentes1,
    /// <summary>
    /// Daseian excellentes 2.
    /// </summary>
    DaseianExcellentes2,
    /// <summary>
    /// Daseian excellentes 3.
    /// </summary>
    DaseianExcellentes3,
    /// <summary>
    /// Daseian excellentes 4.
    /// </summary>
    DaseianExcellentes4,
    /// <summary>
    /// Daseian finales 1.
    /// </summary>
    DaseianFinales1,
    /// <summary>
    /// Daseian finales 2.
    /// </summary>
    DaseianFinales2,
    /// <summary>
    /// Daseian finales 3.
    /// </summary>
    DaseianFinales3,
    /// <summary>
    /// Daseian finales 4.
    /// </summary>
    DaseianFinales4,
    /// <summary>
    /// Daseian graves 1.
    /// </summary>
    DaseianGraves1,
    /// <summary>
    /// Daseian graves 2.
    /// </summary>
    DaseianGraves2,
    /// <summary>
    /// Daseian graves 3.
    /// </summary>
    DaseianGraves3,
    /// <summary>
    /// Daseian graves 4.
    /// </summary>
    DaseianGraves4,
    /// <summary>
    /// Daseian residua 1.
    /// </summary>
    DaseianResidua1,
    /// <summary>
    /// Daseian residua 2.
    /// </summary>
    DaseianResidua2,
    /// <summary>
    /// Daseian superiores 1.
    /// </summary>
    DaseianSuperiores1,
    /// <summary>
    /// Daseian superiores 2.
    /// </summary>
    DaseianSuperiores2,
    /// <summary>
    /// Daseian superiores 3.
    /// </summary>
    DaseianSuperiores3,
    /// <summary>
    /// Daseian superiores 4.
    /// </summary>
    DaseianSuperiores4,
    /// <summary>
    /// Double lateral roll (Stevens).
    /// </summary>
    DoubleLateralRollStevens,
    /// <summary>
    /// Double-tongue above.
    /// </summary>
    DoubleTongueAbove,
    /// <summary>
    /// Double-tongue below.
    /// </summary>
    DoubleTongueBelow,
    /// <summary>
    /// Colon separator for combined dynamics.
    /// </summary>
    DynamicCombinedSeparatorColon,
    /// <summary>
    /// Hyphen separator for combined dynamics.
    /// </summary>
    DynamicCombinedSeparatorHyphen,
    /// <summary>
    /// Slash separator for combined dynamics.
    /// </summary>
    DynamicCombinedSeparatorSlash,
    /// <summary>
    /// Space separator for combined dynamics.
    /// </summary>
    DynamicCombinedSeparatorSpace,
    /// <summary>
    /// Crescendo.
    /// </summary>
    DynamicCrescendoHairpin,
    /// <summary>
    /// Diminuendo.
    /// </summary>
    DynamicDiminuendoHairpin,
    /// <summary>
    /// ff.
    /// </summary>
    DynamicFF,
    /// <summary>
    /// fff.
    /// </summary>
    DynamicFFF,
    /// <summary>
    /// ffff.
    /// </summary>
    DynamicFFFF,
    /// <summary>
    /// fffff.
    /// </summary>
    DynamicFFFFF,
    /// <summary>
    /// ffffff.
    /// </summary>
    DynamicFFFFFF,
    /// <summary>
    /// Forte.
    /// </summary>
    DynamicForte,
    /// <summary>
    /// Forte-piano.
    /// </summary>
    DynamicFortePiano,
    /// <summary>
    /// Forzando.
    /// </summary>
    DynamicForzando,
    /// <summary>
    /// Left bracket (for hairpins).
    /// </summary>
    DynamicHairpinBracketLeft,
    /// <summary>
    /// Right bracket (for hairpins).
    /// </summary>
    DynamicHairpinBracketRight,
    /// <summary>
    /// Left parenthesis (for hairpins).
    /// </summary>
    DynamicHairpinParenthesisLeft,
    /// <summary>
    /// Right parenthesis (for hairpins).
    /// </summary>
    DynamicHairpinParenthesisRight,
    /// <summary>
    /// mf.
    /// </summary>
    DynamicMF,
    /// <summary>
    /// mp.
    /// </summary>
    DynamicMP,
    /// <summary>
    /// Messa di voce.
    /// </summary>
    DynamicMessaDiVoce,
    /// <summary>
    /// Mezzo.
    /// </summary>
    DynamicMezzo,
    /// <summary>
    /// Niente.
    /// </summary>
    DynamicNiente,
    /// <summary>
    /// Niente (for hairpins).
    /// </summary>
    DynamicNienteForHairpin,
    /// <summary>
    /// pf.
    /// </summary>
    DynamicPF,
    /// <summary>
    /// pp.
    /// </summary>
    DynamicPP,
    /// <summary>
    /// ppp.
    /// </summary>
    DynamicPPP,
    /// <summary>
    /// pppp.
    /// </summary>
    DynamicPPPP,
    /// <summary>
    /// ppppp.
    /// </summary>
    DynamicPPPPP,
    /// <summary>
    /// pppppp.
    /// </summary>
    DynamicPPPPPP,
    /// <summary>
    /// Piano.
    /// </summary>
    DynamicPiano,
    /// <summary>
    /// Rinforzando.
    /// </summary>
    DynamicRinforzando,
    /// <summary>
    /// Rinforzando 1.
    /// </summary>
    DynamicRinforzando1,
    /// <summary>
    /// Rinforzando 2.
    /// </summary>
    DynamicRinforzando2,
    /// <summary>
    /// Sforzando.
    /// </summary>
    DynamicSforzando,
    /// <summary>
    /// Sforzando 1.
    /// </summary>
    DynamicSforzando1,
    /// <summary>
    /// Sforzando-pianissimo.
    /// </summary>
    DynamicSforzandoPianissimo,
    /// <summary>
    /// Sforzando-piano.
    /// </summary>
    DynamicSforzandoPiano,
    /// <summary>
    /// Sforzato.
    /// </summary>
    DynamicSforzato,
    /// <summary>
    /// Sforzatissimo.
    /// </summary>
    DynamicSforzatoFF,
    /// <summary>
    /// Sforzato-piano.
    /// </summary>
    DynamicSforzatoPiano,
    /// <summary>
    /// Z.
    /// </summary>
    DynamicZ,
    /// <summary>
    /// Eight channels (7.1 surround).
    /// </summary>
    ElecAudioChannelsEight,
    /// <summary>
    /// Five channels.
    /// </summary>
    ElecAudioChannelsFive,
    /// <summary>
    /// Four channels.
    /// </summary>
    ElecAudioChannelsFour,
    /// <summary>
    /// One channel (mono).
    /// </summary>
    ElecAudioChannelsOne,
    /// <summary>
    /// Seven channels.
    /// </summary>
    ElecAudioChannelsSeven,
    /// <summary>
    /// Six channels (5.1 surround).
    /// </summary>
    ElecAudioChannelsSix,
    /// <summary>
    /// Three channels (frontal).
    /// </summary>
    ElecAudioChannelsThreeFrontal,
    /// <summary>
    /// Three channels (surround).
    /// </summary>
    ElecAudioChannelsThreeSurround,
    /// <summary>
    /// Two channels (stereo).
    /// </summary>
    ElecAudioChannelsTwo,
    /// <summary>
    /// Audio in.
    /// </summary>
    ElecAudioIn,
    /// <summary>
    /// Mono audio setup.
    /// </summary>
    ElecAudioMono,
    /// <summary>
    /// Audio out.
    /// </summary>
    ElecAudioOut,
    /// <summary>
    /// Stereo audio setup.
    /// </summary>
    ElecAudioStereo,
    /// <summary>
    /// Camera.
    /// </summary>
    ElecCamera,
    /// <summary>
    /// Data in.
    /// </summary>
    ElecDataIn,
    /// <summary>
    /// Data out.
    /// </summary>
    ElecDataOut,
    /// <summary>
    /// Disc.
    /// </summary>
    ElecDisc,
    /// <summary>
    /// Download.
    /// </summary>
    ElecDownload,
    /// <summary>
    /// Eject.
    /// </summary>
    ElecEject,
    /// <summary>
    /// Fast-forward.
    /// </summary>
    ElecFastForward,
    /// <summary>
    /// Headphones.
    /// </summary>
    ElecHeadphones,
    /// <summary>
    /// Headset.
    /// </summary>
    ElecHeadset,
    /// <summary>
    /// Line in.
    /// </summary>
    ElecLineIn,
    /// <summary>
    /// Line out.
    /// </summary>
    ElecLineOut,
    /// <summary>
    /// Loop.
    /// </summary>
    ElecLoop,
    /// <summary>
    /// Loudspeaker.
    /// </summary>
    ElecLoudspeaker,
    /// <summary>
    /// MIDI controller 0%.
    /// </summary>
    ElecMIDIController0,
    /// <summary>
    /// MIDI controller 100%.
    /// </summary>
    ElecMIDIController100,
    /// <summary>
    /// MIDI controller 20%.
    /// </summary>
    ElecMIDIController20,
    /// <summary>
    /// MIDI controller 40%.
    /// </summary>
    ElecMIDIController40,
    /// <summary>
    /// MIDI controller 60%.
    /// </summary>
    ElecMIDIController60,
    /// <summary>
    /// MIDI controller 80%.
    /// </summary>
    ElecMIDIController80,
    /// <summary>
    /// MIDI in.
    /// </summary>
    ElecMIDIIn,
    /// <summary>
    /// MIDI out.
    /// </summary>
    ElecMIDIOut,
    /// <summary>
    /// Microphone.
    /// </summary>
    ElecMicrophone,
    /// <summary>
    /// Mute microphone.
    /// </summary>
    ElecMicrophoneMute,
    /// <summary>
    /// Unmute microphone.
    /// </summary>
    ElecMicrophoneUnmute,
    /// <summary>
    /// Mixing console.
    /// </summary>
    ElecMixingConsole,
    /// <summary>
    /// Monitor.
    /// </summary>
    ElecMonitor,
    /// <summary>
    /// Mute.
    /// </summary>
    ElecMute,
    /// <summary>
    /// Pause.
    /// </summary>
    ElecPause,
    /// <summary>
    /// Play.
    /// </summary>
    ElecPlay,
    /// <summary>
    /// Power on/off.
    /// </summary>
    ElecPowerOnOff,
    /// <summary>
    /// Projector.
    /// </summary>
    ElecProjector,
    /// <summary>
    /// Replay.
    /// </summary>
    ElecReplay,
    /// <summary>
    /// Rewind.
    /// </summary>
    ElecRewind,
    /// <summary>
    /// Shuffle.
    /// </summary>
    ElecShuffle,
    /// <summary>
    /// Skip backwards.
    /// </summary>
    ElecSkipBackwards,
    /// <summary>
    /// Skip forwards.
    /// </summary>
    ElecSkipForwards,
    /// <summary>
    /// Stop.
    /// </summary>
    ElecStop,
    /// <summary>
    /// Tape.
    /// </summary>
    ElecTape,
    /// <summary>
    /// USB connection.
    /// </summary>
    ElecUSB,
    /// <summary>
    /// Unmute.
    /// </summary>
    ElecUnmute,
    /// <summary>
    /// Upload.
    /// </summary>
    ElecUpload,
    /// <summary>
    /// Video camera.
    /// </summary>
    ElecVideoCamera,
    /// <summary>
    /// Video in.
    /// </summary>
    ElecVideoIn,
    /// <summary>
    /// Video out.
    /// </summary>
    ElecVideoOut,
    /// <summary>
    /// Combining volume fader.
    /// </summary>
    ElecVolumeFader,
    /// <summary>
    /// Combining volume fader thumb.
    /// </summary>
    ElecVolumeFaderThumb,
    /// <summary>
    /// Volume level 0%.
    /// </summary>
    ElecVolumeLevel0,
    /// <summary>
    /// Volume level 100%.
    /// </summary>
    ElecVolumeLevel100,
    /// <summary>
    /// Volume level 20%.
    /// </summary>
    ElecVolumeLevel20,
    /// <summary>
    /// Volume level 40%.
    /// </summary>
    ElecVolumeLevel40,
    /// <summary>
    /// Volume level 60%.
    /// </summary>
    ElecVolumeLevel60,
    /// <summary>
    /// Volume level 80%.
    /// </summary>
    ElecVolumeLevel80,
    /// <summary>
    /// F clef.
    /// </summary>
    FClef,
    /// <summary>
    /// F clef quindicesima alta.
    /// </summary>
    FClef15ma,
    /// <summary>
    /// F clef quindicesima bassa.
    /// </summary>
    FClef15mb,
    /// <summary>
    /// F clef ottava alta.
    /// </summary>
    FClef8va,
    /// <summary>
    /// F clef ottava bassa.
    /// </summary>
    FClef8vb,
    /// <summary>
    /// F clef, arrow down.
    /// </summary>
    FClefArrowDown,
    /// <summary>
    /// F clef, arrow up.
    /// </summary>
    FClefArrowUp,
    /// <summary>
    /// F clef change.
    /// </summary>
    FClefChange,
    /// <summary>
    /// Reversed F clef.
    /// </summary>
    FClefReversed,
    /// <summary>
    /// Turned F clef.
    /// </summary>
    FClefTurned,
    /// <summary>
    /// Fermata above.
    /// </summary>
    FermataAbove,
    /// <summary>
    /// Fermata below.
    /// </summary>
    FermataBelow,
    /// <summary>
    /// Long fermata above.
    /// </summary>
    FermataLongAbove,
    /// <summary>
    /// Long fermata below.
    /// </summary>
    FermataLongBelow,
    /// <summary>
    /// Long fermata (Henze) above.
    /// </summary>
    FermataLongHenzeAbove,
    /// <summary>
    /// Long fermata (Henze) below.
    /// </summary>
    FermataLongHenzeBelow,
    /// <summary>
    /// Short fermata above.
    /// </summary>
    FermataShortAbove,
    /// <summary>
    /// Short fermata below.
    /// </summary>
    FermataShortBelow,
    /// <summary>
    /// Short fermata (Henze) above.
    /// </summary>
    FermataShortHenzeAbove,
    /// <summary>
    /// Short fermata (Henze) below.
    /// </summary>
    FermataShortHenzeBelow,
    /// <summary>
    /// Very long fermata above.
    /// </summary>
    FermataVeryLongAbove,
    /// <summary>
    /// Very long fermata below.
    /// </summary>
    FermataVeryLongBelow,
    /// <summary>
    /// Very short fermata above.
    /// </summary>
    FermataVeryShortAbove,
    /// <summary>
    /// Very short fermata below.
    /// </summary>
    FermataVeryShortBelow,
    /// <summary>
    /// Figured bass 0.
    /// </summary>
    Figbass0,
    /// <summary>
    /// Figured bass 1.
    /// </summary>
    Figbass1,
    /// <summary>
    /// Figured bass 2.
    /// </summary>
    Figbass2,
    /// <summary>
    /// Figured bass 2 raised by half-step.
    /// </summary>
    Figbass2Raised,
    /// <summary>
    /// Figured bass 3.
    /// </summary>
    Figbass3,
    /// <summary>
    /// Figured bass 4.
    /// </summary>
    Figbass4,
    /// <summary>
    /// Figured bass 4 raised by half-step.
    /// </summary>
    Figbass4Raised,
    /// <summary>
    /// Figured bass 5.
    /// </summary>
    Figbass5,
    /// <summary>
    /// Figured bass 5 raised by half-step.
    /// </summary>
    Figbass5Raised1,
    /// <summary>
    /// Figured bass 5 raised by half-step 2.
    /// </summary>
    Figbass5Raised2,
    /// <summary>
    /// Figured bass diminished 5.
    /// </summary>
    Figbass5Raised3,
    /// <summary>
    /// Figured bass 6.
    /// </summary>
    Figbass6,
    /// <summary>
    /// Figured bass 6 raised by half-step.
    /// </summary>
    Figbass6Raised,
    /// <summary>
    /// Figured bass 6 raised by half-step 2.
    /// </summary>
    Figbass6Raised2,
    /// <summary>
    /// Figured bass 7.
    /// </summary>
    Figbass7,
    /// <summary>
    /// Figured bass 7 diminished.
    /// </summary>
    Figbass7Diminished,
    /// <summary>
    /// Figured bass 7 raised by half-step.
    /// </summary>
    Figbass7Raised1,
    /// <summary>
    /// Figured bass 7 lowered by a half-step.
    /// </summary>
    Figbass7Raised2,
    /// <summary>
    /// Figured bass 8.
    /// </summary>
    Figbass8,
    /// <summary>
    /// Figured bass 9.
    /// </summary>
    Figbass9,
    /// <summary>
    /// Figured bass 9 raised by half-step.
    /// </summary>
    Figbass9Raised,
    /// <summary>
    /// Figured bass [.
    /// </summary>
    FigbassBracketLeft,
    /// <summary>
    /// Figured bass ].
    /// </summary>
    FigbassBracketRight,
    /// <summary>
    /// Combining lower.
    /// </summary>
    FigbassCombiningLowering,
    /// <summary>
    /// Combining raise.
    /// </summary>
    FigbassCombiningRaising,
    /// <summary>
    /// Figured bass double flat.
    /// </summary>
    FigbassDoubleFlat,
    /// <summary>
    /// Figured bass double sharp.
    /// </summary>
    FigbassDoubleSharp,
    /// <summary>
    /// Figured bass flat.
    /// </summary>
    FigbassFlat,
    /// <summary>
    /// Figured bass natural.
    /// </summary>
    FigbassNatural,
    /// <summary>
    /// Figured bass (.
    /// </summary>
    FigbassParensLeft,
    /// <summary>
    /// Figured bass ).
    /// </summary>
    FigbassParensRight,
    /// <summary>
    /// Figured bass +.
    /// </summary>
    FigbassPlus,
    /// <summary>
    /// Figured bass sharp.
    /// </summary>
    FigbassSharp,
    /// <summary>
    /// Figured bass triple flat.
    /// </summary>
    FigbassTripleFlat,
    /// <summary>
    /// Figured bass triple sharp.
    /// </summary>
    FigbassTripleSharp,
    /// <summary>
    /// Fingering 0 (open string).
    /// </summary>
    Fingering0,
    /// <summary>
    /// Fingering 0 italic (open string).
    /// </summary>
    Fingering0Italic,
    /// <summary>
    /// Fingering 1 (thumb).
    /// </summary>
    Fingering1,
    /// <summary>
    /// Fingering 1 italic (thumb).
    /// </summary>
    Fingering1Italic,
    /// <summary>
    /// Fingering 2 (index finger).
    /// </summary>
    Fingering2,
    /// <summary>
    /// Fingering 2 italic (index finger).
    /// </summary>
    Fingering2Italic,
    /// <summary>
    /// Fingering 3 (middle finger).
    /// </summary>
    Fingering3,
    /// <summary>
    /// Fingering 3 italic (middle finger).
    /// </summary>
    Fingering3Italic,
    /// <summary>
    /// Fingering 4 (ring finger).
    /// </summary>
    Fingering4,
    /// <summary>
    /// Fingering 4 italic (ring finger).
    /// </summary>
    Fingering4Italic,
    /// <summary>
    /// Fingering 5 (little finger).
    /// </summary>
    Fingering5,
    /// <summary>
    /// Fingering 5 italic (little finger).
    /// </summary>
    Fingering5Italic,
    /// <summary>
    /// Fingering 6.
    /// </summary>
    Fingering6,
    /// <summary>
    /// Fingering 6 italic.
    /// </summary>
    Fingering6Italic,
    /// <summary>
    /// Fingering 7.
    /// </summary>
    Fingering7,
    /// <summary>
    /// Fingering 7 italic.
    /// </summary>
    Fingering7Italic,
    /// <summary>
    /// Fingering 8.
    /// </summary>
    Fingering8,
    /// <summary>
    /// Fingering 8 italic.
    /// </summary>
    Fingering8Italic,
    /// <summary>
    /// Fingering 9.
    /// </summary>
    Fingering9,
    /// <summary>
    /// Fingering 9 italic.
    /// </summary>
    Fingering9Italic,
    /// <summary>
    /// Fingering a (anular; right-hand ring finger for guitar).
    /// </summary>
    FingeringALower,
    /// <summary>
    /// Fingering c (right-hand little finger for guitar).
    /// </summary>
    FingeringCLower,
    /// <summary>
    /// Fingering e (right-hand little finger for guitar).
    /// </summary>
    FingeringELower,
    /// <summary>
    /// Fingering i (indicio; right-hand index finger for guitar).
    /// </summary>
    FingeringILower,
    /// <summary>
    /// Fingering left bracket.
    /// </summary>
    FingeringLeftBracket,
    /// <summary>
    /// Fingering left bracket italic.
    /// </summary>
    FingeringLeftBracketItalic,
    /// <summary>
    /// Fingering left parenthesis.
    /// </summary>
    FingeringLeftParenthesis,
    /// <summary>
    /// Fingering left parenthesis italic.
    /// </summary>
    FingeringLeftParenthesisItalic,
    /// <summary>
    /// Fingering m (medio; right-hand middle finger for guitar).
    /// </summary>
    FingeringMLower,
    /// <summary>
    /// Multiple notes played by thumb or single finger.
    /// </summary>
    FingeringMultipleNotes,
    /// <summary>
    /// Fingering o (right-hand little finger for guitar).
    /// </summary>
    FingeringOLower,
    /// <summary>
    /// Fingering p (pulgar; right-hand thumb for guitar).
    /// </summary>
    FingeringPLower,
    /// <summary>
    /// Fingering q (right-hand little finger for guitar).
    /// </summary>
    FingeringQLower,
    /// <summary>
    /// Fingering right bracket.
    /// </summary>
    FingeringRightBracket,
    /// <summary>
    /// Fingering right bracket italic.
    /// </summary>
    FingeringRightBracketItalic,
    /// <summary>
    /// Fingering right parenthesis.
    /// </summary>
    FingeringRightParenthesis,
    /// <summary>
    /// Fingering right parenthesis italic.
    /// </summary>
    FingeringRightParenthesisItalic,
    /// <summary>
    /// Fingering s (right-hand little finger for guitar).
    /// </summary>
    FingeringSLower,
    /// <summary>
    /// Fingering middle dot separator.
    /// </summary>
    FingeringSeparatorMiddleDot,
    /// <summary>
    /// Fingering white middle dot separator.
    /// </summary>
    FingeringSeparatorMiddleDotWhite,
    /// <summary>
    /// Fingering forward slash separator.
    /// </summary>
    FingeringSeparatorSlash,
    /// <summary>
    /// Finger substitution above.
    /// </summary>
    FingeringSubstitutionAbove,
    /// <summary>
    /// Finger substitution below.
    /// </summary>
    FingeringSubstitutionBelow,
    /// <summary>
    /// Finger substitution dash.
    /// </summary>
    FingeringSubstitutionDash,
    /// <summary>
    /// Fingering t (right-hand thumb for guitar).
    /// </summary>
    FingeringTLower,
    /// <summary>
    /// Fingering T (left-hand thumb for guitar).
    /// </summary>
    FingeringTUpper,
    /// <summary>
    /// Fingering x (right-hand little finger for guitar).
    /// </summary>
    FingeringXLower,
    /// <summary>
    /// Combining flag 8 (1024th) below.
    /// </summary>
    Flag1024thDown,
    /// <summary>
    /// Combining flag 8 (1024th) above.
    /// </summary>
    Flag1024thUp,
    /// <summary>
    /// Combining flag 5 (128th) below.
    /// </summary>
    Flag128thDown,
    /// <summary>
    /// Combining flag 5 (128th) above.
    /// </summary>
    Flag128thUp,
    /// <summary>
    /// Combining flag 2 (16th) below.
    /// </summary>
    Flag16thDown,
    /// <summary>
    /// Combining flag 2 (16th) above.
    /// </summary>
    Flag16thUp,
    /// <summary>
    /// Combining flag 6 (256th) below.
    /// </summary>
    Flag256thDown,
    /// <summary>
    /// Combining flag 6 (256th) above.
    /// </summary>
    Flag256thUp,
    /// <summary>
    /// Combining flag 3 (32nd) below.
    /// </summary>
    Flag32ndDown,
    /// <summary>
    /// Combining flag 3 (32nd) above.
    /// </summary>
    Flag32ndUp,
    /// <summary>
    /// Combining flag 7 (512th) below.
    /// </summary>
    Flag512thDown,
    /// <summary>
    /// Combining flag 7 (512th) above.
    /// </summary>
    Flag512thUp,
    /// <summary>
    /// Combining flag 4 (64th) below.
    /// </summary>
    Flag64thDown,
    /// <summary>
    /// Combining flag 4 (64th) above.
    /// </summary>
    Flag64thUp,
    /// <summary>
    /// Combining flag 1 (8th) below.
    /// </summary>
    Flag8thDown,
    /// <summary>
    /// Combining flag 1 (8th) above.
    /// </summary>
    Flag8thUp,
    /// <summary>
    /// Internal combining flag below.
    /// </summary>
    FlagInternalDown,
    /// <summary>
    /// Internal combining flag above.
    /// </summary>
    FlagInternalUp,
    /// <summary>
    /// 3-string fretboard.
    /// </summary>
    Fretboard3String,
    /// <summary>
    /// 3-string fretboard at nut.
    /// </summary>
    Fretboard3StringNut,
    /// <summary>
    /// 4-string fretboard.
    /// </summary>
    Fretboard4String,
    /// <summary>
    /// 4-string fretboard at nut.
    /// </summary>
    Fretboard4StringNut,
    /// <summary>
    /// 5-string fretboard.
    /// </summary>
    Fretboard5String,
    /// <summary>
    /// 5-string fretboard at nut.
    /// </summary>
    Fretboard5StringNut,
    /// <summary>
    /// 6-string fretboard.
    /// </summary>
    Fretboard6String,
    /// <summary>
    /// 6-string fretboard at nut.
    /// </summary>
    Fretboard6StringNut,
    /// <summary>
    /// Fingered fret (filled circle).
    /// </summary>
    FretboardFilledCircle,
    /// <summary>
    /// Open string (O).
    /// </summary>
    FretboardO,
    /// <summary>
    /// String not played (X).
    /// </summary>
    FretboardX,
    /// <summary>
    /// Function theory angle bracket left.
    /// </summary>
    FunctionAngleLeft,
    /// <summary>
    /// Function theory angle bracket right.
    /// </summary>
    FunctionAngleRight,
    /// <summary>
    /// Function theory bracket left.
    /// </summary>
    FunctionBracketLeft,
    /// <summary>
    /// Function theory bracket right.
    /// </summary>
    FunctionBracketRight,
    /// <summary>
    /// Function theory dominant of dominant.
    /// </summary>
    FunctionDD,
    /// <summary>
    /// Function theory minor dominant.
    /// </summary>
    FunctionDLower,
    /// <summary>
    /// Function theory major dominant.
    /// </summary>
    FunctionDUpper,
    /// <summary>
    /// Function theory 8.
    /// </summary>
    FunctionEight,
    /// <summary>
    /// Function theory F.
    /// </summary>
    FunctionFUpper,
    /// <summary>
    /// Function theory 5.
    /// </summary>
    FunctionFive,
    /// <summary>
    /// Function theory 4.
    /// </summary>
    FunctionFour,
    /// <summary>
    /// Function theory g.
    /// </summary>
    FunctionGLower,
    /// <summary>
    /// Function theory G.
    /// </summary>
    FunctionGUpper,
    /// <summary>
    /// Function theory greater than.
    /// </summary>
    FunctionGreaterThan,
    /// <summary>
    /// Function theory i.
    /// </summary>
    FunctionILower,
    /// <summary>
    /// Function theory I.
    /// </summary>
    FunctionIUpper,
    /// <summary>
    /// Function theory k.
    /// </summary>
    FunctionKLower,
    /// <summary>
    /// Function theory K.
    /// </summary>
    FunctionKUpper,
    /// <summary>
    /// Function theory l.
    /// </summary>
    FunctionLLower,
    /// <summary>
    /// Function theory L.
    /// </summary>
    FunctionLUpper,
    /// <summary>
    /// Function theory less than.
    /// </summary>
    FunctionLessThan,
    /// <summary>
    /// Function theory m.
    /// </summary>
    FunctionMLower,
    /// <summary>
    /// Function theory M.
    /// </summary>
    FunctionMUpper,
    /// <summary>
    /// Function theory minus.
    /// </summary>
    FunctionMinus,
    /// <summary>
    /// Function theory n.
    /// </summary>
    FunctionNLower,
    /// <summary>
    /// Function theory N.
    /// </summary>
    FunctionNUpper,
    /// <summary>
    /// Function theory superscript N.
    /// </summary>
    FunctionNUpperSuperscript,
    /// <summary>
    /// Function theory 9.
    /// </summary>
    FunctionNine,
    /// <summary>
    /// Function theory 1.
    /// </summary>
    FunctionOne,
    /// <summary>
    /// Function theory p.
    /// </summary>
    FunctionPLower,
    /// <summary>
    /// Function theory P.
    /// </summary>
    FunctionPUpper,
    /// <summary>
    /// Function theory parenthesis left.
    /// </summary>
    FunctionParensLeft,
    /// <summary>
    /// Function theory parenthesis right.
    /// </summary>
    FunctionParensRight,
    /// <summary>
    /// Function theory prefix plus.
    /// </summary>
    FunctionPlus,
    /// <summary>
    /// Function theory r.
    /// </summary>
    FunctionRLower,
    /// <summary>
    /// Function theory repetition 1.
    /// </summary>
    FunctionRepetition1,
    /// <summary>
    /// Function theory repetition 2.
    /// </summary>
    FunctionRepetition2,
    /// <summary>
    /// Function theory prefix ring.
    /// </summary>
    FunctionRing,
    /// <summary>
    /// Function theory minor subdominant.
    /// </summary>
    FunctionSLower,
    /// <summary>
    /// Function theory minor subdominant of subdominant.
    /// </summary>
    FunctionSSLower,
    /// <summary>
    /// Function theory major subdominant of subdominant.
    /// </summary>
    FunctionSSUpper,
    /// <summary>
    /// Function theory major subdominant.
    /// </summary>
    FunctionSUpper,
    /// <summary>
    /// Function theory 7.
    /// </summary>
    FunctionSeven,
    /// <summary>
    /// Function theory 6.
    /// </summary>
    FunctionSix,
    /// <summary>
    /// Function theory double dominant seventh.
    /// </summary>
    FunctionSlashedDD,
    /// <summary>
    /// Function theory minor tonic.
    /// </summary>
    FunctionTLower,
    /// <summary>
    /// Function theory tonic.
    /// </summary>
    FunctionTUpper,
    /// <summary>
    /// Function theory 3.
    /// </summary>
    FunctionThree,
    /// <summary>
    /// Function theory 2.
    /// </summary>
    FunctionTwo,
    /// <summary>
    /// Function theory v.
    /// </summary>
    FunctionVLower,
    /// <summary>
    /// Function theory V.
    /// </summary>
    FunctionVUpper,
    /// <summary>
    /// Function theory 0.
    /// </summary>
    FunctionZero,
    /// <summary>
    /// G clef.
    /// </summary>
    GClef,
    /// <summary>
    /// G clef quindicesima alta.
    /// </summary>
    GClef15ma,
    /// <summary>
    /// G clef quindicesima bassa.
    /// </summary>
    GClef15mb,
    /// <summary>
    /// G clef ottava alta.
    /// </summary>
    GClef8va,
    /// <summary>
    /// G clef ottava bassa.
    /// </summary>
    GClef8vb,
    /// <summary>
    /// G clef ottava bassa with C clef.
    /// </summary>
    GClef8vbCClef,
    /// <summary>
    /// G clef ottava bassa (old style).
    /// </summary>
    GClef8vbOld,
    /// <summary>
    /// G clef, optionally ottava bassa.
    /// </summary>
    GClef8vbParens,
    /// <summary>
    /// G clef, arrow down.
    /// </summary>
    GClefArrowDown,
    /// <summary>
    /// G clef, arrow up.
    /// </summary>
    GClefArrowUp,
    /// <summary>
    /// G clef change.
    /// </summary>
    GClefChange,
    /// <summary>
    /// Combining G clef, number above.
    /// </summary>
    GClefLigatedNumberAbove,
    /// <summary>
    /// Combining G clef, number below.
    /// </summary>
    GClefLigatedNumberBelow,
    /// <summary>
    /// Reversed G clef.
    /// </summary>
    GClefReversed,
    /// <summary>
    /// Turned G clef.
    /// </summary>
    GClefTurned,
    /// <summary>
    /// Glissando down.
    /// </summary>
    GlissandoDown,
    /// <summary>
    /// Glissando up.
    /// </summary>
    GlissandoUp,
    /// <summary>
    /// Slashed grace note stem down.
    /// </summary>
    GraceNoteAcciaccaturaStemDown,
    /// <summary>
    /// Slashed grace note stem up.
    /// </summary>
    GraceNoteAcciaccaturaStemUp,
    /// <summary>
    /// Grace note stem down.
    /// </summary>
    GraceNoteAppoggiaturaStemDown,
    /// <summary>
    /// Grace note stem up.
    /// </summary>
    GraceNoteAppoggiaturaStemUp,
    /// <summary>
    /// Slash for stem down grace note.
    /// </summary>
    GraceNoteSlashStemDown,
    /// <summary>
    /// Slash for stem up grace note.
    /// </summary>
    GraceNoteSlashStemUp,
    /// <summary>
    /// Full barré.
    /// </summary>
    GuitarBarreFull,
    /// <summary>
    /// Half barré.
    /// </summary>
    GuitarBarreHalf,
    /// <summary>
    /// Closed wah/volume pedal.
    /// </summary>
    GuitarClosePedal,
    /// <summary>
    /// Fade in.
    /// </summary>
    GuitarFadeIn,
    /// <summary>
    /// Fade out.
    /// </summary>
    GuitarFadeOut,
    /// <summary>
    /// Golpe (tapping the pick guard).
    /// </summary>
    GuitarGolpe,
    /// <summary>
    /// Half-open wah/volume pedal.
    /// </summary>
    GuitarHalfOpenPedal,
    /// <summary>
    /// Left-hand tapping.
    /// </summary>
    GuitarLeftHandTapping,
    /// <summary>
    /// Open wah/volume pedal.
    /// </summary>
    GuitarOpenPedal,
    /// <summary>
    /// Right-hand tapping.
    /// </summary>
    GuitarRightHandTapping,
    /// <summary>
    /// Guitar shake.
    /// </summary>
    GuitarShake,
    /// <summary>
    /// String number 0.
    /// </summary>
    GuitarString0,
    /// <summary>
    /// String number 1.
    /// </summary>
    GuitarString1,
    /// <summary>
    /// String number 10.
    /// </summary>
    GuitarString10,
    /// <summary>
    /// String number 11.
    /// </summary>
    GuitarString11,
    /// <summary>
    /// String number 12.
    /// </summary>
    GuitarString12,
    /// <summary>
    /// String number 13.
    /// </summary>
    GuitarString13,
    /// <summary>
    /// String number 2.
    /// </summary>
    GuitarString2,
    /// <summary>
    /// String number 3.
    /// </summary>
    GuitarString3,
    /// <summary>
    /// String number 4.
    /// </summary>
    GuitarString4,
    /// <summary>
    /// String number 5.
    /// </summary>
    GuitarString5,
    /// <summary>
    /// String number 6.
    /// </summary>
    GuitarString6,
    /// <summary>
    /// String number 7.
    /// </summary>
    GuitarString7,
    /// <summary>
    /// String number 8.
    /// </summary>
    GuitarString8,
    /// <summary>
    /// String number 9.
    /// </summary>
    GuitarString9,
    /// <summary>
    /// Strum direction down.
    /// </summary>
    GuitarStrumDown,
    /// <summary>
    /// Strum direction up.
    /// </summary>
    GuitarStrumUp,
    /// <summary>
    /// Guitar vibrato bar dip.
    /// </summary>
    GuitarVibratoBarDip,
    /// <summary>
    /// Guitar vibrato bar scoop.
    /// </summary>
    GuitarVibratoBarScoop,
    /// <summary>
    /// Vibrato wiggle segment.
    /// </summary>
    GuitarVibratoStroke,
    /// <summary>
    /// Volume swell.
    /// </summary>
    GuitarVolumeSwell,
    /// <summary>
    /// Wide vibrato wiggle segment.
    /// </summary>
    GuitarWideVibratoStroke,
    /// <summary>
    /// Belltree.
    /// </summary>
    HandbellsBelltree,
    /// <summary>
    /// Damp 3.
    /// </summary>
    HandbellsDamp3,
    /// <summary>
    /// Echo.
    /// </summary>
    HandbellsEcho1,
    /// <summary>
    /// Echo 2.
    /// </summary>
    HandbellsEcho2,
    /// <summary>
    /// Gyro.
    /// </summary>
    HandbellsGyro,
    /// <summary>
    /// Hand martellato.
    /// </summary>
    HandbellsHandMartellato,
    /// <summary>
    /// Mallet, bell on table.
    /// </summary>
    HandbellsMalletBellOnTable,
    /// <summary>
    /// Mallet, bell suspended.
    /// </summary>
    HandbellsMalletBellSuspended,
    /// <summary>
    /// Mallet lift.
    /// </summary>
    HandbellsMalletLft,
    /// <summary>
    /// Martellato.
    /// </summary>
    HandbellsMartellato,
    /// <summary>
    /// Martellato lift.
    /// </summary>
    HandbellsMartellatoLift,
    /// <summary>
    /// Muted martellato.
    /// </summary>
    HandbellsMutedMartellato,
    /// <summary>
    /// Pluck lift.
    /// </summary>
    HandbellsPluckLift,
    /// <summary>
    /// Swing.
    /// </summary>
    HandbellsSwing,
    /// <summary>
    /// Swing down.
    /// </summary>
    HandbellsSwingDown,
    /// <summary>
    /// Swing up.
    /// </summary>
    HandbellsSwingUp,
    /// <summary>
    /// Table pair of handbells.
    /// </summary>
    HandbellsTablePairBells,
    /// <summary>
    /// Table single handbell.
    /// </summary>
    HandbellsTableSingleBell,
    /// <summary>
    /// Metal rod pictogram.
    /// </summary>
    HarpMetalRod,
    /// <summary>
    /// Harp pedal centered (natural).
    /// </summary>
    HarpPedalCentered,
    /// <summary>
    /// Harp pedal divider.
    /// </summary>
    HarpPedalDivider,
    /// <summary>
    /// Harp pedal lowered (sharp).
    /// </summary>
    HarpPedalLowered,
    /// <summary>
    /// Harp pedal raised (flat).
    /// </summary>
    HarpPedalRaised,
    /// <summary>
    /// Ascending aeolian chords (Salzedo).
    /// </summary>
    HarpSalzedoAeolianAscending,
    /// <summary>
    /// Descending aeolian chords (Salzedo).
    /// </summary>
    HarpSalzedoAeolianDescending,
    /// <summary>
    /// Damp above (Salzedo).
    /// </summary>
    HarpSalzedoDampAbove,
    /// <summary>
    /// Damp below (Salzedo).
    /// </summary>
    HarpSalzedoDampBelow,
    /// <summary>
    /// Damp with both hands (Salzedo).
    /// </summary>
    HarpSalzedoDampBothHands,
    /// <summary>
    /// Damp only low strings (Salzedo).
    /// </summary>
    HarpSalzedoDampLowStrings,
    /// <summary>
    /// Fluidic sounds, left hand (Salzedo).
    /// </summary>
    HarpSalzedoFluidicSoundsLeft,
    /// <summary>
    /// Fluidic sounds, right hand (Salzedo).
    /// </summary>
    HarpSalzedoFluidicSoundsRight,
    /// <summary>
    /// Isolated sounds (Salzedo).
    /// </summary>
    HarpSalzedoIsolatedSounds,
    /// <summary>
    /// Metallic sounds (Salzedo).
    /// </summary>
    HarpSalzedoMetallicSounds,
    /// <summary>
    /// Metallic sounds, one string (Salzedo).
    /// </summary>
    HarpSalzedoMetallicSoundsOneString,
    /// <summary>
    /// Muffle totally (Salzedo).
    /// </summary>
    HarpSalzedoMuffleTotally,
    /// <summary>
    /// Oboic flux (Salzedo).
    /// </summary>
    HarpSalzedoOboicFlux,
    /// <summary>
    /// Play at upper end of strings (Salzedo).
    /// </summary>
    HarpSalzedoPlayUpperEnd,
    /// <summary>
    /// Slide with suppleness (Salzedo).
    /// </summary>
    HarpSalzedoSlideWithSuppleness,
    /// <summary>
    /// Snare drum effect (Salzedo).
    /// </summary>
    HarpSalzedoSnareDrum,
    /// <summary>
    /// Tam-tam sounds (Salzedo).
    /// </summary>
    HarpSalzedoTamTamSounds,
    /// <summary>
    /// Thunder effect (Salzedo).
    /// </summary>
    HarpSalzedoThunderEffect,
    /// <summary>
    /// Timpanic sounds (Salzedo).
    /// </summary>
    HarpSalzedoTimpanicSounds,
    /// <summary>
    /// Whistling sounds (Salzedo).
    /// </summary>
    HarpSalzedoWhistlingSounds,
    /// <summary>
    /// Combining string noise for stem.
    /// </summary>
    HarpStringNoiseStem,
    /// <summary>
    /// Tuning key pictogram.
    /// </summary>
    HarpTuningKey,
    /// <summary>
    /// Retune strings for glissando.
    /// </summary>
    HarpTuningKeyGlissando,
    /// <summary>
    /// Use handle of tuning key pictogram.
    /// </summary>
    HarpTuningKeyHandle,
    /// <summary>
    /// Use shank of tuning key pictogram.
    /// </summary>
    HarpTuningKeyShank,
    /// <summary>
    /// Indian drum clef.
    /// </summary>
    IndianDrumClef,
    /// <summary>
    /// Back-chug.
    /// </summary>
    KahnBackChug,
    /// <summary>
    /// Back-flap.
    /// </summary>
    KahnBackFlap,
    /// <summary>
    /// Back-riff.
    /// </summary>
    KahnBackRiff,
    /// <summary>
    /// Back-rip.
    /// </summary>
    KahnBackRip,
    /// <summary>
    /// Ball-change.
    /// </summary>
    KahnBallChange,
    /// <summary>
    /// Ball-dig.
    /// </summary>
    KahnBallDig,
    /// <summary>
    /// Brush-backward.
    /// </summary>
    KahnBrushBackward,
    /// <summary>
    /// Brush-forward.
    /// </summary>
    KahnBrushForward,
    /// <summary>
    /// Chug.
    /// </summary>
    KahnChug,
    /// <summary>
    /// Clap.
    /// </summary>
    KahnClap,
    /// <summary>
    /// Double-snap.
    /// </summary>
    KahnDoubleSnap,
    /// <summary>
    /// Double-wing.
    /// </summary>
    KahnDoubleWing,
    /// <summary>
    /// Draw-step.
    /// </summary>
    KahnDrawStep,
    /// <summary>
    /// Draw-tap.
    /// </summary>
    KahnDrawTap,
    /// <summary>
    /// Flam.
    /// </summary>
    KahnFlam,
    /// <summary>
    /// Flap.
    /// </summary>
    KahnFlap,
    /// <summary>
    /// Flap-step.
    /// </summary>
    KahnFlapStep,
    /// <summary>
    /// Flat.
    /// </summary>
    KahnFlat,
    /// <summary>
    /// Flea-hop.
    /// </summary>
    KahnFleaHop,
    /// <summary>
    /// Flea-tap.
    /// </summary>
    KahnFleaTap,
    /// <summary>
    /// Grace-tap.
    /// </summary>
    KahnGraceTap,
    /// <summary>
    /// Grace-tap-change.
    /// </summary>
    KahnGraceTapChange,
    /// <summary>
    /// Grace-tap-hop.
    /// </summary>
    KahnGraceTapHop,
    /// <summary>
    /// Grace-tap-stamp.
    /// </summary>
    KahnGraceTapStamp,
    /// <summary>
    /// Heel.
    /// </summary>
    KahnHeel,
    /// <summary>
    /// Heel-change.
    /// </summary>
    KahnHeelChange,
    /// <summary>
    /// Heel-click.
    /// </summary>
    KahnHeelClick,
    /// <summary>
    /// Heel-drop.
    /// </summary>
    KahnHeelDrop,
    /// <summary>
    /// Heel-step.
    /// </summary>
    KahnHeelStep,
    /// <summary>
    /// Heel-tap.
    /// </summary>
    KahnHeelTap,
    /// <summary>
    /// Hop.
    /// </summary>
    KahnHop,
    /// <summary>
    /// Jump-apart.
    /// </summary>
    KahnJumpApart,
    /// <summary>
    /// Jump-together.
    /// </summary>
    KahnJumpTogether,
    /// <summary>
    /// Knee-inward.
    /// </summary>
    KahnKneeInward,
    /// <summary>
    /// Knee-outward.
    /// </summary>
    KahnKneeOutward,
    /// <summary>
    /// Leap.
    /// </summary>
    KahnLeap,
    /// <summary>
    /// Leap-flat-foot.
    /// </summary>
    KahnLeapFlatFoot,
    /// <summary>
    /// Leap-heel-click.
    /// </summary>
    KahnLeapHeelClick,
    /// <summary>
    /// Left-catch.
    /// </summary>
    KahnLeftCatch,
    /// <summary>
    /// Left-cross.
    /// </summary>
    KahnLeftCross,
    /// <summary>
    /// Left-foot.
    /// </summary>
    KahnLeftFoot,
    /// <summary>
    /// Left-toe-strike.
    /// </summary>
    KahnLeftToeStrike,
    /// <summary>
    /// Left-turn.
    /// </summary>
    KahnLeftTurn,
    /// <summary>
    /// Over-the-top.
    /// </summary>
    KahnOverTheTop,
    /// <summary>
    /// Over-the-top-tap.
    /// </summary>
    KahnOverTheTopTap,
    /// <summary>
    /// Pull.
    /// </summary>
    KahnPull,
    /// <summary>
    /// Push.
    /// </summary>
    KahnPush,
    /// <summary>
    /// Riff.
    /// </summary>
    KahnRiff,
    /// <summary>
    /// Riffle.
    /// </summary>
    KahnRiffle,
    /// <summary>
    /// Right-catch.
    /// </summary>
    KahnRightCatch,
    /// <summary>
    /// Right-cross.
    /// </summary>
    KahnRightCross,
    /// <summary>
    /// Right-foot.
    /// </summary>
    KahnRightFoot,
    /// <summary>
    /// Right-toe-strike.
    /// </summary>
    KahnRightToeStrike,
    /// <summary>
    /// Right-turn.
    /// </summary>
    KahnRightTurn,
    /// <summary>
    /// Rip.
    /// </summary>
    KahnRip,
    /// <summary>
    /// Ripple.
    /// </summary>
    KahnRipple,
    /// <summary>
    /// Scrape.
    /// </summary>
    KahnScrape,
    /// <summary>
    /// Scuff.
    /// </summary>
    KahnScuff,
    /// <summary>
    /// Scuffle.
    /// </summary>
    KahnScuffle,
    /// <summary>
    /// Shuffle.
    /// </summary>
    KahnShuffle,
    /// <summary>
    /// Slam.
    /// </summary>
    KahnSlam,
    /// <summary>
    /// Slap.
    /// </summary>
    KahnSlap,
    /// <summary>
    /// Slide-step.
    /// </summary>
    KahnSlideStep,
    /// <summary>
    /// Slide-tap.
    /// </summary>
    KahnSlideTap,
    /// <summary>
    /// Snap.
    /// </summary>
    KahnSnap,
    /// <summary>
    /// Stamp.
    /// </summary>
    KahnStamp,
    /// <summary>
    /// Stamp-stamp.
    /// </summary>
    KahnStampStamp,
    /// <summary>
    /// Step.
    /// </summary>
    KahnStep,
    /// <summary>
    /// Step-stamp.
    /// </summary>
    KahnStepStamp,
    /// <summary>
    /// Stomp.
    /// </summary>
    KahnStomp,
    /// <summary>
    /// Stomp-brush.
    /// </summary>
    KahnStompBrush,
    /// <summary>
    /// Tap.
    /// </summary>
    KahnTap,
    /// <summary>
    /// Toe.
    /// </summary>
    KahnToe,
    /// <summary>
    /// Toe-click.
    /// </summary>
    KahnToeClick,
    /// <summary>
    /// Toe-drop.
    /// </summary>
    KahnToeDrop,
    /// <summary>
    /// Toe-step.
    /// </summary>
    KahnToeStep,
    /// <summary>
    /// Toe-tap.
    /// </summary>
    KahnToeTap,
    /// <summary>
    /// Trench.
    /// </summary>
    KahnTrench,
    /// <summary>
    /// Wing.
    /// </summary>
    KahnWing,
    /// <summary>
    /// Wing-change.
    /// </summary>
    KahnWingChange,
    /// <summary>
    /// Zank.
    /// </summary>
    KahnZank,
    /// <summary>
    /// Zink.
    /// </summary>
    KahnZink,
    /// <summary>
    /// Clavichord bebung, 2 finger movements (above).
    /// </summary>
    KeyboardBebung2DotsAbove,
    /// <summary>
    /// Clavichord bebung, 2 finger movements (below).
    /// </summary>
    KeyboardBebung2DotsBelow,
    /// <summary>
    /// Clavichord bebung, 3 finger movements (above).
    /// </summary>
    KeyboardBebung3DotsAbove,
    /// <summary>
    /// Clavichord bebung, 3 finger movements (below).
    /// </summary>
    KeyboardBebung3DotsBelow,
    /// <summary>
    /// Clavichord bebung, 4 finger movements (above).
    /// </summary>
    KeyboardBebung4DotsAbove,
    /// <summary>
    /// Clavichord bebung, 4 finger movements (below).
    /// </summary>
    KeyboardBebung4DotsBelow,
    /// <summary>
    /// Left pedal pictogram.
    /// </summary>
    KeyboardLeftPedalPictogram,
    /// <summary>
    /// Middle pedal pictogram.
    /// </summary>
    KeyboardMiddlePedalPictogram,
    /// <summary>
    /// Pedal d.
    /// </summary>
    KeyboardPedalD,
    /// <summary>
    /// Pedal dot.
    /// </summary>
    KeyboardPedalDot,
    /// <summary>
    /// Pedal e.
    /// </summary>
    KeyboardPedalE,
    /// <summary>
    /// Half-pedal mark.
    /// </summary>
    KeyboardPedalHalf,
    /// <summary>
    /// Half pedal mark 1.
    /// </summary>
    KeyboardPedalHalf2,
    /// <summary>
    /// Half pedal mark 2.
    /// </summary>
    KeyboardPedalHalf3,
    /// <summary>
    /// Pedal heel 1.
    /// </summary>
    KeyboardPedalHeel1,
    /// <summary>
    /// Pedal heel 2.
    /// </summary>
    KeyboardPedalHeel2,
    /// <summary>
    /// Pedal heel 3 (Davis).
    /// </summary>
    KeyboardPedalHeel3,
    /// <summary>
    /// Pedal heel to toe.
    /// </summary>
    KeyboardPedalHeelToToe,
    /// <summary>
    /// Pedal heel or toe.
    /// </summary>
    KeyboardPedalHeelToe,
    /// <summary>
    /// Pedal hook end.
    /// </summary>
    KeyboardPedalHookEnd,
    /// <summary>
    /// Pedal hook start.
    /// </summary>
    KeyboardPedalHookStart,
    /// <summary>
    /// Pedal hyphen.
    /// </summary>
    KeyboardPedalHyphen,
    /// <summary>
    /// Pedal P.
    /// </summary>
    KeyboardPedalP,
    /// <summary>
    /// Left parenthesis for pedal marking.
    /// </summary>
    KeyboardPedalParensLeft,
    /// <summary>
    /// Right parenthesis for pedal marking.
    /// </summary>
    KeyboardPedalParensRight,
    /// <summary>
    /// Pedal mark.
    /// </summary>
    KeyboardPedalPed,
    /// <summary>
    /// Pedal S.
    /// </summary>
    KeyboardPedalS,
    /// <summary>
    /// Sostenuto pedal mark.
    /// </summary>
    KeyboardPedalSost,
    /// <summary>
    /// Pedal toe 1.
    /// </summary>
    KeyboardPedalToe1,
    /// <summary>
    /// Pedal toe 2.
    /// </summary>
    KeyboardPedalToe2,
    /// <summary>
    /// Pedal toe to heel.
    /// </summary>
    KeyboardPedalToeToHeel,
    /// <summary>
    /// Pedal up mark.
    /// </summary>
    KeyboardPedalUp,
    /// <summary>
    /// Pedal up notch.
    /// </summary>
    KeyboardPedalUpNotch,
    /// <summary>
    /// Pedal up special.
    /// </summary>
    KeyboardPedalUpSpecial,
    /// <summary>
    /// Play with left hand.
    /// </summary>
    KeyboardPlayWithLH,
    /// <summary>
    /// Play with left hand (end).
    /// </summary>
    KeyboardPlayWithLHEnd,
    /// <summary>
    /// Play with right hand.
    /// </summary>
    KeyboardPlayWithRH,
    /// <summary>
    /// Play with right hand (end).
    /// </summary>
    KeyboardPlayWithRHEnd,
    /// <summary>
    /// Pluck strings inside piano (Maderna).
    /// </summary>
    KeyboardPluckInside,
    /// <summary>
    /// Right pedal pictogram.
    /// </summary>
    KeyboardRightPedalPictogram,
    /// <summary>
    /// Kievan flat.
    /// </summary>
    KievanAccidentalFlat,
    /// <summary>
    /// Kievan sharp.
    /// </summary>
    KievanAccidentalSharp,
    /// <summary>
    /// Kievan augmentation dot.
    /// </summary>
    KievanAugmentationDot,
    /// <summary>
    /// Kievan C clef (tse-fa-ut).
    /// </summary>
    KievanCClef,
    /// <summary>
    /// Kievan ending symbol.
    /// </summary>
    KievanEndingSymbol,
    /// <summary>
    /// Kievan eighth note, stem down.
    /// </summary>
    KievanNote8thStemDown,
    /// <summary>
    /// Kievan eighth note, stem up.
    /// </summary>
    KievanNote8thStemUp,
    /// <summary>
    /// Kievan beam.
    /// </summary>
    KievanNoteBeam,
    /// <summary>
    /// Kievan half note (on staff line).
    /// </summary>
    KievanNoteHalfStaffLine,
    /// <summary>
    /// Kievan half note (in staff space).
    /// </summary>
    KievanNoteHalfStaffSpace,
    /// <summary>
    /// Kievan quarter note, stem down.
    /// </summary>
    KievanNoteQuarterStemDown,
    /// <summary>
    /// Kievan quarter note, stem up.
    /// </summary>
    KievanNoteQuarterStemUp,
    /// <summary>
    /// Kievan reciting note.
    /// </summary>
    KievanNoteReciting,
    /// <summary>
    /// Kievan whole note.
    /// </summary>
    KievanNoteWhole,
    /// <summary>
    /// Kievan final whole note.
    /// </summary>
    KievanNoteWholeFinal,
    /// <summary>
    /// Do hand sign.
    /// </summary>
    KodalyHandDo,
    /// <summary>
    /// Fa hand sign.
    /// </summary>
    KodalyHandFa,
    /// <summary>
    /// La hand sign.
    /// </summary>
    KodalyHandLa,
    /// <summary>
    /// Mi hand sign.
    /// </summary>
    KodalyHandMi,
    /// <summary>
    /// Re hand sign.
    /// </summary>
    KodalyHandRe,
    /// <summary>
    /// So hand sign.
    /// </summary>
    KodalyHandSo,
    /// <summary>
    /// Ti hand sign.
    /// </summary>
    KodalyHandTi,
    /// <summary>
    /// Left repeat sign within bar.
    /// </summary>
    LeftRepeatSmall,
    /// <summary>
    /// Leger line.
    /// </summary>
    LegerLine,
    /// <summary>
    /// Leger line (narrow).
    /// </summary>
    LegerLineNarrow,
    /// <summary>
    /// Leger line (wide).
    /// </summary>
    LegerLineWide,
    /// <summary>
    /// Lute tablature end repeat barline.
    /// </summary>
    LuteBarlineEndRepeat,
    /// <summary>
    /// Lute tablature final barline.
    /// </summary>
    LuteBarlineFinal,
    /// <summary>
    /// Lute tablature start repeat barline.
    /// </summary>
    LuteBarlineStartRepeat,
    /// <summary>
    /// 16th note (semiquaver) duration sign.
    /// </summary>
    LuteDuration16th,
    /// <summary>
    /// 32nd note (demisemiquaver) duration sign.
    /// </summary>
    LuteDuration32nd,
    /// <summary>
    /// Eighth note (quaver) duration sign.
    /// </summary>
    LuteDuration8th,
    /// <summary>
    /// Double whole note (breve) duration sign.
    /// </summary>
    LuteDurationDoubleWhole,
    /// <summary>
    /// Half note (minim) duration sign.
    /// </summary>
    LuteDurationHalf,
    /// <summary>
    /// Quarter note (crotchet) duration sign.
    /// </summary>
    LuteDurationQuarter,
    /// <summary>
    /// Whole note (semibreve) duration sign.
    /// </summary>
    LuteDurationWhole,
    /// <summary>
    /// Right-hand fingering, first finger.
    /// </summary>
    LuteFingeringRHFirst,
    /// <summary>
    /// Right-hand fingering, second finger.
    /// </summary>
    LuteFingeringRHSecond,
    /// <summary>
    /// Right-hand fingering, third finger.
    /// </summary>
    LuteFingeringRHThird,
    /// <summary>
    /// Right-hand fingering, thumb.
    /// </summary>
    LuteFingeringRHThumb,
    /// <summary>
    /// 10th course (diapason).
    /// </summary>
    LuteFrench10thCourse,
    /// <summary>
    /// Seventh course (diapason).
    /// </summary>
    LuteFrench7thCourse,
    /// <summary>
    /// Eighth course (diapason).
    /// </summary>
    LuteFrench8thCourse,
    /// <summary>
    /// Ninth course (diapason).
    /// </summary>
    LuteFrench9thCourse,
    /// <summary>
    /// Appoggiatura from above.
    /// </summary>
    LuteFrenchAppoggiaturaAbove,
    /// <summary>
    /// Appoggiatura from below.
    /// </summary>
    LuteFrenchAppoggiaturaBelow,
    /// <summary>
    /// Open string (a).
    /// </summary>
    LuteFrenchFretA,
    /// <summary>
    /// First fret (b).
    /// </summary>
    LuteFrenchFretB,
    /// <summary>
    /// Second fret (c).
    /// </summary>
    LuteFrenchFretC,
    /// <summary>
    /// Third fret (d).
    /// </summary>
    LuteFrenchFretD,
    /// <summary>
    /// Fourth fret (e).
    /// </summary>
    LuteFrenchFretE,
    /// <summary>
    /// Fifth fret (f).
    /// </summary>
    LuteFrenchFretF,
    /// <summary>
    /// Sixth fret (g).
    /// </summary>
    LuteFrenchFretG,
    /// <summary>
    /// Seventh fret (h).
    /// </summary>
    LuteFrenchFretH,
    /// <summary>
    /// Eighth fret (i).
    /// </summary>
    LuteFrenchFretI,
    /// <summary>
    /// Ninth fret (k).
    /// </summary>
    LuteFrenchFretK,
    /// <summary>
    /// 10th fret (l).
    /// </summary>
    LuteFrenchFretL,
    /// <summary>
    /// 11th fret (m).
    /// </summary>
    LuteFrenchFretM,
    /// <summary>
    /// 12th fret (n).
    /// </summary>
    LuteFrenchFretN,
    /// <summary>
    /// Inverted mordent.
    /// </summary>
    LuteFrenchMordentInverted,
    /// <summary>
    /// Mordent with lower auxiliary.
    /// </summary>
    LuteFrenchMordentLower,
    /// <summary>
    /// Mordent with upper auxiliary.
    /// </summary>
    LuteFrenchMordentUpper,
    /// <summary>
    /// 5th course, 1st fret (a).
    /// </summary>
    LuteGermanALower,
    /// <summary>
    /// 6th course, 1st fret (A).
    /// </summary>
    LuteGermanAUpper,
    /// <summary>
    /// 4th course, 1st fret (b).
    /// </summary>
    LuteGermanBLower,
    /// <summary>
    /// 6th course, 2nd fret (B).
    /// </summary>
    LuteGermanBUpper,
    /// <summary>
    /// 3rd course, 1st fret (c).
    /// </summary>
    LuteGermanCLower,
    /// <summary>
    /// 6th course, 3rd fret (C).
    /// </summary>
    LuteGermanCUpper,
    /// <summary>
    /// 2nd course, 1st fret (d).
    /// </summary>
    LuteGermanDLower,
    /// <summary>
    /// 6th course, 4th fret (D).
    /// </summary>
    LuteGermanDUpper,
    /// <summary>
    /// 1st course, 1st fret (e).
    /// </summary>
    LuteGermanELower,
    /// <summary>
    /// 6th course, 5th fret (E).
    /// </summary>
    LuteGermanEUpper,
    /// <summary>
    /// 5th course, 2nd fret (f).
    /// </summary>
    LuteGermanFLower,
    /// <summary>
    /// 6th course, 6th fret (F).
    /// </summary>
    LuteGermanFUpper,
    /// <summary>
    /// 4th course, 2nd fret (g).
    /// </summary>
    LuteGermanGLower,
    /// <summary>
    /// 6th course, 7th fret (G).
    /// </summary>
    LuteGermanGUpper,
    /// <summary>
    /// 3rd course, 2nd fret (h).
    /// </summary>
    LuteGermanHLower,
    /// <summary>
    /// 6th course, 8th fret (H).
    /// </summary>
    LuteGermanHUpper,
    /// <summary>
    /// 2nd course, 2nd fret (i).
    /// </summary>
    LuteGermanILower,
    /// <summary>
    /// 6th course, 9th fret (I).
    /// </summary>
    LuteGermanIUpper,
    /// <summary>
    /// 1st course, 2nd fret (k).
    /// </summary>
    LuteGermanKLower,
    /// <summary>
    /// 6th course, 10th fret (K).
    /// </summary>
    LuteGermanKUpper,
    /// <summary>
    /// 5th course, 3rd fret (l).
    /// </summary>
    LuteGermanLLower,
    /// <summary>
    /// 6th course, 11th fret (L).
    /// </summary>
    LuteGermanLUpper,
    /// <summary>
    /// 4th course, 3rd fret (m).
    /// </summary>
    LuteGermanMLower,
    /// <summary>
    /// 6th course, 12th fret (M).
    /// </summary>
    LuteGermanMUpper,
    /// <summary>
    /// 3rd course, 3rd fret (n).
    /// </summary>
    LuteGermanNLower,
    /// <summary>
    /// 6th course, 13th fret (N).
    /// </summary>
    LuteGermanNUpper,
    /// <summary>
    /// 2nd course, 3rd fret (o).
    /// </summary>
    LuteGermanOLower,
    /// <summary>
    /// 1st course, 3rd fret (p).
    /// </summary>
    LuteGermanPLower,
    /// <summary>
    /// 5th course, 4th fret (q).
    /// </summary>
    LuteGermanQLower,
    /// <summary>
    /// 4th course, 4th fret (r).
    /// </summary>
    LuteGermanRLower,
    /// <summary>
    /// 3rd course, 4th fret (s).
    /// </summary>
    LuteGermanSLower,
    /// <summary>
    /// 2nd course, 4th fret (t).
    /// </summary>
    LuteGermanTLower,
    /// <summary>
    /// 1st course, 4th fret (v).
    /// </summary>
    LuteGermanVLower,
    /// <summary>
    /// 5th course, 5th fret (x).
    /// </summary>
    LuteGermanXLower,
    /// <summary>
    /// 4th course, 5th fret (y).
    /// </summary>
    LuteGermanYLower,
    /// <summary>
    /// 3rd course, 5th fret (z).
    /// </summary>
    LuteGermanZLower,
    /// <summary>
    /// C sol fa ut clef.
    /// </summary>
    LuteItalianClefCSolFaUt,
    /// <summary>
    /// F fa ut clef.
    /// </summary>
    LuteItalianClefFFaUt,
    /// <summary>
    /// Open string (0).
    /// </summary>
    LuteItalianFret0,
    /// <summary>
    /// First fret (1).
    /// </summary>
    LuteItalianFret1,
    /// <summary>
    /// Second fret (2).
    /// </summary>
    LuteItalianFret2,
    /// <summary>
    /// Third fret (3).
    /// </summary>
    LuteItalianFret3,
    /// <summary>
    /// Fourth fret (4).
    /// </summary>
    LuteItalianFret4,
    /// <summary>
    /// Fifth fret (5).
    /// </summary>
    LuteItalianFret5,
    /// <summary>
    /// Sixth fret (6).
    /// </summary>
    LuteItalianFret6,
    /// <summary>
    /// Seventh fret (7).
    /// </summary>
    LuteItalianFret7,
    /// <summary>
    /// Eighth fret (8).
    /// </summary>
    LuteItalianFret8,
    /// <summary>
    /// Ninth fret (9).
    /// </summary>
    LuteItalianFret9,
    /// <summary>
    /// Hold finger in place.
    /// </summary>
    LuteItalianHoldFinger,
    /// <summary>
    /// Hold note.
    /// </summary>
    LuteItalianHoldNote,
    /// <summary>
    /// Release finger.
    /// </summary>
    LuteItalianReleaseFinger,
    /// <summary>
    /// Fast tempo indication (de Mudarra).
    /// </summary>
    LuteItalianTempoFast,
    /// <summary>
    /// Neither fast nor slow tempo indication (de Mudarra).
    /// </summary>
    LuteItalianTempoNeitherFastNorSlow,
    /// <summary>
    /// Slow tempo indication (de Mudarra).
    /// </summary>
    LuteItalianTempoSlow,
    /// <summary>
    /// Somewhat fast tempo indication (de Narvaez).
    /// </summary>
    LuteItalianTempoSomewhatFast,
    /// <summary>
    /// Very slow indication (de Narvaez).
    /// </summary>
    LuteItalianTempoVerySlow,
    /// <summary>
    /// Triple time indication.
    /// </summary>
    LuteItalianTimeTriple,
    /// <summary>
    /// Single-finger tremolo or mordent.
    /// </summary>
    LuteItalianTremolo,
    /// <summary>
    /// Vibrato (verre cassé).
    /// </summary>
    LuteItalianVibrato,
    /// <summary>
    /// Lute tablature staff, 6 courses.
    /// </summary>
    LuteStaff6Lines,
    /// <summary>
    /// Lute tablature staff, 6 courses (narrow).
    /// </summary>
    LuteStaff6LinesNarrow,
    /// <summary>
    /// Lute tablature staff, 6 courses (wide).
    /// </summary>
    LuteStaff6LinesWide,
    /// <summary>
    /// Elision.
    /// </summary>
    LyricsElision,
    /// <summary>
    /// Narrow elision.
    /// </summary>
    LyricsElisionNarrow,
    /// <summary>
    /// Wide elision.
    /// </summary>
    LyricsElisionWide,
    /// <summary>
    /// Baseline hyphen.
    /// </summary>
    LyricsHyphenBaseline,
    /// <summary>
    /// Non-breaking baseline hyphen.
    /// </summary>
    LyricsHyphenBaselineNonBreaking,
    /// <summary>
    /// Text repeats.
    /// </summary>
    LyricsTextRepeat,
    /// <summary>
    /// Flat, hard b (mi).
    /// </summary>
    MedRenFlatHardB,
    /// <summary>
    /// Flat, soft b (fa).
    /// </summary>
    MedRenFlatSoftB,
    /// <summary>
    /// Flat with dot.
    /// </summary>
    MedRenFlatWithDot,
    /// <summary>
    /// G clef (Corpus Monodicum).
    /// </summary>
    MedRenGClefCMN,
    /// <summary>
    /// Liquescence.
    /// </summary>
    MedRenLiquescenceCMN,
    /// <summary>
    /// Liquescent ascending (Corpus Monodicum).
    /// </summary>
    MedRenLiquescentAscCMN,
    /// <summary>
    /// Liquescent descending (Corpus Monodicum).
    /// </summary>
    MedRenLiquescentDescCMN,
    /// <summary>
    /// Natural.
    /// </summary>
    MedRenNatural,
    /// <summary>
    /// Natural with interrupted cross.
    /// </summary>
    MedRenNaturalWithCross,
    /// <summary>
    /// Oriscus (Corpus Monodicum).
    /// </summary>
    MedRenOriscusCMN,
    /// <summary>
    /// Plica.
    /// </summary>
    MedRenPlicaCMN,
    /// <summary>
    /// Punctum (Corpus Monodicum).
    /// </summary>
    MedRenPunctumCMN,
    /// <summary>
    /// Quilisma (Corpus Monodicum).
    /// </summary>
    MedRenQuilismaCMN,
    /// <summary>
    /// Croix.
    /// </summary>
    MedRenSharpCroix,
    /// <summary>
    /// Strophicus (Corpus Monodicum).
    /// </summary>
    MedRenStrophicusCMN,
    /// <summary>
    /// Alteration sign.
    /// </summary>
    MensuralAlterationSign,
    /// <summary>
    /// Black mensural brevis.
    /// </summary>
    MensuralBlackBrevis,
    /// <summary>
    /// Black mensural void brevis.
    /// </summary>
    MensuralBlackBrevisVoid,
    /// <summary>
    /// Black mensural dragma.
    /// </summary>
    MensuralBlackDragma,
    /// <summary>
    /// Black mensural longa.
    /// </summary>
    MensuralBlackLonga,
    /// <summary>
    /// Black mensural maxima.
    /// </summary>
    MensuralBlackMaxima,
    /// <summary>
    /// Black mensural minima.
    /// </summary>
    MensuralBlackMinima,
    /// <summary>
    /// Black mensural void minima.
    /// </summary>
    MensuralBlackMinimaVoid,
    /// <summary>
    /// Black mensural semibrevis.
    /// </summary>
    MensuralBlackSemibrevis,
    /// <summary>
    /// Black mensural semibrevis caudata.
    /// </summary>
    MensuralBlackSemibrevisCaudata,
    /// <summary>
    /// Black mensural oblique semibrevis.
    /// </summary>
    MensuralBlackSemibrevisOblique,
    /// <summary>
    /// Black mensural void semibrevis.
    /// </summary>
    MensuralBlackSemibrevisVoid,
    /// <summary>
    /// Black mensural semiminima.
    /// </summary>
    MensuralBlackSemiminima,
    /// <summary>
    /// Mensural C clef.
    /// </summary>
    MensuralCclef,
    /// <summary>
    /// Petrucci C clef, high position.
    /// </summary>
    MensuralCclefPetrucciPosHigh,
    /// <summary>
    /// Petrucci C clef, highest position.
    /// </summary>
    MensuralCclefPetrucciPosHighest,
    /// <summary>
    /// Petrucci C clef, low position.
    /// </summary>
    MensuralCclefPetrucciPosLow,
    /// <summary>
    /// Petrucci C clef, lowest position.
    /// </summary>
    MensuralCclefPetrucciPosLowest,
    /// <summary>
    /// Petrucci C clef, middle position.
    /// </summary>
    MensuralCclefPetrucciPosMiddle,
    /// <summary>
    /// Coloration end, round.
    /// </summary>
    MensuralColorationEndRound,
    /// <summary>
    /// Coloration end, square.
    /// </summary>
    MensuralColorationEndSquare,
    /// <summary>
    /// Coloration start, round.
    /// </summary>
    MensuralColorationStartRound,
    /// <summary>
    /// Coloration start, square.
    /// </summary>
    MensuralColorationStartSquare,
    /// <summary>
    /// Combining stem diagonal.
    /// </summary>
    MensuralCombStemDiagonal,
    /// <summary>
    /// Combining stem down.
    /// </summary>
    MensuralCombStemDown,
    /// <summary>
    /// Combining stem with extended flag down.
    /// </summary>
    MensuralCombStemDownFlagExtended,
    /// <summary>
    /// Combining stem with flared flag down.
    /// </summary>
    MensuralCombStemDownFlagFlared,
    /// <summary>
    /// Combining stem with fusa flag down.
    /// </summary>
    MensuralCombStemDownFlagFusa,
    /// <summary>
    /// Combining stem with flag left down.
    /// </summary>
    MensuralCombStemDownFlagLeft,
    /// <summary>
    /// Combining stem with flag right down.
    /// </summary>
    MensuralCombStemDownFlagRight,
    /// <summary>
    /// Combining stem with semiminima flag down.
    /// </summary>
    MensuralCombStemDownFlagSemiminima,
    /// <summary>
    /// Combining stem up.
    /// </summary>
    MensuralCombStemUp,
    /// <summary>
    /// Combining stem with extended flag up.
    /// </summary>
    MensuralCombStemUpFlagExtended,
    /// <summary>
    /// Combining stem with flared flag up.
    /// </summary>
    MensuralCombStemUpFlagFlared,
    /// <summary>
    /// Combining stem with fusa flag up.
    /// </summary>
    MensuralCombStemUpFlagFusa,
    /// <summary>
    /// Combining stem with flag left up.
    /// </summary>
    MensuralCombStemUpFlagLeft,
    /// <summary>
    /// Combining stem with flag right up.
    /// </summary>
    MensuralCombStemUpFlagRight,
    /// <summary>
    /// Combining stem with semiminima flag up.
    /// </summary>
    MensuralCombStemUpFlagSemiminima,
    /// <summary>
    /// Checkmark custos.
    /// </summary>
    MensuralCustosCheckmark,
    /// <summary>
    /// Mensural custos down.
    /// </summary>
    MensuralCustosDown,
    /// <summary>
    /// Turn-like custos.
    /// </summary>
    MensuralCustosTurn,
    /// <summary>
    /// Mensural custos up.
    /// </summary>
    MensuralCustosUp,
    /// <summary>
    /// Mensural F clef.
    /// </summary>
    MensuralFclef,
    /// <summary>
    /// Petrucci F clef.
    /// </summary>
    MensuralFclefPetrucci,
    /// <summary>
    /// Mensural G clef.
    /// </summary>
    MensuralGclef,
    /// <summary>
    /// Petrucci G clef.
    /// </summary>
    MensuralGclefPetrucci,
    /// <summary>
    /// Modus imperfectum, vertical.
    /// </summary>
    MensuralModusImperfectumVert,
    /// <summary>
    /// Modus perfectum, vertical.
    /// </summary>
    MensuralModusPerfectumVert,
    /// <summary>
    /// Longa/brevis notehead, black.
    /// </summary>
    MensuralNoteheadLongaBlack,
    /// <summary>
    /// Longa/brevis notehead, black and void.
    /// </summary>
    MensuralNoteheadLongaBlackVoid,
    /// <summary>
    /// Longa/brevis notehead, void.
    /// </summary>
    MensuralNoteheadLongaVoid,
    /// <summary>
    /// Longa/brevis notehead, white.
    /// </summary>
    MensuralNoteheadLongaWhite,
    /// <summary>
    /// Maxima notehead, black.
    /// </summary>
    MensuralNoteheadMaximaBlack,
    /// <summary>
    /// Maxima notehead, black and void.
    /// </summary>
    MensuralNoteheadMaximaBlackVoid,
    /// <summary>
    /// Maxima notehead, void.
    /// </summary>
    MensuralNoteheadMaximaVoid,
    /// <summary>
    /// Maxima notehead, white.
    /// </summary>
    MensuralNoteheadMaximaWhite,
    /// <summary>
    /// Minima notehead, white.
    /// </summary>
    MensuralNoteheadMinimaWhite,
    /// <summary>
    /// Semibrevis notehead, black.
    /// </summary>
    MensuralNoteheadSemibrevisBlack,
    /// <summary>
    /// Semibrevis notehead, black and void.
    /// </summary>
    MensuralNoteheadSemibrevisBlackVoid,
    /// <summary>
    /// Semibrevis notehead, black and void (turned).
    /// </summary>
    MensuralNoteheadSemibrevisBlackVoidTurned,
    /// <summary>
    /// Semibrevis notehead, void.
    /// </summary>
    MensuralNoteheadSemibrevisVoid,
    /// <summary>
    /// Semiminima/fusa notehead, white.
    /// </summary>
    MensuralNoteheadSemiminimaWhite,
    /// <summary>
    /// Oblique form, ascending 2nd, black.
    /// </summary>
    MensuralObliqueAsc2ndBlack,
    /// <summary>
    /// Oblique form, ascending 2nd, black and void.
    /// </summary>
    MensuralObliqueAsc2ndBlackVoid,
    /// <summary>
    /// Oblique form, ascending 2nd, void.
    /// </summary>
    MensuralObliqueAsc2ndVoid,
    /// <summary>
    /// Oblique form, ascending 2nd, white.
    /// </summary>
    MensuralObliqueAsc2ndWhite,
    /// <summary>
    /// Oblique form, ascending 3rd, black.
    /// </summary>
    MensuralObliqueAsc3rdBlack,
    /// <summary>
    /// Oblique form, ascending 3rd, black and void.
    /// </summary>
    MensuralObliqueAsc3rdBlackVoid,
    /// <summary>
    /// Oblique form, ascending 3rd, void.
    /// </summary>
    MensuralObliqueAsc3rdVoid,
    /// <summary>
    /// Oblique form, ascending 3rd, white.
    /// </summary>
    MensuralObliqueAsc3rdWhite,
    /// <summary>
    /// Oblique form, ascending 4th, black.
    /// </summary>
    MensuralObliqueAsc4thBlack,
    /// <summary>
    /// Oblique form, ascending 4th, black and void.
    /// </summary>
    MensuralObliqueAsc4thBlackVoid,
    /// <summary>
    /// Oblique form, ascending 4th, void.
    /// </summary>
    MensuralObliqueAsc4thVoid,
    /// <summary>
    /// Oblique form, ascending 4th, white.
    /// </summary>
    MensuralObliqueAsc4thWhite,
    /// <summary>
    /// Oblique form, ascending 5th, black.
    /// </summary>
    MensuralObliqueAsc5thBlack,
    /// <summary>
    /// Oblique form, ascending 5th, black and void.
    /// </summary>
    MensuralObliqueAsc5thBlackVoid,
    /// <summary>
    /// Oblique form, ascending 5th, void.
    /// </summary>
    MensuralObliqueAsc5thVoid,
    /// <summary>
    /// Oblique form, ascending 5th, white.
    /// </summary>
    MensuralObliqueAsc5thWhite,
    /// <summary>
    /// Oblique form, descending 2nd, black.
    /// </summary>
    MensuralObliqueDesc2ndBlack,
    /// <summary>
    /// Oblique form, descending 2nd, black and void.
    /// </summary>
    MensuralObliqueDesc2ndBlackVoid,
    /// <summary>
    /// Oblique form, descending 2nd, void.
    /// </summary>
    MensuralObliqueDesc2ndVoid,
    /// <summary>
    /// Oblique form, descending 2nd, white.
    /// </summary>
    MensuralObliqueDesc2ndWhite,
    /// <summary>
    /// Oblique form, descending 3rd, black.
    /// </summary>
    MensuralObliqueDesc3rdBlack,
    /// <summary>
    /// Oblique form, descending 3rd, black and void.
    /// </summary>
    MensuralObliqueDesc3rdBlackVoid,
    /// <summary>
    /// Oblique form, descending 3rd, void.
    /// </summary>
    MensuralObliqueDesc3rdVoid,
    /// <summary>
    /// Oblique form, descending 3rd, white.
    /// </summary>
    MensuralObliqueDesc3rdWhite,
    /// <summary>
    /// Oblique form, descending 4th, black.
    /// </summary>
    MensuralObliqueDesc4thBlack,
    /// <summary>
    /// Oblique form, descending 4th, black and void.
    /// </summary>
    MensuralObliqueDesc4thBlackVoid,
    /// <summary>
    /// Oblique form, descending 4th, void.
    /// </summary>
    MensuralObliqueDesc4thVoid,
    /// <summary>
    /// Oblique form, descending 4th, white.
    /// </summary>
    MensuralObliqueDesc4thWhite,
    /// <summary>
    /// Oblique form, descending 5th, black.
    /// </summary>
    MensuralObliqueDesc5thBlack,
    /// <summary>
    /// Oblique form, descending 5th, black and void.
    /// </summary>
    MensuralObliqueDesc5thBlackVoid,
    /// <summary>
    /// Oblique form, descending 5th, void.
    /// </summary>
    MensuralObliqueDesc5thVoid,
    /// <summary>
    /// Oblique form, descending 5th, white.
    /// </summary>
    MensuralObliqueDesc5thWhite,
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta (9/8).
    /// </summary>
    MensuralProlation1,
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 4.
    /// </summary>
    MensuralProlation10,
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 5.
    /// </summary>
    MensuralProlation11,
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta (3/4).
    /// </summary>
    MensuralProlation2,
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta diminution 1 (3/8).
    /// </summary>
    MensuralProlation3,
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta diminution 2 (9/16).
    /// </summary>
    MensuralProlation4,
    /// <summary>
    /// Tempus imperfectum cum prolatione perfecta (6/8).
    /// </summary>
    MensuralProlation5,
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta (2/4).
    /// </summary>
    MensuralProlation6,
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2).
    /// </summary>
    MensuralProlation7,
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 2 (6/16).
    /// </summary>
    MensuralProlation8,
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2).
    /// </summary>
    MensuralProlation9,
    /// <summary>
    /// Combining dot.
    /// </summary>
    MensuralProlationCombiningDot,
    /// <summary>
    /// Combining void dot.
    /// </summary>
    MensuralProlationCombiningDotVoid,
    /// <summary>
    /// Combining vertical stroke.
    /// </summary>
    MensuralProlationCombiningStroke,
    /// <summary>
    /// Combining three dots horizontal.
    /// </summary>
    MensuralProlationCombiningThreeDots,
    /// <summary>
    /// Combining three dots triangular.
    /// </summary>
    MensuralProlationCombiningThreeDotsTri,
    /// <summary>
    /// Combining two dots.
    /// </summary>
    MensuralProlationCombiningTwoDots,
    /// <summary>
    /// Mensural proportion 1.
    /// </summary>
    MensuralProportion1,
    /// <summary>
    /// Mensural proportion 2.
    /// </summary>
    MensuralProportion2,
    /// <summary>
    /// Mensural proportion 3.
    /// </summary>
    MensuralProportion3,
    /// <summary>
    /// Mensural proportion 4.
    /// </summary>
    MensuralProportion4,
    /// <summary>
    /// Mensural proportion 5.
    /// </summary>
    MensuralProportion5,
    /// <summary>
    /// Mensural proportion 6.
    /// </summary>
    MensuralProportion6,
    /// <summary>
    /// Mensural proportion 7.
    /// </summary>
    MensuralProportion7,
    /// <summary>
    /// Mensural proportion 8.
    /// </summary>
    MensuralProportion8,
    /// <summary>
    /// Mensural proportion 9.
    /// </summary>
    MensuralProportion9,
    /// <summary>
    /// Mensural proportion major.
    /// </summary>
    MensuralProportionMajor,
    /// <summary>
    /// Mensural proportion minor.
    /// </summary>
    MensuralProportionMinor,
    /// <summary>
    /// Proportio dupla 1.
    /// </summary>
    MensuralProportionProportioDupla1,
    /// <summary>
    /// Proportio dupla 2.
    /// </summary>
    MensuralProportionProportioDupla2,
    /// <summary>
    /// Proportio quadrupla.
    /// </summary>
    MensuralProportionProportioQuadrupla,
    /// <summary>
    /// Proportio tripla.
    /// </summary>
    MensuralProportionProportioTripla,
    /// <summary>
    /// Tempus perfectum.
    /// </summary>
    MensuralProportionTempusPerfectum,
    /// <summary>
    /// Brevis rest.
    /// </summary>
    MensuralRestBrevis,
    /// <summary>
    /// Fusa rest.
    /// </summary>
    MensuralRestFusa,
    /// <summary>
    /// Longa imperfecta rest.
    /// </summary>
    MensuralRestLongaImperfecta,
    /// <summary>
    /// Longa perfecta rest.
    /// </summary>
    MensuralRestLongaPerfecta,
    /// <summary>
    /// Maxima rest.
    /// </summary>
    MensuralRestMaxima,
    /// <summary>
    /// Minima rest.
    /// </summary>
    MensuralRestMinima,
    /// <summary>
    /// Semibrevis rest.
    /// </summary>
    MensuralRestSemibrevis,
    /// <summary>
    /// Semifusa rest.
    /// </summary>
    MensuralRestSemifusa,
    /// <summary>
    /// Semiminima rest.
    /// </summary>
    MensuralRestSemiminima,
    /// <summary>
    /// Signum congruentiae down.
    /// </summary>
    MensuralSignumDown,
    /// <summary>
    /// Signum congruentiae up.
    /// </summary>
    MensuralSignumUp,
    /// <summary>
    /// Tempus imperfectum, horizontal.
    /// </summary>
    MensuralTempusImperfectumHoriz,
    /// <summary>
    /// Tempus perfectum, horizontal.
    /// </summary>
    MensuralTempusPerfectumHoriz,
    /// <summary>
    /// White mensural brevis.
    /// </summary>
    MensuralWhiteBrevis,
    /// <summary>
    /// White mensural fusa.
    /// </summary>
    MensuralWhiteFusa,
    /// <summary>
    /// White mensural longa.
    /// </summary>
    MensuralWhiteLonga,
    /// <summary>
    /// White mensural maxima.
    /// </summary>
    MensuralWhiteMaxima,
    /// <summary>
    /// White mensural minima.
    /// </summary>
    MensuralWhiteMinima,
    /// <summary>
    /// White mensural semibrevis.
    /// </summary>
    MensuralWhiteSemibrevis,
    /// <summary>
    /// White mensural semiminima.
    /// </summary>
    MensuralWhiteSemiminima,
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    MetAugmentationDot,
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    MetNote1024thDown,
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    MetNote1024thUp,
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem down.
    /// </summary>
    MetNote128thDown,
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    MetNote128thUp,
    /// <summary>
    /// 16th note (semiquaver) stem down.
    /// </summary>
    MetNote16thDown,
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    MetNote16thUp,
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem down.
    /// </summary>
    MetNote256thDown,
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem up.
    /// </summary>
    MetNote256thUp,
    /// <summary>
    /// 32nd note (demisemiquaver) stem down.
    /// </summary>
    MetNote32ndDown,
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    MetNote32ndUp,
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    MetNote512thDown,
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    MetNote512thUp,
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem down.
    /// </summary>
    MetNote64thDown,
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    MetNote64thUp,
    /// <summary>
    /// Eighth note (quaver) stem down.
    /// </summary>
    MetNote8thDown,
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    MetNote8thUp,
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    MetNoteDoubleWhole,
    /// <summary>
    /// Double whole note (square).
    /// </summary>
    MetNoteDoubleWholeSquare,
    /// <summary>
    /// Half note (minim) stem down.
    /// </summary>
    MetNoteHalfDown,
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    MetNoteHalfUp,
    /// <summary>
    /// Quarter note (crotchet) stem down.
    /// </summary>
    MetNoteQuarterDown,
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    MetNoteQuarterUp,
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    MetNoteWhole,
    /// <summary>
    /// Left-pointing arrow for metric modulation.
    /// </summary>
    MetricModulationArrowLeft,
    /// <summary>
    /// Right-pointing arrow for metric modulation.
    /// </summary>
    MetricModulationArrowRight,
    /// <summary>
    /// Do not copy.
    /// </summary>
    MiscDoNotCopy,
    /// <summary>
    /// Do not photocopy.
    /// </summary>
    MiscDoNotPhotocopy,
    /// <summary>
    /// Eyeglasses.
    /// </summary>
    MiscEyeglasses,
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    Note1024thDown,
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    Note1024thUp,
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem down.
    /// </summary>
    Note128thDown,
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    Note128thUp,
    /// <summary>
    /// 16th note (semiquaver) stem down.
    /// </summary>
    Note16thDown,
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    Note16thUp,
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem down.
    /// </summary>
    Note256thDown,
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem up.
    /// </summary>
    Note256thUp,
    /// <summary>
    /// 32nd note (demisemiquaver) stem down.
    /// </summary>
    Note32ndDown,
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    Note32ndUp,
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    Note512thDown,
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    Note512thUp,
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem down.
    /// </summary>
    Note64thDown,
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    Note64thUp,
    /// <summary>
    /// Eighth note (quaver) stem down.
    /// </summary>
    Note8thDown,
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    Note8thUp,
    /// <summary>
    /// A (black note).
    /// </summary>
    NoteABlack,
    /// <summary>
    /// A flat (black note).
    /// </summary>
    NoteAFlatBlack,
    /// <summary>
    /// A flat (half note).
    /// </summary>
    NoteAFlatHalf,
    /// <summary>
    /// A flat (whole note).
    /// </summary>
    NoteAFlatWhole,
    /// <summary>
    /// A (half note).
    /// </summary>
    NoteAHalf,
    /// <summary>
    /// A sharp (black note).
    /// </summary>
    NoteASharpBlack,
    /// <summary>
    /// A sharp (half note).
    /// </summary>
    NoteASharpHalf,
    /// <summary>
    /// A sharp (whole note).
    /// </summary>
    NoteASharpWhole,
    /// <summary>
    /// A (whole note).
    /// </summary>
    NoteAWhole,
    /// <summary>
    /// B (black note).
    /// </summary>
    NoteBBlack,
    /// <summary>
    /// B flat (black note).
    /// </summary>
    NoteBFlatBlack,
    /// <summary>
    /// B flat (half note).
    /// </summary>
    NoteBFlatHalf,
    /// <summary>
    /// B flat (whole note).
    /// </summary>
    NoteBFlatWhole,
    /// <summary>
    /// B (half note).
    /// </summary>
    NoteBHalf,
    /// <summary>
    /// B sharp (black note).
    /// </summary>
    NoteBSharpBlack,
    /// <summary>
    /// B sharp (half note).
    /// </summary>
    NoteBSharpHalf,
    /// <summary>
    /// B sharp (whole note).
    /// </summary>
    NoteBSharpWhole,
    /// <summary>
    /// B (whole note).
    /// </summary>
    NoteBWhole,
    /// <summary>
    /// C (black note).
    /// </summary>
    NoteCBlack,
    /// <summary>
    /// C flat (black note).
    /// </summary>
    NoteCFlatBlack,
    /// <summary>
    /// C flat (half note).
    /// </summary>
    NoteCFlatHalf,
    /// <summary>
    /// C flat (whole note).
    /// </summary>
    NoteCFlatWhole,
    /// <summary>
    /// C (half note).
    /// </summary>
    NoteCHalf,
    /// <summary>
    /// C sharp (black note).
    /// </summary>
    NoteCSharpBlack,
    /// <summary>
    /// C sharp (half note).
    /// </summary>
    NoteCSharpHalf,
    /// <summary>
    /// C sharp (whole note).
    /// </summary>
    NoteCSharpWhole,
    /// <summary>
    /// C (whole note).
    /// </summary>
    NoteCWhole,
    /// <summary>
    /// D (black note).
    /// </summary>
    NoteDBlack,
    /// <summary>
    /// D flat (black note).
    /// </summary>
    NoteDFlatBlack,
    /// <summary>
    /// D flat (half note).
    /// </summary>
    NoteDFlatHalf,
    /// <summary>
    /// D flat (whole note).
    /// </summary>
    NoteDFlatWhole,
    /// <summary>
    /// D (half note).
    /// </summary>
    NoteDHalf,
    /// <summary>
    /// D sharp (black note).
    /// </summary>
    NoteDSharpBlack,
    /// <summary>
    /// D sharp (half note).
    /// </summary>
    NoteDSharpHalf,
    /// <summary>
    /// D sharp (whole note).
    /// </summary>
    NoteDSharpWhole,
    /// <summary>
    /// D (whole note).
    /// </summary>
    NoteDWhole,
    /// <summary>
    /// Di (black note).
    /// </summary>
    NoteDiBlack,
    /// <summary>
    /// Di (half note).
    /// </summary>
    NoteDiHalf,
    /// <summary>
    /// Di (whole note).
    /// </summary>
    NoteDiWhole,
    /// <summary>
    /// Do (black note).
    /// </summary>
    NoteDoBlack,
    /// <summary>
    /// Do (half note).
    /// </summary>
    NoteDoHalf,
    /// <summary>
    /// Do (whole note).
    /// </summary>
    NoteDoWhole,
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    NoteDoubleWhole,
    /// <summary>
    /// Double whole note (square).
    /// </summary>
    NoteDoubleWholeSquare,
    /// <summary>
    /// E (black note).
    /// </summary>
    NoteEBlack,
    /// <summary>
    /// E flat (black note).
    /// </summary>
    NoteEFlatBlack,
    /// <summary>
    /// E flat (half note).
    /// </summary>
    NoteEFlatHalf,
    /// <summary>
    /// E flat (whole note).
    /// </summary>
    NoteEFlatWhole,
    /// <summary>
    /// E (half note).
    /// </summary>
    NoteEHalf,
    /// <summary>
    /// E sharp (black note).
    /// </summary>
    NoteESharpBlack,
    /// <summary>
    /// E sharp (half note).
    /// </summary>
    NoteESharpHalf,
    /// <summary>
    /// E sharp (whole note).
    /// </summary>
    NoteESharpWhole,
    /// <summary>
    /// E (whole note).
    /// </summary>
    NoteEWhole,
    /// <summary>
    /// Empty black note.
    /// </summary>
    NoteEmptyBlack,
    /// <summary>
    /// Empty half note.
    /// </summary>
    NoteEmptyHalf,
    /// <summary>
    /// Empty whole note.
    /// </summary>
    NoteEmptyWhole,
    /// <summary>
    /// F (black note).
    /// </summary>
    NoteFBlack,
    /// <summary>
    /// F flat (black note).
    /// </summary>
    NoteFFlatBlack,
    /// <summary>
    /// F flat (half note).
    /// </summary>
    NoteFFlatHalf,
    /// <summary>
    /// F flat (whole note).
    /// </summary>
    NoteFFlatWhole,
    /// <summary>
    /// F (half note).
    /// </summary>
    NoteFHalf,
    /// <summary>
    /// F sharp (black note).
    /// </summary>
    NoteFSharpBlack,
    /// <summary>
    /// F sharp (half note).
    /// </summary>
    NoteFSharpHalf,
    /// <summary>
    /// F sharp (whole note).
    /// </summary>
    NoteFSharpWhole,
    /// <summary>
    /// F (whole note).
    /// </summary>
    NoteFWhole,
    /// <summary>
    /// Fa (black note).
    /// </summary>
    NoteFaBlack,
    /// <summary>
    /// Fa (half note).
    /// </summary>
    NoteFaHalf,
    /// <summary>
    /// Fa (whole note).
    /// </summary>
    NoteFaWhole,
    /// <summary>
    /// Fi (black note).
    /// </summary>
    NoteFiBlack,
    /// <summary>
    /// Fi (half note).
    /// </summary>
    NoteFiHalf,
    /// <summary>
    /// Fi (whole note).
    /// </summary>
    NoteFiWhole,
    /// <summary>
    /// G (black note).
    /// </summary>
    NoteGBlack,
    /// <summary>
    /// G flat (black note).
    /// </summary>
    NoteGFlatBlack,
    /// <summary>
    /// G flat (half note).
    /// </summary>
    NoteGFlatHalf,
    /// <summary>
    /// G flat (whole note).
    /// </summary>
    NoteGFlatWhole,
    /// <summary>
    /// G (half note).
    /// </summary>
    NoteGHalf,
    /// <summary>
    /// G sharp (black note).
    /// </summary>
    NoteGSharpBlack,
    /// <summary>
    /// G sharp (half note).
    /// </summary>
    NoteGSharpHalf,
    /// <summary>
    /// G sharp (whole note).
    /// </summary>
    NoteGSharpWhole,
    /// <summary>
    /// G (whole note).
    /// </summary>
    NoteGWhole,
    /// <summary>
    /// H (black note).
    /// </summary>
    NoteHBlack,
    /// <summary>
    /// H (half note).
    /// </summary>
    NoteHHalf,
    /// <summary>
    /// H sharp (black note).
    /// </summary>
    NoteHSharpBlack,
    /// <summary>
    /// H sharp (half note).
    /// </summary>
    NoteHSharpHalf,
    /// <summary>
    /// H sharp (whole note).
    /// </summary>
    NoteHSharpWhole,
    /// <summary>
    /// H (whole note).
    /// </summary>
    NoteHWhole,
    /// <summary>
    /// Half note (minim) stem down.
    /// </summary>
    NoteHalfDown,
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    NoteHalfUp,
    /// <summary>
    /// La (black note).
    /// </summary>
    NoteLaBlack,
    /// <summary>
    /// La (half note).
    /// </summary>
    NoteLaHalf,
    /// <summary>
    /// La (whole note).
    /// </summary>
    NoteLaWhole,
    /// <summary>
    /// Le (black note).
    /// </summary>
    NoteLeBlack,
    /// <summary>
    /// Le (half note).
    /// </summary>
    NoteLeHalf,
    /// <summary>
    /// Le (whole note).
    /// </summary>
    NoteLeWhole,
    /// <summary>
    /// Li (black note).
    /// </summary>
    NoteLiBlack,
    /// <summary>
    /// Li (half note).
    /// </summary>
    NoteLiHalf,
    /// <summary>
    /// Li (whole note).
    /// </summary>
    NoteLiWhole,
    /// <summary>
    /// Me (black note).
    /// </summary>
    NoteMeBlack,
    /// <summary>
    /// Me (half note).
    /// </summary>
    NoteMeHalf,
    /// <summary>
    /// Me (whole note).
    /// </summary>
    NoteMeWhole,
    /// <summary>
    /// Mi (black note).
    /// </summary>
    NoteMiBlack,
    /// <summary>
    /// Mi (half note).
    /// </summary>
    NoteMiHalf,
    /// <summary>
    /// Mi (whole note).
    /// </summary>
    NoteMiWhole,
    /// <summary>
    /// Quarter note (crotchet) stem down.
    /// </summary>
    NoteQuarterDown,
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    NoteQuarterUp,
    /// <summary>
    /// Ra (black note).
    /// </summary>
    NoteRaBlack,
    /// <summary>
    /// Ra (half note).
    /// </summary>
    NoteRaHalf,
    /// <summary>
    /// Ra (whole note).
    /// </summary>
    NoteRaWhole,
    /// <summary>
    /// Re (black note).
    /// </summary>
    NoteReBlack,
    /// <summary>
    /// Re (half note).
    /// </summary>
    NoteReHalf,
    /// <summary>
    /// Re (whole note).
    /// </summary>
    NoteReWhole,
    /// <summary>
    /// Ri (black note).
    /// </summary>
    NoteRiBlack,
    /// <summary>
    /// Ri (half note).
    /// </summary>
    NoteRiHalf,
    /// <summary>
    /// Ri (whole note).
    /// </summary>
    NoteRiWhole,
    /// <summary>
    /// Se (black note).
    /// </summary>
    NoteSeBlack,
    /// <summary>
    /// Se (half note).
    /// </summary>
    NoteSeHalf,
    /// <summary>
    /// Se (whole note).
    /// </summary>
    NoteSeWhole,
    /// <summary>
    /// Arrowhead left black (Funk 7-shape re).
    /// </summary>
    NoteShapeArrowheadLeftBlack,
    /// <summary>
    /// Arrowhead left double whole (Funk 7-shape re).
    /// </summary>
    NoteShapeArrowheadLeftDoubleWhole,
    /// <summary>
    /// Arrowhead left white (Funk 7-shape re).
    /// </summary>
    NoteShapeArrowheadLeftWhite,
    /// <summary>
    /// Diamond black (4-shape mi; 7-shape mi).
    /// </summary>
    NoteShapeDiamondBlack,
    /// <summary>
    /// Diamond double whole (4-shape mi; 7-shape mi).
    /// </summary>
    NoteShapeDiamondDoubleWhole,
    /// <summary>
    /// Diamond white (4-shape mi; 7-shape mi).
    /// </summary>
    NoteShapeDiamondWhite,
    /// <summary>
    /// Isosceles triangle black (Walker 7-shape ti).
    /// </summary>
    NoteShapeIsoscelesTriangleBlack,
    /// <summary>
    /// Isosceles triangle double whole (Walker 7-shape ti).
    /// </summary>
    NoteShapeIsoscelesTriangleDoubleWhole,
    /// <summary>
    /// Isosceles triangle white (Walker 7-shape ti).
    /// </summary>
    NoteShapeIsoscelesTriangleWhite,
    /// <summary>
    /// Inverted keystone black (Walker 7-shape do).
    /// </summary>
    NoteShapeKeystoneBlack,
    /// <summary>
    /// Inverted keystone double whole (Walker 7-shape do).
    /// </summary>
    NoteShapeKeystoneDoubleWhole,
    /// <summary>
    /// Inverted keystone white (Walker 7-shape do).
    /// </summary>
    NoteShapeKeystoneWhite,
    /// <summary>
    /// Moon black (Aikin 7-shape re).
    /// </summary>
    NoteShapeMoonBlack,
    /// <summary>
    /// Moon double whole (Aikin 7-shape re).
    /// </summary>
    NoteShapeMoonDoubleWhole,
    /// <summary>
    /// Moon left black (Funk 7-shape do).
    /// </summary>
    NoteShapeMoonLeftBlack,
    /// <summary>
    /// Moon left double whole (Funk 7-shape do).
    /// </summary>
    NoteShapeMoonLeftDoubleWhole,
    /// <summary>
    /// Moon left white (Funk 7-shape do).
    /// </summary>
    NoteShapeMoonLeftWhite,
    /// <summary>
    /// Moon white (Aikin 7-shape re).
    /// </summary>
    NoteShapeMoonWhite,
    /// <summary>
    /// Quarter moon black (Walker 7-shape re).
    /// </summary>
    NoteShapeQuarterMoonBlack,
    /// <summary>
    /// Quarter moon double whole (Walker 7-shape re).
    /// </summary>
    NoteShapeQuarterMoonDoubleWhole,
    /// <summary>
    /// Quarter moon white (Walker 7-shape re).
    /// </summary>
    NoteShapeQuarterMoonWhite,
    /// <summary>
    /// Round black (4-shape sol; 7-shape so).
    /// </summary>
    NoteShapeRoundBlack,
    /// <summary>
    /// Round double whole (4-shape sol; 7-shape so).
    /// </summary>
    NoteShapeRoundDoubleWhole,
    /// <summary>
    /// Round white (4-shape sol; 7-shape so).
    /// </summary>
    NoteShapeRoundWhite,
    /// <summary>
    /// Square black (4-shape la; Aikin 7-shape la).
    /// </summary>
    NoteShapeSquareBlack,
    /// <summary>
    /// Square double whole (4-shape la; Aikin 7-shape la).
    /// </summary>
    NoteShapeSquareDoubleWhole,
    /// <summary>
    /// Square white (4-shape la; Aikin 7-shape la).
    /// </summary>
    NoteShapeSquareWhite,
    /// <summary>
    /// Triangle left black (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    NoteShapeTriangleLeftBlack,
    /// <summary>
    /// Triangle left double whole (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    NoteShapeTriangleLeftDoubleWhole,
    /// <summary>
    /// Triangle left white (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    NoteShapeTriangleLeftWhite,
    /// <summary>
    /// Triangle right black (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    NoteShapeTriangleRightBlack,
    /// <summary>
    /// Triangle right double whole (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    NoteShapeTriangleRightDoubleWhole,
    /// <summary>
    /// Triangle right white (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    NoteShapeTriangleRightWhite,
    /// <summary>
    /// Triangle-round black (Aikin 7-shape ti).
    /// </summary>
    NoteShapeTriangleRoundBlack,
    /// <summary>
    /// Triangle-round white (Aikin 7-shape ti).
    /// </summary>
    NoteShapeTriangleRoundDoubleWhole,
    /// <summary>
    /// Triangle-round left black (Funk 7-shape ti).
    /// </summary>
    NoteShapeTriangleRoundLeftBlack,
    /// <summary>
    /// Triangle-round left double whole (Funk 7-shape ti).
    /// </summary>
    NoteShapeTriangleRoundLeftDoubleWhole,
    /// <summary>
    /// Triangle-round left white (Funk 7-shape ti).
    /// </summary>
    NoteShapeTriangleRoundLeftWhite,
    /// <summary>
    /// Triangle-round white (Aikin 7-shape ti).
    /// </summary>
    NoteShapeTriangleRoundWhite,
    /// <summary>
    /// Triangle up black (Aikin 7-shape do).
    /// </summary>
    NoteShapeTriangleUpBlack,
    /// <summary>
    /// Triangle up double whole (Aikin 7-shape do).
    /// </summary>
    NoteShapeTriangleUpDoubleWhole,
    /// <summary>
    /// Triangle up white (Aikin 7-shape do).
    /// </summary>
    NoteShapeTriangleUpWhite,
    /// <summary>
    /// Si (black note).
    /// </summary>
    NoteSiBlack,
    /// <summary>
    /// Si (half note).
    /// </summary>
    NoteSiHalf,
    /// <summary>
    /// Si (whole note).
    /// </summary>
    NoteSiWhole,
    /// <summary>
    /// So (black note).
    /// </summary>
    NoteSoBlack,
    /// <summary>
    /// So (half note).
    /// </summary>
    NoteSoHalf,
    /// <summary>
    /// So (whole note).
    /// </summary>
    NoteSoWhole,
    /// <summary>
    /// Te (black note).
    /// </summary>
    NoteTeBlack,
    /// <summary>
    /// Te (half note).
    /// </summary>
    NoteTeHalf,
    /// <summary>
    /// Te (whole note).
    /// </summary>
    NoteTeWhole,
    /// <summary>
    /// Ti (black note).
    /// </summary>
    NoteTiBlack,
    /// <summary>
    /// Ti (half note).
    /// </summary>
    NoteTiHalf,
    /// <summary>
    /// Ti (whole note).
    /// </summary>
    NoteTiWhole,
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    NoteWhole,
    /// <summary>
    /// Black notehead.
    /// </summary>
    NoteheadBlack,
    /// <summary>
    /// Circle slash notehead.
    /// </summary>
    NoteheadCircleSlash,
    /// <summary>
    /// Circle X notehead.
    /// </summary>
    NoteheadCircleX,
    /// <summary>
    /// Circle X double whole.
    /// </summary>
    NoteheadCircleXDoubleWhole,
    /// <summary>
    /// Circle X half.
    /// </summary>
    NoteheadCircleXHalf,
    /// <summary>
    /// Circle X whole.
    /// </summary>
    NoteheadCircleXWhole,
    /// <summary>
    /// Circled black notehead.
    /// </summary>
    NoteheadCircledBlack,
    /// <summary>
    /// Black notehead in large circle.
    /// </summary>
    NoteheadCircledBlackLarge,
    /// <summary>
    /// Circled double whole notehead.
    /// </summary>
    NoteheadCircledDoubleWhole,
    /// <summary>
    /// Double whole notehead in large circle.
    /// </summary>
    NoteheadCircledDoubleWholeLarge,
    /// <summary>
    /// Circled half notehead.
    /// </summary>
    NoteheadCircledHalf,
    /// <summary>
    /// Half notehead in large circle.
    /// </summary>
    NoteheadCircledHalfLarge,
    /// <summary>
    /// Circled whole notehead.
    /// </summary>
    NoteheadCircledWhole,
    /// <summary>
    /// Whole notehead in large circle.
    /// </summary>
    NoteheadCircledWholeLarge,
    /// <summary>
    /// Cross notehead in large circle.
    /// </summary>
    NoteheadCircledXLarge,
    /// <summary>
    /// Double whole note cluster, 2nd.
    /// </summary>
    NoteheadClusterDoubleWhole2nd,
    /// <summary>
    /// Double whole note cluster, 3rd.
    /// </summary>
    NoteheadClusterDoubleWhole3rd,
    /// <summary>
    /// Combining double whole note cluster, bottom.
    /// </summary>
    NoteheadClusterDoubleWholeBottom,
    /// <summary>
    /// Combining double whole note cluster, middle.
    /// </summary>
    NoteheadClusterDoubleWholeMiddle,
    /// <summary>
    /// Combining double whole note cluster, top.
    /// </summary>
    NoteheadClusterDoubleWholeTop,
    /// <summary>
    /// Half note cluster, 2nd.
    /// </summary>
    NoteheadClusterHalf2nd,
    /// <summary>
    /// Half note cluster, 3rd.
    /// </summary>
    NoteheadClusterHalf3rd,
    /// <summary>
    /// Combining half note cluster, bottom.
    /// </summary>
    NoteheadClusterHalfBottom,
    /// <summary>
    /// Combining half note cluster, middle.
    /// </summary>
    NoteheadClusterHalfMiddle,
    /// <summary>
    /// Combining half note cluster, top.
    /// </summary>
    NoteheadClusterHalfTop,
    /// <summary>
    /// Quarter note cluster, 2nd.
    /// </summary>
    NoteheadClusterQuarter2nd,
    /// <summary>
    /// Quarter note cluster, 3rd.
    /// </summary>
    NoteheadClusterQuarter3rd,
    /// <summary>
    /// Combining quarter note cluster, bottom.
    /// </summary>
    NoteheadClusterQuarterBottom,
    /// <summary>
    /// Combining quarter note cluster, middle.
    /// </summary>
    NoteheadClusterQuarterMiddle,
    /// <summary>
    /// Combining quarter note cluster, top.
    /// </summary>
    NoteheadClusterQuarterTop,
    /// <summary>
    /// Cluster notehead black (round).
    /// </summary>
    NoteheadClusterRoundBlack,
    /// <summary>
    /// Cluster notehead white (round).
    /// </summary>
    NoteheadClusterRoundWhite,
    /// <summary>
    /// Cluster notehead black (square).
    /// </summary>
    NoteheadClusterSquareBlack,
    /// <summary>
    /// Cluster notehead white (square).
    /// </summary>
    NoteheadClusterSquareWhite,
    /// <summary>
    /// Whole note cluster, 2nd.
    /// </summary>
    NoteheadClusterWhole2nd,
    /// <summary>
    /// Whole note cluster, 3rd.
    /// </summary>
    NoteheadClusterWhole3rd,
    /// <summary>
    /// Combining whole note cluster, bottom.
    /// </summary>
    NoteheadClusterWholeBottom,
    /// <summary>
    /// Combining whole note cluster, middle.
    /// </summary>
    NoteheadClusterWholeMiddle,
    /// <summary>
    /// Combining whole note cluster, top.
    /// </summary>
    NoteheadClusterWholeTop,
    /// <summary>
    /// 4/11 note (eleventh note series, Cowell).
    /// </summary>
    NoteheadCowellEleventhNoteSeriesHalf,
    /// <summary>
    /// 8/11 note (eleventh note series, Cowell).
    /// </summary>
    NoteheadCowellEleventhNoteSeriesWhole,
    /// <summary>
    /// 2/11 note (eleventh note series, Cowell).
    /// </summary>
    NoteheadCowellEleventhSeriesBlack,
    /// <summary>
    /// 2/15 note (fifteenth note series, Cowell).
    /// </summary>
    NoteheadCowellFifteenthNoteSeriesBlack,
    /// <summary>
    /// 4/15 note (fifteenth note series, Cowell).
    /// </summary>
    NoteheadCowellFifteenthNoteSeriesHalf,
    /// <summary>
    /// 8/15 note (fifteenth note series, Cowell).
    /// </summary>
    NoteheadCowellFifteenthNoteSeriesWhole,
    /// <summary>
    /// 1/5 note (fifth note series, Cowell).
    /// </summary>
    NoteheadCowellFifthNoteSeriesBlack,
    /// <summary>
    /// 2/5 note (fifth note series, Cowell).
    /// </summary>
    NoteheadCowellFifthNoteSeriesHalf,
    /// <summary>
    /// 4/5 note (fifth note series, Cowell).
    /// </summary>
    NoteheadCowellFifthNoteSeriesWhole,
    /// <summary>
    /// 2/9 note (ninth note series, Cowell).
    /// </summary>
    NoteheadCowellNinthNoteSeriesBlack,
    /// <summary>
    /// 4/9 note (ninth note series, Cowell).
    /// </summary>
    NoteheadCowellNinthNoteSeriesHalf,
    /// <summary>
    /// 8/9 note (ninth note series, Cowell).
    /// </summary>
    NoteheadCowellNinthNoteSeriesWhole,
    /// <summary>
    /// 1/7 note (seventh note series, Cowell).
    /// </summary>
    NoteheadCowellSeventhNoteSeriesBlack,
    /// <summary>
    /// 2/7 note (seventh note series, Cowell).
    /// </summary>
    NoteheadCowellSeventhNoteSeriesHalf,
    /// <summary>
    /// 4/7 note (seventh note series, Cowell).
    /// </summary>
    NoteheadCowellSeventhNoteSeriesWhole,
    /// <summary>
    /// 1/6 note (third note series, Cowell).
    /// </summary>
    NoteheadCowellThirdNoteSeriesBlack,
    /// <summary>
    /// 1/3 note (third note series, Cowell).
    /// </summary>
    NoteheadCowellThirdNoteSeriesHalf,
    /// <summary>
    /// 2/3 note (third note series, Cowell).
    /// </summary>
    NoteheadCowellThirdNoteSeriesWhole,
    /// <summary>
    /// 2/13 note (thirteenth note series, Cowell).
    /// </summary>
    NoteheadCowellThirteenthNoteSeriesBlack,
    /// <summary>
    /// 4/13 note (thirteenth note series, Cowell).
    /// </summary>
    NoteheadCowellThirteenthNoteSeriesHalf,
    /// <summary>
    /// 8/13 note (thirteenth note series, Cowell).
    /// </summary>
    NoteheadCowellThirteenthNoteSeriesWhole,
    /// <summary>
    /// Diamond black notehead.
    /// </summary>
    NoteheadDiamondBlack,
    /// <summary>
    /// Diamond black notehead (old).
    /// </summary>
    NoteheadDiamondBlackOld,
    /// <summary>
    /// Diamond black notehead (wide).
    /// </summary>
    NoteheadDiamondBlackWide,
    /// <summary>
    /// Black diamond cluster, 2nd.
    /// </summary>
    NoteheadDiamondClusterBlack2nd,
    /// <summary>
    /// Black diamond cluster, 3rd.
    /// </summary>
    NoteheadDiamondClusterBlack3rd,
    /// <summary>
    /// Combining black diamond cluster, bottom.
    /// </summary>
    NoteheadDiamondClusterBlackBottom,
    /// <summary>
    /// Combining black diamond cluster, middle.
    /// </summary>
    NoteheadDiamondClusterBlackMiddle,
    /// <summary>
    /// Combining black diamond cluster, top.
    /// </summary>
    NoteheadDiamondClusterBlackTop,
    /// <summary>
    /// White diamond cluster, 2nd.
    /// </summary>
    NoteheadDiamondClusterWhite2nd,
    /// <summary>
    /// White diamond cluster, 3rd.
    /// </summary>
    NoteheadDiamondClusterWhite3rd,
    /// <summary>
    /// Combining white diamond cluster, bottom.
    /// </summary>
    NoteheadDiamondClusterWhiteBottom,
    /// <summary>
    /// Combining white diamond cluster, middle.
    /// </summary>
    NoteheadDiamondClusterWhiteMiddle,
    /// <summary>
    /// Combining white diamond cluster, top.
    /// </summary>
    NoteheadDiamondClusterWhiteTop,
    /// <summary>
    /// Diamond double whole notehead.
    /// </summary>
    NoteheadDiamondDoubleWhole,
    /// <summary>
    /// Diamond double whole notehead (old).
    /// </summary>
    NoteheadDiamondDoubleWholeOld,
    /// <summary>
    /// Diamond half notehead.
    /// </summary>
    NoteheadDiamondHalf,
    /// <summary>
    /// Half-filled diamond notehead.
    /// </summary>
    NoteheadDiamondHalfFilled,
    /// <summary>
    /// Diamond half notehead (old).
    /// </summary>
    NoteheadDiamondHalfOld,
    /// <summary>
    /// Diamond half notehead (wide).
    /// </summary>
    NoteheadDiamondHalfWide,
    /// <summary>
    /// Open diamond notehead.
    /// </summary>
    NoteheadDiamondOpen,
    /// <summary>
    /// Diamond white notehead.
    /// </summary>
    NoteheadDiamondWhite,
    /// <summary>
    /// Diamond white notehead (wide).
    /// </summary>
    NoteheadDiamondWhiteWide,
    /// <summary>
    /// Diamond whole notehead.
    /// </summary>
    NoteheadDiamondWhole,
    /// <summary>
    /// Diamond whole notehead (old).
    /// </summary>
    NoteheadDiamondWholeOld,
    /// <summary>
    /// Double whole (breve) notehead.
    /// </summary>
    NoteheadDoubleWhole,
    /// <summary>
    /// Double whole (breve) notehead (square).
    /// </summary>
    NoteheadDoubleWholeSquare,
    /// <summary>
    /// Double whole notehead with X.
    /// </summary>
    NoteheadDoubleWholeWithX,
    /// <summary>
    /// Half (minim) notehead.
    /// </summary>
    NoteheadHalf,
    /// <summary>
    /// Filled half (minim) notehead.
    /// </summary>
    NoteheadHalfFilled,
    /// <summary>
    /// Half notehead with X.
    /// </summary>
    NoteheadHalfWithX,
    /// <summary>
    /// Heavy X notehead.
    /// </summary>
    NoteheadHeavyX,
    /// <summary>
    /// Heavy X with hat notehead.
    /// </summary>
    NoteheadHeavyXHat,
    /// <summary>
    /// Large arrow down (lowest pitch) black notehead.
    /// </summary>
    NoteheadLargeArrowDownBlack,
    /// <summary>
    /// Large arrow down (lowest pitch) double whole notehead.
    /// </summary>
    NoteheadLargeArrowDownDoubleWhole,
    /// <summary>
    /// Large arrow down (lowest pitch) half notehead.
    /// </summary>
    NoteheadLargeArrowDownHalf,
    /// <summary>
    /// Large arrow down (lowest pitch) whole notehead.
    /// </summary>
    NoteheadLargeArrowDownWhole,
    /// <summary>
    /// Large arrow up (highest pitch) black notehead.
    /// </summary>
    NoteheadLargeArrowUpBlack,
    /// <summary>
    /// Large arrow up (highest pitch) double whole notehead.
    /// </summary>
    NoteheadLargeArrowUpDoubleWhole,
    /// <summary>
    /// Large arrow up (highest pitch) half notehead.
    /// </summary>
    NoteheadLargeArrowUpHalf,
    /// <summary>
    /// Large arrow up (highest pitch) whole notehead.
    /// </summary>
    NoteheadLargeArrowUpWhole,
    /// <summary>
    /// Moon notehead black.
    /// </summary>
    NoteheadMoonBlack,
    /// <summary>
    /// Moon notehead white.
    /// </summary>
    NoteheadMoonWhite,
    /// <summary>
    /// Sine notehead (Nancarrow).
    /// </summary>
    NoteheadNancarrowSine,
    /// <summary>
    /// Null notehead.
    /// </summary>
    NoteheadNull,
    /// <summary>
    /// Parenthesis notehead.
    /// </summary>
    NoteheadParenthesis,
    /// <summary>
    /// Opening parenthesis.
    /// </summary>
    NoteheadParenthesisLeft,
    /// <summary>
    /// Closing parenthesis.
    /// </summary>
    NoteheadParenthesisRight,
    /// <summary>
    /// Plus notehead black.
    /// </summary>
    NoteheadPlusBlack,
    /// <summary>
    /// Plus notehead double whole.
    /// </summary>
    NoteheadPlusDoubleWhole,
    /// <summary>
    /// Plus notehead half.
    /// </summary>
    NoteheadPlusHalf,
    /// <summary>
    /// Plus notehead whole.
    /// </summary>
    NoteheadPlusWhole,
    /// <summary>
    /// Combining black rectangular cluster, bottom.
    /// </summary>
    NoteheadRectangularClusterBlackBottom,
    /// <summary>
    /// Combining black rectangular cluster, middle.
    /// </summary>
    NoteheadRectangularClusterBlackMiddle,
    /// <summary>
    /// Combining black rectangular cluster, top.
    /// </summary>
    NoteheadRectangularClusterBlackTop,
    /// <summary>
    /// Combining white rectangular cluster, bottom.
    /// </summary>
    NoteheadRectangularClusterWhiteBottom,
    /// <summary>
    /// Combining white rectangular cluster, middle.
    /// </summary>
    NoteheadRectangularClusterWhiteMiddle,
    /// <summary>
    /// Combining white rectangular cluster, top.
    /// </summary>
    NoteheadRectangularClusterWhiteTop,
    /// <summary>
    /// Round black notehead.
    /// </summary>
    NoteheadRoundBlack,
    /// <summary>
    /// Round black notehead, double slashed.
    /// </summary>
    NoteheadRoundBlackDoubleSlashed,
    /// <summary>
    /// Large round black notehead.
    /// </summary>
    NoteheadRoundBlackLarge,
    /// <summary>
    /// Round black notehead, slashed.
    /// </summary>
    NoteheadRoundBlackSlashed,
    /// <summary>
    /// Large round black notehead, slashed.
    /// </summary>
    NoteheadRoundBlackSlashedLarge,
    /// <summary>
    /// Round white notehead.
    /// </summary>
    NoteheadRoundWhite,
    /// <summary>
    /// Round white notehead, double slashed.
    /// </summary>
    NoteheadRoundWhiteDoubleSlashed,
    /// <summary>
    /// Large round white notehead.
    /// </summary>
    NoteheadRoundWhiteLarge,
    /// <summary>
    /// Round white notehead, slashed.
    /// </summary>
    NoteheadRoundWhiteSlashed,
    /// <summary>
    /// Large round white notehead, slashed.
    /// </summary>
    NoteheadRoundWhiteSlashedLarge,
    /// <summary>
    /// Round white notehead with dot.
    /// </summary>
    NoteheadRoundWhiteWithDot,
    /// <summary>
    /// Large round white notehead with dot.
    /// </summary>
    NoteheadRoundWhiteWithDotLarge,
    /// <summary>
    /// Large white diamond.
    /// </summary>
    NoteheadSlashDiamondWhite,
    /// <summary>
    /// Slash with horizontal ends.
    /// </summary>
    NoteheadSlashHorizontalEnds,
    /// <summary>
    /// Muted slash with horizontal ends.
    /// </summary>
    NoteheadSlashHorizontalEndsMuted,
    /// <summary>
    /// Slash with vertical ends.
    /// </summary>
    NoteheadSlashVerticalEnds,
    /// <summary>
    /// Muted slash with vertical ends.
    /// </summary>
    NoteheadSlashVerticalEndsMuted,
    /// <summary>
    /// Small slash with vertical ends.
    /// </summary>
    NoteheadSlashVerticalEndsSmall,
    /// <summary>
    /// White slash double whole.
    /// </summary>
    NoteheadSlashWhiteDoubleWhole,
    /// <summary>
    /// White slash half.
    /// </summary>
    NoteheadSlashWhiteHalf,
    /// <summary>
    /// Muted white slash.
    /// </summary>
    NoteheadSlashWhiteMuted,
    /// <summary>
    /// White slash whole.
    /// </summary>
    NoteheadSlashWhiteWhole,
    /// <summary>
    /// Large X notehead.
    /// </summary>
    NoteheadSlashX,
    /// <summary>
    /// Slashed black notehead (bottom left to top right).
    /// </summary>
    NoteheadSlashedBlack1,
    /// <summary>
    /// Slashed black notehead (top left to bottom right).
    /// </summary>
    NoteheadSlashedBlack2,
    /// <summary>
    /// Slashed double whole notehead (bottom left to top right).
    /// </summary>
    NoteheadSlashedDoubleWhole1,
    /// <summary>
    /// Slashed double whole notehead (top left to bottom right).
    /// </summary>
    NoteheadSlashedDoubleWhole2,
    /// <summary>
    /// Slashed half notehead (bottom left to top right).
    /// </summary>
    NoteheadSlashedHalf1,
    /// <summary>
    /// Slashed half notehead (top left to bottom right).
    /// </summary>
    NoteheadSlashedHalf2,
    /// <summary>
    /// Slashed whole notehead (bottom left to top right).
    /// </summary>
    NoteheadSlashedWhole1,
    /// <summary>
    /// Slashed whole notehead (top left to bottom right).
    /// </summary>
    NoteheadSlashedWhole2,
    /// <summary>
    /// Square notehead black.
    /// </summary>
    NoteheadSquareBlack,
    /// <summary>
    /// Large square black notehead.
    /// </summary>
    NoteheadSquareBlackLarge,
    /// <summary>
    /// Large square white notehead.
    /// </summary>
    NoteheadSquareBlackWhite,
    /// <summary>
    /// Square notehead white.
    /// </summary>
    NoteheadSquareWhite,
    /// <summary>
    /// Triangle notehead down black.
    /// </summary>
    NoteheadTriangleDownBlack,
    /// <summary>
    /// Triangle notehead down double whole.
    /// </summary>
    NoteheadTriangleDownDoubleWhole,
    /// <summary>
    /// Triangle notehead down half.
    /// </summary>
    NoteheadTriangleDownHalf,
    /// <summary>
    /// Triangle notehead down white.
    /// </summary>
    NoteheadTriangleDownWhite,
    /// <summary>
    /// Triangle notehead down whole.
    /// </summary>
    NoteheadTriangleDownWhole,
    /// <summary>
    /// Triangle notehead left black.
    /// </summary>
    NoteheadTriangleLeftBlack,
    /// <summary>
    /// Triangle notehead left white.
    /// </summary>
    NoteheadTriangleLeftWhite,
    /// <summary>
    /// Triangle notehead right black.
    /// </summary>
    NoteheadTriangleRightBlack,
    /// <summary>
    /// Triangle notehead right white.
    /// </summary>
    NoteheadTriangleRightWhite,
    /// <summary>
    /// Triangle-round notehead down black.
    /// </summary>
    NoteheadTriangleRoundDownBlack,
    /// <summary>
    /// Triangle-round notehead down white.
    /// </summary>
    NoteheadTriangleRoundDownWhite,
    /// <summary>
    /// Triangle notehead up black.
    /// </summary>
    NoteheadTriangleUpBlack,
    /// <summary>
    /// Triangle notehead up double whole.
    /// </summary>
    NoteheadTriangleUpDoubleWhole,
    /// <summary>
    /// Triangle notehead up half.
    /// </summary>
    NoteheadTriangleUpHalf,
    /// <summary>
    /// Triangle notehead up right black.
    /// </summary>
    NoteheadTriangleUpRightBlack,
    /// <summary>
    /// Triangle notehead up right white.
    /// </summary>
    NoteheadTriangleUpRightWhite,
    /// <summary>
    /// Triangle notehead up white.
    /// </summary>
    NoteheadTriangleUpWhite,
    /// <summary>
    /// Triangle notehead up whole.
    /// </summary>
    NoteheadTriangleUpWhole,
    /// <summary>
    /// Void notehead with X.
    /// </summary>
    NoteheadVoidWithX,
    /// <summary>
    /// Whole (semibreve) notehead.
    /// </summary>
    NoteheadWhole,
    /// <summary>
    /// Filled whole (semibreve) notehead.
    /// </summary>
    NoteheadWholeFilled,
    /// <summary>
    /// Whole notehead with X.
    /// </summary>
    NoteheadWholeWithX,
    /// <summary>
    /// X notehead black.
    /// </summary>
    NoteheadXBlack,
    /// <summary>
    /// X notehead double whole.
    /// </summary>
    NoteheadXDoubleWhole,
    /// <summary>
    /// X notehead half.
    /// </summary>
    NoteheadXHalf,
    /// <summary>
    /// Ornate X notehead.
    /// </summary>
    NoteheadXOrnate,
    /// <summary>
    /// Ornate X notehead in ellipse.
    /// </summary>
    NoteheadXOrnateEllipse,
    /// <summary>
    /// X notehead whole.
    /// </summary>
    NoteheadXWhole,
    /// <summary>
    /// a (baseline).
    /// </summary>
    OctaveBaselineA,
    /// <summary>
    /// b (baseline).
    /// </summary>
    OctaveBaselineB,
    /// <summary>
    /// m (baseline).
    /// </summary>
    OctaveBaselineM,
    /// <summary>
    /// v (baseline).
    /// </summary>
    OctaveBaselineV,
    /// <summary>
    /// Bassa.
    /// </summary>
    OctaveBassa,
    /// <summary>
    /// Loco.
    /// </summary>
    OctaveLoco,
    /// <summary>
    /// Left parenthesis for octave signs.
    /// </summary>
    OctaveParensLeft,
    /// <summary>
    /// Right parenthesis for octave signs.
    /// </summary>
    OctaveParensRight,
    /// <summary>
    /// a (superscript).
    /// </summary>
    OctaveSuperscriptA,
    /// <summary>
    /// b (superscript).
    /// </summary>
    OctaveSuperscriptB,
    /// <summary>
    /// m (superscript).
    /// </summary>
    OctaveSuperscriptM,
    /// <summary>
    /// v (superscript).
    /// </summary>
    OctaveSuperscriptV,
    /// <summary>
    /// One-handed roll (Stevens).
    /// </summary>
    OneHandedRollStevens,
    /// <summary>
    /// Two Fusae.
    /// </summary>
    OrganGerman2Fusae,
    /// <summary>
    /// Two Minimae.
    /// </summary>
    OrganGerman2Minimae,
    /// <summary>
    /// Combining double octave line above.
    /// </summary>
    OrganGerman2OctaveUp,
    /// <summary>
    /// Two Semifusae.
    /// </summary>
    OrganGerman2Semifusae,
    /// <summary>
    /// Two Semiminimae.
    /// </summary>
    OrganGerman2Semiminimae,
    /// <summary>
    /// Three Fusae.
    /// </summary>
    OrganGerman3Fusae,
    /// <summary>
    /// Three Minimae.
    /// </summary>
    OrganGerman3Minimae,
    /// <summary>
    /// Three Semifusae.
    /// </summary>
    OrganGerman3Semifusae,
    /// <summary>
    /// Three Semiminimae.
    /// </summary>
    OrganGerman3Semiminimae,
    /// <summary>
    /// Four Fusae.
    /// </summary>
    OrganGerman4Fusae,
    /// <summary>
    /// Four Minimae.
    /// </summary>
    OrganGerman4Minimae,
    /// <summary>
    /// Four Semifusae.
    /// </summary>
    OrganGerman4Semifusae,
    /// <summary>
    /// Four Semiminimae.
    /// </summary>
    OrganGerman4Semiminimae,
    /// <summary>
    /// Five Fusae.
    /// </summary>
    OrganGerman5Fusae,
    /// <summary>
    /// Five Minimae.
    /// </summary>
    OrganGerman5Minimae,
    /// <summary>
    /// Five Semifusae.
    /// </summary>
    OrganGerman5Semifusae,
    /// <summary>
    /// Five Semiminimae.
    /// </summary>
    OrganGerman5Semiminimae,
    /// <summary>
    /// Six Fusae.
    /// </summary>
    OrganGerman6Fusae,
    /// <summary>
    /// Six Minimae.
    /// </summary>
    OrganGerman6Minimae,
    /// <summary>
    /// Six Semifusae.
    /// </summary>
    OrganGerman6Semifusae,
    /// <summary>
    /// Six Semiminimae.
    /// </summary>
    OrganGerman6Semiminimae,
    /// <summary>
    /// German organ tablature small A.
    /// </summary>
    OrganGermanALower,
    /// <summary>
    /// German organ tablature great A.
    /// </summary>
    OrganGermanAUpper,
    /// <summary>
    /// Rhythm Dot.
    /// </summary>
    OrganGermanAugmentationDot,
    /// <summary>
    /// German organ tablature small B.
    /// </summary>
    OrganGermanBLower,
    /// <summary>
    /// German organ tablature great B.
    /// </summary>
    OrganGermanBUpper,
    /// <summary>
    /// Brevis (Binary) Buxheimer Orgelbuch.
    /// </summary>
    OrganGermanBuxheimerBrevis2,
    /// <summary>
    /// Brevis (Ternary) Buxheimer Orgelbuch.
    /// </summary>
    OrganGermanBuxheimerBrevis3,
    /// <summary>
    /// Minima Rest Buxheimer Orgelbuch.
    /// </summary>
    OrganGermanBuxheimerMinimaRest,
    /// <summary>
    /// Semibrevis Buxheimer Orgelbuch.
    /// </summary>
    OrganGermanBuxheimerSemibrevis,
    /// <summary>
    /// Semibrevis Rest Buxheimer Orgelbuch.
    /// </summary>
    OrganGermanBuxheimerSemibrevisRest,
    /// <summary>
    /// German organ tablature small C.
    /// </summary>
    OrganGermanCLower,
    /// <summary>
    /// German organ tablature great C.
    /// </summary>
    OrganGermanCUpper,
    /// <summary>
    /// German organ tablature small Cis.
    /// </summary>
    OrganGermanCisLower,
    /// <summary>
    /// German organ tablature great Cis.
    /// </summary>
    OrganGermanCisUpper,
    /// <summary>
    /// German organ tablature small D.
    /// </summary>
    OrganGermanDLower,
    /// <summary>
    /// German organ tablature great D.
    /// </summary>
    OrganGermanDUpper,
    /// <summary>
    /// German organ tablature small Dis.
    /// </summary>
    OrganGermanDisLower,
    /// <summary>
    /// German organ tablature great Dis.
    /// </summary>
    OrganGermanDisUpper,
    /// <summary>
    /// German organ tablature small E.
    /// </summary>
    OrganGermanELower,
    /// <summary>
    /// German organ tablature great E.
    /// </summary>
    OrganGermanEUpper,
    /// <summary>
    /// German organ tablature small F.
    /// </summary>
    OrganGermanFLower,
    /// <summary>
    /// German organ tablature great F.
    /// </summary>
    OrganGermanFUpper,
    /// <summary>
    /// German organ tablature small Fis.
    /// </summary>
    OrganGermanFisLower,
    /// <summary>
    /// German organ tablature great Fis.
    /// </summary>
    OrganGermanFisUpper,
    /// <summary>
    /// Fusa.
    /// </summary>
    OrganGermanFusa,
    /// <summary>
    /// Fusa Rest.
    /// </summary>
    OrganGermanFusaRest,
    /// <summary>
    /// German organ tablature small G.
    /// </summary>
    OrganGermanGLower,
    /// <summary>
    /// German organ tablature great G.
    /// </summary>
    OrganGermanGUpper,
    /// <summary>
    /// German organ tablature small Gis.
    /// </summary>
    OrganGermanGisLower,
    /// <summary>
    /// German organ tablature great Gis.
    /// </summary>
    OrganGermanGisUpper,
    /// <summary>
    /// German organ tablature small H.
    /// </summary>
    OrganGermanHLower,
    /// <summary>
    /// German organ tablature great H.
    /// </summary>
    OrganGermanHUpper,
    /// <summary>
    /// Minima.
    /// </summary>
    OrganGermanMinima,
    /// <summary>
    /// Minima Rest.
    /// </summary>
    OrganGermanMinimaRest,
    /// <summary>
    /// Combining single octave line below.
    /// </summary>
    OrganGermanOctaveDown,
    /// <summary>
    /// Combining single octave line above.
    /// </summary>
    OrganGermanOctaveUp,
    /// <summary>
    /// Semibrevis.
    /// </summary>
    OrganGermanSemibrevis,
    /// <summary>
    /// Semibrevis Rest.
    /// </summary>
    OrganGermanSemibrevisRest,
    /// <summary>
    /// Semifusa.
    /// </summary>
    OrganGermanSemifusa,
    /// <summary>
    /// Semifusa Rest.
    /// </summary>
    OrganGermanSemifusaRest,
    /// <summary>
    /// Semiminima.
    /// </summary>
    OrganGermanSemiminima,
    /// <summary>
    /// Semiminima Rest.
    /// </summary>
    OrganGermanSemiminimaRest,
    /// <summary>
    /// Tie.
    /// </summary>
    OrganGermanTie,
    /// <summary>
    /// Ornament bottom left concave stroke.
    /// </summary>
    OrnamentBottomLeftConcaveStroke,
    /// <summary>
    /// Ornament bottom left concave stroke, large.
    /// </summary>
    OrnamentBottomLeftConcaveStrokeLarge,
    /// <summary>
    /// Ornament bottom left convex stroke.
    /// </summary>
    OrnamentBottomLeftConvexStroke,
    /// <summary>
    /// Ornament bottom right concave stroke.
    /// </summary>
    OrnamentBottomRightConcaveStroke,
    /// <summary>
    /// Ornament bottom right convex stroke.
    /// </summary>
    OrnamentBottomRightConvexStroke,
    /// <summary>
    /// Comma.
    /// </summary>
    OrnamentComma,
    /// <summary>
    /// Double oblique straight lines NW-SE.
    /// </summary>
    OrnamentDoubleObliqueLinesAfterNote,
    /// <summary>
    /// Double oblique straight lines SW-NE.
    /// </summary>
    OrnamentDoubleObliqueLinesBeforeNote,
    /// <summary>
    /// Curve below.
    /// </summary>
    OrnamentDownCurve,
    /// <summary>
    /// Haydn ornament.
    /// </summary>
    OrnamentHaydn,
    /// <summary>
    /// Ornament high left concave stroke.
    /// </summary>
    OrnamentHighLeftConcaveStroke,
    /// <summary>
    /// Ornament high left convex stroke.
    /// </summary>
    OrnamentHighLeftConvexStroke,
    /// <summary>
    /// Ornament high right concave stroke.
    /// </summary>
    OrnamentHighRightConcaveStroke,
    /// <summary>
    /// Ornament high right convex stroke.
    /// </summary>
    OrnamentHighRightConvexStroke,
    /// <summary>
    /// Hook after note.
    /// </summary>
    OrnamentHookAfterNote,
    /// <summary>
    /// Hook before note.
    /// </summary>
    OrnamentHookBeforeNote,
    /// <summary>
    /// Left-facing half circle.
    /// </summary>
    OrnamentLeftFacingHalfCircle,
    /// <summary>
    /// Left-facing hook.
    /// </summary>
    OrnamentLeftFacingHook,
    /// <summary>
    /// Ornament left +.
    /// </summary>
    OrnamentLeftPlus,
    /// <summary>
    /// Ornament left shake t.
    /// </summary>
    OrnamentLeftShakeT,
    /// <summary>
    /// Ornament left vertical stroke.
    /// </summary>
    OrnamentLeftVerticalStroke,
    /// <summary>
    /// Ornament left vertical stroke with cross (+).
    /// </summary>
    OrnamentLeftVerticalStrokeWithCross,
    /// <summary>
    /// Ornament low left concave stroke.
    /// </summary>
    OrnamentLowLeftConcaveStroke,
    /// <summary>
    /// Ornament low left convex stroke.
    /// </summary>
    OrnamentLowLeftConvexStroke,
    /// <summary>
    /// Ornament low right concave stroke.
    /// </summary>
    OrnamentLowRightConcaveStroke,
    /// <summary>
    /// Ornament low right convex stroke.
    /// </summary>
    OrnamentLowRightConvexStroke,
    /// <summary>
    /// Ornament middle vertical stroke.
    /// </summary>
    OrnamentMiddleVerticalStroke,
    /// <summary>
    /// Mordent.
    /// </summary>
    OrnamentMordent,
    /// <summary>
    /// Oblique straight line NW-SE.
    /// </summary>
    OrnamentObliqueLineAfterNote,
    /// <summary>
    /// Oblique straight line SW-NE.
    /// </summary>
    OrnamentObliqueLineBeforeNote,
    /// <summary>
    /// Oblique straight line tilted NW-SE.
    /// </summary>
    OrnamentObliqueLineHorizAfterNote,
    /// <summary>
    /// Oblique straight line tilted SW-NE.
    /// </summary>
    OrnamentObliqueLineHorizBeforeNote,
    /// <summary>
    /// Oriscus.
    /// </summary>
    OrnamentOriscus,
    /// <summary>
    /// Pincé (Couperin).
    /// </summary>
    OrnamentPinceCouperin,
    /// <summary>
    /// Port de voix.
    /// </summary>
    OrnamentPortDeVoixV,
    /// <summary>
    /// Supported appoggiatura trill.
    /// </summary>
    OrnamentPrecompAppoggTrill,
    /// <summary>
    /// Supported appoggiatura trill with two-note suffix.
    /// </summary>
    OrnamentPrecompAppoggTrillSuffix,
    /// <summary>
    /// Cadence.
    /// </summary>
    OrnamentPrecompCadence,
    /// <summary>
    /// Cadence with upper prefix.
    /// </summary>
    OrnamentPrecompCadenceUpperPrefix,
    /// <summary>
    /// Cadence with upper prefix and turn.
    /// </summary>
    OrnamentPrecompCadenceUpperPrefixTurn,
    /// <summary>
    /// Cadence with turn.
    /// </summary>
    OrnamentPrecompCadenceWithTurn,
    /// <summary>
    /// Descending slide.
    /// </summary>
    OrnamentPrecompDescendingSlide,
    /// <summary>
    /// Double cadence with lower prefix.
    /// </summary>
    OrnamentPrecompDoubleCadenceLowerPrefix,
    /// <summary>
    /// Double cadence with upper prefix.
    /// </summary>
    OrnamentPrecompDoubleCadenceUpperPrefix,
    /// <summary>
    /// Double cadence with upper prefix and turn.
    /// </summary>
    OrnamentPrecompDoubleCadenceUpperPrefixTurn,
    /// <summary>
    /// Inverted mordent with upper prefix.
    /// </summary>
    OrnamentPrecompInvertedMordentUpperPrefix,
    /// <summary>
    /// Mordent with release.
    /// </summary>
    OrnamentPrecompMordentRelease,
    /// <summary>
    /// Mordent with upper prefix.
    /// </summary>
    OrnamentPrecompMordentUpperPrefix,
    /// <summary>
    /// Pre-beat port de voix followed by multiple mordent (Dandrieu).
    /// </summary>
    OrnamentPrecompPortDeVoixMordent,
    /// <summary>
    /// Slide.
    /// </summary>
    OrnamentPrecompSlide,
    /// <summary>
    /// Slide-trill with two-note suffix (J.S. Bach).
    /// </summary>
    OrnamentPrecompSlideTrillBach,
    /// <summary>
    /// Slide-trill (D'Anglebert).
    /// </summary>
    OrnamentPrecompSlideTrillDAnglebert,
    /// <summary>
    /// Slide-trill with one-note suffix (Marpurg).
    /// </summary>
    OrnamentPrecompSlideTrillMarpurg,
    /// <summary>
    /// Slide-trill (Muffat).
    /// </summary>
    OrnamentPrecompSlideTrillMuffat,
    /// <summary>
    /// Slide-trill with two-note suffix (Muffat).
    /// </summary>
    OrnamentPrecompSlideTrillSuffixMuffat,
    /// <summary>
    /// Trill with lower suffix.
    /// </summary>
    OrnamentPrecompTrillLowerSuffix,
    /// <summary>
    /// Trill with two-note suffix (Dandrieu).
    /// </summary>
    OrnamentPrecompTrillSuffixDandrieu,
    /// <summary>
    /// Trill with mordent.
    /// </summary>
    OrnamentPrecompTrillWithMordent,
    /// <summary>
    /// Turn-trill with two-note suffix (J.S. Bach).
    /// </summary>
    OrnamentPrecompTurnTrillBach,
    /// <summary>
    /// Turn-trill (D'Anglebert).
    /// </summary>
    OrnamentPrecompTurnTrillDAnglebert,
    /// <summary>
    /// Quilisma.
    /// </summary>
    OrnamentQuilisma,
    /// <summary>
    /// Right-facing half circle.
    /// </summary>
    OrnamentRightFacingHalfCircle,
    /// <summary>
    /// Right-facing hook.
    /// </summary>
    OrnamentRightFacingHook,
    /// <summary>
    /// Ornament right vertical stroke.
    /// </summary>
    OrnamentRightVerticalStroke,
    /// <summary>
    /// Schleifer (long mordent).
    /// </summary>
    OrnamentSchleifer,
    /// <summary>
    /// Shake.
    /// </summary>
    OrnamentShake3,
    /// <summary>
    /// Shake (Muffat).
    /// </summary>
    OrnamentShakeMuffat1,
    /// <summary>
    /// Short oblique straight line NW-SE.
    /// </summary>
    OrnamentShortObliqueLineAfterNote,
    /// <summary>
    /// Short oblique straight line SW-NE.
    /// </summary>
    OrnamentShortObliqueLineBeforeNote,
    /// <summary>
    /// Short trill.
    /// </summary>
    OrnamentShortTrill,
    /// <summary>
    /// Ornament top left concave stroke.
    /// </summary>
    OrnamentTopLeftConcaveStroke,
    /// <summary>
    /// Ornament top left convex stroke.
    /// </summary>
    OrnamentTopLeftConvexStroke,
    /// <summary>
    /// Ornament top right concave stroke.
    /// </summary>
    OrnamentTopRightConcaveStroke,
    /// <summary>
    /// Ornament top right convex stroke.
    /// </summary>
    OrnamentTopRightConvexStroke,
    /// <summary>
    /// Tremblement.
    /// </summary>
    OrnamentTremblement,
    /// <summary>
    /// Tremblement appuyé (Couperin).
    /// </summary>
    OrnamentTremblementCouperin,
    /// <summary>
    /// Trill.
    /// </summary>
    OrnamentTrill,
    /// <summary>
    /// Turn.
    /// </summary>
    OrnamentTurn,
    /// <summary>
    /// Inverted turn.
    /// </summary>
    OrnamentTurnInverted,
    /// <summary>
    /// Turn with slash.
    /// </summary>
    OrnamentTurnSlash,
    /// <summary>
    /// Turn up.
    /// </summary>
    OrnamentTurnUp,
    /// <summary>
    /// Inverted turn up.
    /// </summary>
    OrnamentTurnUpS,
    /// <summary>
    /// Curve above.
    /// </summary>
    OrnamentUpCurve,
    /// <summary>
    /// Vertical line.
    /// </summary>
    OrnamentVerticalLine,
    /// <summary>
    /// Ornament zig-zag line without right-hand end.
    /// </summary>
    OrnamentZigZagLineNoRightEnd,
    /// <summary>
    /// Ornament zig-zag line with right-hand end.
    /// </summary>
    OrnamentZigZagLineWithRightEnd,
    /// <summary>
    /// Ottava.
    /// </summary>
    Ottava,
    /// <summary>
    /// Ottava alta.
    /// </summary>
    OttavaAlta,
    /// <summary>
    /// Ottava bassa.
    /// </summary>
    OttavaBassa,
    /// <summary>
    /// Ottava bassa (ba).
    /// </summary>
    OttavaBassaBa,
    /// <summary>
    /// Ottava bassa (8vb).
    /// </summary>
    OttavaBassaVb,
    /// <summary>
    /// Penderecki unmeasured tremolo.
    /// </summary>
    PendereckiTremolo,
    /// <summary>
    /// Agogo.
    /// </summary>
    PictAgogo,
    /// <summary>
    /// Almglocken.
    /// </summary>
    PictAlmglocken,
    /// <summary>
    /// Anvil.
    /// </summary>
    PictAnvil,
    /// <summary>
    /// Bamboo tube chimes.
    /// </summary>
    PictBambooChimes,
    /// <summary>
    /// Bamboo scraper.
    /// </summary>
    PictBambooScraper,
    /// <summary>
    /// Bass drum.
    /// </summary>
    PictBassDrum,
    /// <summary>
    /// Bass drum on side.
    /// </summary>
    PictBassDrumOnSide,
    /// <summary>
    /// Bow.
    /// </summary>
    PictBeaterBow,
    /// <summary>
    /// Box for percussion beater.
    /// </summary>
    PictBeaterBox,
    /// <summary>
    /// Brass mallets down.
    /// </summary>
    PictBeaterBrassMalletsDown,
    /// <summary>
    /// Brass mallets left.
    /// </summary>
    PictBeaterBrassMalletsLeft,
    /// <summary>
    /// Brass mallets right.
    /// </summary>
    PictBeaterBrassMalletsRight,
    /// <summary>
    /// Brass mallets up.
    /// </summary>
    PictBeaterBrassMalletsUp,
    /// <summary>
    /// Combining dashed circle for round beaters (plated).
    /// </summary>
    PictBeaterCombiningDashedCircle,
    /// <summary>
    /// Combining parentheses for round beaters (padded).
    /// </summary>
    PictBeaterCombiningParentheses,
    /// <summary>
    /// Double bass drum stick down.
    /// </summary>
    PictBeaterDoubleBassDrumDown,
    /// <summary>
    /// Double bass drum stick up.
    /// </summary>
    PictBeaterDoubleBassDrumUp,
    /// <summary>
    /// Finger.
    /// </summary>
    PictBeaterFinger,
    /// <summary>
    /// Fingernails.
    /// </summary>
    PictBeaterFingernails,
    /// <summary>
    /// Fist.
    /// </summary>
    PictBeaterFist,
    /// <summary>
    /// Guiro scraper.
    /// </summary>
    PictBeaterGuiroScraper,
    /// <summary>
    /// Hammer.
    /// </summary>
    PictBeaterHammer,
    /// <summary>
    /// Metal hammer, down.
    /// </summary>
    PictBeaterHammerMetalDown,
    /// <summary>
    /// Metal hammer, up.
    /// </summary>
    PictBeaterHammerMetalUp,
    /// <summary>
    /// Plastic hammer, down.
    /// </summary>
    PictBeaterHammerPlasticDown,
    /// <summary>
    /// Plastic hammer, up.
    /// </summary>
    PictBeaterHammerPlasticUp,
    /// <summary>
    /// Wooden hammer, down.
    /// </summary>
    PictBeaterHammerWoodDown,
    /// <summary>
    /// Wooden hammer, up.
    /// </summary>
    PictBeaterHammerWoodUp,
    /// <summary>
    /// Hand.
    /// </summary>
    PictBeaterHand,
    /// <summary>
    /// Hard bass drum stick down.
    /// </summary>
    PictBeaterHardBassDrumDown,
    /// <summary>
    /// Hard bass drum stick up.
    /// </summary>
    PictBeaterHardBassDrumUp,
    /// <summary>
    /// Hard glockenspiel stick down.
    /// </summary>
    PictBeaterHardGlockenspielDown,
    /// <summary>
    /// Hard glockenspiel stick left.
    /// </summary>
    PictBeaterHardGlockenspielLeft,
    /// <summary>
    /// Hard glockenspiel stick right.
    /// </summary>
    PictBeaterHardGlockenspielRight,
    /// <summary>
    /// Hard glockenspiel stick up.
    /// </summary>
    PictBeaterHardGlockenspielUp,
    /// <summary>
    /// Hard timpani stick down.
    /// </summary>
    PictBeaterHardTimpaniDown,
    /// <summary>
    /// Hard timpani stick left.
    /// </summary>
    PictBeaterHardTimpaniLeft,
    /// <summary>
    /// Hard timpani stick right.
    /// </summary>
    PictBeaterHardTimpaniRight,
    /// <summary>
    /// Hard timpani stick up.
    /// </summary>
    PictBeaterHardTimpaniUp,
    /// <summary>
    /// Hard xylophone stick down.
    /// </summary>
    PictBeaterHardXylophoneDown,
    /// <summary>
    /// Hard xylophone stick left.
    /// </summary>
    PictBeaterHardXylophoneLeft,
    /// <summary>
    /// Hard xylophone stick right.
    /// </summary>
    PictBeaterHardXylophoneRight,
    /// <summary>
    /// Hard xylophone stick up.
    /// </summary>
    PictBeaterHardXylophoneUp,
    /// <summary>
    /// Hard yarn beater down.
    /// </summary>
    PictBeaterHardYarnDown,
    /// <summary>
    /// Hard yarn beater left.
    /// </summary>
    PictBeaterHardYarnLeft,
    /// <summary>
    /// Hard yarn beater right.
    /// </summary>
    PictBeaterHardYarnRight,
    /// <summary>
    /// Hard yarn beater up.
    /// </summary>
    PictBeaterHardYarnUp,
    /// <summary>
    /// Jazz sticks down.
    /// </summary>
    PictBeaterJazzSticksDown,
    /// <summary>
    /// Jazz sticks up.
    /// </summary>
    PictBeaterJazzSticksUp,
    /// <summary>
    /// Knitting needle.
    /// </summary>
    PictBeaterKnittingNeedle,
    /// <summary>
    /// Chime hammer up.
    /// </summary>
    PictBeaterMallet,
    /// <summary>
    /// Chime hammer down.
    /// </summary>
    PictBeaterMalletDown,
    /// <summary>
    /// Medium bass drum stick down.
    /// </summary>
    PictBeaterMediumBassDrumDown,
    /// <summary>
    /// Medium bass drum stick up.
    /// </summary>
    PictBeaterMediumBassDrumUp,
    /// <summary>
    /// Medium timpani stick down.
    /// </summary>
    PictBeaterMediumTimpaniDown,
    /// <summary>
    /// Medium timpani stick left.
    /// </summary>
    PictBeaterMediumTimpaniLeft,
    /// <summary>
    /// Medium timpani stick right.
    /// </summary>
    PictBeaterMediumTimpaniRight,
    /// <summary>
    /// Medium timpani stick up.
    /// </summary>
    PictBeaterMediumTimpaniUp,
    /// <summary>
    /// Medium xylophone stick down.
    /// </summary>
    PictBeaterMediumXylophoneDown,
    /// <summary>
    /// Medium xylophone stick left.
    /// </summary>
    PictBeaterMediumXylophoneLeft,
    /// <summary>
    /// Medium xylophone stick right.
    /// </summary>
    PictBeaterMediumXylophoneRight,
    /// <summary>
    /// Medium xylophone stick up.
    /// </summary>
    PictBeaterMediumXylophoneUp,
    /// <summary>
    /// Medium yarn beater down.
    /// </summary>
    PictBeaterMediumYarnDown,
    /// <summary>
    /// Medium yarn beater left.
    /// </summary>
    PictBeaterMediumYarnLeft,
    /// <summary>
    /// Medium yarn beater right.
    /// </summary>
    PictBeaterMediumYarnRight,
    /// <summary>
    /// Medium yarn beater up.
    /// </summary>
    PictBeaterMediumYarnUp,
    /// <summary>
    /// Metal bass drum stick down.
    /// </summary>
    PictBeaterMetalBassDrumDown,
    /// <summary>
    /// Metal bass drum stick up.
    /// </summary>
    PictBeaterMetalBassDrumUp,
    /// <summary>
    /// Metal beater down.
    /// </summary>
    PictBeaterMetalDown,
    /// <summary>
    /// Metal hammer.
    /// </summary>
    PictBeaterMetalHammer,
    /// <summary>
    /// Metal beater, left.
    /// </summary>
    PictBeaterMetalLeft,
    /// <summary>
    /// Metal beater, right.
    /// </summary>
    PictBeaterMetalRight,
    /// <summary>
    /// Metal beater, up.
    /// </summary>
    PictBeaterMetalUp,
    /// <summary>
    /// Snare sticks down.
    /// </summary>
    PictBeaterSnareSticksDown,
    /// <summary>
    /// Snare sticks up.
    /// </summary>
    PictBeaterSnareSticksUp,
    /// <summary>
    /// Soft bass drum stick down.
    /// </summary>
    PictBeaterSoftBassDrumDown,
    /// <summary>
    /// Soft bass drum stick up.
    /// </summary>
    PictBeaterSoftBassDrumUp,
    /// <summary>
    /// Soft glockenspiel stick down.
    /// </summary>
    PictBeaterSoftGlockenspielDown,
    /// <summary>
    /// Soft glockenspiel stick left.
    /// </summary>
    PictBeaterSoftGlockenspielLeft,
    /// <summary>
    /// Soft glockenspiel stick right.
    /// </summary>
    PictBeaterSoftGlockenspielRight,
    /// <summary>
    /// Soft glockenspiel stick up.
    /// </summary>
    PictBeaterSoftGlockenspielUp,
    /// <summary>
    /// Soft timpani stick down.
    /// </summary>
    PictBeaterSoftTimpaniDown,
    /// <summary>
    /// Soft timpani stick left.
    /// </summary>
    PictBeaterSoftTimpaniLeft,
    /// <summary>
    /// Soft timpani stick right.
    /// </summary>
    PictBeaterSoftTimpaniRight,
    /// <summary>
    /// Soft timpani stick up.
    /// </summary>
    PictBeaterSoftTimpaniUp,
    /// <summary>
    /// Soft xylophone beaters.
    /// </summary>
    PictBeaterSoftXylophone,
    /// <summary>
    /// Soft xylophone stick down.
    /// </summary>
    PictBeaterSoftXylophoneDown,
    /// <summary>
    /// Soft xylophone stick left.
    /// </summary>
    PictBeaterSoftXylophoneLeft,
    /// <summary>
    /// Soft xylophone stick right.
    /// </summary>
    PictBeaterSoftXylophoneRight,
    /// <summary>
    /// Soft xylophone stick up.
    /// </summary>
    PictBeaterSoftXylophoneUp,
    /// <summary>
    /// Soft yarn beater down.
    /// </summary>
    PictBeaterSoftYarnDown,
    /// <summary>
    /// Soft yarn beater left.
    /// </summary>
    PictBeaterSoftYarnLeft,
    /// <summary>
    /// Soft yarn beater right.
    /// </summary>
    PictBeaterSoftYarnRight,
    /// <summary>
    /// Soft yarn beater up.
    /// </summary>
    PictBeaterSoftYarnUp,
    /// <summary>
    /// Spoon-shaped wooden mallet.
    /// </summary>
    PictBeaterSpoonWoodenMallet,
    /// <summary>
    /// Superball beater down.
    /// </summary>
    PictBeaterSuperballDown,
    /// <summary>
    /// Superball beater left.
    /// </summary>
    PictBeaterSuperballLeft,
    /// <summary>
    /// Superball beater right.
    /// </summary>
    PictBeaterSuperballRight,
    /// <summary>
    /// Superball beater up.
    /// </summary>
    PictBeaterSuperballUp,
    /// <summary>
    /// Triangle beater down.
    /// </summary>
    PictBeaterTriangleDown,
    /// <summary>
    /// Triangle beater plain.
    /// </summary>
    PictBeaterTrianglePlain,
    /// <summary>
    /// Triangle beater up.
    /// </summary>
    PictBeaterTriangleUp,
    /// <summary>
    /// Wire brushes down.
    /// </summary>
    PictBeaterWireBrushesDown,
    /// <summary>
    /// Wire brushes up.
    /// </summary>
    PictBeaterWireBrushesUp,
    /// <summary>
    /// Wood timpani stick down.
    /// </summary>
    PictBeaterWoodTimpaniDown,
    /// <summary>
    /// Wood timpani stick left.
    /// </summary>
    PictBeaterWoodTimpaniLeft,
    /// <summary>
    /// Wood timpani stick right.
    /// </summary>
    PictBeaterWoodTimpaniRight,
    /// <summary>
    /// Wood timpani stick up.
    /// </summary>
    PictBeaterWoodTimpaniUp,
    /// <summary>
    /// Wood xylophone stick down.
    /// </summary>
    PictBeaterWoodXylophoneDown,
    /// <summary>
    /// Wood xylophone stick left.
    /// </summary>
    PictBeaterWoodXylophoneLeft,
    /// <summary>
    /// Wood xylophone stick right.
    /// </summary>
    PictBeaterWoodXylophoneRight,
    /// <summary>
    /// Wood xylophone stick up.
    /// </summary>
    PictBeaterWoodXylophoneUp,
    /// <summary>
    /// Bell.
    /// </summary>
    PictBell,
    /// <summary>
    /// Bell of cymbal.
    /// </summary>
    PictBellOfCymbal,
    /// <summary>
    /// Bell plate.
    /// </summary>
    PictBellPlate,
    /// <summary>
    /// Bell tree.
    /// </summary>
    PictBellTree,
    /// <summary>
    /// Bird whistle.
    /// </summary>
    PictBirdWhistle,
    /// <summary>
    /// Board clapper.
    /// </summary>
    PictBoardClapper,
    /// <summary>
    /// Bongos.
    /// </summary>
    PictBongos,
    /// <summary>
    /// Brake drum.
    /// </summary>
    PictBrakeDrum,
    /// <summary>
    /// Cabasa.
    /// </summary>
    PictCabasa,
    /// <summary>
    /// Cannon.
    /// </summary>
    PictCannon,
    /// <summary>
    /// Car horn.
    /// </summary>
    PictCarHorn,
    /// <summary>
    /// Castanets.
    /// </summary>
    PictCastanets,
    /// <summary>
    /// Castanets with handle.
    /// </summary>
    PictCastanetsWithHandle,
    /// <summary>
    /// Celesta.
    /// </summary>
    PictCelesta,
    /// <summary>
    /// Cencerro.
    /// </summary>
    PictCencerro,
    /// <summary>
    /// Center (Weinberg).
    /// </summary>
    PictCenter1,
    /// <summary>
    /// Center (Ghent).
    /// </summary>
    PictCenter2,
    /// <summary>
    /// Center (Caltabiano).
    /// </summary>
    PictCenter3,
    /// <summary>
    /// Chain rattle.
    /// </summary>
    PictChainRattle,
    /// <summary>
    /// Chimes.
    /// </summary>
    PictChimes,
    /// <summary>
    /// Chinese cymbal.
    /// </summary>
    PictChineseCymbal,
    /// <summary>
    /// Choke (Weinberg).
    /// </summary>
    PictChokeCymbal,
    /// <summary>
    /// Claves.
    /// </summary>
    PictClaves,
    /// <summary>
    /// Coins.
    /// </summary>
    PictCoins,
    /// <summary>
    /// Conga.
    /// </summary>
    PictConga,
    /// <summary>
    /// Cow bell.
    /// </summary>
    PictCowBell,
    /// <summary>
    /// Crash cymbals.
    /// </summary>
    PictCrashCymbals,
    /// <summary>
    /// Crotales.
    /// </summary>
    PictCrotales,
    /// <summary>
    /// Combining crush for stem.
    /// </summary>
    PictCrushStem,
    /// <summary>
    /// Cuica.
    /// </summary>
    PictCuica,
    /// <summary>
    /// Cymbal tongs.
    /// </summary>
    PictCymbalTongs,
    /// <summary>
    /// Damp.
    /// </summary>
    PictDamp1,
    /// <summary>
    /// Damp 2.
    /// </summary>
    PictDamp2,
    /// <summary>
    /// Damp 3.
    /// </summary>
    PictDamp3,
    /// <summary>
    /// Damp 4.
    /// </summary>
    PictDamp4,
    /// <summary>
    /// Combining X for stem (dead note).
    /// </summary>
    PictDeadNoteStem,
    /// <summary>
    /// Drum stick.
    /// </summary>
    PictDrumStick,
    /// <summary>
    /// Duck call.
    /// </summary>
    PictDuckCall,
    /// <summary>
    /// Edge of cymbal.
    /// </summary>
    PictEdgeOfCymbal,
    /// <summary>
    /// Empty trapezoid.
    /// </summary>
    PictEmptyTrap,
    /// <summary>
    /// Finger cymbals.
    /// </summary>
    PictFingerCymbals,
    /// <summary>
    /// Flexatone.
    /// </summary>
    PictFlexatone,
    /// <summary>
    /// Football rattle.
    /// </summary>
    PictFootballRatchet,
    /// <summary>
    /// Glass harmonica.
    /// </summary>
    PictGlassHarmonica,
    /// <summary>
    /// Glass harp.
    /// </summary>
    PictGlassHarp,
    /// <summary>
    /// Glass plate chimes.
    /// </summary>
    PictGlassPlateChimes,
    /// <summary>
    /// Glass tube chimes.
    /// </summary>
    PictGlassTubeChimes,
    /// <summary>
    /// Glockenspiel.
    /// </summary>
    PictGlsp,
    /// <summary>
    /// Glockenspiel (Smith Brindle).
    /// </summary>
    PictGlspSmithBrindle,
    /// <summary>
    /// Goblet drum (djembe, dumbek).
    /// </summary>
    PictGobletDrum,
    /// <summary>
    /// Gong.
    /// </summary>
    PictGong,
    /// <summary>
    /// Gong with button (nipple).
    /// </summary>
    PictGongWithButton,
    /// <summary>
    /// Guiro.
    /// </summary>
    PictGuiro,
    /// <summary>
    /// Hard gum beater, down.
    /// </summary>
    PictGumHardDown,
    /// <summary>
    /// Hard gum beater, left.
    /// </summary>
    PictGumHardLeft,
    /// <summary>
    /// Hard gum beater, right.
    /// </summary>
    PictGumHardRight,
    /// <summary>
    /// Hard gum beater, up.
    /// </summary>
    PictGumHardUp,
    /// <summary>
    /// Medium gum beater, down.
    /// </summary>
    PictGumMediumDown,
    /// <summary>
    /// Medium gum beater, left.
    /// </summary>
    PictGumMediumLeft,
    /// <summary>
    /// Medium gum beater, right.
    /// </summary>
    PictGumMediumRight,
    /// <summary>
    /// Medium gum beater, up.
    /// </summary>
    PictGumMediumUp,
    /// <summary>
    /// Soft gum beater, down.
    /// </summary>
    PictGumSoftDown,
    /// <summary>
    /// Soft gum beater, left.
    /// </summary>
    PictGumSoftLeft,
    /// <summary>
    /// Soft gum beater, right.
    /// </summary>
    PictGumSoftRight,
    /// <summary>
    /// Soft gum beater, up.
    /// </summary>
    PictGumSoftUp,
    /// <summary>
    /// Half-open.
    /// </summary>
    PictHalfOpen1,
    /// <summary>
    /// Half-open 2 (Weinberg).
    /// </summary>
    PictHalfOpen2,
    /// <summary>
    /// Handbell.
    /// </summary>
    PictHandbell,
    /// <summary>
    /// Hi-hat.
    /// </summary>
    PictHiHat,
    /// <summary>
    /// Hi-hat cymbals on stand.
    /// </summary>
    PictHiHatOnStand,
    /// <summary>
    /// Jaw harp.
    /// </summary>
    PictJawHarp,
    /// <summary>
    /// Jingle bells.
    /// </summary>
    PictJingleBells,
    /// <summary>
    /// Klaxon horn.
    /// </summary>
    PictKlaxonHorn,
    /// <summary>
    /// Right hand (Agostini).
    /// </summary>
    PictLeftHandCircle,
    /// <summary>
    /// Lion's roar.
    /// </summary>
    PictLionsRoar,
    /// <summary>
    /// Lithophone.
    /// </summary>
    PictLithophone,
    /// <summary>
    /// Log drum.
    /// </summary>
    PictLogDrum,
    /// <summary>
    /// Lotus flute.
    /// </summary>
    PictLotusFlute,
    /// <summary>
    /// Marimba.
    /// </summary>
    PictMar,
    /// <summary>
    /// Marimba (Smith Brindle).
    /// </summary>
    PictMarSmithBrindle,
    /// <summary>
    /// Maraca.
    /// </summary>
    PictMaraca,
    /// <summary>
    /// Maracas.
    /// </summary>
    PictMaracas,
    /// <summary>
    /// Megaphone.
    /// </summary>
    PictMegaphone,
    /// <summary>
    /// Metal plate chimes.
    /// </summary>
    PictMetalPlateChimes,
    /// <summary>
    /// Metal tube chimes.
    /// </summary>
    PictMetalTubeChimes,
    /// <summary>
    /// Musical saw.
    /// </summary>
    PictMusicalSaw,
    /// <summary>
    /// Normal position (Caltabiano).
    /// </summary>
    PictNormalPosition,
    /// <summary>
    /// On rim.
    /// </summary>
    PictOnRim,
    /// <summary>
    /// Open.
    /// </summary>
    PictOpen,
    /// <summary>
    /// Closed / rim shot.
    /// </summary>
    PictOpenRimShot,
    /// <summary>
    /// Pistol shot.
    /// </summary>
    PictPistolShot,
    /// <summary>
    /// Police whistle.
    /// </summary>
    PictPoliceWhistle,
    /// <summary>
    /// Quijada (jawbone).
    /// </summary>
    PictQuijada,
    /// <summary>
    /// Rainstick.
    /// </summary>
    PictRainstick,
    /// <summary>
    /// Ratchet.
    /// </summary>
    PictRatchet,
    /// <summary>
    /// Reco-reco.
    /// </summary>
    PictRecoReco,
    /// <summary>
    /// Left hand (Agostini).
    /// </summary>
    PictRightHandSquare,
    /// <summary>
    /// Rim or edge (Weinberg).
    /// </summary>
    PictRim1,
    /// <summary>
    /// Rim (Ghent).
    /// </summary>
    PictRim2,
    /// <summary>
    /// Rim (Caltabiano).
    /// </summary>
    PictRim3,
    /// <summary>
    /// Rim shot for stem.
    /// </summary>
    PictRimShotOnStem,
    /// <summary>
    /// Sandpaper blocks.
    /// </summary>
    PictSandpaperBlocks,
    /// <summary>
    /// Scrape around rim (counter-clockwise).
    /// </summary>
    PictScrapeAroundRim,
    /// <summary>
    /// Scrape around rim (clockwise).
    /// </summary>
    PictScrapeAroundRimClockwise,
    /// <summary>
    /// Scrape from center to edge.
    /// </summary>
    PictScrapeCenterToEdge,
    /// <summary>
    /// Scrape from edge to center.
    /// </summary>
    PictScrapeEdgeToCenter,
    /// <summary>
    /// Shell bells.
    /// </summary>
    PictShellBells,
    /// <summary>
    /// Shell chimes.
    /// </summary>
    PictShellChimes,
    /// <summary>
    /// Siren.
    /// </summary>
    PictSiren,
    /// <summary>
    /// Sistrum.
    /// </summary>
    PictSistrum,
    /// <summary>
    /// Sizzle cymbal.
    /// </summary>
    PictSizzleCymbal,
    /// <summary>
    /// Sleigh bell.
    /// </summary>
    PictSleighBell,
    /// <summary>
    /// Slide brush on gong.
    /// </summary>
    PictSlideBrushOnGong,
    /// <summary>
    /// Slide whistle.
    /// </summary>
    PictSlideWhistle,
    /// <summary>
    /// Slit drum.
    /// </summary>
    PictSlitDrum,
    /// <summary>
    /// Snare drum.
    /// </summary>
    PictSnareDrum,
    /// <summary>
    /// Military snare drum.
    /// </summary>
    PictSnareDrumMilitary,
    /// <summary>
    /// Snare drum, snares off.
    /// </summary>
    PictSnareDrumSnaresOff,
    /// <summary>
    /// Steel drums.
    /// </summary>
    PictSteelDrums,
    /// <summary>
    /// Stick shot.
    /// </summary>
    PictStickShot,
    /// <summary>
    /// Superball.
    /// </summary>
    PictSuperball,
    /// <summary>
    /// Suspended cymbal.
    /// </summary>
    PictSuspendedCymbal,
    /// <summary>
    /// Combining swish for stem.
    /// </summary>
    PictSwishStem,
    /// <summary>
    /// Indian tabla.
    /// </summary>
    PictTabla,
    /// <summary>
    /// Tam-tam.
    /// </summary>
    PictTamTam,
    /// <summary>
    /// Tam-tam with beater (Smith Brindle).
    /// </summary>
    PictTamTamWithBeater,
    /// <summary>
    /// Tambourine.
    /// </summary>
    PictTambourine,
    /// <summary>
    /// Temple blocks.
    /// </summary>
    PictTempleBlocks,
    /// <summary>
    /// Tenor drum.
    /// </summary>
    PictTenorDrum,
    /// <summary>
    /// Thundersheet.
    /// </summary>
    PictThundersheet,
    /// <summary>
    /// Timbales.
    /// </summary>
    PictTimbales,
    /// <summary>
    /// Timpani.
    /// </summary>
    PictTimpani,
    /// <summary>
    /// Tom-tom.
    /// </summary>
    PictTomTom,
    /// <summary>
    /// Chinese tom-tom.
    /// </summary>
    PictTomTomChinese,
    /// <summary>
    /// Indo-American tom tom.
    /// </summary>
    PictTomTomIndoAmerican,
    /// <summary>
    /// Japanese tom-tom.
    /// </summary>
    PictTomTomJapanese,
    /// <summary>
    /// Triangle.
    /// </summary>
    PictTriangle,
    /// <summary>
    /// Tubaphone.
    /// </summary>
    PictTubaphone,
    /// <summary>
    /// Tubular bells.
    /// </summary>
    PictTubularBells,
    /// <summary>
    /// Combining turn left for stem.
    /// </summary>
    PictTurnLeftStem,
    /// <summary>
    /// Combining turn left or right for stem.
    /// </summary>
    PictTurnRightLeftStem,
    /// <summary>
    /// Combining turn right for stem.
    /// </summary>
    PictTurnRightStem,
    /// <summary>
    /// Vibraphone.
    /// </summary>
    PictVib,
    /// <summary>
    /// Metallophone (vibraphone motor off).
    /// </summary>
    PictVibMotorOff,
    /// <summary>
    /// Vibraphone (Smith Brindle).
    /// </summary>
    PictVibSmithBrindle,
    /// <summary>
    /// Vibraslap.
    /// </summary>
    PictVibraslap,
    /// <summary>
    /// Vietnamese hat cymbal.
    /// </summary>
    PictVietnameseHat,
    /// <summary>
    /// Whip.
    /// </summary>
    PictWhip,
    /// <summary>
    /// Wind chimes (glass).
    /// </summary>
    PictWindChimesGlass,
    /// <summary>
    /// Wind machine.
    /// </summary>
    PictWindMachine,
    /// <summary>
    /// Wind whistle (or mouth siren).
    /// </summary>
    PictWindWhistle,
    /// <summary>
    /// Wood block.
    /// </summary>
    PictWoodBlock,
    /// <summary>
    /// Wound beater, hard core down.
    /// </summary>
    PictWoundHardDown,
    /// <summary>
    /// Wound beater, hard core left.
    /// </summary>
    PictWoundHardLeft,
    /// <summary>
    /// Wound beater, hard core right.
    /// </summary>
    PictWoundHardRight,
    /// <summary>
    /// Wound beater, hard core up.
    /// </summary>
    PictWoundHardUp,
    /// <summary>
    /// Wound beater, soft core down.
    /// </summary>
    PictWoundSoftDown,
    /// <summary>
    /// Wound beater, soft core left.
    /// </summary>
    PictWoundSoftLeft,
    /// <summary>
    /// Wound beater, soft core right.
    /// </summary>
    PictWoundSoftRight,
    /// <summary>
    /// Wound beater, soft core up.
    /// </summary>
    PictWoundSoftUp,
    /// <summary>
    /// Xylophone.
    /// </summary>
    PictXyl,
    /// <summary>
    /// Bass xylophone.
    /// </summary>
    PictXylBass,
    /// <summary>
    /// Xylophone (Smith Brindle).
    /// </summary>
    PictXylSmithBrindle,
    /// <summary>
    /// Tenor xylophone.
    /// </summary>
    PictXylTenor,
    /// <summary>
    /// Trough tenor xylophone.
    /// </summary>
    PictXylTenorTrough,
    /// <summary>
    /// Trough xylophone.
    /// </summary>
    PictXylTrough,
    /// <summary>
    /// Buzz pizzicato.
    /// </summary>
    PluckedBuzzPizzicato,
    /// <summary>
    /// Damp.
    /// </summary>
    PluckedDamp,
    /// <summary>
    /// Damp all.
    /// </summary>
    PluckedDampAll,
    /// <summary>
    /// Damp for stem.
    /// </summary>
    PluckedDampOnStem,
    /// <summary>
    /// Fingernail flick.
    /// </summary>
    PluckedFingernailFlick,
    /// <summary>
    /// Left-hand pizzicato.
    /// </summary>
    PluckedLeftHandPizzicato,
    /// <summary>
    /// Plectrum.
    /// </summary>
    PluckedPlectrum,
    /// <summary>
    /// Snap pizzicato above.
    /// </summary>
    PluckedSnapPizzicatoAbove,
    /// <summary>
    /// Snap pizzicato below.
    /// </summary>
    PluckedSnapPizzicatoBelow,
    /// <summary>
    /// With fingernails.
    /// </summary>
    PluckedWithFingernails,
    /// <summary>
    /// Quindicesima.
    /// </summary>
    Quindicesima,
    /// <summary>
    /// Quindicesima alta.
    /// </summary>
    QuindicesimaAlta,
    /// <summary>
    /// Quindicesima bassa.
    /// </summary>
    QuindicesimaBassa,
    /// <summary>
    /// Quindicesima bassa (mb).
    /// </summary>
    QuindicesimaBassaMb,
    /// <summary>
    /// Repeat last bar.
    /// </summary>
    Repeat1Bar,
    /// <summary>
    /// Repeat last two bars.
    /// </summary>
    Repeat2Bars,
    /// <summary>
    /// Repeat last four bars.
    /// </summary>
    Repeat4Bars,
    /// <summary>
    /// Repeat bar lower dot.
    /// </summary>
    RepeatBarLowerDot,
    /// <summary>
    /// Repeat bar slash.
    /// </summary>
    RepeatBarSlash,
    /// <summary>
    /// Repeat bar upper dot.
    /// </summary>
    RepeatBarUpperDot,
    /// <summary>
    /// Single repeat dot.
    /// </summary>
    RepeatDot,
    /// <summary>
    /// Repeat dots.
    /// </summary>
    RepeatDots,
    /// <summary>
    /// Left (start) repeat sign.
    /// </summary>
    RepeatLeft,
    /// <summary>
    /// Right (end) repeat sign.
    /// </summary>
    RepeatRight,
    /// <summary>
    /// Right and left repeat sign.
    /// </summary>
    RepeatRightLeft,
    /// <summary>
    /// 1024th rest.
    /// </summary>
    Rest1024th,
    /// <summary>
    /// 128th (semihemidemisemiquaver) rest.
    /// </summary>
    Rest128th,
    /// <summary>
    /// 16th (semiquaver) rest.
    /// </summary>
    Rest16th,
    /// <summary>
    /// 256th rest.
    /// </summary>
    Rest256th,
    /// <summary>
    /// 32nd (demisemiquaver) rest.
    /// </summary>
    Rest32nd,
    /// <summary>
    /// 512th rest.
    /// </summary>
    Rest512th,
    /// <summary>
    /// 64th (hemidemisemiquaver) rest.
    /// </summary>
    Rest64th,
    /// <summary>
    /// Eighth (quaver) rest.
    /// </summary>
    Rest8th,
    /// <summary>
    /// Double whole (breve) rest.
    /// </summary>
    RestDoubleWhole,
    /// <summary>
    /// Double whole rest on leger lines.
    /// </summary>
    RestDoubleWholeLegerLine,
    /// <summary>
    /// Multiple measure rest.
    /// </summary>
    RestHBar,
    /// <summary>
    /// H-bar, left half.
    /// </summary>
    RestHBarLeft,
    /// <summary>
    /// H-bar, middle.
    /// </summary>
    RestHBarMiddle,
    /// <summary>
    /// H-bar, right half.
    /// </summary>
    RestHBarRight,
    /// <summary>
    /// Half (minim) rest.
    /// </summary>
    RestHalf,
    /// <summary>
    /// Half rest on leger line.
    /// </summary>
    RestHalfLegerLine,
    /// <summary>
    /// Longa rest.
    /// </summary>
    RestLonga,
    /// <summary>
    /// Maxima rest.
    /// </summary>
    RestMaxima,
    /// <summary>
    /// Quarter (crotchet) rest.
    /// </summary>
    RestQuarter,
    /// <summary>
    /// Old-style quarter (crotchet) rest.
    /// </summary>
    RestQuarterOld,
    /// <summary>
    /// Z-style quarter (crotchet) rest.
    /// </summary>
    RestQuarterZ,
    /// <summary>
    /// Whole (semibreve) rest.
    /// </summary>
    RestWhole,
    /// <summary>
    /// Whole rest on leger line.
    /// </summary>
    RestWholeLegerLine,
    /// <summary>
    /// Reversed brace.
    /// </summary>
    ReversedBrace,
    /// <summary>
    /// Reversed bracket bottom.
    /// </summary>
    ReversedBracketBottom,
    /// <summary>
    /// Reversed bracket top.
    /// </summary>
    ReversedBracketTop,
    /// <summary>
    /// Right repeat sign within bar.
    /// </summary>
    RightRepeatSmall,
    /// <summary>
    /// Scale degree 1.
    /// </summary>
    ScaleDegree1,
    /// <summary>
    /// Scale degree 2.
    /// </summary>
    ScaleDegree2,
    /// <summary>
    /// Scale degree 3.
    /// </summary>
    ScaleDegree3,
    /// <summary>
    /// Scale degree 4.
    /// </summary>
    ScaleDegree4,
    /// <summary>
    /// Scale degree 5.
    /// </summary>
    ScaleDegree5,
    /// <summary>
    /// Scale degree 6.
    /// </summary>
    ScaleDegree6,
    /// <summary>
    /// Scale degree 7.
    /// </summary>
    ScaleDegree7,
    /// <summary>
    /// Scale degree 8.
    /// </summary>
    ScaleDegree8,
    /// <summary>
    /// Scale degree 9.
    /// </summary>
    ScaleDegree9,
    /// <summary>
    /// Schäffer clef.
    /// </summary>
    SchaefferClef,
    /// <summary>
    /// Schäffer F clef to G clef change.
    /// </summary>
    SchaefferFClefToGClef,
    /// <summary>
    /// Schäffer G clef to F clef change.
    /// </summary>
    SchaefferGClefToFClef,
    /// <summary>
    /// Schäffer previous clef.
    /// </summary>
    SchaefferPreviousClef,
    /// <summary>
    /// Segno.
    /// </summary>
    Segno,
    /// <summary>
    /// Segno (serpent).
    /// </summary>
    SegnoSerpent1,
    /// <summary>
    /// Segno (serpent with vertical lines).
    /// </summary>
    SegnoSerpent2,
    /// <summary>
    /// Semi-pitched percussion clef 1.
    /// </summary>
    SemipitchedPercussionClef1,
    /// <summary>
    /// Semi-pitched percussion clef 2.
    /// </summary>
    SemipitchedPercussionClef2,
    /// <summary>
    /// Flat.
    /// </summary>
    SmnFlat,
    /// <summary>
    /// Flat (white).
    /// </summary>
    SmnFlatWhite,
    /// <summary>
    /// Double flat history sign.
    /// </summary>
    SmnHistoryDoubleFlat,
    /// <summary>
    /// Double sharp history sign.
    /// </summary>
    SmnHistoryDoubleSharp,
    /// <summary>
    /// Flat history sign.
    /// </summary>
    SmnHistoryFlat,
    /// <summary>
    /// Sharp history sign.
    /// </summary>
    SmnHistorySharp,
    /// <summary>
    /// Natural (N).
    /// </summary>
    SmnNatural,
    /// <summary>
    /// Sharp stem up.
    /// </summary>
    SmnSharp,
    /// <summary>
    /// Sharp stem down.
    /// </summary>
    SmnSharpDown,
    /// <summary>
    /// Sharp (white) stem up.
    /// </summary>
    SmnSharpWhite,
    /// <summary>
    /// Sharp (white) stem down.
    /// </summary>
    SmnSharpWhiteDown,
    /// <summary>
    /// Split bar divider (bar spans a system break).
    /// </summary>
    SplitBarDivider,
    /// <summary>
    /// 1-line staff.
    /// </summary>
    Staff1Line,
    /// <summary>
    /// 1-line staff (narrow).
    /// </summary>
    Staff1LineNarrow,
    /// <summary>
    /// 1-line staff (wide).
    /// </summary>
    Staff1LineWide,
    /// <summary>
    /// 2-line staff.
    /// </summary>
    Staff2Lines,
    /// <summary>
    /// 2-line staff (narrow).
    /// </summary>
    Staff2LinesNarrow,
    /// <summary>
    /// 2-line staff (wide).
    /// </summary>
    Staff2LinesWide,
    /// <summary>
    /// 3-line staff.
    /// </summary>
    Staff3Lines,
    /// <summary>
    /// 3-line staff (narrow).
    /// </summary>
    Staff3LinesNarrow,
    /// <summary>
    /// 3-line staff (wide).
    /// </summary>
    Staff3LinesWide,
    /// <summary>
    /// 4-line staff.
    /// </summary>
    Staff4Lines,
    /// <summary>
    /// 4-line staff (narrow).
    /// </summary>
    Staff4LinesNarrow,
    /// <summary>
    /// 4-line staff (wide).
    /// </summary>
    Staff4LinesWide,
    /// <summary>
    /// 5-line staff.
    /// </summary>
    Staff5Lines,
    /// <summary>
    /// 5-line staff (narrow).
    /// </summary>
    Staff5LinesNarrow,
    /// <summary>
    /// 5-line staff (wide).
    /// </summary>
    Staff5LinesWide,
    /// <summary>
    /// 6-line staff.
    /// </summary>
    Staff6Lines,
    /// <summary>
    /// 6-line staff (narrow).
    /// </summary>
    Staff6LinesNarrow,
    /// <summary>
    /// 6-line staff (wide).
    /// </summary>
    Staff6LinesWide,
    /// <summary>
    /// Staff divide arrow down.
    /// </summary>
    StaffDivideArrowDown,
    /// <summary>
    /// Staff divide arrow up.
    /// </summary>
    StaffDivideArrowUp,
    /// <summary>
    /// Staff divide arrows.
    /// </summary>
    StaffDivideArrowUpDown,
    /// <summary>
    /// Lower 1 staff position.
    /// </summary>
    StaffPosLower1,
    /// <summary>
    /// Lower 2 staff positions.
    /// </summary>
    StaffPosLower2,
    /// <summary>
    /// Lower 3 staff positions.
    /// </summary>
    StaffPosLower3,
    /// <summary>
    /// Lower 4 staff positions.
    /// </summary>
    StaffPosLower4,
    /// <summary>
    /// Lower 5 staff positions.
    /// </summary>
    StaffPosLower5,
    /// <summary>
    /// Lower 6 staff positions.
    /// </summary>
    StaffPosLower6,
    /// <summary>
    /// Lower 7 staff positions.
    /// </summary>
    StaffPosLower7,
    /// <summary>
    /// Lower 8 staff positions.
    /// </summary>
    StaffPosLower8,
    /// <summary>
    /// Raise 1 staff position.
    /// </summary>
    StaffPosRaise1,
    /// <summary>
    /// Raise 2 staff positions.
    /// </summary>
    StaffPosRaise2,
    /// <summary>
    /// Raise 3 staff positions.
    /// </summary>
    StaffPosRaise3,
    /// <summary>
    /// Raise 4 staff positions.
    /// </summary>
    StaffPosRaise4,
    /// <summary>
    /// Raise 5 staff positions.
    /// </summary>
    StaffPosRaise5,
    /// <summary>
    /// Raise 6 staff positions.
    /// </summary>
    StaffPosRaise6,
    /// <summary>
    /// Raise 7 staff positions.
    /// </summary>
    StaffPosRaise7,
    /// <summary>
    /// Raise 8 staff positions.
    /// </summary>
    StaffPosRaise8,
    /// <summary>
    /// Combining stem.
    /// </summary>
    Stem,
    /// <summary>
    /// Combining bow on bridge stem.
    /// </summary>
    StemBowOnBridge,
    /// <summary>
    /// Combining bow on tailpiece stem.
    /// </summary>
    StemBowOnTailpiece,
    /// <summary>
    /// Combining buzz roll stem.
    /// </summary>
    StemBuzzRoll,
    /// <summary>
    /// Combining damp stem.
    /// </summary>
    StemDamp,
    /// <summary>
    /// Combining harp string noise stem.
    /// </summary>
    StemHarpStringNoise,
    /// <summary>
    /// Combining multiphonics (black) stem.
    /// </summary>
    StemMultiphonicsBlack,
    /// <summary>
    /// Combining multiphonics (black and white) stem.
    /// </summary>
    StemMultiphonicsBlackWhite,
    /// <summary>
    /// Combining multiphonics (white) stem.
    /// </summary>
    StemMultiphonicsWhite,
    /// <summary>
    /// Combining Penderecki unmeasured tremolo stem.
    /// </summary>
    StemPendereckiTremolo,
    /// <summary>
    /// Combining rim shot stem.
    /// </summary>
    StemRimShot,
    /// <summary>
    /// Combining sprechgesang stem.
    /// </summary>
    StemSprechgesang,
    /// <summary>
    /// Combining sul ponticello (bow behind bridge) stem.
    /// </summary>
    StemSulPonticello,
    /// <summary>
    /// Combining sussurando stem.
    /// </summary>
    StemSussurando,
    /// <summary>
    /// Combining swished stem.
    /// </summary>
    StemSwished,
    /// <summary>
    /// Combining vibrato pulse accent (Saunders) stem.
    /// </summary>
    StemVibratoPulse,
    /// <summary>
    /// Stockhausen irregular tremolo ("Morsen", like Morse code).
    /// </summary>
    StockhausenTremolo,
    /// <summary>
    /// Bow behind bridge (sul ponticello).
    /// </summary>
    StringsBowBehindBridge,
    /// <summary>
    /// Bow behind bridge on four strings.
    /// </summary>
    StringsBowBehindBridgeFourStrings,
    /// <summary>
    /// Bow behind bridge on one string.
    /// </summary>
    StringsBowBehindBridgeOneString,
    /// <summary>
    /// Bow behind bridge on three strings.
    /// </summary>
    StringsBowBehindBridgeThreeStrings,
    /// <summary>
    /// Bow behind bridge on two strings.
    /// </summary>
    StringsBowBehindBridgeTwoStrings,
    /// <summary>
    /// Bow on top of bridge.
    /// </summary>
    StringsBowOnBridge,
    /// <summary>
    /// Bow on tailpiece.
    /// </summary>
    StringsBowOnTailpiece,
    /// <summary>
    /// Change bow direction, indeterminate.
    /// </summary>
    StringsChangeBowDirection,
    /// <summary>
    /// Down bow.
    /// </summary>
    StringsDownBow,
    /// <summary>
    /// Down bow, away from body.
    /// </summary>
    StringsDownBowAwayFromBody,
    /// <summary>
    /// Down bow, beyond bridge.
    /// </summary>
    StringsDownBowBeyondBridge,
    /// <summary>
    /// Down bow, towards body.
    /// </summary>
    StringsDownBowTowardsBody,
    /// <summary>
    /// Turned down bow.
    /// </summary>
    StringsDownBowTurned,
    /// <summary>
    /// Fouetté.
    /// </summary>
    StringsFouette,
    /// <summary>
    /// Half-harmonic.
    /// </summary>
    StringsHalfHarmonic,
    /// <summary>
    /// Harmonic.
    /// </summary>
    StringsHarmonic,
    /// <summary>
    /// Jeté (gettato) above.
    /// </summary>
    StringsJeteAbove,
    /// <summary>
    /// Jeté (gettato) below.
    /// </summary>
    StringsJeteBelow,
    /// <summary>
    /// Mute off.
    /// </summary>
    StringsMuteOff,
    /// <summary>
    /// Mute on.
    /// </summary>
    StringsMuteOn,
    /// <summary>
    /// Overpressure, down bow.
    /// </summary>
    StringsOverpressureDownBow,
    /// <summary>
    /// Overpressure, no bow direction.
    /// </summary>
    StringsOverpressureNoDirection,
    /// <summary>
    /// Overpressure possibile, down bow.
    /// </summary>
    StringsOverpressurePossibileDownBow,
    /// <summary>
    /// Overpressure possibile, up bow.
    /// </summary>
    StringsOverpressurePossibileUpBow,
    /// <summary>
    /// Overpressure, up bow.
    /// </summary>
    StringsOverpressureUpBow,
    /// <summary>
    /// Scrape, circular clockwise.
    /// </summary>
    StringsScrapeCircularClockwise,
    /// <summary>
    /// Scrape, circular counter-clockwise.
    /// </summary>
    StringsScrapeCircularCounterclockwise,
    /// <summary>
    /// Scrape, parallel inward.
    /// </summary>
    StringsScrapeParallelInward,
    /// <summary>
    /// Scrape, parallel outward.
    /// </summary>
    StringsScrapeParallelOutward,
    /// <summary>
    /// Thumb position.
    /// </summary>
    StringsThumbPosition,
    /// <summary>
    /// Turned thumb position.
    /// </summary>
    StringsThumbPositionTurned,
    /// <summary>
    /// Triple chop, inward.
    /// </summary>
    StringsTripleChopInward,
    /// <summary>
    /// Triple chop, outward.
    /// </summary>
    StringsTripleChopOutward,
    /// <summary>
    /// Up bow.
    /// </summary>
    StringsUpBow,
    /// <summary>
    /// Up bow, away from body.
    /// </summary>
    StringsUpBowAwayFromBody,
    /// <summary>
    /// Up bow, beyond bridge.
    /// </summary>
    StringsUpBowBeyondBridge,
    /// <summary>
    /// Up bow, towards body.
    /// </summary>
    StringsUpBowTowardsBody,
    /// <summary>
    /// Turned up bow.
    /// </summary>
    StringsUpBowTurned,
    /// <summary>
    /// Vibrato pulse accent (Saunders) for stem.
    /// </summary>
    StringsVibratoPulse,
    /// <summary>
    /// Swiss rudiments doublé black notehead.
    /// </summary>
    SwissRudimentsNoteheadBlackDouble,
    /// <summary>
    /// Swiss rudiments flam black notehead.
    /// </summary>
    SwissRudimentsNoteheadBlackFlam,
    /// <summary>
    /// Swiss rudiments doublé half (minim) notehead.
    /// </summary>
    SwissRudimentsNoteheadHalfDouble,
    /// <summary>
    /// Swiss rudiments flam half (minim) notehead.
    /// </summary>
    SwissRudimentsNoteheadHalfFlam,
    /// <summary>
    /// System divider.
    /// </summary>
    SystemDivider,
    /// <summary>
    /// Extra long system divider.
    /// </summary>
    SystemDividerExtraLong,
    /// <summary>
    /// Long system divider.
    /// </summary>
    SystemDividerLong,
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    TextAugmentationDot,
    /// <summary>
    /// Black note, fractional 16th beam, long stem.
    /// </summary>
    TextBlackNoteFrac16thLongStem,
    /// <summary>
    /// Black note, fractional 16th beam, short stem.
    /// </summary>
    TextBlackNoteFrac16thShortStem,
    /// <summary>
    /// Black note, fractional 32nd beam, long stem.
    /// </summary>
    TextBlackNoteFrac32ndLongStem,
    /// <summary>
    /// Black note, fractional 8th beam, long stem.
    /// </summary>
    TextBlackNoteFrac8thLongStem,
    /// <summary>
    /// Black note, fractional 8th beam, short stem.
    /// </summary>
    TextBlackNoteFrac8thShortStem,
    /// <summary>
    /// Black note, long stem.
    /// </summary>
    TextBlackNoteLongStem,
    /// <summary>
    /// Black note, short stem.
    /// </summary>
    TextBlackNoteShortStem,
    /// <summary>
    /// Continuing 16th beam for long stem.
    /// </summary>
    TextCont16thBeamLongStem,
    /// <summary>
    /// Continuing 16th beam for short stem.
    /// </summary>
    TextCont16thBeamShortStem,
    /// <summary>
    /// Continuing 32nd beam for long stem.
    /// </summary>
    TextCont32ndBeamLongStem,
    /// <summary>
    /// Continuing 8th beam for long stem.
    /// </summary>
    TextCont8thBeamLongStem,
    /// <summary>
    /// Continuing 8th beam for short stem.
    /// </summary>
    TextCont8thBeamShortStem,
    /// <summary>
    /// Headless black note, fractional 16th beam, long stem.
    /// </summary>
    TextHeadlessBlackNoteFrac16thLongStem,
    /// <summary>
    /// Headless black note, fractional 16th beam, short stem.
    /// </summary>
    TextHeadlessBlackNoteFrac16thShortStem,
    /// <summary>
    /// Headless black note, fractional 32nd beam, long stem.
    /// </summary>
    TextHeadlessBlackNoteFrac32ndLongStem,
    /// <summary>
    /// Headless black note, fractional 8th beam, long stem.
    /// </summary>
    TextHeadlessBlackNoteFrac8thLongStem,
    /// <summary>
    /// Headless black note, fractional 8th beam, short stem.
    /// </summary>
    TextHeadlessBlackNoteFrac8thShortStem,
    /// <summary>
    /// Headless black note, long stem.
    /// </summary>
    TextHeadlessBlackNoteLongStem,
    /// <summary>
    /// Headless black note, short stem.
    /// </summary>
    TextHeadlessBlackNoteShortStem,
    /// <summary>
    /// Tie.
    /// </summary>
    TextTie,
    /// <summary>
    /// Tuplet number 3 for long stem.
    /// </summary>
    TextTuplet3LongStem,
    /// <summary>
    /// Tuplet number 3 for short stem.
    /// </summary>
    TextTuplet3ShortStem,
    /// <summary>
    /// Tuplet bracket end for long stem.
    /// </summary>
    TextTupletBracketEndLongStem,
    /// <summary>
    /// Tuplet bracket end for short stem.
    /// </summary>
    TextTupletBracketEndShortStem,
    /// <summary>
    /// Tuplet bracket start for long stem.
    /// </summary>
    TextTupletBracketStartLongStem,
    /// <summary>
    /// Tuplet bracket start for short stem.
    /// </summary>
    TextTupletBracketStartShortStem,
    /// <summary>
    /// Time signature 0.
    /// </summary>
    TimeSig0,
    /// <summary>
    /// Reversed time signature 0.
    /// </summary>
    TimeSig0Reversed,
    /// <summary>
    /// Turned time signature 0.
    /// </summary>
    TimeSig0Turned,
    /// <summary>
    /// Time signature 1.
    /// </summary>
    TimeSig1,
    /// <summary>
    /// Reversed time signature 1.
    /// </summary>
    TimeSig1Reversed,
    /// <summary>
    /// Turned time signature 1.
    /// </summary>
    TimeSig1Turned,
    /// <summary>
    /// Time signature 2.
    /// </summary>
    TimeSig2,
    /// <summary>
    /// Reversed time signature 2.
    /// </summary>
    TimeSig2Reversed,
    /// <summary>
    /// Turned time signature 2.
    /// </summary>
    TimeSig2Turned,
    /// <summary>
    /// Time signature 3.
    /// </summary>
    TimeSig3,
    /// <summary>
    /// Reversed time signature 3.
    /// </summary>
    TimeSig3Reversed,
    /// <summary>
    /// Turned time signature 3.
    /// </summary>
    TimeSig3Turned,
    /// <summary>
    /// Time signature 4.
    /// </summary>
    TimeSig4,
    /// <summary>
    /// Reversed time signature 4.
    /// </summary>
    TimeSig4Reversed,
    /// <summary>
    /// Turned time signature 4.
    /// </summary>
    TimeSig4Turned,
    /// <summary>
    /// Time signature 5.
    /// </summary>
    TimeSig5,
    /// <summary>
    /// Reversed time signature 5.
    /// </summary>
    TimeSig5Reversed,
    /// <summary>
    /// Turned time signature 5.
    /// </summary>
    TimeSig5Turned,
    /// <summary>
    /// Time signature 6.
    /// </summary>
    TimeSig6,
    /// <summary>
    /// Reversed time signature 6.
    /// </summary>
    TimeSig6Reversed,
    /// <summary>
    /// Turned time signature 6.
    /// </summary>
    TimeSig6Turned,
    /// <summary>
    /// Time signature 7.
    /// </summary>
    TimeSig7,
    /// <summary>
    /// Reversed time signature 7.
    /// </summary>
    TimeSig7Reversed,
    /// <summary>
    /// Turned time signature 7.
    /// </summary>
    TimeSig7Turned,
    /// <summary>
    /// Time signature 8.
    /// </summary>
    TimeSig8,
    /// <summary>
    /// Reversed time signature 8.
    /// </summary>
    TimeSig8Reversed,
    /// <summary>
    /// Turned time signature 8.
    /// </summary>
    TimeSig8Turned,
    /// <summary>
    /// Time signature 9.
    /// </summary>
    TimeSig9,
    /// <summary>
    /// Reversed time signature 9.
    /// </summary>
    TimeSig9Reversed,
    /// <summary>
    /// Turned time signature 9.
    /// </summary>
    TimeSig9Turned,
    /// <summary>
    /// Left bracket for whole time signature.
    /// </summary>
    TimeSigBracketLeft,
    /// <summary>
    /// Left bracket for numerator only.
    /// </summary>
    TimeSigBracketLeftSmall,
    /// <summary>
    /// Right bracket for whole time signature.
    /// </summary>
    TimeSigBracketRight,
    /// <summary>
    /// Right bracket for numerator only.
    /// </summary>
    TimeSigBracketRightSmall,
    /// <summary>
    /// Control character for denominator digit.
    /// </summary>
    TimeSigCombDenominator,
    /// <summary>
    /// Control character for numerator digit.
    /// </summary>
    TimeSigCombNumerator,
    /// <summary>
    /// Time signature comma.
    /// </summary>
    TimeSigComma,
    /// <summary>
    /// Common time.
    /// </summary>
    TimeSigCommon,
    /// <summary>
    /// Reversed common time.
    /// </summary>
    TimeSigCommonReversed,
    /// <summary>
    /// Turned common time.
    /// </summary>
    TimeSigCommonTurned,
    /// <summary>
    /// Cut time (Bach).
    /// </summary>
    TimeSigCut2,
    /// <summary>
    /// Cut triple time (9/8).
    /// </summary>
    TimeSigCut3,
    /// <summary>
    /// Cut time.
    /// </summary>
    TimeSigCutCommon,
    /// <summary>
    /// Reversed cut time.
    /// </summary>
    TimeSigCutCommonReversed,
    /// <summary>
    /// Turned cut time.
    /// </summary>
    TimeSigCutCommonTurned,
    /// <summary>
    /// Time signature equals.
    /// </summary>
    TimeSigEquals,
    /// <summary>
    /// Time signature fraction ½.
    /// </summary>
    TimeSigFractionHalf,
    /// <summary>
    /// Time signature fraction ⅓.
    /// </summary>
    TimeSigFractionOneThird,
    /// <summary>
    /// Time signature fraction ¼.
    /// </summary>
    TimeSigFractionQuarter,
    /// <summary>
    /// Time signature fraction ¾.
    /// </summary>
    TimeSigFractionThreeQuarters,
    /// <summary>
    /// Time signature fraction ⅔.
    /// </summary>
    TimeSigFractionTwoThirds,
    /// <summary>
    /// Time signature fraction slash.
    /// </summary>
    TimeSigFractionalSlash,
    /// <summary>
    /// Time signature minus.
    /// </summary>
    TimeSigMinus,
    /// <summary>
    /// Time signature multiply.
    /// </summary>
    TimeSigMultiply,
    /// <summary>
    /// Open time signature (Penderecki).
    /// </summary>
    TimeSigOpenPenderecki,
    /// <summary>
    /// Left parenthesis for whole time signature.
    /// </summary>
    TimeSigParensLeft,
    /// <summary>
    /// Left parenthesis for numerator only.
    /// </summary>
    TimeSigParensLeftSmall,
    /// <summary>
    /// Right parenthesis for whole time signature.
    /// </summary>
    TimeSigParensRight,
    /// <summary>
    /// Right parenthesis for numerator only.
    /// </summary>
    TimeSigParensRightSmall,
    /// <summary>
    /// Time signature +.
    /// </summary>
    TimeSigPlus,
    /// <summary>
    /// Time signature + (for numerators).
    /// </summary>
    TimeSigPlusSmall,
    /// <summary>
    /// Time signature slash separator.
    /// </summary>
    TimeSigSlash,
    /// <summary>
    /// Open time signature.
    /// </summary>
    TimeSigX,
    /// <summary>
    /// Combining tremolo 1.
    /// </summary>
    Tremolo1,
    /// <summary>
    /// Combining tremolo 2.
    /// </summary>
    Tremolo2,
    /// <summary>
    /// Combining tremolo 3.
    /// </summary>
    Tremolo3,
    /// <summary>
    /// Combining tremolo 4.
    /// </summary>
    Tremolo4,
    /// <summary>
    /// Combining tremolo 5.
    /// </summary>
    Tremolo5,
    /// <summary>
    /// Divide measured tremolo by 2.
    /// </summary>
    TremoloDivisiDots2,
    /// <summary>
    /// Divide measured tremolo by 3.
    /// </summary>
    TremoloDivisiDots3,
    /// <summary>
    /// Divide measured tremolo by 4.
    /// </summary>
    TremoloDivisiDots4,
    /// <summary>
    /// Divide measured tremolo by 6.
    /// </summary>
    TremoloDivisiDots6,
    /// <summary>
    /// Fingered tremolo 1.
    /// </summary>
    TremoloFingered1,
    /// <summary>
    /// Fingered tremolo 2.
    /// </summary>
    TremoloFingered2,
    /// <summary>
    /// Fingered tremolo 3.
    /// </summary>
    TremoloFingered3,
    /// <summary>
    /// Fingered tremolo 4.
    /// </summary>
    TremoloFingered4,
    /// <summary>
    /// Fingered tremolo 5.
    /// </summary>
    TremoloFingered5,
    /// <summary>
    /// Triple-tongue above.
    /// </summary>
    TripleTongueAbove,
    /// <summary>
    /// Triple-tongue below.
    /// </summary>
    TripleTongueBelow,
    /// <summary>
    /// Tuplet 0.
    /// </summary>
    Tuplet0,
    /// <summary>
    /// Tuplet 1.
    /// </summary>
    Tuplet1,
    /// <summary>
    /// Tuplet 2.
    /// </summary>
    Tuplet2,
    /// <summary>
    /// Tuplet 3.
    /// </summary>
    Tuplet3,
    /// <summary>
    /// Tuplet 4.
    /// </summary>
    Tuplet4,
    /// <summary>
    /// Tuplet 5.
    /// </summary>
    Tuplet5,
    /// <summary>
    /// Tuplet 6.
    /// </summary>
    Tuplet6,
    /// <summary>
    /// Tuplet 7.
    /// </summary>
    Tuplet7,
    /// <summary>
    /// Tuplet 8.
    /// </summary>
    Tuplet8,
    /// <summary>
    /// Tuplet 9.
    /// </summary>
    Tuplet9,
    /// <summary>
    /// Tuplet colon.
    /// </summary>
    TupletColon,
    /// <summary>
    /// Wieniawski unmeasured tremolo.
    /// </summary>
    UnmeasuredTremolo,
    /// <summary>
    /// Wieniawski unmeasured tremolo (simpler).
    /// </summary>
    UnmeasuredTremoloSimple,
    /// <summary>
    /// Unpitched percussion clef 1.
    /// </summary>
    UnpitchedPercussionClef1,
    /// <summary>
    /// Unpitched percussion clef 2.
    /// </summary>
    UnpitchedPercussionClef2,
    /// <summary>
    /// Ventiduesima.
    /// </summary>
    Ventiduesima,
    /// <summary>
    /// Ventiduesima alta.
    /// </summary>
    VentiduesimaAlta,
    /// <summary>
    /// Ventiduesima bassa.
    /// </summary>
    VentiduesimaBassa,
    /// <summary>
    /// Ventiduesima bassa (mb).
    /// </summary>
    VentiduesimaBassaMb,
    /// <summary>
    /// Finger click (Stockhausen).
    /// </summary>
    VocalFingerClickStockhausen,
    /// <summary>
    /// Halb gesungen (semi-sprechgesang).
    /// </summary>
    VocalHalbGesungen,
    /// <summary>
    /// Mouth closed.
    /// </summary>
    VocalMouthClosed,
    /// <summary>
    /// Mouth open.
    /// </summary>
    VocalMouthOpen,
    /// <summary>
    /// Mouth pursed.
    /// </summary>
    VocalMouthPursed,
    /// <summary>
    /// Mouth slightly open.
    /// </summary>
    VocalMouthSlightlyOpen,
    /// <summary>
    /// Mouth wide open.
    /// </summary>
    VocalMouthWideOpen,
    /// <summary>
    /// Nasal voice.
    /// </summary>
    VocalNasalVoice,
    /// <summary>
    /// Sprechgesang.
    /// </summary>
    VocalSprechgesang,
    /// <summary>
    /// Tongue click (Stockhausen).
    /// </summary>
    VocalTongueClickStockhausen,
    /// <summary>
    /// Tongue and finger click (Stockhausen).
    /// </summary>
    VocalTongueFingerClickStockhausen,
    /// <summary>
    /// Combining sussurando for stem.
    /// </summary>
    VocalsSussurando,
    /// <summary>
    /// Arpeggiato wiggle segment, downwards.
    /// </summary>
    WiggleArpeggiatoDown,
    /// <summary>
    /// Arpeggiato arrowhead down.
    /// </summary>
    WiggleArpeggiatoDownArrow,
    /// <summary>
    /// Arpeggiato downward swash.
    /// </summary>
    WiggleArpeggiatoDownSwash,
    /// <summary>
    /// Arpeggiato wiggle segment, upwards.
    /// </summary>
    WiggleArpeggiatoUp,
    /// <summary>
    /// Arpeggiato arrowhead up.
    /// </summary>
    WiggleArpeggiatoUpArrow,
    /// <summary>
    /// Arpeggiato upward swash.
    /// </summary>
    WiggleArpeggiatoUpSwash,
    /// <summary>
    /// Circular motion segment.
    /// </summary>
    WiggleCircular,
    /// <summary>
    /// Constant circular motion segment.
    /// </summary>
    WiggleCircularConstant,
    /// <summary>
    /// Constant circular motion segment (flipped).
    /// </summary>
    WiggleCircularConstantFlipped,
    /// <summary>
    /// Constant circular motion segment (flipped, large).
    /// </summary>
    WiggleCircularConstantFlippedLarge,
    /// <summary>
    /// Constant circular motion segment (large).
    /// </summary>
    WiggleCircularConstantLarge,
    /// <summary>
    /// Circular motion end.
    /// </summary>
    WiggleCircularEnd,
    /// <summary>
    /// Circular motion segment, large.
    /// </summary>
    WiggleCircularLarge,
    /// <summary>
    /// Circular motion segment, larger.
    /// </summary>
    WiggleCircularLarger,
    /// <summary>
    /// Circular motion segment, larger still.
    /// </summary>
    WiggleCircularLargerStill,
    /// <summary>
    /// Circular motion segment, largest.
    /// </summary>
    WiggleCircularLargest,
    /// <summary>
    /// Circular motion segment, small.
    /// </summary>
    WiggleCircularSmall,
    /// <summary>
    /// Circular motion start.
    /// </summary>
    WiggleCircularStart,
    /// <summary>
    /// Glissando wiggle segment.
    /// </summary>
    WiggleGlissando,
    /// <summary>
    /// Group glissando 1.
    /// </summary>
    WiggleGlissandoGroup1,
    /// <summary>
    /// Group glissando 2.
    /// </summary>
    WiggleGlissandoGroup2,
    /// <summary>
    /// Group glissando 3.
    /// </summary>
    WiggleGlissandoGroup3,
    /// <summary>
    /// Quasi-random squiggle 1.
    /// </summary>
    WiggleRandom1,
    /// <summary>
    /// Quasi-random squiggle 2.
    /// </summary>
    WiggleRandom2,
    /// <summary>
    /// Quasi-random squiggle 3.
    /// </summary>
    WiggleRandom3,
    /// <summary>
    /// Quasi-random squiggle 4.
    /// </summary>
    WiggleRandom4,
    /// <summary>
    /// Sawtooth line segment.
    /// </summary>
    WiggleSawtooth,
    /// <summary>
    /// Narrow sawtooth line segment.
    /// </summary>
    WiggleSawtoothNarrow,
    /// <summary>
    /// Wide sawtooth line segment.
    /// </summary>
    WiggleSawtoothWide,
    /// <summary>
    /// Square wave line segment.
    /// </summary>
    WiggleSquareWave,
    /// <summary>
    /// Narrow square wave line segment.
    /// </summary>
    WiggleSquareWaveNarrow,
    /// <summary>
    /// Wide square wave line segment.
    /// </summary>
    WiggleSquareWaveWide,
    /// <summary>
    /// Trill wiggle segment.
    /// </summary>
    WiggleTrill,
    /// <summary>
    /// Trill wiggle segment, fast.
    /// </summary>
    WiggleTrillFast,
    /// <summary>
    /// Trill wiggle segment, faster.
    /// </summary>
    WiggleTrillFaster,
    /// <summary>
    /// Trill wiggle segment, faster still.
    /// </summary>
    WiggleTrillFasterStill,
    /// <summary>
    /// Trill wiggle segment, fastest.
    /// </summary>
    WiggleTrillFastest,
    /// <summary>
    /// Trill wiggle segment, slow.
    /// </summary>
    WiggleTrillSlow,
    /// <summary>
    /// Trill wiggle segment, slower.
    /// </summary>
    WiggleTrillSlower,
    /// <summary>
    /// Trill wiggle segment, slower still.
    /// </summary>
    WiggleTrillSlowerStill,
    /// <summary>
    /// Trill wiggle segment, slowest.
    /// </summary>
    WiggleTrillSlowest,
    /// <summary>
    /// Vibrato largest, slower.
    /// </summary>
    WiggleVIbratoLargestSlower,
    /// <summary>
    /// Vibrato medium, slower.
    /// </summary>
    WiggleVIbratoMediumSlower,
    /// <summary>
    /// Vibrato / shake wiggle segment.
    /// </summary>
    WiggleVibrato,
    /// <summary>
    /// Vibrato large, fast.
    /// </summary>
    WiggleVibratoLargeFast,
    /// <summary>
    /// Vibrato large, faster.
    /// </summary>
    WiggleVibratoLargeFaster,
    /// <summary>
    /// Vibrato large, faster still.
    /// </summary>
    WiggleVibratoLargeFasterStill,
    /// <summary>
    /// Vibrato large, fastest.
    /// </summary>
    WiggleVibratoLargeFastest,
    /// <summary>
    /// Vibrato large, slow.
    /// </summary>
    WiggleVibratoLargeSlow,
    /// <summary>
    /// Vibrato large, slower.
    /// </summary>
    WiggleVibratoLargeSlower,
    /// <summary>
    /// Vibrato large, slowest.
    /// </summary>
    WiggleVibratoLargeSlowest,
    /// <summary>
    /// Vibrato largest, fast.
    /// </summary>
    WiggleVibratoLargestFast,
    /// <summary>
    /// Vibrato largest, faster.
    /// </summary>
    WiggleVibratoLargestFaster,
    /// <summary>
    /// Vibrato largest, faster still.
    /// </summary>
    WiggleVibratoLargestFasterStill,
    /// <summary>
    /// Vibrato largest, fastest.
    /// </summary>
    WiggleVibratoLargestFastest,
    /// <summary>
    /// Vibrato largest, slow.
    /// </summary>
    WiggleVibratoLargestSlow,
    /// <summary>
    /// Vibrato largest, slowest.
    /// </summary>
    WiggleVibratoLargestSlowest,
    /// <summary>
    /// Vibrato medium, fast.
    /// </summary>
    WiggleVibratoMediumFast,
    /// <summary>
    /// Vibrato medium, faster.
    /// </summary>
    WiggleVibratoMediumFaster,
    /// <summary>
    /// Vibrato medium, faster still.
    /// </summary>
    WiggleVibratoMediumFasterStill,
    /// <summary>
    /// Vibrato medium, fastest.
    /// </summary>
    WiggleVibratoMediumFastest,
    /// <summary>
    /// Vibrato medium, slow.
    /// </summary>
    WiggleVibratoMediumSlow,
    /// <summary>
    /// Vibrato medium, slowest.
    /// </summary>
    WiggleVibratoMediumSlowest,
    /// <summary>
    /// Vibrato small, fast.
    /// </summary>
    WiggleVibratoSmallFast,
    /// <summary>
    /// Vibrato small, faster.
    /// </summary>
    WiggleVibratoSmallFaster,
    /// <summary>
    /// Vibrato small, faster still.
    /// </summary>
    WiggleVibratoSmallFasterStill,
    /// <summary>
    /// Vibrato small, fastest.
    /// </summary>
    WiggleVibratoSmallFastest,
    /// <summary>
    /// Vibrato small, slow.
    /// </summary>
    WiggleVibratoSmallSlow,
    /// <summary>
    /// Vibrato small, slower.
    /// </summary>
    WiggleVibratoSmallSlower,
    /// <summary>
    /// Vibrato small, slowest.
    /// </summary>
    WiggleVibratoSmallSlowest,
    /// <summary>
    /// Vibrato smallest, fast.
    /// </summary>
    WiggleVibratoSmallestFast,
    /// <summary>
    /// Vibrato smallest, faster.
    /// </summary>
    WiggleVibratoSmallestFaster,
    /// <summary>
    /// Vibrato smallest, faster still.
    /// </summary>
    WiggleVibratoSmallestFasterStill,
    /// <summary>
    /// Vibrato smallest, fastest.
    /// </summary>
    WiggleVibratoSmallestFastest,
    /// <summary>
    /// Vibrato smallest, slow.
    /// </summary>
    WiggleVibratoSmallestSlow,
    /// <summary>
    /// Vibrato smallest, slower.
    /// </summary>
    WiggleVibratoSmallestSlower,
    /// <summary>
    /// Vibrato smallest, slowest.
    /// </summary>
    WiggleVibratoSmallestSlowest,
    /// <summary>
    /// Vibrato start.
    /// </summary>
    WiggleVibratoStart,
    /// <summary>
    /// Wide vibrato / shake wiggle segment.
    /// </summary>
    WiggleVibratoWide,
    /// <summary>
    /// Wavy line segment.
    /// </summary>
    WiggleWavy,
    /// <summary>
    /// Narrow wavy line segment.
    /// </summary>
    WiggleWavyNarrow,
    /// <summary>
    /// Wide wavy line segment.
    /// </summary>
    WiggleWavyWide,
    /// <summary>
    /// Closed hole.
    /// </summary>
    WindClosedHole,
    /// <summary>
    /// Flatter embouchure.
    /// </summary>
    WindFlatEmbouchure,
    /// <summary>
    /// Half-closed hole.
    /// </summary>
    WindHalfClosedHole1,
    /// <summary>
    /// Half-closed hole 2.
    /// </summary>
    WindHalfClosedHole2,
    /// <summary>
    /// Half-open hole.
    /// </summary>
    WindHalfClosedHole3,
    /// <summary>
    /// Somewhat relaxed embouchure.
    /// </summary>
    WindLessRelaxedEmbouchure,
    /// <summary>
    /// Somewhat tight embouchure.
    /// </summary>
    WindLessTightEmbouchure,
    /// <summary>
    /// Mouthpiece or hand pop.
    /// </summary>
    WindMouthpiecePop,
    /// <summary>
    /// Combining multiphonics (black) for stem.
    /// </summary>
    WindMultiphonicsBlackStem,
    /// <summary>
    /// Combining multiphonics (black and white) for stem.
    /// </summary>
    WindMultiphonicsBlackWhiteStem,
    /// <summary>
    /// Combining multiphonics (white) for stem.
    /// </summary>
    WindMultiphonicsWhiteStem,
    /// <summary>
    /// Open hole.
    /// </summary>
    WindOpenHole,
    /// <summary>
    /// Much more reed (push inwards).
    /// </summary>
    WindReedPositionIn,
    /// <summary>
    /// Normal reed position.
    /// </summary>
    WindReedPositionNormal,
    /// <summary>
    /// Very little reed (pull outwards).
    /// </summary>
    WindReedPositionOut,
    /// <summary>
    /// Relaxed embouchure.
    /// </summary>
    WindRelaxedEmbouchure,
    /// <summary>
    /// Rim only.
    /// </summary>
    WindRimOnly,
    /// <summary>
    /// Sharper embouchure.
    /// </summary>
    WindSharpEmbouchure,
    /// <summary>
    /// Very tight embouchure / strong air pressure.
    /// </summary>
    WindStrongAirPressure,
    /// <summary>
    /// Three-quarters closed hole.
    /// </summary>
    WindThreeQuartersClosedHole,
    /// <summary>
    /// Tight embouchure.
    /// </summary>
    WindTightEmbouchure,
    /// <summary>
    /// Trill key.
    /// </summary>
    WindTrillKey,
    /// <summary>
    /// Very tight embouchure.
    /// </summary>
    WindVeryTightEmbouchure,
    /// <summary>
    /// Very relaxed embouchure / weak air-pressure.
    /// </summary>
    WindWeakAirPressure,
}

/// <summary>
/// All glyph name descriptions.
/// </summary>
public static class GlyphNameDescriptions
{
    /// <summary>
    /// 4-string tab clef.
    /// </summary>
    public const string FourStringTabClef = "4-string tab clef";
    /// <summary>
    /// 6-string tab clef.
    /// </summary>
    public const string SixStringTabClef = "6-string tab clef";
    /// <summary>
    /// 11 large diesis down, 3° down [46 EDO].
    /// </summary>
    public const string AccSagittal11LargeDiesisDown = "11 large diesis down, 3° down [46 EDO]";
    /// <summary>
    /// 11 large diesis up, (11L), (sharp less 11M), 3° up [46 EDO].
    /// </summary>
    public const string AccSagittal11LargeDiesisUp = "11 large diesis up, (11L), (sharp less 11M), 3° up [46 EDO]";
    /// <summary>
    /// 11 medium diesis down, 1°[17 31] 2°46 down, 1/4-tone down.
    /// </summary>
    public const string AccSagittal11MediumDiesisDown = "11 medium diesis down, 1°[17 31] 2°46 down, 1/4-tone down";
    /// <summary>
    /// 11 medium diesis up, (11M), 1°[17 31] 2°46 up, 1/4-tone up.
    /// </summary>
    public const string AccSagittal11MediumDiesisUp = "11 medium diesis up, (11M), 1°[17 31] 2°46 up, 1/4-tone up";
    /// <summary>
    /// 11:19 large diesis down.
    /// </summary>
    public const string AccSagittal11v19LargeDiesisDown = "11:19 large diesis down";
    /// <summary>
    /// 11:19 large diesis up, (11:19L, apotome less 11:19M).
    /// </summary>
    public const string AccSagittal11v19LargeDiesisUp = "11:19 large diesis up, (11:19L, apotome less 11:19M)";
    /// <summary>
    /// 11:19 medium diesis down.
    /// </summary>
    public const string AccSagittal11v19MediumDiesisDown = "11:19 medium diesis down";
    /// <summary>
    /// 11:19 medium diesis up, (11:19M, 11M plus 19s).
    /// </summary>
    public const string AccSagittal11v19MediumDiesisUp = "11:19 medium diesis up, (11:19M, 11M plus 19s)";
    /// <summary>
    /// 11:49 comma down.
    /// </summary>
    public const string AccSagittal11v49CommaDown = "11:49 comma down";
    /// <summary>
    /// 11:49 comma up, (11:49C, 11M less 49C).
    /// </summary>
    public const string AccSagittal11v49CommaUp = "11:49 comma up, (11:49C, 11M less 49C)";
    /// <summary>
    /// 143 comma down.
    /// </summary>
    public const string AccSagittal143CommaDown = "143 comma down";
    /// <summary>
    /// 143 comma up, (143C, 13L less 11M).
    /// </summary>
    public const string AccSagittal143CommaUp = "143 comma up, (143C, 13L less 11M)";
    /// <summary>
    /// 17 comma down.
    /// </summary>
    public const string AccSagittal17CommaDown = "17 comma down";
    /// <summary>
    /// 17 comma up, (17C).
    /// </summary>
    public const string AccSagittal17CommaUp = "17 comma up, (17C)";
    /// <summary>
    /// 17 kleisma down.
    /// </summary>
    public const string AccSagittal17KleismaDown = "17 kleisma down";
    /// <summary>
    /// 17 kleisma up, (17k).
    /// </summary>
    public const string AccSagittal17KleismaUp = "17 kleisma up, (17k)";
    /// <summary>
    /// 19 comma down.
    /// </summary>
    public const string AccSagittal19CommaDown = "19 comma down";
    /// <summary>
    /// 19 comma up, (19C).
    /// </summary>
    public const string AccSagittal19CommaUp = "19 comma up, (19C)";
    /// <summary>
    /// 19 schisma down.
    /// </summary>
    public const string AccSagittal19SchismaDown = "19 schisma down";
    /// <summary>
    /// 19 schisma up, (19s).
    /// </summary>
    public const string AccSagittal19SchismaUp = "19 schisma up, (19s)";
    /// <summary>
    /// 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down.
    /// </summary>
    public const string AccSagittal1MinaDown = "1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down";
    /// <summary>
    /// 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up.
    /// </summary>
    public const string AccSagittal1MinaUp = "1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up";
    /// <summary>
    /// 1 tina down, 7²⋅11⋅19/5-schismina down, 0.17 cents down.
    /// </summary>
    public const string AccSagittal1TinaDown = "1 tina down, 7²⋅11⋅19/5-schismina down, 0.17 cents down";
    /// <summary>
    /// 1 tina up, 7²⋅11⋅19/5-schismina up, 0.17 cents up.
    /// </summary>
    public const string AccSagittal1TinaUp = "1 tina up, 7²⋅11⋅19/5-schismina up, 0.17 cents up";
    /// <summary>
    /// 23 comma down, 2° down [96 EDO], 1/8-tone down.
    /// </summary>
    public const string AccSagittal23CommaDown = "23 comma down, 2° down [96 EDO], 1/8-tone down";
    /// <summary>
    /// 23 comma up, (23C), 2° up [96 EDO], 1/8-tone up.
    /// </summary>
    public const string AccSagittal23CommaUp = "23 comma up, (23C), 2° up [96 EDO], 1/8-tone up";
    /// <summary>
    /// 23 small diesis down.
    /// </summary>
    public const string AccSagittal23SmallDiesisDown = "23 small diesis down";
    /// <summary>
    /// 23 small diesis up, (23S).
    /// </summary>
    public const string AccSagittal23SmallDiesisUp = "23 small diesis up, (23S)";
    /// <summary>
    /// 25 small diesis down, 2° down [53 EDO].
    /// </summary>
    public const string AccSagittal25SmallDiesisDown = "25 small diesis down, 2° down [53 EDO]";
    /// <summary>
    /// 25 small diesis up, (25S, ~5:13S, ~37S, 5C plus 5C), 2° up [53 EDO].
    /// </summary>
    public const string AccSagittal25SmallDiesisUp = "25 small diesis up, (25S, ~5:13S, ~37S, 5C plus 5C), 2° up [53 EDO]";
    /// <summary>
    /// 2 minas down, 65/77-schismina down, 0.83 cents down.
    /// </summary>
    public const string AccSagittal2MinasDown = "2 minas down, 65/77-schismina down, 0.83 cents down";
    /// <summary>
    /// 2 minas up, 65/77-schismina up, 0.83 cents up.
    /// </summary>
    public const string AccSagittal2MinasUp = "2 minas up, 65/77-schismina up, 0.83 cents up";
    /// <summary>
    /// 2 tinas down, 1/(7³⋅17)-schismina down, 0.30 cents down.
    /// </summary>
    public const string AccSagittal2TinasDown = "2 tinas down, 1/(7³⋅17)-schismina down, 0.30 cents down";
    /// <summary>
    /// 2 tinas up, 1/(7³⋅17)-schismina up, 0.30 cents up.
    /// </summary>
    public const string AccSagittal2TinasUp = "2 tinas up, 1/(7³⋅17)-schismina up, 0.30 cents up";
    /// <summary>
    /// 35 large diesis down, 2° down [50 EDO], 5/18-tone down.
    /// </summary>
    public const string AccSagittal35LargeDiesisDown = "35 large diesis down, 2° down [50 EDO], 5/18-tone down";
    /// <summary>
    /// 35 large diesis up, (35L, ~13L, ~125L, sharp less 35M), 2°50 up.
    /// </summary>
    public const string AccSagittal35LargeDiesisUp = "35 large diesis up, (35L, ~13L, ~125L, sharp less 35M), 2°50 up";
    /// <summary>
    /// 35 medium diesis down, 1°[50] 2°[27] down, 2/9-tone down.
    /// </summary>
    public const string AccSagittal35MediumDiesisDown = "35 medium diesis down, 1°[50] 2°[27] down, 2/9-tone down";
    /// <summary>
    /// 35 medium diesis up, (35M, ~13M, ~125M, 5C plus 7C), 2/9-tone up.
    /// </summary>
    public const string AccSagittal35MediumDiesisUp = "35 medium diesis up, (35M, ~13M, ~125M, 5C plus 7C), 2/9-tone up";
    /// <summary>
    /// 3 tinas down, 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down.
    /// </summary>
    public const string AccSagittal3TinasDown = "3 tinas down, 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down";
    /// <summary>
    /// 3 tinas up, 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up.
    /// </summary>
    public const string AccSagittal3TinasUp = "3 tinas up, 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up";
    /// <summary>
    /// 49 large diesis down.
    /// </summary>
    public const string AccSagittal49LargeDiesisDown = "49 large diesis down";
    /// <summary>
    /// 49 large diesis up, (49L, ~31L, apotome less 49M).
    /// </summary>
    public const string AccSagittal49LargeDiesisUp = "49 large diesis up, (49L, ~31L, apotome less 49M)";
    /// <summary>
    /// 49 medium diesis down.
    /// </summary>
    public const string AccSagittal49MediumDiesisDown = "49 medium diesis down";
    /// <summary>
    /// 49 medium diesis up, (49M, ~31M, 7C plus 7C).
    /// </summary>
    public const string AccSagittal49MediumDiesisUp = "49 medium diesis up, (49M, ~31M, 7C plus 7C)";
    /// <summary>
    /// 49 small diesis down.
    /// </summary>
    public const string AccSagittal49SmallDiesisDown = "49 small diesis down";
    /// <summary>
    /// 49 small diesis up, (49S, ~31S).
    /// </summary>
    public const string AccSagittal49SmallDiesisUp = "49 small diesis up, (49S, ~31S)";
    /// <summary>
    /// 4 tinas down, 5²⋅11²/7-schismina down, 0.57 cents down.
    /// </summary>
    public const string AccSagittal4TinasDown = "4 tinas down, 5²⋅11²/7-schismina down, 0.57 cents down";
    /// <summary>
    /// 4 tinas up, 5²⋅11²/7-schismina up, 0.57 cents up.
    /// </summary>
    public const string AccSagittal4TinasUp = "4 tinas up, 5²⋅11²/7-schismina up, 0.57 cents up";
    /// <summary>
    /// 55 comma down, 3° down [96 EDO], 3/16-tone down.
    /// </summary>
    public const string AccSagittal55CommaDown = "55 comma down, 3° down [96 EDO], 3/16-tone down";
    /// <summary>
    /// 55 comma up, (55C, 11M less 5C), 3°up [96 EDO], 3/16-tone up.
    /// </summary>
    public const string AccSagittal55CommaUp = "55 comma up, (55C, 11M less 5C), 3°up [96 EDO], 3/16-tone up";
    /// <summary>
    /// 5 comma down, 1° down [22 27 29 34 41 46 53 96 EDOs], 1/12-tone down.
    /// </summary>
    public const string AccSagittal5CommaDown = "5 comma down, 1° down [22 27 29 34 41 46 53 96 EDOs], 1/12-tone down";
    /// <summary>
    /// 5 comma up, (5C), 1° up [22 27 29 34 41 46 53 96 EDOs], 1/12-tone up.
    /// </summary>
    public const string AccSagittal5CommaUp = "5 comma up, (5C), 1° up [22 27 29 34 41 46 53 96 EDOs], 1/12-tone up";
    /// <summary>
    /// 5 tinas down, 7⁴/25-schismina down, 0.72 cents down.
    /// </summary>
    public const string AccSagittal5TinasDown = "5 tinas down, 7⁴/25-schismina down, 0.72 cents down";
    /// <summary>
    /// 5 tinas up, 7⁴/25-schismina up, 0.72 cents up.
    /// </summary>
    public const string AccSagittal5TinasUp = "5 tinas up, 7⁴/25-schismina up, 0.72 cents up";
    /// <summary>
    /// 5:11 small diesis down.
    /// </summary>
    public const string AccSagittal5v11SmallDiesisDown = "5:11 small diesis down";
    /// <summary>
    /// 5:11 small diesis up, (5:11S, ~7:13S, ~11:17S, 5:7k plus 7:11C).
    /// </summary>
    public const string AccSagittal5v11SmallDiesisUp = "5:11 small diesis up, (5:11S, ~7:13S, ~11:17S, 5:7k plus 7:11C)";
    /// <summary>
    /// 5:13 large diesis down.
    /// </summary>
    public const string AccSagittal5v13LargeDiesisDown = "5:13 large diesis down";
    /// <summary>
    /// 5:13 large diesis up, (5:13L, ~37L, apotome less 5:13M).
    /// </summary>
    public const string AccSagittal5v13LargeDiesisUp = "5:13 large diesis up, (5:13L, ~37L, apotome less 5:13M)";
    /// <summary>
    /// 5:13 medium diesis down.
    /// </summary>
    public const string AccSagittal5v13MediumDiesisDown = "5:13 medium diesis down";
    /// <summary>
    /// 5:13 medium diesis up, (5:13M, ~37M, 5C plus 13C).
    /// </summary>
    public const string AccSagittal5v13MediumDiesisUp = "5:13 medium diesis up, (5:13M, ~37M, 5C plus 13C)";
    /// <summary>
    /// 5:19 comma down, 1/20-tone down.
    /// </summary>
    public const string AccSagittal5v19CommaDown = "5:19 comma down, 1/20-tone down";
    /// <summary>
    /// 5:19 comma up, (5:19C, 5C plus 19s), 1/20-tone up.
    /// </summary>
    public const string AccSagittal5v19CommaUp = "5:19 comma up, (5:19C, 5C plus 19s), 1/20-tone up";
    /// <summary>
    /// 5:23 small diesis down, 2° down [60 EDO], 1/5-tone down.
    /// </summary>
    public const string AccSagittal5v23SmallDiesisDown = "5:23 small diesis down, 2° down [60 EDO], 1/5-tone down";
    /// <summary>
    /// 5:23 small diesis up, (5:23S, 5C plus 23C), 2° up [60 EDO], 1/5-tone up.
    /// </summary>
    public const string AccSagittal5v23SmallDiesisUp = "5:23 small diesis up, (5:23S, 5C plus 23C), 2° up [60 EDO], 1/5-tone up";
    /// <summary>
    /// 5:49 medium diesis down.
    /// </summary>
    public const string AccSagittal5v49MediumDiesisDown = "5:49 medium diesis down";
    /// <summary>
    /// 5:49 medium diesis up, (5:49M, half apotome).
    /// </summary>
    public const string AccSagittal5v49MediumDiesisUp = "5:49 medium diesis up, (5:49M, half apotome)";
    /// <summary>
    /// 5:7 kleisma down.
    /// </summary>
    public const string AccSagittal5v7KleismaDown = "5:7 kleisma down";
    /// <summary>
    /// 5:7 kleisma up, (5:7k, ~11:13k, 7C less 5C).
    /// </summary>
    public const string AccSagittal5v7KleismaUp = "5:7 kleisma up, (5:7k, ~11:13k, 7C less 5C)";
    /// <summary>
    /// 6 tinas down, 2 minas down, 65/77-schismina down, 0.83 cents down.
    /// </summary>
    public const string AccSagittal6TinasDown = "6 tinas down, 2 minas down, 65/77-schismina down, 0.83 cents down";
    /// <summary>
    /// 6 tinas up, 2 minas up, 65/77-schismina up, 0.83 cents up.
    /// </summary>
    public const string AccSagittal6TinasUp = "6 tinas up, 2 minas up, 65/77-schismina up, 0.83 cents up";
    /// <summary>
    /// 7 comma down, 1° down [43 EDO], 2° down [72 EDO], 1/6-tone down.
    /// </summary>
    public const string AccSagittal7CommaDown = "7 comma down, 1° down [43 EDO], 2° down [72 EDO], 1/6-tone down";
    /// <summary>
    /// 7 comma up, (7C), 1° up [43 EDO], 2° up [72 EDO], 1/6-tone up.
    /// </summary>
    public const string AccSagittal7CommaUp = "7 comma up, (7C), 1° up [43 EDO], 2° up [72 EDO], 1/6-tone up";
    /// <summary>
    /// 7 tinas down, 7/(5²⋅17)-schismina down, 1.02 cents down.
    /// </summary>
    public const string AccSagittal7TinasDown = "7 tinas down, 7/(5²⋅17)-schismina down, 1.02 cents down";
    /// <summary>
    /// 7 tinas up, 7/(5²⋅17)-schismina up, 1.02 cents up.
    /// </summary>
    public const string AccSagittal7TinasUp = "7 tinas up, 7/(5²⋅17)-schismina up, 1.02 cents up";
    /// <summary>
    /// 7:11 comma down, 1° down [60 EDO], 1/10-tone down.
    /// </summary>
    public const string AccSagittal7v11CommaDown = "7:11 comma down, 1° down [60 EDO], 1/10-tone down";
    /// <summary>
    /// 7:11 comma up, (7:11C, ~13:17S, ~29S, 11L less 7C), 1° up [60 EDO].
    /// </summary>
    public const string AccSagittal7v11CommaUp = "7:11 comma up, (7:11C, ~13:17S, ~29S, 11L less 7C), 1° up [60 EDO]";
    /// <summary>
    /// 7:11 kleisma down.
    /// </summary>
    public const string AccSagittal7v11KleismaDown = "7:11 kleisma down";
    /// <summary>
    /// 7:11 kleisma up, (7:11k, ~29k).
    /// </summary>
    public const string AccSagittal7v11KleismaUp = "7:11 kleisma up, (7:11k, ~29k)";
    /// <summary>
    /// 7:19 comma down.
    /// </summary>
    public const string AccSagittal7v19CommaDown = "7:19 comma down";
    /// <summary>
    /// 7:19 comma up, (7:19C, 7C less 19s).
    /// </summary>
    public const string AccSagittal7v19CommaUp = "7:19 comma up, (7:19C, 7C less 19s)";
    /// <summary>
    /// 8 tinas down, 11⋅17/(5²⋅7)-schismina down, 1.14 cents down.
    /// </summary>
    public const string AccSagittal8TinasDown = "8 tinas down, 11⋅17/(5²⋅7)-schismina down, 1.14 cents down";
    /// <summary>
    /// 8 tinas up, 11⋅17/(5²⋅7)-schismina up, 1.14 cents up.
    /// </summary>
    public const string AccSagittal8TinasUp = "8 tinas up, 11⋅17/(5²⋅7)-schismina up, 1.14 cents up";
    /// <summary>
    /// 9 tinas down, 1/(7²⋅11)-schismina down, 1.26 cents down.
    /// </summary>
    public const string AccSagittal9TinasDown = "9 tinas down, 1/(7²⋅11)-schismina down, 1.26 cents down";
    /// <summary>
    /// 9 tinas up, 1/(7²⋅11)-schismina up, 1.26 cents up.
    /// </summary>
    public const string AccSagittal9TinasUp = "9 tinas up, 1/(7²⋅11)-schismina up, 1.26 cents up";
    /// <summary>
    /// Acute, 5 schisma up (5s), 2 cents up.
    /// </summary>
    public const string AccSagittalAcute = "Acute, 5 schisma up (5s), 2 cents up";
    /// <summary>
    /// Double flat, (2 apotomes down)[almost all EDOs], whole-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat = "Double flat, (2 apotomes down)[almost all EDOs], whole-tone down";
    /// <summary>
    /// Double flat 11:49C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat11v49CUp = "Double flat 11:49C-up";
    /// <summary>
    /// Double flat 143C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat143CUp = "Double flat 143C-up";
    /// <summary>
    /// Double flat 17C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat17CUp = "Double flat 17C-up";
    /// <summary>
    /// Double flat 17k-up.
    /// </summary>
    public const string AccSagittalDoubleFlat17kUp = "Double flat 17k-up";
    /// <summary>
    /// Double flat 19C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat19CUp = "Double flat 19C-up";
    /// <summary>
    /// Double flat 19s-up.
    /// </summary>
    public const string AccSagittalDoubleFlat19sUp = "Double flat 19s-up";
    /// <summary>
    /// Double flat 23C-up, 14° down [96 EDO], 7/8-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat23CUp = "Double flat 23C-up, 14° down [96 EDO], 7/8-tone down";
    /// <summary>
    /// Double flat 23S-up.
    /// </summary>
    public const string AccSagittalDoubleFlat23SUp = "Double flat 23S-up";
    /// <summary>
    /// Double flat 25S-up, 8°down [53 EDO].
    /// </summary>
    public const string AccSagittalDoubleFlat25SUp = "Double flat 25S-up, 8°down [53 EDO]";
    /// <summary>
    /// Double flat 49S-up.
    /// </summary>
    public const string AccSagittalDoubleFlat49SUp = "Double flat 49S-up";
    /// <summary>
    /// Double flat 55C-up, 13° down [96 EDO], 13/16-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat55CUp = "Double flat 55C-up, 13° down [96 EDO], 13/16-tone down";
    /// <summary>
    /// Double flat 5C-up, 5°[22 29] 7°[34 41] 9°53 down, 11/12 tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat5CUp = "Double flat 5C-up, 5°[22 29] 7°[34 41] 9°53 down, 11/12 tone down";
    /// <summary>
    /// Double flat 5:11S-up.
    /// </summary>
    public const string AccSagittalDoubleFlat5v11SUp = "Double flat 5:11S-up";
    /// <summary>
    /// Double flat 5:19C-up, 19/20-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat5v19CUp = "Double flat 5:19C-up, 19/20-tone down";
    /// <summary>
    /// Double flat 5:23S-up, 8° down [60 EDO], 4/5-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat5v23SUp = "Double flat 5:23S-up, 8° down [60 EDO], 4/5-tone down";
    /// <summary>
    /// Double flat 5:7k-up.
    /// </summary>
    public const string AccSagittalDoubleFlat5v7kUp = "Double flat 5:7k-up";
    /// <summary>
    /// Double flat 7C-up, 5° down [43 EDO], 10° down [72 EDO], 5/6-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat7CUp = "Double flat 7C-up, 5° down [43 EDO], 10° down [72 EDO], 5/6-tone down";
    /// <summary>
    /// Double flat 7:11C-up, 9° down [60 EDO], 9/10-tone down.
    /// </summary>
    public const string AccSagittalDoubleFlat7v11CUp = "Double flat 7:11C-up, 9° down [60 EDO], 9/10-tone down";
    /// <summary>
    /// Double flat 7:11k-up.
    /// </summary>
    public const string AccSagittalDoubleFlat7v11kUp = "Double flat 7:11k-up";
    /// <summary>
    /// Double flat 7:19C-up.
    /// </summary>
    public const string AccSagittalDoubleFlat7v19CUp = "Double flat 7:19C-up";
    /// <summary>
    /// Double sharp, (2 apotomes up)[almost all EDOs], whole-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp = "Double sharp, (2 apotomes up)[almost all EDOs], whole-tone up";
    /// <summary>
    /// Double sharp 11:49C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp11v49CDown = "Double sharp 11:49C-down";
    /// <summary>
    /// Double sharp 143C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp143CDown = "Double sharp 143C-down";
    /// <summary>
    /// Double sharp 17C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp17CDown = "Double sharp 17C-down";
    /// <summary>
    /// Double sharp 17k-down.
    /// </summary>
    public const string AccSagittalDoubleSharp17kDown = "Double sharp 17k-down";
    /// <summary>
    /// Double sharp 19C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp19CDown = "Double sharp 19C-down";
    /// <summary>
    /// Double sharp 19s-down.
    /// </summary>
    public const string AccSagittalDoubleSharp19sDown = "Double sharp 19s-down";
    /// <summary>
    /// Double sharp 23C-down, 14°up [96 EDO], 7/8-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp23CDown = "Double sharp 23C-down, 14°up [96 EDO], 7/8-tone up";
    /// <summary>
    /// Double sharp 23S-down.
    /// </summary>
    public const string AccSagittalDoubleSharp23SDown = "Double sharp 23S-down";
    /// <summary>
    /// Double sharp 25S-down, 8°up [53 EDO].
    /// </summary>
    public const string AccSagittalDoubleSharp25SDown = "Double sharp 25S-down, 8°up [53 EDO]";
    /// <summary>
    /// Double sharp 49S-down.
    /// </summary>
    public const string AccSagittalDoubleSharp49SDown = "Double sharp 49S-down";
    /// <summary>
    /// Double sharp 55C-down, 13° up [96 EDO], 13/16-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp55CDown = "Double sharp 55C-down, 13° up [96 EDO], 13/16-tone up";
    /// <summary>
    /// Double sharp 5C-down, 5°[22 29] 7°[34 41] 9°53 up, 11/12 tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp5CDown = "Double sharp 5C-down, 5°[22 29] 7°[34 41] 9°53 up, 11/12 tone up";
    /// <summary>
    /// Double sharp 5:11S-down.
    /// </summary>
    public const string AccSagittalDoubleSharp5v11SDown = "Double sharp 5:11S-down";
    /// <summary>
    /// Double sharp 5:19C-down, 19/20-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp5v19CDown = "Double sharp 5:19C-down, 19/20-tone up";
    /// <summary>
    /// Double sharp 5:23S-down, 8° up [60 EDO], 4/5-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp5v23SDown = "Double sharp 5:23S-down, 8° up [60 EDO], 4/5-tone up";
    /// <summary>
    /// Double sharp 5:7k-down.
    /// </summary>
    public const string AccSagittalDoubleSharp5v7kDown = "Double sharp 5:7k-down";
    /// <summary>
    /// Double sharp 7C-down, 5°[43] 10°[72] up, 5/6-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp7CDown = "Double sharp 7C-down, 5°[43] 10°[72] up, 5/6-tone up";
    /// <summary>
    /// Double sharp 7:11C-down, 9° up [60 EDO], 9/10-tone up.
    /// </summary>
    public const string AccSagittalDoubleSharp7v11CDown = "Double sharp 7:11C-down, 9° up [60 EDO], 9/10-tone up";
    /// <summary>
    /// Double sharp 7:11k-down.
    /// </summary>
    public const string AccSagittalDoubleSharp7v11kDown = "Double sharp 7:11k-down";
    /// <summary>
    /// Double sharp 7:19C-down.
    /// </summary>
    public const string AccSagittalDoubleSharp7v19CDown = "Double sharp 7:19C-down";
    /// <summary>
    /// Flat, (apotome down)[almost all EDOs], 1/2-tone down.
    /// </summary>
    public const string AccSagittalFlat = "Flat, (apotome down)[almost all EDOs], 1/2-tone down";
    /// <summary>
    /// Flat 11L-down, 8° up [46 EDO].
    /// </summary>
    public const string AccSagittalFlat11LDown = "Flat 11L-down, 8° up [46 EDO]";
    /// <summary>
    /// Flat 11M-down, 3° down [17 31 EDOs], 7° down [46 EDO], 3/4-tone down.
    /// </summary>
    public const string AccSagittalFlat11MDown = "Flat 11M-down, 3° down [17 31 EDOs], 7° down [46 EDO], 3/4-tone down";
    /// <summary>
    /// Flat 11:19L-down.
    /// </summary>
    public const string AccSagittalFlat11v19LDown = "Flat 11:19L-down";
    /// <summary>
    /// Flat 11:19M-down.
    /// </summary>
    public const string AccSagittalFlat11v19MDown = "Flat 11:19M-down";
    /// <summary>
    /// Flat 11:49C-down.
    /// </summary>
    public const string AccSagittalFlat11v49CDown = "Flat 11:49C-down";
    /// <summary>
    /// Flat 11:49C-up.
    /// </summary>
    public const string AccSagittalFlat11v49CUp = "Flat 11:49C-up";
    /// <summary>
    /// Flat 143C-down.
    /// </summary>
    public const string AccSagittalFlat143CDown = "Flat 143C-down";
    /// <summary>
    /// Flat 143C-up.
    /// </summary>
    public const string AccSagittalFlat143CUp = "Flat 143C-up";
    /// <summary>
    /// Flat 17C-down.
    /// </summary>
    public const string AccSagittalFlat17CDown = "Flat 17C-down";
    /// <summary>
    /// Flat 17C-up.
    /// </summary>
    public const string AccSagittalFlat17CUp = "Flat 17C-up";
    /// <summary>
    /// Flat 17k-down.
    /// </summary>
    public const string AccSagittalFlat17kDown = "Flat 17k-down";
    /// <summary>
    /// Flat 17k-up.
    /// </summary>
    public const string AccSagittalFlat17kUp = "Flat 17k-up";
    /// <summary>
    /// Flat 19C-down.
    /// </summary>
    public const string AccSagittalFlat19CDown = "Flat 19C-down";
    /// <summary>
    /// Flat 19C-up.
    /// </summary>
    public const string AccSagittalFlat19CUp = "Flat 19C-up";
    /// <summary>
    /// Flat 19s-down.
    /// </summary>
    public const string AccSagittalFlat19sDown = "Flat 19s-down";
    /// <summary>
    /// Flat 19s-up.
    /// </summary>
    public const string AccSagittalFlat19sUp = "Flat 19s-up";
    /// <summary>
    /// Flat 23C-down, 10° down [96 EDO], 5/8-tone down.
    /// </summary>
    public const string AccSagittalFlat23CDown = "Flat 23C-down, 10° down [96 EDO], 5/8-tone down";
    /// <summary>
    /// Flat 23C-up, 6° down [96 EDO], 3/8-tone down.
    /// </summary>
    public const string AccSagittalFlat23CUp = "Flat 23C-up, 6° down [96 EDO], 3/8-tone down";
    /// <summary>
    /// Flat 23S-down.
    /// </summary>
    public const string AccSagittalFlat23SDown = "Flat 23S-down";
    /// <summary>
    /// Flat 23S-up.
    /// </summary>
    public const string AccSagittalFlat23SUp = "Flat 23S-up";
    /// <summary>
    /// Flat 25S-down, 7° down [53 EDO].
    /// </summary>
    public const string AccSagittalFlat25SDown = "Flat 25S-down, 7° down [53 EDO]";
    /// <summary>
    /// Flat 25S-up, 3° down [53 EDO].
    /// </summary>
    public const string AccSagittalFlat25SUp = "Flat 25S-up, 3° down [53 EDO]";
    /// <summary>
    /// Flat 35L-down, 5° down [50 EDO].
    /// </summary>
    public const string AccSagittalFlat35LDown = "Flat 35L-down, 5° down [50 EDO]";
    /// <summary>
    /// Flat 35M-down, 4° down [50 EDO], 6° down [27 EDO], 13/18-tone down.
    /// </summary>
    public const string AccSagittalFlat35MDown = "Flat 35M-down, 4° down [50 EDO], 6° down [27 EDO], 13/18-tone down";
    /// <summary>
    /// Flat 49L-down.
    /// </summary>
    public const string AccSagittalFlat49LDown = "Flat 49L-down";
    /// <summary>
    /// Flat 49M-down.
    /// </summary>
    public const string AccSagittalFlat49MDown = "Flat 49M-down";
    /// <summary>
    /// Flat 49S-down.
    /// </summary>
    public const string AccSagittalFlat49SDown = "Flat 49S-down";
    /// <summary>
    /// Flat 49S-up.
    /// </summary>
    public const string AccSagittalFlat49SUp = "Flat 49S-up";
    /// <summary>
    /// Flat 55C-down, 11° down [96 EDO], 11/16-tone down.
    /// </summary>
    public const string AccSagittalFlat55CDown = "Flat 55C-down, 11° down [96 EDO], 11/16-tone down";
    /// <summary>
    /// Flat 55C-up, 5° down [96 EDO], 5/16-tone down.
    /// </summary>
    public const string AccSagittalFlat55CUp = "Flat 55C-up, 5° down [96 EDO], 5/16-tone down";
    /// <summary>
    /// Flat 5C-down, 4°[22 29] 5°[27 34 41] 6°[39 46 53] down, 7/12-tone down.
    /// </summary>
    public const string AccSagittalFlat5CDown = "Flat 5C-down, 4°[22 29] 5°[27 34 41] 6°[39 46 53] down, 7/12-tone down";
    /// <summary>
    /// Flat 5C-up, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°72 7°[96] down, 5/12-tone down.
    /// </summary>
    public const string AccSagittalFlat5CUp = "Flat 5C-up, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°72 7°[96] down, 5/12-tone down";
    /// <summary>
    /// Flat 5:11S-down.
    /// </summary>
    public const string AccSagittalFlat5v11SDown = "Flat 5:11S-down";
    /// <summary>
    /// Flat 5:11S-up.
    /// </summary>
    public const string AccSagittalFlat5v11SUp = "Flat 5:11S-up";
    /// <summary>
    /// Flat 5:13L-down.
    /// </summary>
    public const string AccSagittalFlat5v13LDown = "Flat 5:13L-down";
    /// <summary>
    /// Flat 5:13M-down.
    /// </summary>
    public const string AccSagittalFlat5v13MDown = "Flat 5:13M-down";
    /// <summary>
    /// Flat 5:19C-down, 11/20-tone down.
    /// </summary>
    public const string AccSagittalFlat5v19CDown = "Flat 5:19C-down, 11/20-tone down";
    /// <summary>
    /// Flat 5:19C-up, 9/20-tone down.
    /// </summary>
    public const string AccSagittalFlat5v19CUp = "Flat 5:19C-up, 9/20-tone down";
    /// <summary>
    /// Flat 5:23S-down, 7° down [60 EDO], 7/10-tone down.
    /// </summary>
    public const string AccSagittalFlat5v23SDown = "Flat 5:23S-down, 7° down [60 EDO], 7/10-tone down";
    /// <summary>
    /// Flat 5:23S-up, 3° down [60 EDO], 3/10-tone down.
    /// </summary>
    public const string AccSagittalFlat5v23SUp = "Flat 5:23S-up, 3° down [60 EDO], 3/10-tone down";
    /// <summary>
    /// Flat 5:49M-down.
    /// </summary>
    public const string AccSagittalFlat5v49MDown = "Flat 5:49M-down";
    /// <summary>
    /// Flat 5:7k-down.
    /// </summary>
    public const string AccSagittalFlat5v7kDown = "Flat 5:7k-down";
    /// <summary>
    /// Flat 5:7k-up.
    /// </summary>
    public const string AccSagittalFlat5v7kUp = "Flat 5:7k-up";
    /// <summary>
    /// Flat 7C-down, 4° down [43 EDO], 8° down [72 EDO], 2/3-tone down.
    /// </summary>
    public const string AccSagittalFlat7CDown = "Flat 7C-down, 4° down [43 EDO], 8° down [72 EDO], 2/3-tone down";
    /// <summary>
    /// Flat 7C-up, 2° down [43 EDO], 4° down [72 EDO], 1/3-tone down.
    /// </summary>
    public const string AccSagittalFlat7CUp = "Flat 7C-up, 2° down [43 EDO], 4° down [72 EDO], 1/3-tone down";
    /// <summary>
    /// Flat 7:11C-down, 6° down [60 EDO], 3/5- tone down.
    /// </summary>
    public const string AccSagittalFlat7v11CDown = "Flat 7:11C-down, 6° down [60 EDO], 3/5- tone down";
    /// <summary>
    /// Flat 7:11C-up, 4° down [60 EDO], 2/5-tone down.
    /// </summary>
    public const string AccSagittalFlat7v11CUp = "Flat 7:11C-up, 4° down [60 EDO], 2/5-tone down";
    /// <summary>
    /// Flat 7:11k-down.
    /// </summary>
    public const string AccSagittalFlat7v11kDown = "Flat 7:11k-down";
    /// <summary>
    /// Flat 7:11k-up.
    /// </summary>
    public const string AccSagittalFlat7v11kUp = "Flat 7:11k-up";
    /// <summary>
    /// Flat 7:19C-down.
    /// </summary>
    public const string AccSagittalFlat7v19CDown = "Flat 7:19C-down";
    /// <summary>
    /// Flat 7:19C-up.
    /// </summary>
    public const string AccSagittalFlat7v19CUp = "Flat 7:19C-up";
    /// <summary>
    /// Fractional tina down, 77/(5⋅37)-schismina down, 0.08 cents down.
    /// </summary>
    public const string AccSagittalFractionalTinaDown = "Fractional tina down, 77/(5⋅37)-schismina down, 0.08 cents down";
    /// <summary>
    /// Fractional tina up, 77/(5⋅37)-schismina up, 0.08 cents up.
    /// </summary>
    public const string AccSagittalFractionalTinaUp = "Fractional tina up, 77/(5⋅37)-schismina up, 0.08 cents up";
    /// <summary>
    /// Grave, 5 schisma down, 2 cents down.
    /// </summary>
    public const string AccSagittalGrave = "Grave, 5 schisma down, 2 cents down";
    /// <summary>
    /// Shaft down, (natural for use with only diacritics down).
    /// </summary>
    public const string AccSagittalShaftDown = "Shaft down, (natural for use with only diacritics down)";
    /// <summary>
    /// Shaft up, (natural for use with only diacritics up).
    /// </summary>
    public const string AccSagittalShaftUp = "Shaft up, (natural for use with only diacritics up)";
    /// <summary>
    /// Sharp, (apotome up)[almost all EDOs], 1/2-tone up.
    /// </summary>
    public const string AccSagittalSharp = "Sharp, (apotome up)[almost all EDOs], 1/2-tone up";
    /// <summary>
    /// Sharp 11L-up, 8° up [46 EDO].
    /// </summary>
    public const string AccSagittalSharp11LUp = "Sharp 11L-up, 8° up [46 EDO]";
    /// <summary>
    /// Sharp 11M-up, 3° up [17 31 EDOs], 7° up [46 EDO], 3/4-tone up.
    /// </summary>
    public const string AccSagittalSharp11MUp = "Sharp 11M-up, 3° up [17 31 EDOs], 7° up [46 EDO], 3/4-tone up";
    /// <summary>
    /// Sharp 11:19L-up.
    /// </summary>
    public const string AccSagittalSharp11v19LUp = "Sharp 11:19L-up";
    /// <summary>
    /// Sharp 11:19M-up.
    /// </summary>
    public const string AccSagittalSharp11v19MUp = "Sharp 11:19M-up";
    /// <summary>
    /// Sharp 11:49C-down.
    /// </summary>
    public const string AccSagittalSharp11v49CDown = "Sharp 11:49C-down";
    /// <summary>
    /// Sharp 11:49C-up.
    /// </summary>
    public const string AccSagittalSharp11v49CUp = "Sharp 11:49C-up";
    /// <summary>
    /// Sharp 143C-down.
    /// </summary>
    public const string AccSagittalSharp143CDown = "Sharp 143C-down";
    /// <summary>
    /// Sharp 143C-up.
    /// </summary>
    public const string AccSagittalSharp143CUp = "Sharp 143C-up";
    /// <summary>
    /// Sharp 17C-down.
    /// </summary>
    public const string AccSagittalSharp17CDown = "Sharp 17C-down";
    /// <summary>
    /// Sharp 17C-up.
    /// </summary>
    public const string AccSagittalSharp17CUp = "Sharp 17C-up";
    /// <summary>
    /// Sharp 17k-down.
    /// </summary>
    public const string AccSagittalSharp17kDown = "Sharp 17k-down";
    /// <summary>
    /// Sharp 17k-up.
    /// </summary>
    public const string AccSagittalSharp17kUp = "Sharp 17k-up";
    /// <summary>
    /// Sharp 19C-down.
    /// </summary>
    public const string AccSagittalSharp19CDown = "Sharp 19C-down";
    /// <summary>
    /// Sharp 19C-up.
    /// </summary>
    public const string AccSagittalSharp19CUp = "Sharp 19C-up";
    /// <summary>
    /// Sharp 19s-down.
    /// </summary>
    public const string AccSagittalSharp19sDown = "Sharp 19s-down";
    /// <summary>
    /// Sharp 19s-up.
    /// </summary>
    public const string AccSagittalSharp19sUp = "Sharp 19s-up";
    /// <summary>
    /// Sharp 23C-down, 6° up [96 EDO], 3/8-tone up.
    /// </summary>
    public const string AccSagittalSharp23CDown = "Sharp 23C-down, 6° up [96 EDO], 3/8-tone up";
    /// <summary>
    /// Sharp 23C-up, 10° up [96 EDO], 5/8-tone up.
    /// </summary>
    public const string AccSagittalSharp23CUp = "Sharp 23C-up, 10° up [96 EDO], 5/8-tone up";
    /// <summary>
    /// Sharp 23S-down.
    /// </summary>
    public const string AccSagittalSharp23SDown = "Sharp 23S-down";
    /// <summary>
    /// Sharp 23S-up.
    /// </summary>
    public const string AccSagittalSharp23SUp = "Sharp 23S-up";
    /// <summary>
    /// Sharp 25S-down, 3° up [53 EDO].
    /// </summary>
    public const string AccSagittalSharp25SDown = "Sharp 25S-down, 3° up [53 EDO]";
    /// <summary>
    /// Sharp 25S-up, 7° up [53 EDO].
    /// </summary>
    public const string AccSagittalSharp25SUp = "Sharp 25S-up, 7° up [53 EDO]";
    /// <summary>
    /// Sharp 35L-up, 5° up [50 EDO].
    /// </summary>
    public const string AccSagittalSharp35LUp = "Sharp 35L-up, 5° up [50 EDO]";
    /// <summary>
    /// Sharp 35M-up, 4° up [50 EDO], 6° up [27 EDO], 13/18-tone up.
    /// </summary>
    public const string AccSagittalSharp35MUp = "Sharp 35M-up, 4° up [50 EDO], 6° up [27 EDO], 13/18-tone up";
    /// <summary>
    /// Sharp 49L-up.
    /// </summary>
    public const string AccSagittalSharp49LUp = "Sharp 49L-up";
    /// <summary>
    /// Sharp 49M-up.
    /// </summary>
    public const string AccSagittalSharp49MUp = "Sharp 49M-up";
    /// <summary>
    /// Sharp 49S-down.
    /// </summary>
    public const string AccSagittalSharp49SDown = "Sharp 49S-down";
    /// <summary>
    /// Sharp 49S-up.
    /// </summary>
    public const string AccSagittalSharp49SUp = "Sharp 49S-up";
    /// <summary>
    /// Sharp 55C-down, 5° up [96 EDO], 5/16-tone up.
    /// </summary>
    public const string AccSagittalSharp55CDown = "Sharp 55C-down, 5° up [96 EDO], 5/16-tone up";
    /// <summary>
    /// Sharp 55C-up, 11° up [96 EDO], 11/16-tone up.
    /// </summary>
    public const string AccSagittalSharp55CUp = "Sharp 55C-up, 11° up [96 EDO], 11/16-tone up";
    /// <summary>
    /// Sharp 5C-down, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°[72] 7°[96] up, 5/12-tone up.
    /// </summary>
    public const string AccSagittalSharp5CDown = "Sharp 5C-down, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°[72] 7°[96] up, 5/12-tone up";
    /// <summary>
    /// Sharp 5C-up, 4°[22 29] 5°[27 34 41] 6°[39 46 53] up, 7/12-tone up.
    /// </summary>
    public const string AccSagittalSharp5CUp = "Sharp 5C-up, 4°[22 29] 5°[27 34 41] 6°[39 46 53] up, 7/12-tone up";
    /// <summary>
    /// Sharp 5:11S-down.
    /// </summary>
    public const string AccSagittalSharp5v11SDown = "Sharp 5:11S-down";
    /// <summary>
    /// Sharp 5:11S-up.
    /// </summary>
    public const string AccSagittalSharp5v11SUp = "Sharp 5:11S-up";
    /// <summary>
    /// Sharp 5:13L-up.
    /// </summary>
    public const string AccSagittalSharp5v13LUp = "Sharp 5:13L-up";
    /// <summary>
    /// Sharp 5:13M-up.
    /// </summary>
    public const string AccSagittalSharp5v13MUp = "Sharp 5:13M-up";
    /// <summary>
    /// Sharp 5:19C-down, 9/20-tone up.
    /// </summary>
    public const string AccSagittalSharp5v19CDown = "Sharp 5:19C-down, 9/20-tone up";
    /// <summary>
    /// Sharp 5:19C-up, 11/20-tone up.
    /// </summary>
    public const string AccSagittalSharp5v19CUp = "Sharp 5:19C-up, 11/20-tone up";
    /// <summary>
    /// Sharp 5:23S-down, 3° up [60 EDO], 3/10-tone up.
    /// </summary>
    public const string AccSagittalSharp5v23SDown = "Sharp 5:23S-down, 3° up [60 EDO], 3/10-tone up";
    /// <summary>
    /// Sharp 5:23S-up, 7° up [60 EDO], 7/10-tone up.
    /// </summary>
    public const string AccSagittalSharp5v23SUp = "Sharp 5:23S-up, 7° up [60 EDO], 7/10-tone up";
    /// <summary>
    /// Sharp 5:49M-up, (one and a half apotomes).
    /// </summary>
    public const string AccSagittalSharp5v49MUp = "Sharp 5:49M-up, (one and a half apotomes)";
    /// <summary>
    /// Sharp 5:7k-down.
    /// </summary>
    public const string AccSagittalSharp5v7kDown = "Sharp 5:7k-down";
    /// <summary>
    /// Sharp 5:7k-up.
    /// </summary>
    public const string AccSagittalSharp5v7kUp = "Sharp 5:7k-up";
    /// <summary>
    /// Sharp 7C-down, 2° up [43 EDO], 4° up [72 EDO], 1/3-tone up.
    /// </summary>
    public const string AccSagittalSharp7CDown = "Sharp 7C-down, 2° up [43 EDO], 4° up [72 EDO], 1/3-tone up";
    /// <summary>
    /// Sharp 7C-up, 4° up [43 EDO], 8° up [72 EDO], 2/3-tone up.
    /// </summary>
    public const string AccSagittalSharp7CUp = "Sharp 7C-up, 4° up [43 EDO], 8° up [72 EDO], 2/3-tone up";
    /// <summary>
    /// Sharp 7:11C-down, 4° up [60 EDO], 2/5-tone up.
    /// </summary>
    public const string AccSagittalSharp7v11CDown = "Sharp 7:11C-down, 4° up [60 EDO], 2/5-tone up";
    /// <summary>
    /// Sharp 7:11C-up, 6° up [60 EDO], 3/5- tone up.
    /// </summary>
    public const string AccSagittalSharp7v11CUp = "Sharp 7:11C-up, 6° up [60 EDO], 3/5- tone up";
    /// <summary>
    /// Sharp 7:11k-down.
    /// </summary>
    public const string AccSagittalSharp7v11kDown = "Sharp 7:11k-down";
    /// <summary>
    /// Sharp 7:11k-up.
    /// </summary>
    public const string AccSagittalSharp7v11kUp = "Sharp 7:11k-up";
    /// <summary>
    /// Sharp 7:19C-down.
    /// </summary>
    public const string AccSagittalSharp7v19CDown = "Sharp 7:19C-down";
    /// <summary>
    /// Sharp 7:19C-up.
    /// </summary>
    public const string AccSagittalSharp7v19CUp = "Sharp 7:19C-up";
    /// <summary>
    /// Unused.
    /// </summary>
    public const string AccSagittalUnused1 = "Unused";
    /// <summary>
    /// Unused.
    /// </summary>
    public const string AccSagittalUnused2 = "Unused";
    /// <summary>
    /// Unused.
    /// </summary>
    public const string AccSagittalUnused3 = "Unused";
    /// <summary>
    /// Unused.
    /// </summary>
    public const string AccSagittalUnused4 = "Unused";
    /// <summary>
    /// Combining accordion coupler dot.
    /// </summary>
    public const string AccdnCombDot = "Combining accordion coupler dot";
    /// <summary>
    /// Combining left hand, 2 ranks, empty.
    /// </summary>
    public const string AccdnCombLH2RanksEmpty = "Combining left hand, 2 ranks, empty";
    /// <summary>
    /// Combining left hand, 3 ranks, empty (square).
    /// </summary>
    public const string AccdnCombLH3RanksEmptySquare = "Combining left hand, 3 ranks, empty (square)";
    /// <summary>
    /// Combining right hand, 3 ranks, empty.
    /// </summary>
    public const string AccdnCombRH3RanksEmpty = "Combining right hand, 3 ranks, empty";
    /// <summary>
    /// Combining right hand, 4 ranks, empty.
    /// </summary>
    public const string AccdnCombRH4RanksEmpty = "Combining right hand, 4 ranks, empty";
    /// <summary>
    /// Diatonic accordion clef.
    /// </summary>
    public const string AccdnDiatonicClef = "Diatonic accordion clef";
    /// <summary>
    /// Left hand, 2 ranks, 16' stop (round).
    /// </summary>
    public const string AccdnLH2Ranks16Round = "Left hand, 2 ranks, 16' stop (round)";
    /// <summary>
    /// Left hand, 2 ranks, 8' stop + 16' stop (round).
    /// </summary>
    public const string AccdnLH2Ranks8Plus16Round = "Left hand, 2 ranks, 8' stop + 16' stop (round)";
    /// <summary>
    /// Left hand, 2 ranks, 8' stop (round).
    /// </summary>
    public const string AccdnLH2Ranks8Round = "Left hand, 2 ranks, 8' stop (round)";
    /// <summary>
    /// Left hand, 2 ranks, full master (round).
    /// </summary>
    public const string AccdnLH2RanksFullMasterRound = "Left hand, 2 ranks, full master (round)";
    /// <summary>
    /// Left hand, 2 ranks, master + 16' stop (round).
    /// </summary>
    public const string AccdnLH2RanksMasterPlus16Round = "Left hand, 2 ranks, master + 16' stop (round)";
    /// <summary>
    /// Left hand, 2 ranks, master (round).
    /// </summary>
    public const string AccdnLH2RanksMasterRound = "Left hand, 2 ranks, master (round)";
    /// <summary>
    /// Left hand, 3 ranks, 2' stop + 8' stop (square).
    /// </summary>
    public const string AccdnLH3Ranks2Plus8Square = "Left hand, 3 ranks, 2' stop + 8' stop (square)";
    /// <summary>
    /// Left hand, 3 ranks, 2' stop (square).
    /// </summary>
    public const string AccdnLH3Ranks2Square = "Left hand, 3 ranks, 2' stop (square)";
    /// <summary>
    /// Left hand, 3 ranks, 8' stop (square).
    /// </summary>
    public const string AccdnLH3Ranks8Square = "Left hand, 3 ranks, 8' stop (square)";
    /// <summary>
    /// Left hand, 3 ranks, double 8' stop (square).
    /// </summary>
    public const string AccdnLH3RanksDouble8Square = "Left hand, 3 ranks, double 8' stop (square)";
    /// <summary>
    /// Left hand, 3 ranks, 2' stop + double 8' stop (tutti) (square).
    /// </summary>
    public const string AccdnLH3RanksTuttiSquare = "Left hand, 3 ranks, 2' stop + double 8' stop (tutti) (square)";
    /// <summary>
    /// Pull.
    /// </summary>
    public const string AccdnPull = "Pull";
    /// <summary>
    /// Push.
    /// </summary>
    public const string AccdnPush = "Push";
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + upper tremolo 8' stop + 16' stop (accordion).
    /// </summary>
    public const string AccdnRH3RanksAccordion = "Right hand, 3 ranks, 8' stop + upper tremolo 8' stop + 16' stop (accordion)";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop (authentic musette).
    /// </summary>
    public const string AccdnRH3RanksAuthenticMusette = "Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop (authentic musette)";
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + 16' stop (bandoneón).
    /// </summary>
    public const string AccdnRH3RanksBandoneon = "Right hand, 3 ranks, 8' stop + 16' stop (bandoneón)";
    /// <summary>
    /// Right hand, 3 ranks, 16' stop (bassoon).
    /// </summary>
    public const string AccdnRH3RanksBassoon = "Right hand, 3 ranks, 16' stop (bassoon)";
    /// <summary>
    /// Right hand, 3 ranks, 8' stop (clarinet).
    /// </summary>
    public const string AccdnRH3RanksClarinet = "Right hand, 3 ranks, 8' stop (clarinet)";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const string AccdnRH3RanksDoubleTremoloLower8ve = "Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksDoubleTremoloUpper8ve = "Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const string AccdnRH3RanksFullFactory = "Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop + 16' stop (harmonium).
    /// </summary>
    public const string AccdnRH3RanksHarmonium = "Right hand, 3 ranks, 4' stop + 8' stop + 16' stop (harmonium)";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop + upper tremolo 8' stop (imitation musette).
    /// </summary>
    public const string AccdnRH3RanksImitationMusette = "Right hand, 3 ranks, 4' stop + 8' stop + upper tremolo 8' stop (imitation musette)";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksLowerTremolo8 = "Right hand, 3 ranks, lower tremolo 8' stop";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop + 16' stop (master).
    /// </summary>
    public const string AccdnRH3RanksMaster = "Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop + 16' stop (master)";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop (oboe).
    /// </summary>
    public const string AccdnRH3RanksOboe = "Right hand, 3 ranks, 4' stop + 8' stop (oboe)";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 16' stop (organ).
    /// </summary>
    public const string AccdnRH3RanksOrgan = "Right hand, 3 ranks, 4' stop + 16' stop (organ)";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop (piccolo).
    /// </summary>
    public const string AccdnRH3RanksPiccolo = "Right hand, 3 ranks, 4' stop (piccolo)";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const string AccdnRH3RanksTremoloLower8ve = "Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop + 16' stop";
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksTremoloUpper8ve = "Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop";
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksTwoChoirs = "Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop";
    /// <summary>
    /// Right hand, 3 ranks, upper tremolo 8' stop.
    /// </summary>
    public const string AccdnRH3RanksUpperTremolo8 = "Right hand, 3 ranks, upper tremolo 8' stop";
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + upper tremolo 8' stop (violin).
    /// </summary>
    public const string AccdnRH3RanksViolin = "Right hand, 3 ranks, 8' stop + upper tremolo 8' stop (violin)";
    /// <summary>
    /// Right hand, 4 ranks, alto.
    /// </summary>
    public const string AccdnRH4RanksAlto = "Right hand, 4 ranks, alto";
    /// <summary>
    /// Right hand, 4 ranks, bass/alto.
    /// </summary>
    public const string AccdnRH4RanksBassAlto = "Right hand, 4 ranks, bass/alto";
    /// <summary>
    /// Right hand, 4 ranks, master.
    /// </summary>
    public const string AccdnRH4RanksMaster = "Right hand, 4 ranks, master";
    /// <summary>
    /// Right hand, 4 ranks, soft bass.
    /// </summary>
    public const string AccdnRH4RanksSoftBass = "Right hand, 4 ranks, soft bass";
    /// <summary>
    /// Right hand, 4 ranks, soft tenor.
    /// </summary>
    public const string AccdnRH4RanksSoftTenor = "Right hand, 4 ranks, soft tenor";
    /// <summary>
    /// Right hand, 4 ranks, soprano.
    /// </summary>
    public const string AccdnRH4RanksSoprano = "Right hand, 4 ranks, soprano";
    /// <summary>
    /// Right hand, 4 ranks, tenor.
    /// </summary>
    public const string AccdnRH4RanksTenor = "Right hand, 4 ranks, tenor";
    /// <summary>
    /// Ricochet (2 tones).
    /// </summary>
    public const string AccdnRicochet2 = "Ricochet (2 tones)";
    /// <summary>
    /// Ricochet (3 tones).
    /// </summary>
    public const string AccdnRicochet3 = "Ricochet (3 tones)";
    /// <summary>
    /// Ricochet (4 tones).
    /// </summary>
    public const string AccdnRicochet4 = "Ricochet (4 tones)";
    /// <summary>
    /// Ricochet (5 tones).
    /// </summary>
    public const string AccdnRicochet5 = "Ricochet (5 tones)";
    /// <summary>
    /// Ricochet (6 tones).
    /// </summary>
    public const string AccdnRicochet6 = "Ricochet (6 tones)";
    /// <summary>
    /// Combining ricochet for stem (2 tones).
    /// </summary>
    public const string AccdnRicochetStem2 = "Combining ricochet for stem (2 tones)";
    /// <summary>
    /// Combining ricochet for stem (3 tones).
    /// </summary>
    public const string AccdnRicochetStem3 = "Combining ricochet for stem (3 tones)";
    /// <summary>
    /// Combining ricochet for stem (4 tones).
    /// </summary>
    public const string AccdnRicochetStem4 = "Combining ricochet for stem (4 tones)";
    /// <summary>
    /// Combining ricochet for stem (5 tones).
    /// </summary>
    public const string AccdnRicochetStem5 = "Combining ricochet for stem (5 tones)";
    /// <summary>
    /// Combining ricochet for stem (6 tones).
    /// </summary>
    public const string AccdnRicochetStem6 = "Combining ricochet for stem (6 tones)";
    /// <summary>
    /// 1-comma flat.
    /// </summary>
    public const string Accidental1CommaFlat = "1-comma flat";
    /// <summary>
    /// 1-comma sharp.
    /// </summary>
    public const string Accidental1CommaSharp = "1-comma sharp";
    /// <summary>
    /// 2-comma flat.
    /// </summary>
    public const string Accidental2CommaFlat = "2-comma flat";
    /// <summary>
    /// 2-comma sharp.
    /// </summary>
    public const string Accidental2CommaSharp = "2-comma sharp";
    /// <summary>
    /// 3-comma flat.
    /// </summary>
    public const string Accidental3CommaFlat = "3-comma flat";
    /// <summary>
    /// 3-comma sharp.
    /// </summary>
    public const string Accidental3CommaSharp = "3-comma sharp";
    /// <summary>
    /// 4-comma flat.
    /// </summary>
    public const string Accidental4CommaFlat = "4-comma flat";
    /// <summary>
    /// 5-comma sharp.
    /// </summary>
    public const string Accidental5CommaSharp = "5-comma sharp";
    /// <summary>
    /// Arrow down (lower by one quarter-tone).
    /// </summary>
    public const string AccidentalArrowDown = "Arrow down (lower by one quarter-tone)";
    /// <summary>
    /// Arrow up (raise by one quarter-tone).
    /// </summary>
    public const string AccidentalArrowUp = "Arrow up (raise by one quarter-tone)";
    /// <summary>
    /// Bakiye (flat).
    /// </summary>
    public const string AccidentalBakiyeFlat = "Bakiye (flat)";
    /// <summary>
    /// Bakiye (sharp).
    /// </summary>
    public const string AccidentalBakiyeSharp = "Bakiye (sharp)";
    /// <summary>
    /// Accidental bracket, left.
    /// </summary>
    public const string AccidentalBracketLeft = "Accidental bracket, left";
    /// <summary>
    /// Accidental bracket, right.
    /// </summary>
    public const string AccidentalBracketRight = "Accidental bracket, right";
    /// <summary>
    /// Büyük mücenneb (flat).
    /// </summary>
    public const string AccidentalBuyukMucennebFlat = "Büyük mücenneb (flat)";
    /// <summary>
    /// Büyük mücenneb (sharp).
    /// </summary>
    public const string AccidentalBuyukMucennebSharp = "Büyük mücenneb (sharp)";
    /// <summary>
    /// Combining close curly brace.
    /// </summary>
    public const string AccidentalCombiningCloseCurlyBrace = "Combining close curly brace";
    /// <summary>
    /// Combining lower by one 17-limit schisma.
    /// </summary>
    public const string AccidentalCombiningLower17Schisma = "Combining lower by one 17-limit schisma";
    /// <summary>
    /// Combining lower by one 19-limit schisma.
    /// </summary>
    public const string AccidentalCombiningLower19Schisma = "Combining lower by one 19-limit schisma";
    /// <summary>
    /// Combining lower by one 23-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower23Limit29LimitComma = "Combining lower by one 23-limit comma";
    /// <summary>
    /// Combining lower by one 29-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower29LimitComma = "Combining lower by one 29-limit comma";
    /// <summary>
    /// Combining lower by one 31-limit schisma.
    /// </summary>
    public const string AccidentalCombiningLower31Schisma = "Combining lower by one 31-limit schisma";
    /// <summary>
    /// Combining lower by one 37-limit quartertone.
    /// </summary>
    public const string AccidentalCombiningLower37Quartertone = "Combining lower by one 37-limit quartertone";
    /// <summary>
    /// Combining lower by one 41-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower41Comma = "Combining lower by one 41-limit comma";
    /// <summary>
    /// Combining lower by one 43-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower43Comma = "Combining lower by one 43-limit comma";
    /// <summary>
    /// Combining lower by one 47-limit quartertone.
    /// </summary>
    public const string AccidentalCombiningLower47Quartertone = "Combining lower by one 47-limit quartertone";
    /// <summary>
    /// Combining lower by one 53-limit comma.
    /// </summary>
    public const string AccidentalCombiningLower53LimitComma = "Combining lower by one 53-limit comma";
    /// <summary>
    /// Combining open curly brace.
    /// </summary>
    public const string AccidentalCombiningOpenCurlyBrace = "Combining open curly brace";
    /// <summary>
    /// Combining raise by one 17-limit schisma.
    /// </summary>
    public const string AccidentalCombiningRaise17Schisma = "Combining raise by one 17-limit schisma";
    /// <summary>
    /// Combining raise by one 19-limit schisma.
    /// </summary>
    public const string AccidentalCombiningRaise19Schisma = "Combining raise by one 19-limit schisma";
    /// <summary>
    /// Combining raise by one 23-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise23Limit29LimitComma = "Combining raise by one 23-limit comma";
    /// <summary>
    /// Combining raise by one 29-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise29LimitComma = "Combining raise by one 29-limit comma";
    /// <summary>
    /// Combining raise by one 31-limit schisma.
    /// </summary>
    public const string AccidentalCombiningRaise31Schisma = "Combining raise by one 31-limit schisma";
    /// <summary>
    /// Combining raise by one 37-limit quartertone.
    /// </summary>
    public const string AccidentalCombiningRaise37Quartertone = "Combining raise by one 37-limit quartertone";
    /// <summary>
    /// Combining raise by one 41-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise41Comma = "Combining raise by one 41-limit comma";
    /// <summary>
    /// Combining raise by one 43-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise43Comma = "Combining raise by one 43-limit comma";
    /// <summary>
    /// Combining raise by one 47-limit quartertone.
    /// </summary>
    public const string AccidentalCombiningRaise47Quartertone = "Combining raise by one 47-limit quartertone";
    /// <summary>
    /// Combining raise by one 53-limit comma.
    /// </summary>
    public const string AccidentalCombiningRaise53LimitComma = "Combining raise by one 53-limit comma";
    /// <summary>
    /// Syntonic/Didymus comma (80:81) down (Bosanquet).
    /// </summary>
    public const string AccidentalCommaSlashDown = "Syntonic/Didymus comma (80:81) down (Bosanquet)";
    /// <summary>
    /// Syntonic/Didymus comma (80:81) up (Bosanquet).
    /// </summary>
    public const string AccidentalCommaSlashUp = "Syntonic/Didymus comma (80:81) up (Bosanquet)";
    /// <summary>
    /// Double flat.
    /// </summary>
    public const string AccidentalDoubleFlat = "Double flat";
    /// <summary>
    /// Arabic double flat.
    /// </summary>
    public const string AccidentalDoubleFlatArabic = "Arabic double flat";
    /// <summary>
    /// Double flat equal tempered semitone.
    /// </summary>
    public const string AccidentalDoubleFlatEqualTempered = "Double flat equal tempered semitone";
    /// <summary>
    /// Double flat lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalDoubleFlatOneArrowDown = "Double flat lowered by one syntonic comma";
    /// <summary>
    /// Double flat raised by one syntonic comma.
    /// </summary>
    public const string AccidentalDoubleFlatOneArrowUp = "Double flat raised by one syntonic comma";
    /// <summary>
    /// Reversed double flat.
    /// </summary>
    public const string AccidentalDoubleFlatReversed = "Reversed double flat";
    /// <summary>
    /// Double flat lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalDoubleFlatThreeArrowsDown = "Double flat lowered by three syntonic commas";
    /// <summary>
    /// Double flat raised by three syntonic commas.
    /// </summary>
    public const string AccidentalDoubleFlatThreeArrowsUp = "Double flat raised by three syntonic commas";
    /// <summary>
    /// Turned double flat.
    /// </summary>
    public const string AccidentalDoubleFlatTurned = "Turned double flat";
    /// <summary>
    /// Double flat lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalDoubleFlatTwoArrowsDown = "Double flat lowered by two syntonic commas";
    /// <summary>
    /// Double flat raised by two syntonic commas.
    /// </summary>
    public const string AccidentalDoubleFlatTwoArrowsUp = "Double flat raised by two syntonic commas";
    /// <summary>
    /// Double sharp.
    /// </summary>
    public const string AccidentalDoubleSharp = "Double sharp";
    /// <summary>
    /// Arabic double sharp.
    /// </summary>
    public const string AccidentalDoubleSharpArabic = "Arabic double sharp";
    /// <summary>
    /// Double sharp equal tempered semitone.
    /// </summary>
    public const string AccidentalDoubleSharpEqualTempered = "Double sharp equal tempered semitone";
    /// <summary>
    /// Double sharp lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalDoubleSharpOneArrowDown = "Double sharp lowered by one syntonic comma";
    /// <summary>
    /// Double sharp raised by one syntonic comma.
    /// </summary>
    public const string AccidentalDoubleSharpOneArrowUp = "Double sharp raised by one syntonic comma";
    /// <summary>
    /// Double sharp lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalDoubleSharpThreeArrowsDown = "Double sharp lowered by three syntonic commas";
    /// <summary>
    /// Double sharp raised by three syntonic commas.
    /// </summary>
    public const string AccidentalDoubleSharpThreeArrowsUp = "Double sharp raised by three syntonic commas";
    /// <summary>
    /// Double sharp lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalDoubleSharpTwoArrowsDown = "Double sharp lowered by two syntonic commas";
    /// <summary>
    /// Double sharp raised by two syntonic commas.
    /// </summary>
    public const string AccidentalDoubleSharpTwoArrowsUp = "Double sharp raised by two syntonic commas";
    /// <summary>
    /// Enharmonically reinterpret accidental almost equal to.
    /// </summary>
    public const string AccidentalEnharmonicAlmostEqualTo = "Enharmonically reinterpret accidental almost equal to";
    /// <summary>
    /// Enharmonically reinterpret accidental equals.
    /// </summary>
    public const string AccidentalEnharmonicEquals = "Enharmonically reinterpret accidental equals";
    /// <summary>
    /// Enharmonically reinterpret accidental tilde.
    /// </summary>
    public const string AccidentalEnharmonicTilde = "Enharmonically reinterpret accidental tilde";
    /// <summary>
    /// Filled reversed flat and flat.
    /// </summary>
    public const string AccidentalFilledReversedFlatAndFlat = "Filled reversed flat and flat";
    /// <summary>
    /// Filled reversed flat and flat with arrow down.
    /// </summary>
    public const string AccidentalFilledReversedFlatAndFlatArrowDown = "Filled reversed flat and flat with arrow down";
    /// <summary>
    /// Filled reversed flat and flat with arrow up.
    /// </summary>
    public const string AccidentalFilledReversedFlatAndFlatArrowUp = "Filled reversed flat and flat with arrow up";
    /// <summary>
    /// Filled reversed flat with arrow down.
    /// </summary>
    public const string AccidentalFilledReversedFlatArrowDown = "Filled reversed flat with arrow down";
    /// <summary>
    /// Filled reversed flat with arrow up.
    /// </summary>
    public const string AccidentalFilledReversedFlatArrowUp = "Filled reversed flat with arrow up";
    /// <summary>
    /// Five-quarter-tones flat.
    /// </summary>
    public const string AccidentalFiveQuarterTonesFlatArrowDown = "Five-quarter-tones flat";
    /// <summary>
    /// Five-quarter-tones sharp.
    /// </summary>
    public const string AccidentalFiveQuarterTonesSharpArrowUp = "Five-quarter-tones sharp";
    /// <summary>
    /// Flat.
    /// </summary>
    public const string AccidentalFlat = "Flat";
    /// <summary>
    /// Arabic half-tone flat.
    /// </summary>
    public const string AccidentalFlatArabic = "Arabic half-tone flat";
    /// <summary>
    /// Flat equal tempered semitone.
    /// </summary>
    public const string AccidentalFlatEqualTempered = "Flat equal tempered semitone";
    /// <summary>
    /// Lowered flat (Stockhausen).
    /// </summary>
    public const string AccidentalFlatLoweredStockhausen = "Lowered flat (Stockhausen)";
    /// <summary>
    /// Flat lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalFlatOneArrowDown = "Flat lowered by one syntonic comma";
    /// <summary>
    /// Flat raised by one syntonic comma.
    /// </summary>
    public const string AccidentalFlatOneArrowUp = "Flat raised by one syntonic comma";
    /// <summary>
    /// Raised flat (Stockhausen).
    /// </summary>
    public const string AccidentalFlatRaisedStockhausen = "Raised flat (Stockhausen)";
    /// <summary>
    /// Repeated flat, note on line (Stockhausen).
    /// </summary>
    public const string AccidentalFlatRepeatedLineStockhausen = "Repeated flat, note on line (Stockhausen)";
    /// <summary>
    /// Repeated flat, note in space (Stockhausen).
    /// </summary>
    public const string AccidentalFlatRepeatedSpaceStockhausen = "Repeated flat, note in space (Stockhausen)";
    /// <summary>
    /// Flat lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalFlatThreeArrowsDown = "Flat lowered by three syntonic commas";
    /// <summary>
    /// Flat raised by three syntonic commas.
    /// </summary>
    public const string AccidentalFlatThreeArrowsUp = "Flat raised by three syntonic commas";
    /// <summary>
    /// Turned flat.
    /// </summary>
    public const string AccidentalFlatTurned = "Turned flat";
    /// <summary>
    /// Flat lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalFlatTwoArrowsDown = "Flat lowered by two syntonic commas";
    /// <summary>
    /// Flat raised by two syntonic commas.
    /// </summary>
    public const string AccidentalFlatTwoArrowsUp = "Flat raised by two syntonic commas";
    /// <summary>
    /// Quarter-tone higher (Alois Hába).
    /// </summary>
    public const string AccidentalHabaFlatQuarterToneHigher = "Quarter-tone higher (Alois Hába)";
    /// <summary>
    /// Three quarter-tones lower (Alois Hába).
    /// </summary>
    public const string AccidentalHabaFlatThreeQuarterTonesLower = "Three quarter-tones lower (Alois Hába)";
    /// <summary>
    /// Quarter-tone higher (Alois Hába).
    /// </summary>
    public const string AccidentalHabaQuarterToneHigher = "Quarter-tone higher (Alois Hába)";
    /// <summary>
    /// Quarter-tone lower (Alois Hába).
    /// </summary>
    public const string AccidentalHabaQuarterToneLower = "Quarter-tone lower (Alois Hába)";
    /// <summary>
    /// Quarter-tone lower (Alois Hába).
    /// </summary>
    public const string AccidentalHabaSharpQuarterToneLower = "Quarter-tone lower (Alois Hába)";
    /// <summary>
    /// Three quarter-tones higher (Alois Hába).
    /// </summary>
    public const string AccidentalHabaSharpThreeQuarterTonesHigher = "Three quarter-tones higher (Alois Hába)";
    /// <summary>
    /// Half sharp with arrow down.
    /// </summary>
    public const string AccidentalHalfSharpArrowDown = "Half sharp with arrow down";
    /// <summary>
    /// Half sharp with arrow up.
    /// </summary>
    public const string AccidentalHalfSharpArrowUp = "Half sharp with arrow up";
    /// <summary>
    /// Thirteen (raise by 65:64).
    /// </summary>
    public const string AccidentalJohnston13 = "Thirteen (raise by 65:64)";
    /// <summary>
    /// Inverted 13 (lower by 65:64).
    /// </summary>
    public const string AccidentalJohnston31 = "Inverted 13 (lower by 65:64)";
    /// <summary>
    /// Down arrow (lower by 33:32).
    /// </summary>
    public const string AccidentalJohnstonDown = "Down arrow (lower by 33:32)";
    /// <summary>
    /// Inverted seven (raise by 36:35).
    /// </summary>
    public const string AccidentalJohnstonEl = "Inverted seven (raise by 36:35)";
    /// <summary>
    /// Minus (lower by 81:80).
    /// </summary>
    public const string AccidentalJohnstonMinus = "Minus (lower by 81:80)";
    /// <summary>
    /// Plus (raise by 81:80).
    /// </summary>
    public const string AccidentalJohnstonPlus = "Plus (raise by 81:80)";
    /// <summary>
    /// Seven (lower by 36:35).
    /// </summary>
    public const string AccidentalJohnstonSeven = "Seven (lower by 36:35)";
    /// <summary>
    /// Up arrow (raise by 33:32).
    /// </summary>
    public const string AccidentalJohnstonUp = "Up arrow (raise by 33:32)";
    /// <summary>
    /// Koma (flat).
    /// </summary>
    public const string AccidentalKomaFlat = "Koma (flat)";
    /// <summary>
    /// Koma (sharp).
    /// </summary>
    public const string AccidentalKomaSharp = "Koma (sharp)";
    /// <summary>
    /// Koron (quarter tone flat).
    /// </summary>
    public const string AccidentalKoron = "Koron (quarter tone flat)";
    /// <summary>
    /// Küçük mücenneb (flat).
    /// </summary>
    public const string AccidentalKucukMucennebFlat = "Küçük mücenneb (flat)";
    /// <summary>
    /// Küçük mücenneb (sharp).
    /// </summary>
    public const string AccidentalKucukMucennebSharp = "Küçük mücenneb (sharp)";
    /// <summary>
    /// Large double sharp.
    /// </summary>
    public const string AccidentalLargeDoubleSharp = "Large double sharp";
    /// <summary>
    /// Lower by one septimal comma.
    /// </summary>
    public const string AccidentalLowerOneSeptimalComma = "Lower by one septimal comma";
    /// <summary>
    /// Lower by one tridecimal quartertone.
    /// </summary>
    public const string AccidentalLowerOneTridecimalQuartertone = "Lower by one tridecimal quartertone";
    /// <summary>
    /// Lower by one undecimal quartertone.
    /// </summary>
    public const string AccidentalLowerOneUndecimalQuartertone = "Lower by one undecimal quartertone";
    /// <summary>
    /// Lower by two septimal commas.
    /// </summary>
    public const string AccidentalLowerTwoSeptimalCommas = "Lower by two septimal commas";
    /// <summary>
    /// Lowered (Stockhausen).
    /// </summary>
    public const string AccidentalLoweredStockhausen = "Lowered (Stockhausen)";
    /// <summary>
    /// Narrow reversed flat(quarter-tone flat).
    /// </summary>
    public const string AccidentalNarrowReversedFlat = "Narrow reversed flat(quarter-tone flat)";
    /// <summary>
    /// Narrow reversed flat and flat(three-quarter-tones flat).
    /// </summary>
    public const string AccidentalNarrowReversedFlatAndFlat = "Narrow reversed flat and flat(three-quarter-tones flat)";
    /// <summary>
    /// Natural.
    /// </summary>
    public const string AccidentalNatural = "Natural";
    /// <summary>
    /// Arabic natural.
    /// </summary>
    public const string AccidentalNaturalArabic = "Arabic natural";
    /// <summary>
    /// Natural equal tempered semitone.
    /// </summary>
    public const string AccidentalNaturalEqualTempered = "Natural equal tempered semitone";
    /// <summary>
    /// Natural flat.
    /// </summary>
    public const string AccidentalNaturalFlat = "Natural flat";
    /// <summary>
    /// Lowered natural (Stockhausen).
    /// </summary>
    public const string AccidentalNaturalLoweredStockhausen = "Lowered natural (Stockhausen)";
    /// <summary>
    /// Natural lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalNaturalOneArrowDown = "Natural lowered by one syntonic comma";
    /// <summary>
    /// Natural raised by one syntonic comma.
    /// </summary>
    public const string AccidentalNaturalOneArrowUp = "Natural raised by one syntonic comma";
    /// <summary>
    /// Raised natural (Stockhausen).
    /// </summary>
    public const string AccidentalNaturalRaisedStockhausen = "Raised natural (Stockhausen)";
    /// <summary>
    /// Reversed natural.
    /// </summary>
    public const string AccidentalNaturalReversed = "Reversed natural";
    /// <summary>
    /// Natural sharp.
    /// </summary>
    public const string AccidentalNaturalSharp = "Natural sharp";
    /// <summary>
    /// Natural lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalNaturalThreeArrowsDown = "Natural lowered by three syntonic commas";
    /// <summary>
    /// Natural raised by three syntonic commas.
    /// </summary>
    public const string AccidentalNaturalThreeArrowsUp = "Natural raised by three syntonic commas";
    /// <summary>
    /// Natural lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalNaturalTwoArrowsDown = "Natural lowered by two syntonic commas";
    /// <summary>
    /// Natural raised by two syntonic commas.
    /// </summary>
    public const string AccidentalNaturalTwoArrowsUp = "Natural raised by two syntonic commas";
    /// <summary>
    /// One and a half sharps with arrow down.
    /// </summary>
    public const string AccidentalOneAndAHalfSharpsArrowDown = "One and a half sharps with arrow down";
    /// <summary>
    /// One and a half sharps with arrow up.
    /// </summary>
    public const string AccidentalOneAndAHalfSharpsArrowUp = "One and a half sharps with arrow up";
    /// <summary>
    /// One-quarter-tone flat (Ferneyhough).
    /// </summary>
    public const string AccidentalOneQuarterToneFlatFerneyhough = "One-quarter-tone flat (Ferneyhough)";
    /// <summary>
    /// One-quarter-tone flat (Stockhausen).
    /// </summary>
    public const string AccidentalOneQuarterToneFlatStockhausen = "One-quarter-tone flat (Stockhausen)";
    /// <summary>
    /// One-quarter-tone sharp (Ferneyhough).
    /// </summary>
    public const string AccidentalOneQuarterToneSharpFerneyhough = "One-quarter-tone sharp (Ferneyhough)";
    /// <summary>
    /// One-quarter-tone sharp (Stockhausen).
    /// </summary>
    public const string AccidentalOneQuarterToneSharpStockhausen = "One-quarter-tone sharp (Stockhausen)";
    /// <summary>
    /// One-third-tone flat (Ferneyhough).
    /// </summary>
    public const string AccidentalOneThirdToneFlatFerneyhough = "One-third-tone flat (Ferneyhough)";
    /// <summary>
    /// One-third-tone sharp (Ferneyhough).
    /// </summary>
    public const string AccidentalOneThirdToneSharpFerneyhough = "One-third-tone sharp (Ferneyhough)";
    /// <summary>
    /// Accidental parenthesis, left.
    /// </summary>
    public const string AccidentalParensLeft = "Accidental parenthesis, left";
    /// <summary>
    /// Accidental parenthesis, right.
    /// </summary>
    public const string AccidentalParensRight = "Accidental parenthesis, right";
    /// <summary>
    /// Lower by one equal tempered quarter-tone.
    /// </summary>
    public const string AccidentalQuarterFlatEqualTempered = "Lower by one equal tempered quarter-tone";
    /// <summary>
    /// Raise by one equal tempered quarter tone.
    /// </summary>
    public const string AccidentalQuarterSharpEqualTempered = "Raise by one equal tempered quarter tone";
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const string AccidentalQuarterToneFlat4 = "Quarter-tone flat";
    /// <summary>
    /// Arabic quarter-tone flat.
    /// </summary>
    public const string AccidentalQuarterToneFlatArabic = "Arabic quarter-tone flat";
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const string AccidentalQuarterToneFlatArrowUp = "Quarter-tone flat";
    /// <summary>
    /// Filled reversed flat (quarter-tone flat).
    /// </summary>
    public const string AccidentalQuarterToneFlatFilledReversed = "Filled reversed flat (quarter-tone flat)";
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const string AccidentalQuarterToneFlatNaturalArrowDown = "Quarter-tone flat";
    /// <summary>
    /// Quarter tone flat (Penderecki).
    /// </summary>
    public const string AccidentalQuarterToneFlatPenderecki = "Quarter tone flat (Penderecki)";
    /// <summary>
    /// Reversed flat (quarter-tone flat) (Stein).
    /// </summary>
    public const string AccidentalQuarterToneFlatStein = "Reversed flat (quarter-tone flat) (Stein)";
    /// <summary>
    /// Quarter-tone flat (van Blankenburg).
    /// </summary>
    public const string AccidentalQuarterToneFlatVanBlankenburg = "Quarter-tone flat (van Blankenburg)";
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const string AccidentalQuarterToneSharp4 = "Quarter-tone sharp";
    /// <summary>
    /// Arabic quarter-tone sharp.
    /// </summary>
    public const string AccidentalQuarterToneSharpArabic = "Arabic quarter-tone sharp";
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const string AccidentalQuarterToneSharpArrowDown = "Quarter-tone sharp";
    /// <summary>
    /// Quarter tone sharp (Bussotti).
    /// </summary>
    public const string AccidentalQuarterToneSharpBusotti = "Quarter tone sharp (Bussotti)";
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const string AccidentalQuarterToneSharpNaturalArrowUp = "Quarter-tone sharp";
    /// <summary>
    /// Half sharp (quarter-tone sharp) (Stein).
    /// </summary>
    public const string AccidentalQuarterToneSharpStein = "Half sharp (quarter-tone sharp) (Stein)";
    /// <summary>
    /// Quarter tone sharp with wiggly tail.
    /// </summary>
    public const string AccidentalQuarterToneSharpWiggle = "Quarter tone sharp with wiggly tail";
    /// <summary>
    /// Raise by one septimal comma.
    /// </summary>
    public const string AccidentalRaiseOneSeptimalComma = "Raise by one septimal comma";
    /// <summary>
    /// Raise by one tridecimal quartertone.
    /// </summary>
    public const string AccidentalRaiseOneTridecimalQuartertone = "Raise by one tridecimal quartertone";
    /// <summary>
    /// Raise by one undecimal quartertone.
    /// </summary>
    public const string AccidentalRaiseOneUndecimalQuartertone = "Raise by one undecimal quartertone";
    /// <summary>
    /// Raise by two septimal commas.
    /// </summary>
    public const string AccidentalRaiseTwoSeptimalCommas = "Raise by two septimal commas";
    /// <summary>
    /// Raised (Stockhausen).
    /// </summary>
    public const string AccidentalRaisedStockhausen = "Raised (Stockhausen)";
    /// <summary>
    /// Reversed flat and flat with arrow down.
    /// </summary>
    public const string AccidentalReversedFlatAndFlatArrowDown = "Reversed flat and flat with arrow down";
    /// <summary>
    /// Reversed flat and flat with arrow up.
    /// </summary>
    public const string AccidentalReversedFlatAndFlatArrowUp = "Reversed flat and flat with arrow up";
    /// <summary>
    /// Reversed flat with arrow down.
    /// </summary>
    public const string AccidentalReversedFlatArrowDown = "Reversed flat with arrow down";
    /// <summary>
    /// Reversed flat with arrow up.
    /// </summary>
    public const string AccidentalReversedFlatArrowUp = "Reversed flat with arrow up";
    /// <summary>
    /// Sharp.
    /// </summary>
    public const string AccidentalSharp = "Sharp";
    /// <summary>
    /// Arabic half-tone sharp.
    /// </summary>
    public const string AccidentalSharpArabic = "Arabic half-tone sharp";
    /// <summary>
    /// Sharp equal tempered semitone.
    /// </summary>
    public const string AccidentalSharpEqualTempered = "Sharp equal tempered semitone";
    /// <summary>
    /// Lowered sharp (Stockhausen).
    /// </summary>
    public const string AccidentalSharpLoweredStockhausen = "Lowered sharp (Stockhausen)";
    /// <summary>
    /// Sharp lowered by one syntonic comma.
    /// </summary>
    public const string AccidentalSharpOneArrowDown = "Sharp lowered by one syntonic comma";
    /// <summary>
    /// Sharp raised by one syntonic comma.
    /// </summary>
    public const string AccidentalSharpOneArrowUp = "Sharp raised by one syntonic comma";
    /// <summary>
    /// One or three quarter tones sharp.
    /// </summary>
    public const string AccidentalSharpOneHorizontalStroke = "One or three quarter tones sharp";
    /// <summary>
    /// Raised sharp (Stockhausen).
    /// </summary>
    public const string AccidentalSharpRaisedStockhausen = "Raised sharp (Stockhausen)";
    /// <summary>
    /// Repeated sharp, note on line (Stockhausen).
    /// </summary>
    public const string AccidentalSharpRepeatedLineStockhausen = "Repeated sharp, note on line (Stockhausen)";
    /// <summary>
    /// Repeated sharp, note in space (Stockhausen).
    /// </summary>
    public const string AccidentalSharpRepeatedSpaceStockhausen = "Repeated sharp, note in space (Stockhausen)";
    /// <summary>
    /// Reversed sharp.
    /// </summary>
    public const string AccidentalSharpReversed = "Reversed sharp";
    /// <summary>
    /// Sharp sharp.
    /// </summary>
    public const string AccidentalSharpSharp = "Sharp sharp";
    /// <summary>
    /// Sharp lowered by three syntonic commas.
    /// </summary>
    public const string AccidentalSharpThreeArrowsDown = "Sharp lowered by three syntonic commas";
    /// <summary>
    /// Sharp raised by three syntonic commas.
    /// </summary>
    public const string AccidentalSharpThreeArrowsUp = "Sharp raised by three syntonic commas";
    /// <summary>
    /// Sharp lowered by two syntonic commas.
    /// </summary>
    public const string AccidentalSharpTwoArrowsDown = "Sharp lowered by two syntonic commas";
    /// <summary>
    /// Sharp raised by two syntonic commas.
    /// </summary>
    public const string AccidentalSharpTwoArrowsUp = "Sharp raised by two syntonic commas";
    /// <summary>
    /// 1/12 tone low.
    /// </summary>
    public const string AccidentalSims12Down = "1/12 tone low";
    /// <summary>
    /// 1/12 tone high.
    /// </summary>
    public const string AccidentalSims12Up = "1/12 tone high";
    /// <summary>
    /// 1/4 tone low.
    /// </summary>
    public const string AccidentalSims4Down = "1/4 tone low";
    /// <summary>
    /// 1/4 tone high.
    /// </summary>
    public const string AccidentalSims4Up = "1/4 tone high";
    /// <summary>
    /// 1/6 tone low.
    /// </summary>
    public const string AccidentalSims6Down = "1/6 tone low";
    /// <summary>
    /// 1/6 tone high.
    /// </summary>
    public const string AccidentalSims6Up = "1/6 tone high";
    /// <summary>
    /// Sori (quarter tone sharp).
    /// </summary>
    public const string AccidentalSori = "Sori (quarter tone sharp)";
    /// <summary>
    /// Byzantine-style Bakiye flat (Tavener).
    /// </summary>
    public const string AccidentalTavenerFlat = "Byzantine-style Bakiye flat (Tavener)";
    /// <summary>
    /// Byzantine-style Büyük mücenneb sharp (Tavener).
    /// </summary>
    public const string AccidentalTavenerSharp = "Byzantine-style Büyük mücenneb sharp (Tavener)";
    /// <summary>
    /// Arabic three-quarter-tones flat.
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatArabic = "Arabic three-quarter-tones flat";
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatArrowDown = "Three-quarter-tones flat";
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatArrowUp = "Three-quarter-tones flat";
    /// <summary>
    /// Three-quarter-tones flat (Couper).
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatCouper = "Three-quarter-tones flat (Couper)";
    /// <summary>
    /// Three-quarter-tones flat (Grisey).
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatGrisey = "Three-quarter-tones flat (Grisey)";
    /// <summary>
    /// Three-quarter-tones flat (Tartini).
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatTartini = "Three-quarter-tones flat (Tartini)";
    /// <summary>
    /// Reversed flat and flat (three-quarter-tones flat) (Zimmermann).
    /// </summary>
    public const string AccidentalThreeQuarterTonesFlatZimmermann = "Reversed flat and flat (three-quarter-tones flat) (Zimmermann)";
    /// <summary>
    /// Arabic three-quarter-tones sharp.
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpArabic = "Arabic three-quarter-tones sharp";
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpArrowDown = "Three-quarter-tones sharp";
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpArrowUp = "Three-quarter-tones sharp";
    /// <summary>
    /// Three quarter tones sharp (Bussotti).
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpBusotti = "Three quarter tones sharp (Bussotti)";
    /// <summary>
    /// One and a half sharps (three-quarter-tones sharp) (Stein).
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpStein = "One and a half sharps (three-quarter-tones sharp) (Stein)";
    /// <summary>
    /// Three-quarter-tones sharp (Stockhausen).
    /// </summary>
    public const string AccidentalThreeQuarterTonesSharpStockhausen = "Three-quarter-tones sharp (Stockhausen)";
    /// <summary>
    /// Triple flat.
    /// </summary>
    public const string AccidentalTripleFlat = "Triple flat";
    /// <summary>
    /// Triple sharp.
    /// </summary>
    public const string AccidentalTripleSharp = "Triple sharp";
    /// <summary>
    /// Two-third-tones flat (Ferneyhough).
    /// </summary>
    public const string AccidentalTwoThirdTonesFlatFerneyhough = "Two-third-tones flat (Ferneyhough)";
    /// <summary>
    /// Two-third-tones sharp (Ferneyhough).
    /// </summary>
    public const string AccidentalTwoThirdTonesSharpFerneyhough = "Two-third-tones sharp (Ferneyhough)";
    /// <summary>
    /// Accidental down.
    /// </summary>
    public const string AccidentalUpsAndDownsDown = "Accidental down";
    /// <summary>
    /// Accidental less.
    /// </summary>
    public const string AccidentalUpsAndDownsLess = "Accidental less";
    /// <summary>
    /// Accidental more.
    /// </summary>
    public const string AccidentalUpsAndDownsMore = "Accidental more";
    /// <summary>
    /// Accidental up.
    /// </summary>
    public const string AccidentalUpsAndDownsUp = "Accidental up";
    /// <summary>
    /// Wilson minus (5 comma down).
    /// </summary>
    public const string AccidentalWilsonMinus = "Wilson minus (5 comma down)";
    /// <summary>
    /// Wilson plus (5 comma up).
    /// </summary>
    public const string AccidentalWilsonPlus = "Wilson plus (5 comma up)";
    /// <summary>
    /// 5/6 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky10TwelfthsFlat = "5/6 tone flat";
    /// <summary>
    /// 5/6 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky10TwelfthsSharp = "5/6 tone sharp";
    /// <summary>
    /// 11/12 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky11TwelfthsFlat = "11/12 tone flat";
    /// <summary>
    /// 11/12 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky11TwelfthsSharp = "11/12 tone sharp";
    /// <summary>
    /// 1/12 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky1TwelfthsFlat = "1/12 tone flat";
    /// <summary>
    /// 1/12 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky1TwelfthsSharp = "1/12 tone sharp";
    /// <summary>
    /// 1/6 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky2TwelfthsFlat = "1/6 tone flat";
    /// <summary>
    /// 1/6 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky2TwelfthsSharp = "1/6 tone sharp";
    /// <summary>
    /// 1/4 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky3TwelfthsFlat = "1/4 tone flat";
    /// <summary>
    /// 1/4 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky3TwelfthsSharp = "1/4 tone sharp";
    /// <summary>
    /// 1/3 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky4TwelfthsFlat = "1/3 tone flat";
    /// <summary>
    /// 1/3 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky4TwelfthsSharp = "1/3 tone sharp";
    /// <summary>
    /// 5/12 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky5TwelfthsFlat = "5/12 tone flat";
    /// <summary>
    /// 5/12 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky5TwelfthsSharp = "5/12 tone sharp";
    /// <summary>
    /// 1/2 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky6TwelfthsFlat = "1/2 tone flat";
    /// <summary>
    /// 1/2 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky6TwelfthsSharp = "1/2 tone sharp";
    /// <summary>
    /// 7/12 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky7TwelfthsFlat = "7/12 tone flat";
    /// <summary>
    /// 7/12 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky7TwelfthsSharp = "7/12 tone sharp";
    /// <summary>
    /// 2/3 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky8TwelfthsFlat = "2/3 tone flat";
    /// <summary>
    /// 2/3 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky8TwelfthsSharp = "2/3 tone sharp";
    /// <summary>
    /// 3/4 tone flat.
    /// </summary>
    public const string AccidentalWyschnegradsky9TwelfthsFlat = "3/4 tone flat";
    /// <summary>
    /// 3/4 tone sharp.
    /// </summary>
    public const string AccidentalWyschnegradsky9TwelfthsSharp = "3/4 tone sharp";
    /// <summary>
    /// One-third-tone sharp (Xenakis).
    /// </summary>
    public const string AccidentalXenakisOneThirdToneSharp = "One-third-tone sharp (Xenakis)";
    /// <summary>
    /// Two-third-tones sharp (Xenakis).
    /// </summary>
    public const string AccidentalXenakisTwoThirdTonesSharp = "Two-third-tones sharp (Xenakis)";
    /// <summary>
    /// Choralmelodie (Berg).
    /// </summary>
    public const string AnalyticsChoralmelodie = "Choralmelodie (Berg)";
    /// <summary>
    /// End of stimme.
    /// </summary>
    public const string AnalyticsEndStimme = "End of stimme";
    /// <summary>
    /// Hauptrhythmus (Berg).
    /// </summary>
    public const string AnalyticsHauptrhythmus = "Hauptrhythmus (Berg)";
    /// <summary>
    /// Hauptstimme.
    /// </summary>
    public const string AnalyticsHauptstimme = "Hauptstimme";
    /// <summary>
    /// Inversion 1.
    /// </summary>
    public const string AnalyticsInversion1 = "Inversion 1";
    /// <summary>
    /// Nebenstimme.
    /// </summary>
    public const string AnalyticsNebenstimme = "Nebenstimme";
    /// <summary>
    /// Start of stimme.
    /// </summary>
    public const string AnalyticsStartStimme = "Start of stimme";
    /// <summary>
    /// Theme.
    /// </summary>
    public const string AnalyticsTheme = "Theme";
    /// <summary>
    /// Theme 1.
    /// </summary>
    public const string AnalyticsTheme1 = "Theme 1";
    /// <summary>
    /// Inversion of theme.
    /// </summary>
    public const string AnalyticsThemeInversion = "Inversion of theme";
    /// <summary>
    /// Retrograde of theme.
    /// </summary>
    public const string AnalyticsThemeRetrograde = "Retrograde of theme";
    /// <summary>
    /// Retrograde inversion of theme.
    /// </summary>
    public const string AnalyticsThemeRetrogradeInversion = "Retrograde inversion of theme";
    /// <summary>
    /// Arpeggiato.
    /// </summary>
    public const string Arpeggiato = "Arpeggiato";
    /// <summary>
    /// Arpeggiato down.
    /// </summary>
    public const string ArpeggiatoDown = "Arpeggiato down";
    /// <summary>
    /// Arpeggiato up.
    /// </summary>
    public const string ArpeggiatoUp = "Arpeggiato up";
    /// <summary>
    /// Black arrow down (S).
    /// </summary>
    public const string ArrowBlackDown = "Black arrow down (S)";
    /// <summary>
    /// Black arrow down-left (SW).
    /// </summary>
    public const string ArrowBlackDownLeft = "Black arrow down-left (SW)";
    /// <summary>
    /// Black arrow down-right (SE).
    /// </summary>
    public const string ArrowBlackDownRight = "Black arrow down-right (SE)";
    /// <summary>
    /// Black arrow left (W).
    /// </summary>
    public const string ArrowBlackLeft = "Black arrow left (W)";
    /// <summary>
    /// Black arrow right (E).
    /// </summary>
    public const string ArrowBlackRight = "Black arrow right (E)";
    /// <summary>
    /// Black arrow up (N).
    /// </summary>
    public const string ArrowBlackUp = "Black arrow up (N)";
    /// <summary>
    /// Black arrow up-left (NW).
    /// </summary>
    public const string ArrowBlackUpLeft = "Black arrow up-left (NW)";
    /// <summary>
    /// Black arrow up-right (NE).
    /// </summary>
    public const string ArrowBlackUpRight = "Black arrow up-right (NE)";
    /// <summary>
    /// Open arrow down (S).
    /// </summary>
    public const string ArrowOpenDown = "Open arrow down (S)";
    /// <summary>
    /// Open arrow down-left (SW).
    /// </summary>
    public const string ArrowOpenDownLeft = "Open arrow down-left (SW)";
    /// <summary>
    /// Open arrow down-right (SE).
    /// </summary>
    public const string ArrowOpenDownRight = "Open arrow down-right (SE)";
    /// <summary>
    /// Open arrow left (W).
    /// </summary>
    public const string ArrowOpenLeft = "Open arrow left (W)";
    /// <summary>
    /// Open arrow right (E).
    /// </summary>
    public const string ArrowOpenRight = "Open arrow right (E)";
    /// <summary>
    /// Open arrow up (N).
    /// </summary>
    public const string ArrowOpenUp = "Open arrow up (N)";
    /// <summary>
    /// Open arrow up-left (NW).
    /// </summary>
    public const string ArrowOpenUpLeft = "Open arrow up-left (NW)";
    /// <summary>
    /// Open arrow up-right (NE).
    /// </summary>
    public const string ArrowOpenUpRight = "Open arrow up-right (NE)";
    /// <summary>
    /// White arrow down (S).
    /// </summary>
    public const string ArrowWhiteDown = "White arrow down (S)";
    /// <summary>
    /// White arrow down-left (SW).
    /// </summary>
    public const string ArrowWhiteDownLeft = "White arrow down-left (SW)";
    /// <summary>
    /// White arrow down-right (SE).
    /// </summary>
    public const string ArrowWhiteDownRight = "White arrow down-right (SE)";
    /// <summary>
    /// White arrow left (W).
    /// </summary>
    public const string ArrowWhiteLeft = "White arrow left (W)";
    /// <summary>
    /// White arrow right (E).
    /// </summary>
    public const string ArrowWhiteRight = "White arrow right (E)";
    /// <summary>
    /// White arrow up (N).
    /// </summary>
    public const string ArrowWhiteUp = "White arrow up (N)";
    /// <summary>
    /// White arrow up-left (NW).
    /// </summary>
    public const string ArrowWhiteUpLeft = "White arrow up-left (NW)";
    /// <summary>
    /// White arrow up-right (NE).
    /// </summary>
    public const string ArrowWhiteUpRight = "White arrow up-right (NE)";
    /// <summary>
    /// Black arrowhead down (S).
    /// </summary>
    public const string ArrowheadBlackDown = "Black arrowhead down (S)";
    /// <summary>
    /// Black arrowhead down-left (SW).
    /// </summary>
    public const string ArrowheadBlackDownLeft = "Black arrowhead down-left (SW)";
    /// <summary>
    /// Black arrowhead down-right (SE).
    /// </summary>
    public const string ArrowheadBlackDownRight = "Black arrowhead down-right (SE)";
    /// <summary>
    /// Black arrowhead left (W).
    /// </summary>
    public const string ArrowheadBlackLeft = "Black arrowhead left (W)";
    /// <summary>
    /// Black arrowhead right (E).
    /// </summary>
    public const string ArrowheadBlackRight = "Black arrowhead right (E)";
    /// <summary>
    /// Black arrowhead up (N).
    /// </summary>
    public const string ArrowheadBlackUp = "Black arrowhead up (N)";
    /// <summary>
    /// Black arrowhead up-left (NW).
    /// </summary>
    public const string ArrowheadBlackUpLeft = "Black arrowhead up-left (NW)";
    /// <summary>
    /// Black arrowhead up-right (NE).
    /// </summary>
    public const string ArrowheadBlackUpRight = "Black arrowhead up-right (NE)";
    /// <summary>
    /// Open arrowhead down (S).
    /// </summary>
    public const string ArrowheadOpenDown = "Open arrowhead down (S)";
    /// <summary>
    /// Open arrowhead down-left (SW).
    /// </summary>
    public const string ArrowheadOpenDownLeft = "Open arrowhead down-left (SW)";
    /// <summary>
    /// Open arrowhead down-right (SE).
    /// </summary>
    public const string ArrowheadOpenDownRight = "Open arrowhead down-right (SE)";
    /// <summary>
    /// Open arrowhead left (W).
    /// </summary>
    public const string ArrowheadOpenLeft = "Open arrowhead left (W)";
    /// <summary>
    /// Open arrowhead right (E).
    /// </summary>
    public const string ArrowheadOpenRight = "Open arrowhead right (E)";
    /// <summary>
    /// Open arrowhead up (N).
    /// </summary>
    public const string ArrowheadOpenUp = "Open arrowhead up (N)";
    /// <summary>
    /// Open arrowhead up-left (NW).
    /// </summary>
    public const string ArrowheadOpenUpLeft = "Open arrowhead up-left (NW)";
    /// <summary>
    /// Open arrowhead up-right (NE).
    /// </summary>
    public const string ArrowheadOpenUpRight = "Open arrowhead up-right (NE)";
    /// <summary>
    /// White arrowhead down (S).
    /// </summary>
    public const string ArrowheadWhiteDown = "White arrowhead down (S)";
    /// <summary>
    /// White arrowhead down-left (SW).
    /// </summary>
    public const string ArrowheadWhiteDownLeft = "White arrowhead down-left (SW)";
    /// <summary>
    /// White arrowhead down-right (SE).
    /// </summary>
    public const string ArrowheadWhiteDownRight = "White arrowhead down-right (SE)";
    /// <summary>
    /// White arrowhead left (W).
    /// </summary>
    public const string ArrowheadWhiteLeft = "White arrowhead left (W)";
    /// <summary>
    /// White arrowhead right (E).
    /// </summary>
    public const string ArrowheadWhiteRight = "White arrowhead right (E)";
    /// <summary>
    /// White arrowhead up (N).
    /// </summary>
    public const string ArrowheadWhiteUp = "White arrowhead up (N)";
    /// <summary>
    /// White arrowhead up-left (NW).
    /// </summary>
    public const string ArrowheadWhiteUpLeft = "White arrowhead up-left (NW)";
    /// <summary>
    /// White arrowhead up-right (NE).
    /// </summary>
    public const string ArrowheadWhiteUpRight = "White arrowhead up-right (NE)";
    /// <summary>
    /// Accent above.
    /// </summary>
    public const string ArticAccentAbove = "Accent above";
    /// <summary>
    /// Accent below.
    /// </summary>
    public const string ArticAccentBelow = "Accent below";
    /// <summary>
    /// Accent-staccato above.
    /// </summary>
    public const string ArticAccentStaccatoAbove = "Accent-staccato above";
    /// <summary>
    /// Accent-staccato below.
    /// </summary>
    public const string ArticAccentStaccatoBelow = "Accent-staccato below";
    /// <summary>
    /// Laissez vibrer (l.v.) above.
    /// </summary>
    public const string ArticLaissezVibrerAbove = "Laissez vibrer (l.v.) above";
    /// <summary>
    /// Laissez vibrer (l.v.) below.
    /// </summary>
    public const string ArticLaissezVibrerBelow = "Laissez vibrer (l.v.) below";
    /// <summary>
    /// Marcato above.
    /// </summary>
    public const string ArticMarcatoAbove = "Marcato above";
    /// <summary>
    /// Marcato below.
    /// </summary>
    public const string ArticMarcatoBelow = "Marcato below";
    /// <summary>
    /// Marcato-staccato above.
    /// </summary>
    public const string ArticMarcatoStaccatoAbove = "Marcato-staccato above";
    /// <summary>
    /// Marcato-staccato below.
    /// </summary>
    public const string ArticMarcatoStaccatoBelow = "Marcato-staccato below";
    /// <summary>
    /// Marcato-tenuto above.
    /// </summary>
    public const string ArticMarcatoTenutoAbove = "Marcato-tenuto above";
    /// <summary>
    /// Marcato-tenuto below.
    /// </summary>
    public const string ArticMarcatoTenutoBelow = "Marcato-tenuto below";
    /// <summary>
    /// Soft accent above.
    /// </summary>
    public const string ArticSoftAccentAbove = "Soft accent above";
    /// <summary>
    /// Soft accent below.
    /// </summary>
    public const string ArticSoftAccentBelow = "Soft accent below";
    /// <summary>
    /// Soft accent-staccato above.
    /// </summary>
    public const string ArticSoftAccentStaccatoAbove = "Soft accent-staccato above";
    /// <summary>
    /// Soft accent-staccato below.
    /// </summary>
    public const string ArticSoftAccentStaccatoBelow = "Soft accent-staccato below";
    /// <summary>
    /// Soft accent-tenuto above.
    /// </summary>
    public const string ArticSoftAccentTenutoAbove = "Soft accent-tenuto above";
    /// <summary>
    /// Soft accent-tenuto below.
    /// </summary>
    public const string ArticSoftAccentTenutoBelow = "Soft accent-tenuto below";
    /// <summary>
    /// Soft accent-tenuto-staccato above.
    /// </summary>
    public const string ArticSoftAccentTenutoStaccatoAbove = "Soft accent-tenuto-staccato above";
    /// <summary>
    /// Soft accent-tenuto-staccato below.
    /// </summary>
    public const string ArticSoftAccentTenutoStaccatoBelow = "Soft accent-tenuto-staccato below";
    /// <summary>
    /// Staccatissimo above.
    /// </summary>
    public const string ArticStaccatissimoAbove = "Staccatissimo above";
    /// <summary>
    /// Staccatissimo below.
    /// </summary>
    public const string ArticStaccatissimoBelow = "Staccatissimo below";
    /// <summary>
    /// Staccatissimo stroke above.
    /// </summary>
    public const string ArticStaccatissimoStrokeAbove = "Staccatissimo stroke above";
    /// <summary>
    /// Staccatissimo stroke below.
    /// </summary>
    public const string ArticStaccatissimoStrokeBelow = "Staccatissimo stroke below";
    /// <summary>
    /// Staccatissimo wedge above.
    /// </summary>
    public const string ArticStaccatissimoWedgeAbove = "Staccatissimo wedge above";
    /// <summary>
    /// Staccatissimo wedge below.
    /// </summary>
    public const string ArticStaccatissimoWedgeBelow = "Staccatissimo wedge below";
    /// <summary>
    /// Staccato above.
    /// </summary>
    public const string ArticStaccatoAbove = "Staccato above";
    /// <summary>
    /// Staccato below.
    /// </summary>
    public const string ArticStaccatoBelow = "Staccato below";
    /// <summary>
    /// Stress above.
    /// </summary>
    public const string ArticStressAbove = "Stress above";
    /// <summary>
    /// Stress below.
    /// </summary>
    public const string ArticStressBelow = "Stress below";
    /// <summary>
    /// Tenuto above.
    /// </summary>
    public const string ArticTenutoAbove = "Tenuto above";
    /// <summary>
    /// Tenuto-accent above.
    /// </summary>
    public const string ArticTenutoAccentAbove = "Tenuto-accent above";
    /// <summary>
    /// Tenuto-accent below.
    /// </summary>
    public const string ArticTenutoAccentBelow = "Tenuto-accent below";
    /// <summary>
    /// Tenuto below.
    /// </summary>
    public const string ArticTenutoBelow = "Tenuto below";
    /// <summary>
    /// Louré (tenuto-staccato) above.
    /// </summary>
    public const string ArticTenutoStaccatoAbove = "Louré (tenuto-staccato) above";
    /// <summary>
    /// Louré (tenuto-staccato) below.
    /// </summary>
    public const string ArticTenutoStaccatoBelow = "Louré (tenuto-staccato) below";
    /// <summary>
    /// Unstress above.
    /// </summary>
    public const string ArticUnstressAbove = "Unstress above";
    /// <summary>
    /// Unstress below.
    /// </summary>
    public const string ArticUnstressBelow = "Unstress below";
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const string AugmentationDot = "Augmentation dot";
    /// <summary>
    /// Dashed barline.
    /// </summary>
    public const string BarlineDashed = "Dashed barline";
    /// <summary>
    /// Dotted barline.
    /// </summary>
    public const string BarlineDotted = "Dotted barline";
    /// <summary>
    /// Double barline.
    /// </summary>
    public const string BarlineDouble = "Double barline";
    /// <summary>
    /// Final barline.
    /// </summary>
    public const string BarlineFinal = "Final barline";
    /// <summary>
    /// Heavy barline.
    /// </summary>
    public const string BarlineHeavy = "Heavy barline";
    /// <summary>
    /// Heavy double barline.
    /// </summary>
    public const string BarlineHeavyHeavy = "Heavy double barline";
    /// <summary>
    /// Reverse final barline.
    /// </summary>
    public const string BarlineReverseFinal = "Reverse final barline";
    /// <summary>
    /// Short barline.
    /// </summary>
    public const string BarlineShort = "Short barline";
    /// <summary>
    /// Single barline.
    /// </summary>
    public const string BarlineSingle = "Single barline";
    /// <summary>
    /// Tick barline.
    /// </summary>
    public const string BarlineTick = "Tick barline";
    /// <summary>
    /// Accel./rit. beam 1 (widest).
    /// </summary>
    public const string BeamAccelRit1 = "Accel./rit. beam 1 (widest)";
    /// <summary>
    /// Accel./rit. beam 10.
    /// </summary>
    public const string BeamAccelRit10 = "Accel./rit. beam 10";
    /// <summary>
    /// Accel./rit. beam 11.
    /// </summary>
    public const string BeamAccelRit11 = "Accel./rit. beam 11";
    /// <summary>
    /// Accel./rit. beam 12.
    /// </summary>
    public const string BeamAccelRit12 = "Accel./rit. beam 12";
    /// <summary>
    /// Accel./rit. beam 13.
    /// </summary>
    public const string BeamAccelRit13 = "Accel./rit. beam 13";
    /// <summary>
    /// Accel./rit. beam 14.
    /// </summary>
    public const string BeamAccelRit14 = "Accel./rit. beam 14";
    /// <summary>
    /// Accel./rit. beam 15 (narrowest).
    /// </summary>
    public const string BeamAccelRit15 = "Accel./rit. beam 15 (narrowest)";
    /// <summary>
    /// Accel./rit. beam 2.
    /// </summary>
    public const string BeamAccelRit2 = "Accel./rit. beam 2";
    /// <summary>
    /// Accel./rit. beam 3.
    /// </summary>
    public const string BeamAccelRit3 = "Accel./rit. beam 3";
    /// <summary>
    /// Accel./rit. beam 4.
    /// </summary>
    public const string BeamAccelRit4 = "Accel./rit. beam 4";
    /// <summary>
    /// Accel./rit. beam 5.
    /// </summary>
    public const string BeamAccelRit5 = "Accel./rit. beam 5";
    /// <summary>
    /// Accel./rit. beam 6.
    /// </summary>
    public const string BeamAccelRit6 = "Accel./rit. beam 6";
    /// <summary>
    /// Accel./rit. beam 7.
    /// </summary>
    public const string BeamAccelRit7 = "Accel./rit. beam 7";
    /// <summary>
    /// Accel./rit. beam 8.
    /// </summary>
    public const string BeamAccelRit8 = "Accel./rit. beam 8";
    /// <summary>
    /// Accel./rit. beam 9.
    /// </summary>
    public const string BeamAccelRit9 = "Accel./rit. beam 9";
    /// <summary>
    /// Accel./rit. beam terminating line.
    /// </summary>
    public const string BeamAccelRitFinal = "Accel./rit. beam terminating line";
    /// <summary>
    /// Brace.
    /// </summary>
    public const string Brace = "Brace";
    /// <summary>
    /// Bracket.
    /// </summary>
    public const string Bracket = "Bracket";
    /// <summary>
    /// Bracket bottom.
    /// </summary>
    public const string BracketBottom = "Bracket bottom";
    /// <summary>
    /// Bracket top.
    /// </summary>
    public const string BracketTop = "Bracket top";
    /// <summary>
    /// Bend.
    /// </summary>
    public const string BrassBend = "Bend";
    /// <summary>
    /// Doit, long.
    /// </summary>
    public const string BrassDoitLong = "Doit, long";
    /// <summary>
    /// Doit, medium.
    /// </summary>
    public const string BrassDoitMedium = "Doit, medium";
    /// <summary>
    /// Doit, short.
    /// </summary>
    public const string BrassDoitShort = "Doit, short";
    /// <summary>
    /// Lip fall, long.
    /// </summary>
    public const string BrassFallLipLong = "Lip fall, long";
    /// <summary>
    /// Lip fall, medium.
    /// </summary>
    public const string BrassFallLipMedium = "Lip fall, medium";
    /// <summary>
    /// Lip fall, short.
    /// </summary>
    public const string BrassFallLipShort = "Lip fall, short";
    /// <summary>
    /// Rough fall, long.
    /// </summary>
    public const string BrassFallRoughLong = "Rough fall, long";
    /// <summary>
    /// Rough fall, medium.
    /// </summary>
    public const string BrassFallRoughMedium = "Rough fall, medium";
    /// <summary>
    /// Rough fall, short.
    /// </summary>
    public const string BrassFallRoughShort = "Rough fall, short";
    /// <summary>
    /// Smooth fall, long.
    /// </summary>
    public const string BrassFallSmoothLong = "Smooth fall, long";
    /// <summary>
    /// Smooth fall, medium.
    /// </summary>
    public const string BrassFallSmoothMedium = "Smooth fall, medium";
    /// <summary>
    /// Smooth fall, short.
    /// </summary>
    public const string BrassFallSmoothShort = "Smooth fall, short";
    /// <summary>
    /// Flip.
    /// </summary>
    public const string BrassFlip = "Flip";
    /// <summary>
    /// Harmon mute, stem in.
    /// </summary>
    public const string BrassHarmonMuteClosed = "Harmon mute, stem in";
    /// <summary>
    /// Harmon mute, stem extended, left.
    /// </summary>
    public const string BrassHarmonMuteStemHalfLeft = "Harmon mute, stem extended, left";
    /// <summary>
    /// Harmon mute, stem extended, right.
    /// </summary>
    public const string BrassHarmonMuteStemHalfRight = "Harmon mute, stem extended, right";
    /// <summary>
    /// Harmon mute, stem out.
    /// </summary>
    public const string BrassHarmonMuteStemOpen = "Harmon mute, stem out";
    /// <summary>
    /// Jazz turn.
    /// </summary>
    public const string BrassJazzTurn = "Jazz turn";
    /// <summary>
    /// Lift, long.
    /// </summary>
    public const string BrassLiftLong = "Lift, long";
    /// <summary>
    /// Lift, medium.
    /// </summary>
    public const string BrassLiftMedium = "Lift, medium";
    /// <summary>
    /// Lift, short.
    /// </summary>
    public const string BrassLiftShort = "Lift, short";
    /// <summary>
    /// Smooth lift, long.
    /// </summary>
    public const string BrassLiftSmoothLong = "Smooth lift, long";
    /// <summary>
    /// Smooth lift, medium.
    /// </summary>
    public const string BrassLiftSmoothMedium = "Smooth lift, medium";
    /// <summary>
    /// Smooth lift, short.
    /// </summary>
    public const string BrassLiftSmoothShort = "Smooth lift, short";
    /// <summary>
    /// Muted (closed).
    /// </summary>
    public const string BrassMuteClosed = "Muted (closed)";
    /// <summary>
    /// Half-muted (half-closed).
    /// </summary>
    public const string BrassMuteHalfClosed = "Half-muted (half-closed)";
    /// <summary>
    /// Open.
    /// </summary>
    public const string BrassMuteOpen = "Open";
    /// <summary>
    /// Plop.
    /// </summary>
    public const string BrassPlop = "Plop";
    /// <summary>
    /// Scoop.
    /// </summary>
    public const string BrassScoop = "Scoop";
    /// <summary>
    /// Smear.
    /// </summary>
    public const string BrassSmear = "Smear";
    /// <summary>
    /// Valve trill.
    /// </summary>
    public const string BrassValveTrill = "Valve trill";
    /// <summary>
    /// Breath mark (comma).
    /// </summary>
    public const string BreathMarkComma = "Breath mark (comma)";
    /// <summary>
    /// Breath mark (Salzedo).
    /// </summary>
    public const string BreathMarkSalzedo = "Breath mark (Salzedo)";
    /// <summary>
    /// Breath mark (tick-like).
    /// </summary>
    public const string BreathMarkTick = "Breath mark (tick-like)";
    /// <summary>
    /// Breath mark (upbow-like).
    /// </summary>
    public const string BreathMarkUpbow = "Breath mark (upbow-like)";
    /// <summary>
    /// Bridge clef.
    /// </summary>
    public const string BridgeClef = "Bridge clef";
    /// <summary>
    /// Buzz roll.
    /// </summary>
    public const string BuzzRoll = "Buzz roll";
    /// <summary>
    /// C clef.
    /// </summary>
    public const string CClef = "C clef";
    /// <summary>
    /// C clef ottava bassa.
    /// </summary>
    public const string CClef8vb = "C clef ottava bassa";
    /// <summary>
    /// C clef, arrow down.
    /// </summary>
    public const string CClefArrowDown = "C clef, arrow down";
    /// <summary>
    /// C clef, arrow up.
    /// </summary>
    public const string CClefArrowUp = "C clef, arrow up";
    /// <summary>
    /// C clef change.
    /// </summary>
    public const string CClefChange = "C clef change";
    /// <summary>
    /// Combining C clef.
    /// </summary>
    public const string CClefCombining = "Combining C clef";
    /// <summary>
    /// Reversed C clef.
    /// </summary>
    public const string CClefReversed = "Reversed C clef";
    /// <summary>
    /// C clef (19th century).
    /// </summary>
    public const string CClefSquare = "C clef (19th century)";
    /// <summary>
    /// Caesura.
    /// </summary>
    public const string Caesura = "Caesura";
    /// <summary>
    /// Curved caesura.
    /// </summary>
    public const string CaesuraCurved = "Curved caesura";
    /// <summary>
    /// Short caesura.
    /// </summary>
    public const string CaesuraShort = "Short caesura";
    /// <summary>
    /// Single stroke caesura.
    /// </summary>
    public const string CaesuraSingleStroke = "Single stroke caesura";
    /// <summary>
    /// Thick caesura.
    /// </summary>
    public const string CaesuraThick = "Thick caesura";
    /// <summary>
    /// Accentus above.
    /// </summary>
    public const string ChantAccentusAbove = "Accentus above";
    /// <summary>
    /// Accentus below.
    /// </summary>
    public const string ChantAccentusBelow = "Accentus below";
    /// <summary>
    /// Punctum auctum, ascending.
    /// </summary>
    public const string ChantAuctumAsc = "Punctum auctum, ascending";
    /// <summary>
    /// Punctum auctum, descending.
    /// </summary>
    public const string ChantAuctumDesc = "Punctum auctum, descending";
    /// <summary>
    /// Augmentum (mora).
    /// </summary>
    public const string ChantAugmentum = "Augmentum (mora)";
    /// <summary>
    /// Caesura.
    /// </summary>
    public const string ChantCaesura = "Caesura";
    /// <summary>
    /// Plainchant C clef.
    /// </summary>
    public const string ChantCclef = "Plainchant C clef";
    /// <summary>
    /// Circulus above.
    /// </summary>
    public const string ChantCirculusAbove = "Circulus above";
    /// <summary>
    /// Circulus below.
    /// </summary>
    public const string ChantCirculusBelow = "Circulus below";
    /// <summary>
    /// Connecting line, ascending 2nd.
    /// </summary>
    public const string ChantConnectingLineAsc2nd = "Connecting line, ascending 2nd";
    /// <summary>
    /// Connecting line, ascending 3rd.
    /// </summary>
    public const string ChantConnectingLineAsc3rd = "Connecting line, ascending 3rd";
    /// <summary>
    /// Connecting line, ascending 4th.
    /// </summary>
    public const string ChantConnectingLineAsc4th = "Connecting line, ascending 4th";
    /// <summary>
    /// Connecting line, ascending 5th.
    /// </summary>
    public const string ChantConnectingLineAsc5th = "Connecting line, ascending 5th";
    /// <summary>
    /// Connecting line, ascending 6th.
    /// </summary>
    public const string ChantConnectingLineAsc6th = "Connecting line, ascending 6th";
    /// <summary>
    /// Plainchant custos, stem down, high position.
    /// </summary>
    public const string ChantCustosStemDownPosHigh = "Plainchant custos, stem down, high position";
    /// <summary>
    /// Plainchant custos, stem down, highest position.
    /// </summary>
    public const string ChantCustosStemDownPosHighest = "Plainchant custos, stem down, highest position";
    /// <summary>
    /// Plainchant custos, stem down, middle position.
    /// </summary>
    public const string ChantCustosStemDownPosMiddle = "Plainchant custos, stem down, middle position";
    /// <summary>
    /// Plainchant custos, stem up, low position.
    /// </summary>
    public const string ChantCustosStemUpPosLow = "Plainchant custos, stem up, low position";
    /// <summary>
    /// Plainchant custos, stem up, lowest position.
    /// </summary>
    public const string ChantCustosStemUpPosLowest = "Plainchant custos, stem up, lowest position";
    /// <summary>
    /// Plainchant custos, stem up, middle position.
    /// </summary>
    public const string ChantCustosStemUpPosMiddle = "Plainchant custos, stem up, middle position";
    /// <summary>
    /// Punctum deminutum, lower.
    /// </summary>
    public const string ChantDeminutumLower = "Punctum deminutum, lower";
    /// <summary>
    /// Punctum deminutum, upper.
    /// </summary>
    public const string ChantDeminutumUpper = "Punctum deminutum, upper";
    /// <summary>
    /// Divisio finalis.
    /// </summary>
    public const string ChantDivisioFinalis = "Divisio finalis";
    /// <summary>
    /// Divisio maior.
    /// </summary>
    public const string ChantDivisioMaior = "Divisio maior";
    /// <summary>
    /// Divisio maxima.
    /// </summary>
    public const string ChantDivisioMaxima = "Divisio maxima";
    /// <summary>
    /// Divisio minima.
    /// </summary>
    public const string ChantDivisioMinima = "Divisio minima";
    /// <summary>
    /// Entry line, ascending 2nd.
    /// </summary>
    public const string ChantEntryLineAsc2nd = "Entry line, ascending 2nd";
    /// <summary>
    /// Entry line, ascending 3rd.
    /// </summary>
    public const string ChantEntryLineAsc3rd = "Entry line, ascending 3rd";
    /// <summary>
    /// Entry line, ascending 4th.
    /// </summary>
    public const string ChantEntryLineAsc4th = "Entry line, ascending 4th";
    /// <summary>
    /// Entry line, ascending 5th.
    /// </summary>
    public const string ChantEntryLineAsc5th = "Entry line, ascending 5th";
    /// <summary>
    /// Entry line, ascending 6th.
    /// </summary>
    public const string ChantEntryLineAsc6th = "Entry line, ascending 6th";
    /// <summary>
    /// Episema.
    /// </summary>
    public const string ChantEpisema = "Episema";
    /// <summary>
    /// Plainchant F clef.
    /// </summary>
    public const string ChantFclef = "Plainchant F clef";
    /// <summary>
    /// Ictus above.
    /// </summary>
    public const string ChantIctusAbove = "Ictus above";
    /// <summary>
    /// Ictus below.
    /// </summary>
    public const string ChantIctusBelow = "Ictus below";
    /// <summary>
    /// Ligated stroke, descending 2nd.
    /// </summary>
    public const string ChantLigaturaDesc2nd = "Ligated stroke, descending 2nd";
    /// <summary>
    /// Ligated stroke, descending 3rd.
    /// </summary>
    public const string ChantLigaturaDesc3rd = "Ligated stroke, descending 3rd";
    /// <summary>
    /// Ligated stroke, descending 4th.
    /// </summary>
    public const string ChantLigaturaDesc4th = "Ligated stroke, descending 4th";
    /// <summary>
    /// Ligated stroke, descending 5th.
    /// </summary>
    public const string ChantLigaturaDesc5th = "Ligated stroke, descending 5th";
    /// <summary>
    /// Oriscus ascending.
    /// </summary>
    public const string ChantOriscusAscending = "Oriscus ascending";
    /// <summary>
    /// Oriscus descending.
    /// </summary>
    public const string ChantOriscusDescending = "Oriscus descending";
    /// <summary>
    /// Oriscus liquescens.
    /// </summary>
    public const string ChantOriscusLiquescens = "Oriscus liquescens";
    /// <summary>
    /// Podatus, lower.
    /// </summary>
    public const string ChantPodatusLower = "Podatus, lower";
    /// <summary>
    /// Podatus, upper.
    /// </summary>
    public const string ChantPodatusUpper = "Podatus, upper";
    /// <summary>
    /// Punctum.
    /// </summary>
    public const string ChantPunctum = "Punctum";
    /// <summary>
    /// Punctum cavum.
    /// </summary>
    public const string ChantPunctumCavum = "Punctum cavum";
    /// <summary>
    /// Punctum deminutum.
    /// </summary>
    public const string ChantPunctumDeminutum = "Punctum deminutum";
    /// <summary>
    /// Punctum inclinatum.
    /// </summary>
    public const string ChantPunctumInclinatum = "Punctum inclinatum";
    /// <summary>
    /// Punctum inclinatum auctum.
    /// </summary>
    public const string ChantPunctumInclinatumAuctum = "Punctum inclinatum auctum";
    /// <summary>
    /// Punctum inclinatum deminutum.
    /// </summary>
    public const string ChantPunctumInclinatumDeminutum = "Punctum inclinatum deminutum";
    /// <summary>
    /// Punctum linea.
    /// </summary>
    public const string ChantPunctumLinea = "Punctum linea";
    /// <summary>
    /// Punctum linea cavum.
    /// </summary>
    public const string ChantPunctumLineaCavum = "Punctum linea cavum";
    /// <summary>
    /// Punctum virga.
    /// </summary>
    public const string ChantPunctumVirga = "Punctum virga";
    /// <summary>
    /// Punctum virga, reversed.
    /// </summary>
    public const string ChantPunctumVirgaReversed = "Punctum virga, reversed";
    /// <summary>
    /// Quilisma.
    /// </summary>
    public const string ChantQuilisma = "Quilisma";
    /// <summary>
    /// Semicirculus above.
    /// </summary>
    public const string ChantSemicirculusAbove = "Semicirculus above";
    /// <summary>
    /// Semicirculus below.
    /// </summary>
    public const string ChantSemicirculusBelow = "Semicirculus below";
    /// <summary>
    /// Plainchant staff.
    /// </summary>
    public const string ChantStaff = "Plainchant staff";
    /// <summary>
    /// Plainchant staff (narrow).
    /// </summary>
    public const string ChantStaffNarrow = "Plainchant staff (narrow)";
    /// <summary>
    /// Plainchant staff (wide).
    /// </summary>
    public const string ChantStaffWide = "Plainchant staff (wide)";
    /// <summary>
    /// Strophicus.
    /// </summary>
    public const string ChantStrophicus = "Strophicus";
    /// <summary>
    /// Strophicus auctus.
    /// </summary>
    public const string ChantStrophicusAuctus = "Strophicus auctus";
    /// <summary>
    /// Strophicus liquescens, 2nd.
    /// </summary>
    public const string ChantStrophicusLiquescens2nd = "Strophicus liquescens, 2nd";
    /// <summary>
    /// Strophicus liquescens, 3rd.
    /// </summary>
    public const string ChantStrophicusLiquescens3rd = "Strophicus liquescens, 3rd";
    /// <summary>
    /// Strophicus liquescens, 4th.
    /// </summary>
    public const string ChantStrophicusLiquescens4th = "Strophicus liquescens, 4th";
    /// <summary>
    /// Strophicus liquescens, 5th.
    /// </summary>
    public const string ChantStrophicusLiquescens5th = "Strophicus liquescens, 5th";
    /// <summary>
    /// Virgula.
    /// </summary>
    public const string ChantVirgula = "Virgula";
    /// <summary>
    /// 15 for clefs.
    /// </summary>
    public const string Clef15 = "15 for clefs";
    /// <summary>
    /// 8 for clefs.
    /// </summary>
    public const string Clef8 = "8 for clefs";
    /// <summary>
    /// Combining clef change.
    /// </summary>
    public const string ClefChangeCombining = "Combining clef change";
    /// <summary>
    /// Coda.
    /// </summary>
    public const string Coda = "Coda";
    /// <summary>
    /// Square coda.
    /// </summary>
    public const string CodaSquare = "Square coda";
    /// <summary>
    /// Beat 2, compound time.
    /// </summary>
    public const string ConductorBeat2Compound = "Beat 2, compound time";
    /// <summary>
    /// Beat 2, simple time.
    /// </summary>
    public const string ConductorBeat2Simple = "Beat 2, simple time";
    /// <summary>
    /// Beat 3, compound time.
    /// </summary>
    public const string ConductorBeat3Compound = "Beat 3, compound time";
    /// <summary>
    /// Beat 3, simple time.
    /// </summary>
    public const string ConductorBeat3Simple = "Beat 3, simple time";
    /// <summary>
    /// Beat 4, compound time.
    /// </summary>
    public const string ConductorBeat4Compound = "Beat 4, compound time";
    /// <summary>
    /// Beat 4, simple time.
    /// </summary>
    public const string ConductorBeat4Simple = "Beat 4, simple time";
    /// <summary>
    /// Left-hand beat or cue.
    /// </summary>
    public const string ConductorLeftBeat = "Left-hand beat or cue";
    /// <summary>
    /// Right-hand beat or cue.
    /// </summary>
    public const string ConductorRightBeat = "Right-hand beat or cue";
    /// <summary>
    /// Strong beat or cue.
    /// </summary>
    public const string ConductorStrongBeat = "Strong beat or cue";
    /// <summary>
    /// Unconducted/free passages.
    /// </summary>
    public const string ConductorUnconducted = "Unconducted/free passages";
    /// <summary>
    /// Weak beat or cue.
    /// </summary>
    public const string ConductorWeakBeat = "Weak beat or cue";
    /// <summary>
    /// Begin beam.
    /// </summary>
    public const string ControlBeginBeam = "Begin beam";
    /// <summary>
    /// Begin phrase.
    /// </summary>
    public const string ControlBeginPhrase = "Begin phrase";
    /// <summary>
    /// Begin slur.
    /// </summary>
    public const string ControlBeginSlur = "Begin slur";
    /// <summary>
    /// Begin tie.
    /// </summary>
    public const string ControlBeginTie = "Begin tie";
    /// <summary>
    /// End beam.
    /// </summary>
    public const string ControlEndBeam = "End beam";
    /// <summary>
    /// End phrase.
    /// </summary>
    public const string ControlEndPhrase = "End phrase";
    /// <summary>
    /// End slur.
    /// </summary>
    public const string ControlEndSlur = "End slur";
    /// <summary>
    /// End tie.
    /// </summary>
    public const string ControlEndTie = "End tie";
    /// <summary>
    /// Double flat.
    /// </summary>
    public const string CsymAccidentalDoubleFlat = "Double flat";
    /// <summary>
    /// Double sharp.
    /// </summary>
    public const string CsymAccidentalDoubleSharp = "Double sharp";
    /// <summary>
    /// Flat.
    /// </summary>
    public const string CsymAccidentalFlat = "Flat";
    /// <summary>
    /// Natural.
    /// </summary>
    public const string CsymAccidentalNatural = "Natural";
    /// <summary>
    /// Sharp.
    /// </summary>
    public const string CsymAccidentalSharp = "Sharp";
    /// <summary>
    /// Triple flat.
    /// </summary>
    public const string CsymAccidentalTripleFlat = "Triple flat";
    /// <summary>
    /// Triple sharp.
    /// </summary>
    public const string CsymAccidentalTripleSharp = "Triple sharp";
    /// <summary>
    /// Slash for altered bass note.
    /// </summary>
    public const string CsymAlteredBassSlash = "Slash for altered bass note";
    /// <summary>
    /// Augmented.
    /// </summary>
    public const string CsymAugmented = "Augmented";
    /// <summary>
    /// Double-height left bracket.
    /// </summary>
    public const string CsymBracketLeftTall = "Double-height left bracket";
    /// <summary>
    /// Double-height right bracket.
    /// </summary>
    public const string CsymBracketRightTall = "Double-height right bracket";
    /// <summary>
    /// Slash for chord symbols arranged diagonally.
    /// </summary>
    public const string CsymDiagonalArrangementSlash = "Slash for chord symbols arranged diagonally";
    /// <summary>
    /// Diminished.
    /// </summary>
    public const string CsymDiminished = "Diminished";
    /// <summary>
    /// Half-diminished.
    /// </summary>
    public const string CsymHalfDiminished = "Half-diminished";
    /// <summary>
    /// Major seventh.
    /// </summary>
    public const string CsymMajorSeventh = "Major seventh";
    /// <summary>
    /// Minor.
    /// </summary>
    public const string CsymMinor = "Minor";
    /// <summary>
    /// Double-height left parenthesis.
    /// </summary>
    public const string CsymParensLeftTall = "Double-height left parenthesis";
    /// <summary>
    /// Triple-height left parenthesis.
    /// </summary>
    public const string CsymParensLeftVeryTall = "Triple-height left parenthesis";
    /// <summary>
    /// Double-height right parenthesis.
    /// </summary>
    public const string CsymParensRightTall = "Double-height right parenthesis";
    /// <summary>
    /// Triple-height right parenthesis.
    /// </summary>
    public const string CsymParensRightVeryTall = "Triple-height right parenthesis";
    /// <summary>
    /// Curlew (Britten).
    /// </summary>
    public const string CurlewSign = "Curlew (Britten)";
    /// <summary>
    /// Da capo.
    /// </summary>
    public const string DaCapo = "Da capo";
    /// <summary>
    /// Dal segno.
    /// </summary>
    public const string DalSegno = "Dal segno";
    /// <summary>
    /// Daseian excellentes 1.
    /// </summary>
    public const string DaseianExcellentes1 = "Daseian excellentes 1";
    /// <summary>
    /// Daseian excellentes 2.
    /// </summary>
    public const string DaseianExcellentes2 = "Daseian excellentes 2";
    /// <summary>
    /// Daseian excellentes 3.
    /// </summary>
    public const string DaseianExcellentes3 = "Daseian excellentes 3";
    /// <summary>
    /// Daseian excellentes 4.
    /// </summary>
    public const string DaseianExcellentes4 = "Daseian excellentes 4";
    /// <summary>
    /// Daseian finales 1.
    /// </summary>
    public const string DaseianFinales1 = "Daseian finales 1";
    /// <summary>
    /// Daseian finales 2.
    /// </summary>
    public const string DaseianFinales2 = "Daseian finales 2";
    /// <summary>
    /// Daseian finales 3.
    /// </summary>
    public const string DaseianFinales3 = "Daseian finales 3";
    /// <summary>
    /// Daseian finales 4.
    /// </summary>
    public const string DaseianFinales4 = "Daseian finales 4";
    /// <summary>
    /// Daseian graves 1.
    /// </summary>
    public const string DaseianGraves1 = "Daseian graves 1";
    /// <summary>
    /// Daseian graves 2.
    /// </summary>
    public const string DaseianGraves2 = "Daseian graves 2";
    /// <summary>
    /// Daseian graves 3.
    /// </summary>
    public const string DaseianGraves3 = "Daseian graves 3";
    /// <summary>
    /// Daseian graves 4.
    /// </summary>
    public const string DaseianGraves4 = "Daseian graves 4";
    /// <summary>
    /// Daseian residua 1.
    /// </summary>
    public const string DaseianResidua1 = "Daseian residua 1";
    /// <summary>
    /// Daseian residua 2.
    /// </summary>
    public const string DaseianResidua2 = "Daseian residua 2";
    /// <summary>
    /// Daseian superiores 1.
    /// </summary>
    public const string DaseianSuperiores1 = "Daseian superiores 1";
    /// <summary>
    /// Daseian superiores 2.
    /// </summary>
    public const string DaseianSuperiores2 = "Daseian superiores 2";
    /// <summary>
    /// Daseian superiores 3.
    /// </summary>
    public const string DaseianSuperiores3 = "Daseian superiores 3";
    /// <summary>
    /// Daseian superiores 4.
    /// </summary>
    public const string DaseianSuperiores4 = "Daseian superiores 4";
    /// <summary>
    /// Double lateral roll (Stevens).
    /// </summary>
    public const string DoubleLateralRollStevens = "Double lateral roll (Stevens)";
    /// <summary>
    /// Double-tongue above.
    /// </summary>
    public const string DoubleTongueAbove = "Double-tongue above";
    /// <summary>
    /// Double-tongue below.
    /// </summary>
    public const string DoubleTongueBelow = "Double-tongue below";
    /// <summary>
    /// Colon separator for combined dynamics.
    /// </summary>
    public const string DynamicCombinedSeparatorColon = "Colon separator for combined dynamics";
    /// <summary>
    /// Hyphen separator for combined dynamics.
    /// </summary>
    public const string DynamicCombinedSeparatorHyphen = "Hyphen separator for combined dynamics";
    /// <summary>
    /// Slash separator for combined dynamics.
    /// </summary>
    public const string DynamicCombinedSeparatorSlash = "Slash separator for combined dynamics";
    /// <summary>
    /// Space separator for combined dynamics.
    /// </summary>
    public const string DynamicCombinedSeparatorSpace = "Space separator for combined dynamics";
    /// <summary>
    /// Crescendo.
    /// </summary>
    public const string DynamicCrescendoHairpin = "Crescendo";
    /// <summary>
    /// Diminuendo.
    /// </summary>
    public const string DynamicDiminuendoHairpin = "Diminuendo";
    /// <summary>
    /// ff.
    /// </summary>
    public const string DynamicFF = "ff";
    /// <summary>
    /// fff.
    /// </summary>
    public const string DynamicFFF = "fff";
    /// <summary>
    /// ffff.
    /// </summary>
    public const string DynamicFFFF = "ffff";
    /// <summary>
    /// fffff.
    /// </summary>
    public const string DynamicFFFFF = "fffff";
    /// <summary>
    /// ffffff.
    /// </summary>
    public const string DynamicFFFFFF = "ffffff";
    /// <summary>
    /// Forte.
    /// </summary>
    public const string DynamicForte = "Forte";
    /// <summary>
    /// Forte-piano.
    /// </summary>
    public const string DynamicFortePiano = "Forte-piano";
    /// <summary>
    /// Forzando.
    /// </summary>
    public const string DynamicForzando = "Forzando";
    /// <summary>
    /// Left bracket (for hairpins).
    /// </summary>
    public const string DynamicHairpinBracketLeft = "Left bracket (for hairpins)";
    /// <summary>
    /// Right bracket (for hairpins).
    /// </summary>
    public const string DynamicHairpinBracketRight = "Right bracket (for hairpins)";
    /// <summary>
    /// Left parenthesis (for hairpins).
    /// </summary>
    public const string DynamicHairpinParenthesisLeft = "Left parenthesis (for hairpins)";
    /// <summary>
    /// Right parenthesis (for hairpins).
    /// </summary>
    public const string DynamicHairpinParenthesisRight = "Right parenthesis (for hairpins)";
    /// <summary>
    /// mf.
    /// </summary>
    public const string DynamicMF = "mf";
    /// <summary>
    /// mp.
    /// </summary>
    public const string DynamicMP = "mp";
    /// <summary>
    /// Messa di voce.
    /// </summary>
    public const string DynamicMessaDiVoce = "Messa di voce";
    /// <summary>
    /// Mezzo.
    /// </summary>
    public const string DynamicMezzo = "Mezzo";
    /// <summary>
    /// Niente.
    /// </summary>
    public const string DynamicNiente = "Niente";
    /// <summary>
    /// Niente (for hairpins).
    /// </summary>
    public const string DynamicNienteForHairpin = "Niente (for hairpins)";
    /// <summary>
    /// pf.
    /// </summary>
    public const string DynamicPF = "pf";
    /// <summary>
    /// pp.
    /// </summary>
    public const string DynamicPP = "pp";
    /// <summary>
    /// ppp.
    /// </summary>
    public const string DynamicPPP = "ppp";
    /// <summary>
    /// pppp.
    /// </summary>
    public const string DynamicPPPP = "pppp";
    /// <summary>
    /// ppppp.
    /// </summary>
    public const string DynamicPPPPP = "ppppp";
    /// <summary>
    /// pppppp.
    /// </summary>
    public const string DynamicPPPPPP = "pppppp";
    /// <summary>
    /// Piano.
    /// </summary>
    public const string DynamicPiano = "Piano";
    /// <summary>
    /// Rinforzando.
    /// </summary>
    public const string DynamicRinforzando = "Rinforzando";
    /// <summary>
    /// Rinforzando 1.
    /// </summary>
    public const string DynamicRinforzando1 = "Rinforzando 1";
    /// <summary>
    /// Rinforzando 2.
    /// </summary>
    public const string DynamicRinforzando2 = "Rinforzando 2";
    /// <summary>
    /// Sforzando.
    /// </summary>
    public const string DynamicSforzando = "Sforzando";
    /// <summary>
    /// Sforzando 1.
    /// </summary>
    public const string DynamicSforzando1 = "Sforzando 1";
    /// <summary>
    /// Sforzando-pianissimo.
    /// </summary>
    public const string DynamicSforzandoPianissimo = "Sforzando-pianissimo";
    /// <summary>
    /// Sforzando-piano.
    /// </summary>
    public const string DynamicSforzandoPiano = "Sforzando-piano";
    /// <summary>
    /// Sforzato.
    /// </summary>
    public const string DynamicSforzato = "Sforzato";
    /// <summary>
    /// Sforzatissimo.
    /// </summary>
    public const string DynamicSforzatoFF = "Sforzatissimo";
    /// <summary>
    /// Sforzato-piano.
    /// </summary>
    public const string DynamicSforzatoPiano = "Sforzato-piano";
    /// <summary>
    /// Z.
    /// </summary>
    public const string DynamicZ = "Z";
    /// <summary>
    /// Eight channels (7.1 surround).
    /// </summary>
    public const string ElecAudioChannelsEight = "Eight channels (7.1 surround)";
    /// <summary>
    /// Five channels.
    /// </summary>
    public const string ElecAudioChannelsFive = "Five channels";
    /// <summary>
    /// Four channels.
    /// </summary>
    public const string ElecAudioChannelsFour = "Four channels";
    /// <summary>
    /// One channel (mono).
    /// </summary>
    public const string ElecAudioChannelsOne = "One channel (mono)";
    /// <summary>
    /// Seven channels.
    /// </summary>
    public const string ElecAudioChannelsSeven = "Seven channels";
    /// <summary>
    /// Six channels (5.1 surround).
    /// </summary>
    public const string ElecAudioChannelsSix = "Six channels (5.1 surround)";
    /// <summary>
    /// Three channels (frontal).
    /// </summary>
    public const string ElecAudioChannelsThreeFrontal = "Three channels (frontal)";
    /// <summary>
    /// Three channels (surround).
    /// </summary>
    public const string ElecAudioChannelsThreeSurround = "Three channels (surround)";
    /// <summary>
    /// Two channels (stereo).
    /// </summary>
    public const string ElecAudioChannelsTwo = "Two channels (stereo)";
    /// <summary>
    /// Audio in.
    /// </summary>
    public const string ElecAudioIn = "Audio in";
    /// <summary>
    /// Mono audio setup.
    /// </summary>
    public const string ElecAudioMono = "Mono audio setup";
    /// <summary>
    /// Audio out.
    /// </summary>
    public const string ElecAudioOut = "Audio out";
    /// <summary>
    /// Stereo audio setup.
    /// </summary>
    public const string ElecAudioStereo = "Stereo audio setup";
    /// <summary>
    /// Camera.
    /// </summary>
    public const string ElecCamera = "Camera";
    /// <summary>
    /// Data in.
    /// </summary>
    public const string ElecDataIn = "Data in";
    /// <summary>
    /// Data out.
    /// </summary>
    public const string ElecDataOut = "Data out";
    /// <summary>
    /// Disc.
    /// </summary>
    public const string ElecDisc = "Disc";
    /// <summary>
    /// Download.
    /// </summary>
    public const string ElecDownload = "Download";
    /// <summary>
    /// Eject.
    /// </summary>
    public const string ElecEject = "Eject";
    /// <summary>
    /// Fast-forward.
    /// </summary>
    public const string ElecFastForward = "Fast-forward";
    /// <summary>
    /// Headphones.
    /// </summary>
    public const string ElecHeadphones = "Headphones";
    /// <summary>
    /// Headset.
    /// </summary>
    public const string ElecHeadset = "Headset";
    /// <summary>
    /// Line in.
    /// </summary>
    public const string ElecLineIn = "Line in";
    /// <summary>
    /// Line out.
    /// </summary>
    public const string ElecLineOut = "Line out";
    /// <summary>
    /// Loop.
    /// </summary>
    public const string ElecLoop = "Loop";
    /// <summary>
    /// Loudspeaker.
    /// </summary>
    public const string ElecLoudspeaker = "Loudspeaker";
    /// <summary>
    /// MIDI controller 0%.
    /// </summary>
    public const string ElecMIDIController0 = "MIDI controller 0%";
    /// <summary>
    /// MIDI controller 100%.
    /// </summary>
    public const string ElecMIDIController100 = "MIDI controller 100%";
    /// <summary>
    /// MIDI controller 20%.
    /// </summary>
    public const string ElecMIDIController20 = "MIDI controller 20%";
    /// <summary>
    /// MIDI controller 40%.
    /// </summary>
    public const string ElecMIDIController40 = "MIDI controller 40%";
    /// <summary>
    /// MIDI controller 60%.
    /// </summary>
    public const string ElecMIDIController60 = "MIDI controller 60%";
    /// <summary>
    /// MIDI controller 80%.
    /// </summary>
    public const string ElecMIDIController80 = "MIDI controller 80%";
    /// <summary>
    /// MIDI in.
    /// </summary>
    public const string ElecMIDIIn = "MIDI in";
    /// <summary>
    /// MIDI out.
    /// </summary>
    public const string ElecMIDIOut = "MIDI out";
    /// <summary>
    /// Microphone.
    /// </summary>
    public const string ElecMicrophone = "Microphone";
    /// <summary>
    /// Mute microphone.
    /// </summary>
    public const string ElecMicrophoneMute = "Mute microphone";
    /// <summary>
    /// Unmute microphone.
    /// </summary>
    public const string ElecMicrophoneUnmute = "Unmute microphone";
    /// <summary>
    /// Mixing console.
    /// </summary>
    public const string ElecMixingConsole = "Mixing console";
    /// <summary>
    /// Monitor.
    /// </summary>
    public const string ElecMonitor = "Monitor";
    /// <summary>
    /// Mute.
    /// </summary>
    public const string ElecMute = "Mute";
    /// <summary>
    /// Pause.
    /// </summary>
    public const string ElecPause = "Pause";
    /// <summary>
    /// Play.
    /// </summary>
    public const string ElecPlay = "Play";
    /// <summary>
    /// Power on/off.
    /// </summary>
    public const string ElecPowerOnOff = "Power on/off";
    /// <summary>
    /// Projector.
    /// </summary>
    public const string ElecProjector = "Projector";
    /// <summary>
    /// Replay.
    /// </summary>
    public const string ElecReplay = "Replay";
    /// <summary>
    /// Rewind.
    /// </summary>
    public const string ElecRewind = "Rewind";
    /// <summary>
    /// Shuffle.
    /// </summary>
    public const string ElecShuffle = "Shuffle";
    /// <summary>
    /// Skip backwards.
    /// </summary>
    public const string ElecSkipBackwards = "Skip backwards";
    /// <summary>
    /// Skip forwards.
    /// </summary>
    public const string ElecSkipForwards = "Skip forwards";
    /// <summary>
    /// Stop.
    /// </summary>
    public const string ElecStop = "Stop";
    /// <summary>
    /// Tape.
    /// </summary>
    public const string ElecTape = "Tape";
    /// <summary>
    /// USB connection.
    /// </summary>
    public const string ElecUSB = "USB connection";
    /// <summary>
    /// Unmute.
    /// </summary>
    public const string ElecUnmute = "Unmute";
    /// <summary>
    /// Upload.
    /// </summary>
    public const string ElecUpload = "Upload";
    /// <summary>
    /// Video camera.
    /// </summary>
    public const string ElecVideoCamera = "Video camera";
    /// <summary>
    /// Video in.
    /// </summary>
    public const string ElecVideoIn = "Video in";
    /// <summary>
    /// Video out.
    /// </summary>
    public const string ElecVideoOut = "Video out";
    /// <summary>
    /// Combining volume fader.
    /// </summary>
    public const string ElecVolumeFader = "Combining volume fader";
    /// <summary>
    /// Combining volume fader thumb.
    /// </summary>
    public const string ElecVolumeFaderThumb = "Combining volume fader thumb";
    /// <summary>
    /// Volume level 0%.
    /// </summary>
    public const string ElecVolumeLevel0 = "Volume level 0%";
    /// <summary>
    /// Volume level 100%.
    /// </summary>
    public const string ElecVolumeLevel100 = "Volume level 100%";
    /// <summary>
    /// Volume level 20%.
    /// </summary>
    public const string ElecVolumeLevel20 = "Volume level 20%";
    /// <summary>
    /// Volume level 40%.
    /// </summary>
    public const string ElecVolumeLevel40 = "Volume level 40%";
    /// <summary>
    /// Volume level 60%.
    /// </summary>
    public const string ElecVolumeLevel60 = "Volume level 60%";
    /// <summary>
    /// Volume level 80%.
    /// </summary>
    public const string ElecVolumeLevel80 = "Volume level 80%";
    /// <summary>
    /// F clef.
    /// </summary>
    public const string FClef = "F clef";
    /// <summary>
    /// F clef quindicesima alta.
    /// </summary>
    public const string FClef15ma = "F clef quindicesima alta";
    /// <summary>
    /// F clef quindicesima bassa.
    /// </summary>
    public const string FClef15mb = "F clef quindicesima bassa";
    /// <summary>
    /// F clef ottava alta.
    /// </summary>
    public const string FClef8va = "F clef ottava alta";
    /// <summary>
    /// F clef ottava bassa.
    /// </summary>
    public const string FClef8vb = "F clef ottava bassa";
    /// <summary>
    /// F clef, arrow down.
    /// </summary>
    public const string FClefArrowDown = "F clef, arrow down";
    /// <summary>
    /// F clef, arrow up.
    /// </summary>
    public const string FClefArrowUp = "F clef, arrow up";
    /// <summary>
    /// F clef change.
    /// </summary>
    public const string FClefChange = "F clef change";
    /// <summary>
    /// Reversed F clef.
    /// </summary>
    public const string FClefReversed = "Reversed F clef";
    /// <summary>
    /// Turned F clef.
    /// </summary>
    public const string FClefTurned = "Turned F clef";
    /// <summary>
    /// Fermata above.
    /// </summary>
    public const string FermataAbove = "Fermata above";
    /// <summary>
    /// Fermata below.
    /// </summary>
    public const string FermataBelow = "Fermata below";
    /// <summary>
    /// Long fermata above.
    /// </summary>
    public const string FermataLongAbove = "Long fermata above";
    /// <summary>
    /// Long fermata below.
    /// </summary>
    public const string FermataLongBelow = "Long fermata below";
    /// <summary>
    /// Long fermata (Henze) above.
    /// </summary>
    public const string FermataLongHenzeAbove = "Long fermata (Henze) above";
    /// <summary>
    /// Long fermata (Henze) below.
    /// </summary>
    public const string FermataLongHenzeBelow = "Long fermata (Henze) below";
    /// <summary>
    /// Short fermata above.
    /// </summary>
    public const string FermataShortAbove = "Short fermata above";
    /// <summary>
    /// Short fermata below.
    /// </summary>
    public const string FermataShortBelow = "Short fermata below";
    /// <summary>
    /// Short fermata (Henze) above.
    /// </summary>
    public const string FermataShortHenzeAbove = "Short fermata (Henze) above";
    /// <summary>
    /// Short fermata (Henze) below.
    /// </summary>
    public const string FermataShortHenzeBelow = "Short fermata (Henze) below";
    /// <summary>
    /// Very long fermata above.
    /// </summary>
    public const string FermataVeryLongAbove = "Very long fermata above";
    /// <summary>
    /// Very long fermata below.
    /// </summary>
    public const string FermataVeryLongBelow = "Very long fermata below";
    /// <summary>
    /// Very short fermata above.
    /// </summary>
    public const string FermataVeryShortAbove = "Very short fermata above";
    /// <summary>
    /// Very short fermata below.
    /// </summary>
    public const string FermataVeryShortBelow = "Very short fermata below";
    /// <summary>
    /// Figured bass 0.
    /// </summary>
    public const string Figbass0 = "Figured bass 0";
    /// <summary>
    /// Figured bass 1.
    /// </summary>
    public const string Figbass1 = "Figured bass 1";
    /// <summary>
    /// Figured bass 2.
    /// </summary>
    public const string Figbass2 = "Figured bass 2";
    /// <summary>
    /// Figured bass 2 raised by half-step.
    /// </summary>
    public const string Figbass2Raised = "Figured bass 2 raised by half-step";
    /// <summary>
    /// Figured bass 3.
    /// </summary>
    public const string Figbass3 = "Figured bass 3";
    /// <summary>
    /// Figured bass 4.
    /// </summary>
    public const string Figbass4 = "Figured bass 4";
    /// <summary>
    /// Figured bass 4 raised by half-step.
    /// </summary>
    public const string Figbass4Raised = "Figured bass 4 raised by half-step";
    /// <summary>
    /// Figured bass 5.
    /// </summary>
    public const string Figbass5 = "Figured bass 5";
    /// <summary>
    /// Figured bass 5 raised by half-step.
    /// </summary>
    public const string Figbass5Raised1 = "Figured bass 5 raised by half-step";
    /// <summary>
    /// Figured bass 5 raised by half-step 2.
    /// </summary>
    public const string Figbass5Raised2 = "Figured bass 5 raised by half-step 2";
    /// <summary>
    /// Figured bass diminished 5.
    /// </summary>
    public const string Figbass5Raised3 = "Figured bass diminished 5";
    /// <summary>
    /// Figured bass 6.
    /// </summary>
    public const string Figbass6 = "Figured bass 6";
    /// <summary>
    /// Figured bass 6 raised by half-step.
    /// </summary>
    public const string Figbass6Raised = "Figured bass 6 raised by half-step";
    /// <summary>
    /// Figured bass 6 raised by half-step 2.
    /// </summary>
    public const string Figbass6Raised2 = "Figured bass 6 raised by half-step 2";
    /// <summary>
    /// Figured bass 7.
    /// </summary>
    public const string Figbass7 = "Figured bass 7";
    /// <summary>
    /// Figured bass 7 diminished.
    /// </summary>
    public const string Figbass7Diminished = "Figured bass 7 diminished";
    /// <summary>
    /// Figured bass 7 raised by half-step.
    /// </summary>
    public const string Figbass7Raised1 = "Figured bass 7 raised by half-step";
    /// <summary>
    /// Figured bass 7 lowered by a half-step.
    /// </summary>
    public const string Figbass7Raised2 = "Figured bass 7 lowered by a half-step";
    /// <summary>
    /// Figured bass 8.
    /// </summary>
    public const string Figbass8 = "Figured bass 8";
    /// <summary>
    /// Figured bass 9.
    /// </summary>
    public const string Figbass9 = "Figured bass 9";
    /// <summary>
    /// Figured bass 9 raised by half-step.
    /// </summary>
    public const string Figbass9Raised = "Figured bass 9 raised by half-step";
    /// <summary>
    /// Figured bass [.
    /// </summary>
    public const string FigbassBracketLeft = "Figured bass [";
    /// <summary>
    /// Figured bass ].
    /// </summary>
    public const string FigbassBracketRight = "Figured bass ]";
    /// <summary>
    /// Combining lower.
    /// </summary>
    public const string FigbassCombiningLowering = "Combining lower";
    /// <summary>
    /// Combining raise.
    /// </summary>
    public const string FigbassCombiningRaising = "Combining raise";
    /// <summary>
    /// Figured bass double flat.
    /// </summary>
    public const string FigbassDoubleFlat = "Figured bass double flat";
    /// <summary>
    /// Figured bass double sharp.
    /// </summary>
    public const string FigbassDoubleSharp = "Figured bass double sharp";
    /// <summary>
    /// Figured bass flat.
    /// </summary>
    public const string FigbassFlat = "Figured bass flat";
    /// <summary>
    /// Figured bass natural.
    /// </summary>
    public const string FigbassNatural = "Figured bass natural";
    /// <summary>
    /// Figured bass (.
    /// </summary>
    public const string FigbassParensLeft = "Figured bass (";
    /// <summary>
    /// Figured bass ).
    /// </summary>
    public const string FigbassParensRight = "Figured bass )";
    /// <summary>
    /// Figured bass +.
    /// </summary>
    public const string FigbassPlus = "Figured bass +";
    /// <summary>
    /// Figured bass sharp.
    /// </summary>
    public const string FigbassSharp = "Figured bass sharp";
    /// <summary>
    /// Figured bass triple flat.
    /// </summary>
    public const string FigbassTripleFlat = "Figured bass triple flat";
    /// <summary>
    /// Figured bass triple sharp.
    /// </summary>
    public const string FigbassTripleSharp = "Figured bass triple sharp";
    /// <summary>
    /// Fingering 0 (open string).
    /// </summary>
    public const string Fingering0 = "Fingering 0 (open string)";
    /// <summary>
    /// Fingering 0 italic (open string).
    /// </summary>
    public const string Fingering0Italic = "Fingering 0 italic (open string)";
    /// <summary>
    /// Fingering 1 (thumb).
    /// </summary>
    public const string Fingering1 = "Fingering 1 (thumb)";
    /// <summary>
    /// Fingering 1 italic (thumb).
    /// </summary>
    public const string Fingering1Italic = "Fingering 1 italic (thumb)";
    /// <summary>
    /// Fingering 2 (index finger).
    /// </summary>
    public const string Fingering2 = "Fingering 2 (index finger)";
    /// <summary>
    /// Fingering 2 italic (index finger).
    /// </summary>
    public const string Fingering2Italic = "Fingering 2 italic (index finger)";
    /// <summary>
    /// Fingering 3 (middle finger).
    /// </summary>
    public const string Fingering3 = "Fingering 3 (middle finger)";
    /// <summary>
    /// Fingering 3 italic (middle finger).
    /// </summary>
    public const string Fingering3Italic = "Fingering 3 italic (middle finger)";
    /// <summary>
    /// Fingering 4 (ring finger).
    /// </summary>
    public const string Fingering4 = "Fingering 4 (ring finger)";
    /// <summary>
    /// Fingering 4 italic (ring finger).
    /// </summary>
    public const string Fingering4Italic = "Fingering 4 italic (ring finger)";
    /// <summary>
    /// Fingering 5 (little finger).
    /// </summary>
    public const string Fingering5 = "Fingering 5 (little finger)";
    /// <summary>
    /// Fingering 5 italic (little finger).
    /// </summary>
    public const string Fingering5Italic = "Fingering 5 italic (little finger)";
    /// <summary>
    /// Fingering 6.
    /// </summary>
    public const string Fingering6 = "Fingering 6";
    /// <summary>
    /// Fingering 6 italic.
    /// </summary>
    public const string Fingering6Italic = "Fingering 6 italic";
    /// <summary>
    /// Fingering 7.
    /// </summary>
    public const string Fingering7 = "Fingering 7";
    /// <summary>
    /// Fingering 7 italic.
    /// </summary>
    public const string Fingering7Italic = "Fingering 7 italic";
    /// <summary>
    /// Fingering 8.
    /// </summary>
    public const string Fingering8 = "Fingering 8";
    /// <summary>
    /// Fingering 8 italic.
    /// </summary>
    public const string Fingering8Italic = "Fingering 8 italic";
    /// <summary>
    /// Fingering 9.
    /// </summary>
    public const string Fingering9 = "Fingering 9";
    /// <summary>
    /// Fingering 9 italic.
    /// </summary>
    public const string Fingering9Italic = "Fingering 9 italic";
    /// <summary>
    /// Fingering a (anular; right-hand ring finger for guitar).
    /// </summary>
    public const string FingeringALower = "Fingering a (anular; right-hand ring finger for guitar)";
    /// <summary>
    /// Fingering c (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringCLower = "Fingering c (right-hand little finger for guitar)";
    /// <summary>
    /// Fingering e (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringELower = "Fingering e (right-hand little finger for guitar)";
    /// <summary>
    /// Fingering i (indicio; right-hand index finger for guitar).
    /// </summary>
    public const string FingeringILower = "Fingering i (indicio; right-hand index finger for guitar)";
    /// <summary>
    /// Fingering left bracket.
    /// </summary>
    public const string FingeringLeftBracket = "Fingering left bracket";
    /// <summary>
    /// Fingering left bracket italic.
    /// </summary>
    public const string FingeringLeftBracketItalic = "Fingering left bracket italic";
    /// <summary>
    /// Fingering left parenthesis.
    /// </summary>
    public const string FingeringLeftParenthesis = "Fingering left parenthesis";
    /// <summary>
    /// Fingering left parenthesis italic.
    /// </summary>
    public const string FingeringLeftParenthesisItalic = "Fingering left parenthesis italic";
    /// <summary>
    /// Fingering m (medio; right-hand middle finger for guitar).
    /// </summary>
    public const string FingeringMLower = "Fingering m (medio; right-hand middle finger for guitar)";
    /// <summary>
    /// Multiple notes played by thumb or single finger.
    /// </summary>
    public const string FingeringMultipleNotes = "Multiple notes played by thumb or single finger";
    /// <summary>
    /// Fingering o (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringOLower = "Fingering o (right-hand little finger for guitar)";
    /// <summary>
    /// Fingering p (pulgar; right-hand thumb for guitar).
    /// </summary>
    public const string FingeringPLower = "Fingering p (pulgar; right-hand thumb for guitar)";
    /// <summary>
    /// Fingering q (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringQLower = "Fingering q (right-hand little finger for guitar)";
    /// <summary>
    /// Fingering right bracket.
    /// </summary>
    public const string FingeringRightBracket = "Fingering right bracket";
    /// <summary>
    /// Fingering right bracket italic.
    /// </summary>
    public const string FingeringRightBracketItalic = "Fingering right bracket italic";
    /// <summary>
    /// Fingering right parenthesis.
    /// </summary>
    public const string FingeringRightParenthesis = "Fingering right parenthesis";
    /// <summary>
    /// Fingering right parenthesis italic.
    /// </summary>
    public const string FingeringRightParenthesisItalic = "Fingering right parenthesis italic";
    /// <summary>
    /// Fingering s (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringSLower = "Fingering s (right-hand little finger for guitar)";
    /// <summary>
    /// Fingering middle dot separator.
    /// </summary>
    public const string FingeringSeparatorMiddleDot = "Fingering middle dot separator";
    /// <summary>
    /// Fingering white middle dot separator.
    /// </summary>
    public const string FingeringSeparatorMiddleDotWhite = "Fingering white middle dot separator";
    /// <summary>
    /// Fingering forward slash separator.
    /// </summary>
    public const string FingeringSeparatorSlash = "Fingering forward slash separator";
    /// <summary>
    /// Finger substitution above.
    /// </summary>
    public const string FingeringSubstitutionAbove = "Finger substitution above";
    /// <summary>
    /// Finger substitution below.
    /// </summary>
    public const string FingeringSubstitutionBelow = "Finger substitution below";
    /// <summary>
    /// Finger substitution dash.
    /// </summary>
    public const string FingeringSubstitutionDash = "Finger substitution dash";
    /// <summary>
    /// Fingering t (right-hand thumb for guitar).
    /// </summary>
    public const string FingeringTLower = "Fingering t (right-hand thumb for guitar)";
    /// <summary>
    /// Fingering T (left-hand thumb for guitar).
    /// </summary>
    public const string FingeringTUpper = "Fingering T (left-hand thumb for guitar)";
    /// <summary>
    /// Fingering x (right-hand little finger for guitar).
    /// </summary>
    public const string FingeringXLower = "Fingering x (right-hand little finger for guitar)";
    /// <summary>
    /// Combining flag 8 (1024th) below.
    /// </summary>
    public const string Flag1024thDown = "Combining flag 8 (1024th) below";
    /// <summary>
    /// Combining flag 8 (1024th) above.
    /// </summary>
    public const string Flag1024thUp = "Combining flag 8 (1024th) above";
    /// <summary>
    /// Combining flag 5 (128th) below.
    /// </summary>
    public const string Flag128thDown = "Combining flag 5 (128th) below";
    /// <summary>
    /// Combining flag 5 (128th) above.
    /// </summary>
    public const string Flag128thUp = "Combining flag 5 (128th) above";
    /// <summary>
    /// Combining flag 2 (16th) below.
    /// </summary>
    public const string Flag16thDown = "Combining flag 2 (16th) below";
    /// <summary>
    /// Combining flag 2 (16th) above.
    /// </summary>
    public const string Flag16thUp = "Combining flag 2 (16th) above";
    /// <summary>
    /// Combining flag 6 (256th) below.
    /// </summary>
    public const string Flag256thDown = "Combining flag 6 (256th) below";
    /// <summary>
    /// Combining flag 6 (256th) above.
    /// </summary>
    public const string Flag256thUp = "Combining flag 6 (256th) above";
    /// <summary>
    /// Combining flag 3 (32nd) below.
    /// </summary>
    public const string Flag32ndDown = "Combining flag 3 (32nd) below";
    /// <summary>
    /// Combining flag 3 (32nd) above.
    /// </summary>
    public const string Flag32ndUp = "Combining flag 3 (32nd) above";
    /// <summary>
    /// Combining flag 7 (512th) below.
    /// </summary>
    public const string Flag512thDown = "Combining flag 7 (512th) below";
    /// <summary>
    /// Combining flag 7 (512th) above.
    /// </summary>
    public const string Flag512thUp = "Combining flag 7 (512th) above";
    /// <summary>
    /// Combining flag 4 (64th) below.
    /// </summary>
    public const string Flag64thDown = "Combining flag 4 (64th) below";
    /// <summary>
    /// Combining flag 4 (64th) above.
    /// </summary>
    public const string Flag64thUp = "Combining flag 4 (64th) above";
    /// <summary>
    /// Combining flag 1 (8th) below.
    /// </summary>
    public const string Flag8thDown = "Combining flag 1 (8th) below";
    /// <summary>
    /// Combining flag 1 (8th) above.
    /// </summary>
    public const string Flag8thUp = "Combining flag 1 (8th) above";
    /// <summary>
    /// Internal combining flag below.
    /// </summary>
    public const string FlagInternalDown = "Internal combining flag below";
    /// <summary>
    /// Internal combining flag above.
    /// </summary>
    public const string FlagInternalUp = "Internal combining flag above";
    /// <summary>
    /// 3-string fretboard.
    /// </summary>
    public const string Fretboard3String = "3-string fretboard";
    /// <summary>
    /// 3-string fretboard at nut.
    /// </summary>
    public const string Fretboard3StringNut = "3-string fretboard at nut";
    /// <summary>
    /// 4-string fretboard.
    /// </summary>
    public const string Fretboard4String = "4-string fretboard";
    /// <summary>
    /// 4-string fretboard at nut.
    /// </summary>
    public const string Fretboard4StringNut = "4-string fretboard at nut";
    /// <summary>
    /// 5-string fretboard.
    /// </summary>
    public const string Fretboard5String = "5-string fretboard";
    /// <summary>
    /// 5-string fretboard at nut.
    /// </summary>
    public const string Fretboard5StringNut = "5-string fretboard at nut";
    /// <summary>
    /// 6-string fretboard.
    /// </summary>
    public const string Fretboard6String = "6-string fretboard";
    /// <summary>
    /// 6-string fretboard at nut.
    /// </summary>
    public const string Fretboard6StringNut = "6-string fretboard at nut";
    /// <summary>
    /// Fingered fret (filled circle).
    /// </summary>
    public const string FretboardFilledCircle = "Fingered fret (filled circle)";
    /// <summary>
    /// Open string (O).
    /// </summary>
    public const string FretboardO = "Open string (O)";
    /// <summary>
    /// String not played (X).
    /// </summary>
    public const string FretboardX = "String not played (X)";
    /// <summary>
    /// Function theory angle bracket left.
    /// </summary>
    public const string FunctionAngleLeft = "Function theory angle bracket left";
    /// <summary>
    /// Function theory angle bracket right.
    /// </summary>
    public const string FunctionAngleRight = "Function theory angle bracket right";
    /// <summary>
    /// Function theory bracket left.
    /// </summary>
    public const string FunctionBracketLeft = "Function theory bracket left";
    /// <summary>
    /// Function theory bracket right.
    /// </summary>
    public const string FunctionBracketRight = "Function theory bracket right";
    /// <summary>
    /// Function theory dominant of dominant.
    /// </summary>
    public const string FunctionDD = "Function theory dominant of dominant";
    /// <summary>
    /// Function theory minor dominant.
    /// </summary>
    public const string FunctionDLower = "Function theory minor dominant";
    /// <summary>
    /// Function theory major dominant.
    /// </summary>
    public const string FunctionDUpper = "Function theory major dominant";
    /// <summary>
    /// Function theory 8.
    /// </summary>
    public const string FunctionEight = "Function theory 8";
    /// <summary>
    /// Function theory F.
    /// </summary>
    public const string FunctionFUpper = "Function theory F";
    /// <summary>
    /// Function theory 5.
    /// </summary>
    public const string FunctionFive = "Function theory 5";
    /// <summary>
    /// Function theory 4.
    /// </summary>
    public const string FunctionFour = "Function theory 4";
    /// <summary>
    /// Function theory g.
    /// </summary>
    public const string FunctionGLower = "Function theory g";
    /// <summary>
    /// Function theory G.
    /// </summary>
    public const string FunctionGUpper = "Function theory G";
    /// <summary>
    /// Function theory greater than.
    /// </summary>
    public const string FunctionGreaterThan = "Function theory greater than";
    /// <summary>
    /// Function theory i.
    /// </summary>
    public const string FunctionILower = "Function theory i";
    /// <summary>
    /// Function theory I.
    /// </summary>
    public const string FunctionIUpper = "Function theory I";
    /// <summary>
    /// Function theory k.
    /// </summary>
    public const string FunctionKLower = "Function theory k";
    /// <summary>
    /// Function theory K.
    /// </summary>
    public const string FunctionKUpper = "Function theory K";
    /// <summary>
    /// Function theory l.
    /// </summary>
    public const string FunctionLLower = "Function theory l";
    /// <summary>
    /// Function theory L.
    /// </summary>
    public const string FunctionLUpper = "Function theory L";
    /// <summary>
    /// Function theory less than.
    /// </summary>
    public const string FunctionLessThan = "Function theory less than";
    /// <summary>
    /// Function theory m.
    /// </summary>
    public const string FunctionMLower = "Function theory m";
    /// <summary>
    /// Function theory M.
    /// </summary>
    public const string FunctionMUpper = "Function theory M";
    /// <summary>
    /// Function theory minus.
    /// </summary>
    public const string FunctionMinus = "Function theory minus";
    /// <summary>
    /// Function theory n.
    /// </summary>
    public const string FunctionNLower = "Function theory n";
    /// <summary>
    /// Function theory N.
    /// </summary>
    public const string FunctionNUpper = "Function theory N";
    /// <summary>
    /// Function theory superscript N.
    /// </summary>
    public const string FunctionNUpperSuperscript = "Function theory superscript N";
    /// <summary>
    /// Function theory 9.
    /// </summary>
    public const string FunctionNine = "Function theory 9";
    /// <summary>
    /// Function theory 1.
    /// </summary>
    public const string FunctionOne = "Function theory 1";
    /// <summary>
    /// Function theory p.
    /// </summary>
    public const string FunctionPLower = "Function theory p";
    /// <summary>
    /// Function theory P.
    /// </summary>
    public const string FunctionPUpper = "Function theory P";
    /// <summary>
    /// Function theory parenthesis left.
    /// </summary>
    public const string FunctionParensLeft = "Function theory parenthesis left";
    /// <summary>
    /// Function theory parenthesis right.
    /// </summary>
    public const string FunctionParensRight = "Function theory parenthesis right";
    /// <summary>
    /// Function theory prefix plus.
    /// </summary>
    public const string FunctionPlus = "Function theory prefix plus";
    /// <summary>
    /// Function theory r.
    /// </summary>
    public const string FunctionRLower = "Function theory r";
    /// <summary>
    /// Function theory repetition 1.
    /// </summary>
    public const string FunctionRepetition1 = "Function theory repetition 1";
    /// <summary>
    /// Function theory repetition 2.
    /// </summary>
    public const string FunctionRepetition2 = "Function theory repetition 2";
    /// <summary>
    /// Function theory prefix ring.
    /// </summary>
    public const string FunctionRing = "Function theory prefix ring";
    /// <summary>
    /// Function theory minor subdominant.
    /// </summary>
    public const string FunctionSLower = "Function theory minor subdominant";
    /// <summary>
    /// Function theory minor subdominant of subdominant.
    /// </summary>
    public const string FunctionSSLower = "Function theory minor subdominant of subdominant";
    /// <summary>
    /// Function theory major subdominant of subdominant.
    /// </summary>
    public const string FunctionSSUpper = "Function theory major subdominant of subdominant";
    /// <summary>
    /// Function theory major subdominant.
    /// </summary>
    public const string FunctionSUpper = "Function theory major subdominant";
    /// <summary>
    /// Function theory 7.
    /// </summary>
    public const string FunctionSeven = "Function theory 7";
    /// <summary>
    /// Function theory 6.
    /// </summary>
    public const string FunctionSix = "Function theory 6";
    /// <summary>
    /// Function theory double dominant seventh.
    /// </summary>
    public const string FunctionSlashedDD = "Function theory double dominant seventh";
    /// <summary>
    /// Function theory minor tonic.
    /// </summary>
    public const string FunctionTLower = "Function theory minor tonic";
    /// <summary>
    /// Function theory tonic.
    /// </summary>
    public const string FunctionTUpper = "Function theory tonic";
    /// <summary>
    /// Function theory 3.
    /// </summary>
    public const string FunctionThree = "Function theory 3";
    /// <summary>
    /// Function theory 2.
    /// </summary>
    public const string FunctionTwo = "Function theory 2";
    /// <summary>
    /// Function theory v.
    /// </summary>
    public const string FunctionVLower = "Function theory v";
    /// <summary>
    /// Function theory V.
    /// </summary>
    public const string FunctionVUpper = "Function theory V";
    /// <summary>
    /// Function theory 0.
    /// </summary>
    public const string FunctionZero = "Function theory 0";
    /// <summary>
    /// G clef.
    /// </summary>
    public const string GClef = "G clef";
    /// <summary>
    /// G clef quindicesima alta.
    /// </summary>
    public const string GClef15ma = "G clef quindicesima alta";
    /// <summary>
    /// G clef quindicesima bassa.
    /// </summary>
    public const string GClef15mb = "G clef quindicesima bassa";
    /// <summary>
    /// G clef ottava alta.
    /// </summary>
    public const string GClef8va = "G clef ottava alta";
    /// <summary>
    /// G clef ottava bassa.
    /// </summary>
    public const string GClef8vb = "G clef ottava bassa";
    /// <summary>
    /// G clef ottava bassa with C clef.
    /// </summary>
    public const string GClef8vbCClef = "G clef ottava bassa with C clef";
    /// <summary>
    /// G clef ottava bassa (old style).
    /// </summary>
    public const string GClef8vbOld = "G clef ottava bassa (old style)";
    /// <summary>
    /// G clef, optionally ottava bassa.
    /// </summary>
    public const string GClef8vbParens = "G clef, optionally ottava bassa";
    /// <summary>
    /// G clef, arrow down.
    /// </summary>
    public const string GClefArrowDown = "G clef, arrow down";
    /// <summary>
    /// G clef, arrow up.
    /// </summary>
    public const string GClefArrowUp = "G clef, arrow up";
    /// <summary>
    /// G clef change.
    /// </summary>
    public const string GClefChange = "G clef change";
    /// <summary>
    /// Combining G clef, number above.
    /// </summary>
    public const string GClefLigatedNumberAbove = "Combining G clef, number above";
    /// <summary>
    /// Combining G clef, number below.
    /// </summary>
    public const string GClefLigatedNumberBelow = "Combining G clef, number below";
    /// <summary>
    /// Reversed G clef.
    /// </summary>
    public const string GClefReversed = "Reversed G clef";
    /// <summary>
    /// Turned G clef.
    /// </summary>
    public const string GClefTurned = "Turned G clef";
    /// <summary>
    /// Glissando down.
    /// </summary>
    public const string GlissandoDown = "Glissando down";
    /// <summary>
    /// Glissando up.
    /// </summary>
    public const string GlissandoUp = "Glissando up";
    /// <summary>
    /// Slashed grace note stem down.
    /// </summary>
    public const string GraceNoteAcciaccaturaStemDown = "Slashed grace note stem down";
    /// <summary>
    /// Slashed grace note stem up.
    /// </summary>
    public const string GraceNoteAcciaccaturaStemUp = "Slashed grace note stem up";
    /// <summary>
    /// Grace note stem down.
    /// </summary>
    public const string GraceNoteAppoggiaturaStemDown = "Grace note stem down";
    /// <summary>
    /// Grace note stem up.
    /// </summary>
    public const string GraceNoteAppoggiaturaStemUp = "Grace note stem up";
    /// <summary>
    /// Slash for stem down grace note.
    /// </summary>
    public const string GraceNoteSlashStemDown = "Slash for stem down grace note";
    /// <summary>
    /// Slash for stem up grace note.
    /// </summary>
    public const string GraceNoteSlashStemUp = "Slash for stem up grace note";
    /// <summary>
    /// Full barré.
    /// </summary>
    public const string GuitarBarreFull = "Full barré";
    /// <summary>
    /// Half barré.
    /// </summary>
    public const string GuitarBarreHalf = "Half barré";
    /// <summary>
    /// Closed wah/volume pedal.
    /// </summary>
    public const string GuitarClosePedal = "Closed wah/volume pedal";
    /// <summary>
    /// Fade in.
    /// </summary>
    public const string GuitarFadeIn = "Fade in";
    /// <summary>
    /// Fade out.
    /// </summary>
    public const string GuitarFadeOut = "Fade out";
    /// <summary>
    /// Golpe (tapping the pick guard).
    /// </summary>
    public const string GuitarGolpe = "Golpe (tapping the pick guard)";
    /// <summary>
    /// Half-open wah/volume pedal.
    /// </summary>
    public const string GuitarHalfOpenPedal = "Half-open wah/volume pedal";
    /// <summary>
    /// Left-hand tapping.
    /// </summary>
    public const string GuitarLeftHandTapping = "Left-hand tapping";
    /// <summary>
    /// Open wah/volume pedal.
    /// </summary>
    public const string GuitarOpenPedal = "Open wah/volume pedal";
    /// <summary>
    /// Right-hand tapping.
    /// </summary>
    public const string GuitarRightHandTapping = "Right-hand tapping";
    /// <summary>
    /// Guitar shake.
    /// </summary>
    public const string GuitarShake = "Guitar shake";
    /// <summary>
    /// String number 0.
    /// </summary>
    public const string GuitarString0 = "String number 0";
    /// <summary>
    /// String number 1.
    /// </summary>
    public const string GuitarString1 = "String number 1";
    /// <summary>
    /// String number 10.
    /// </summary>
    public const string GuitarString10 = "String number 10";
    /// <summary>
    /// String number 11.
    /// </summary>
    public const string GuitarString11 = "String number 11";
    /// <summary>
    /// String number 12.
    /// </summary>
    public const string GuitarString12 = "String number 12";
    /// <summary>
    /// String number 13.
    /// </summary>
    public const string GuitarString13 = "String number 13";
    /// <summary>
    /// String number 2.
    /// </summary>
    public const string GuitarString2 = "String number 2";
    /// <summary>
    /// String number 3.
    /// </summary>
    public const string GuitarString3 = "String number 3";
    /// <summary>
    /// String number 4.
    /// </summary>
    public const string GuitarString4 = "String number 4";
    /// <summary>
    /// String number 5.
    /// </summary>
    public const string GuitarString5 = "String number 5";
    /// <summary>
    /// String number 6.
    /// </summary>
    public const string GuitarString6 = "String number 6";
    /// <summary>
    /// String number 7.
    /// </summary>
    public const string GuitarString7 = "String number 7";
    /// <summary>
    /// String number 8.
    /// </summary>
    public const string GuitarString8 = "String number 8";
    /// <summary>
    /// String number 9.
    /// </summary>
    public const string GuitarString9 = "String number 9";
    /// <summary>
    /// Strum direction down.
    /// </summary>
    public const string GuitarStrumDown = "Strum direction down";
    /// <summary>
    /// Strum direction up.
    /// </summary>
    public const string GuitarStrumUp = "Strum direction up";
    /// <summary>
    /// Guitar vibrato bar dip.
    /// </summary>
    public const string GuitarVibratoBarDip = "Guitar vibrato bar dip";
    /// <summary>
    /// Guitar vibrato bar scoop.
    /// </summary>
    public const string GuitarVibratoBarScoop = "Guitar vibrato bar scoop";
    /// <summary>
    /// Vibrato wiggle segment.
    /// </summary>
    public const string GuitarVibratoStroke = "Vibrato wiggle segment";
    /// <summary>
    /// Volume swell.
    /// </summary>
    public const string GuitarVolumeSwell = "Volume swell";
    /// <summary>
    /// Wide vibrato wiggle segment.
    /// </summary>
    public const string GuitarWideVibratoStroke = "Wide vibrato wiggle segment";
    /// <summary>
    /// Belltree.
    /// </summary>
    public const string HandbellsBelltree = "Belltree";
    /// <summary>
    /// Damp 3.
    /// </summary>
    public const string HandbellsDamp3 = "Damp 3";
    /// <summary>
    /// Echo.
    /// </summary>
    public const string HandbellsEcho1 = "Echo";
    /// <summary>
    /// Echo 2.
    /// </summary>
    public const string HandbellsEcho2 = "Echo 2";
    /// <summary>
    /// Gyro.
    /// </summary>
    public const string HandbellsGyro = "Gyro";
    /// <summary>
    /// Hand martellato.
    /// </summary>
    public const string HandbellsHandMartellato = "Hand martellato";
    /// <summary>
    /// Mallet, bell on table.
    /// </summary>
    public const string HandbellsMalletBellOnTable = "Mallet, bell on table";
    /// <summary>
    /// Mallet, bell suspended.
    /// </summary>
    public const string HandbellsMalletBellSuspended = "Mallet, bell suspended";
    /// <summary>
    /// Mallet lift.
    /// </summary>
    public const string HandbellsMalletLft = "Mallet lift";
    /// <summary>
    /// Martellato.
    /// </summary>
    public const string HandbellsMartellato = "Martellato";
    /// <summary>
    /// Martellato lift.
    /// </summary>
    public const string HandbellsMartellatoLift = "Martellato lift";
    /// <summary>
    /// Muted martellato.
    /// </summary>
    public const string HandbellsMutedMartellato = "Muted martellato";
    /// <summary>
    /// Pluck lift.
    /// </summary>
    public const string HandbellsPluckLift = "Pluck lift";
    /// <summary>
    /// Swing.
    /// </summary>
    public const string HandbellsSwing = "Swing";
    /// <summary>
    /// Swing down.
    /// </summary>
    public const string HandbellsSwingDown = "Swing down";
    /// <summary>
    /// Swing up.
    /// </summary>
    public const string HandbellsSwingUp = "Swing up";
    /// <summary>
    /// Table pair of handbells.
    /// </summary>
    public const string HandbellsTablePairBells = "Table pair of handbells";
    /// <summary>
    /// Table single handbell.
    /// </summary>
    public const string HandbellsTableSingleBell = "Table single handbell";
    /// <summary>
    /// Metal rod pictogram.
    /// </summary>
    public const string HarpMetalRod = "Metal rod pictogram";
    /// <summary>
    /// Harp pedal centered (natural).
    /// </summary>
    public const string HarpPedalCentered = "Harp pedal centered (natural)";
    /// <summary>
    /// Harp pedal divider.
    /// </summary>
    public const string HarpPedalDivider = "Harp pedal divider";
    /// <summary>
    /// Harp pedal lowered (sharp).
    /// </summary>
    public const string HarpPedalLowered = "Harp pedal lowered (sharp)";
    /// <summary>
    /// Harp pedal raised (flat).
    /// </summary>
    public const string HarpPedalRaised = "Harp pedal raised (flat)";
    /// <summary>
    /// Ascending aeolian chords (Salzedo).
    /// </summary>
    public const string HarpSalzedoAeolianAscending = "Ascending aeolian chords (Salzedo)";
    /// <summary>
    /// Descending aeolian chords (Salzedo).
    /// </summary>
    public const string HarpSalzedoAeolianDescending = "Descending aeolian chords (Salzedo)";
    /// <summary>
    /// Damp above (Salzedo).
    /// </summary>
    public const string HarpSalzedoDampAbove = "Damp above (Salzedo)";
    /// <summary>
    /// Damp below (Salzedo).
    /// </summary>
    public const string HarpSalzedoDampBelow = "Damp below (Salzedo)";
    /// <summary>
    /// Damp with both hands (Salzedo).
    /// </summary>
    public const string HarpSalzedoDampBothHands = "Damp with both hands (Salzedo)";
    /// <summary>
    /// Damp only low strings (Salzedo).
    /// </summary>
    public const string HarpSalzedoDampLowStrings = "Damp only low strings (Salzedo)";
    /// <summary>
    /// Fluidic sounds, left hand (Salzedo).
    /// </summary>
    public const string HarpSalzedoFluidicSoundsLeft = "Fluidic sounds, left hand (Salzedo)";
    /// <summary>
    /// Fluidic sounds, right hand (Salzedo).
    /// </summary>
    public const string HarpSalzedoFluidicSoundsRight = "Fluidic sounds, right hand (Salzedo)";
    /// <summary>
    /// Isolated sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoIsolatedSounds = "Isolated sounds (Salzedo)";
    /// <summary>
    /// Metallic sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoMetallicSounds = "Metallic sounds (Salzedo)";
    /// <summary>
    /// Metallic sounds, one string (Salzedo).
    /// </summary>
    public const string HarpSalzedoMetallicSoundsOneString = "Metallic sounds, one string (Salzedo)";
    /// <summary>
    /// Muffle totally (Salzedo).
    /// </summary>
    public const string HarpSalzedoMuffleTotally = "Muffle totally (Salzedo)";
    /// <summary>
    /// Oboic flux (Salzedo).
    /// </summary>
    public const string HarpSalzedoOboicFlux = "Oboic flux (Salzedo)";
    /// <summary>
    /// Play at upper end of strings (Salzedo).
    /// </summary>
    public const string HarpSalzedoPlayUpperEnd = "Play at upper end of strings (Salzedo)";
    /// <summary>
    /// Slide with suppleness (Salzedo).
    /// </summary>
    public const string HarpSalzedoSlideWithSuppleness = "Slide with suppleness (Salzedo)";
    /// <summary>
    /// Snare drum effect (Salzedo).
    /// </summary>
    public const string HarpSalzedoSnareDrum = "Snare drum effect (Salzedo)";
    /// <summary>
    /// Tam-tam sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoTamTamSounds = "Tam-tam sounds (Salzedo)";
    /// <summary>
    /// Thunder effect (Salzedo).
    /// </summary>
    public const string HarpSalzedoThunderEffect = "Thunder effect (Salzedo)";
    /// <summary>
    /// Timpanic sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoTimpanicSounds = "Timpanic sounds (Salzedo)";
    /// <summary>
    /// Whistling sounds (Salzedo).
    /// </summary>
    public const string HarpSalzedoWhistlingSounds = "Whistling sounds (Salzedo)";
    /// <summary>
    /// Combining string noise for stem.
    /// </summary>
    public const string HarpStringNoiseStem = "Combining string noise for stem";
    /// <summary>
    /// Tuning key pictogram.
    /// </summary>
    public const string HarpTuningKey = "Tuning key pictogram";
    /// <summary>
    /// Retune strings for glissando.
    /// </summary>
    public const string HarpTuningKeyGlissando = "Retune strings for glissando";
    /// <summary>
    /// Use handle of tuning key pictogram.
    /// </summary>
    public const string HarpTuningKeyHandle = "Use handle of tuning key pictogram";
    /// <summary>
    /// Use shank of tuning key pictogram.
    /// </summary>
    public const string HarpTuningKeyShank = "Use shank of tuning key pictogram";
    /// <summary>
    /// Indian drum clef.
    /// </summary>
    public const string IndianDrumClef = "Indian drum clef";
    /// <summary>
    /// Back-chug.
    /// </summary>
    public const string KahnBackChug = "Back-chug";
    /// <summary>
    /// Back-flap.
    /// </summary>
    public const string KahnBackFlap = "Back-flap";
    /// <summary>
    /// Back-riff.
    /// </summary>
    public const string KahnBackRiff = "Back-riff";
    /// <summary>
    /// Back-rip.
    /// </summary>
    public const string KahnBackRip = "Back-rip";
    /// <summary>
    /// Ball-change.
    /// </summary>
    public const string KahnBallChange = "Ball-change";
    /// <summary>
    /// Ball-dig.
    /// </summary>
    public const string KahnBallDig = "Ball-dig";
    /// <summary>
    /// Brush-backward.
    /// </summary>
    public const string KahnBrushBackward = "Brush-backward";
    /// <summary>
    /// Brush-forward.
    /// </summary>
    public const string KahnBrushForward = "Brush-forward";
    /// <summary>
    /// Chug.
    /// </summary>
    public const string KahnChug = "Chug";
    /// <summary>
    /// Clap.
    /// </summary>
    public const string KahnClap = "Clap";
    /// <summary>
    /// Double-snap.
    /// </summary>
    public const string KahnDoubleSnap = "Double-snap";
    /// <summary>
    /// Double-wing.
    /// </summary>
    public const string KahnDoubleWing = "Double-wing";
    /// <summary>
    /// Draw-step.
    /// </summary>
    public const string KahnDrawStep = "Draw-step";
    /// <summary>
    /// Draw-tap.
    /// </summary>
    public const string KahnDrawTap = "Draw-tap";
    /// <summary>
    /// Flam.
    /// </summary>
    public const string KahnFlam = "Flam";
    /// <summary>
    /// Flap.
    /// </summary>
    public const string KahnFlap = "Flap";
    /// <summary>
    /// Flap-step.
    /// </summary>
    public const string KahnFlapStep = "Flap-step";
    /// <summary>
    /// Flat.
    /// </summary>
    public const string KahnFlat = "Flat";
    /// <summary>
    /// Flea-hop.
    /// </summary>
    public const string KahnFleaHop = "Flea-hop";
    /// <summary>
    /// Flea-tap.
    /// </summary>
    public const string KahnFleaTap = "Flea-tap";
    /// <summary>
    /// Grace-tap.
    /// </summary>
    public const string KahnGraceTap = "Grace-tap";
    /// <summary>
    /// Grace-tap-change.
    /// </summary>
    public const string KahnGraceTapChange = "Grace-tap-change";
    /// <summary>
    /// Grace-tap-hop.
    /// </summary>
    public const string KahnGraceTapHop = "Grace-tap-hop";
    /// <summary>
    /// Grace-tap-stamp.
    /// </summary>
    public const string KahnGraceTapStamp = "Grace-tap-stamp";
    /// <summary>
    /// Heel.
    /// </summary>
    public const string KahnHeel = "Heel";
    /// <summary>
    /// Heel-change.
    /// </summary>
    public const string KahnHeelChange = "Heel-change";
    /// <summary>
    /// Heel-click.
    /// </summary>
    public const string KahnHeelClick = "Heel-click";
    /// <summary>
    /// Heel-drop.
    /// </summary>
    public const string KahnHeelDrop = "Heel-drop";
    /// <summary>
    /// Heel-step.
    /// </summary>
    public const string KahnHeelStep = "Heel-step";
    /// <summary>
    /// Heel-tap.
    /// </summary>
    public const string KahnHeelTap = "Heel-tap";
    /// <summary>
    /// Hop.
    /// </summary>
    public const string KahnHop = "Hop";
    /// <summary>
    /// Jump-apart.
    /// </summary>
    public const string KahnJumpApart = "Jump-apart";
    /// <summary>
    /// Jump-together.
    /// </summary>
    public const string KahnJumpTogether = "Jump-together";
    /// <summary>
    /// Knee-inward.
    /// </summary>
    public const string KahnKneeInward = "Knee-inward";
    /// <summary>
    /// Knee-outward.
    /// </summary>
    public const string KahnKneeOutward = "Knee-outward";
    /// <summary>
    /// Leap.
    /// </summary>
    public const string KahnLeap = "Leap";
    /// <summary>
    /// Leap-flat-foot.
    /// </summary>
    public const string KahnLeapFlatFoot = "Leap-flat-foot";
    /// <summary>
    /// Leap-heel-click.
    /// </summary>
    public const string KahnLeapHeelClick = "Leap-heel-click";
    /// <summary>
    /// Left-catch.
    /// </summary>
    public const string KahnLeftCatch = "Left-catch";
    /// <summary>
    /// Left-cross.
    /// </summary>
    public const string KahnLeftCross = "Left-cross";
    /// <summary>
    /// Left-foot.
    /// </summary>
    public const string KahnLeftFoot = "Left-foot";
    /// <summary>
    /// Left-toe-strike.
    /// </summary>
    public const string KahnLeftToeStrike = "Left-toe-strike";
    /// <summary>
    /// Left-turn.
    /// </summary>
    public const string KahnLeftTurn = "Left-turn";
    /// <summary>
    /// Over-the-top.
    /// </summary>
    public const string KahnOverTheTop = "Over-the-top";
    /// <summary>
    /// Over-the-top-tap.
    /// </summary>
    public const string KahnOverTheTopTap = "Over-the-top-tap";
    /// <summary>
    /// Pull.
    /// </summary>
    public const string KahnPull = "Pull";
    /// <summary>
    /// Push.
    /// </summary>
    public const string KahnPush = "Push";
    /// <summary>
    /// Riff.
    /// </summary>
    public const string KahnRiff = "Riff";
    /// <summary>
    /// Riffle.
    /// </summary>
    public const string KahnRiffle = "Riffle";
    /// <summary>
    /// Right-catch.
    /// </summary>
    public const string KahnRightCatch = "Right-catch";
    /// <summary>
    /// Right-cross.
    /// </summary>
    public const string KahnRightCross = "Right-cross";
    /// <summary>
    /// Right-foot.
    /// </summary>
    public const string KahnRightFoot = "Right-foot";
    /// <summary>
    /// Right-toe-strike.
    /// </summary>
    public const string KahnRightToeStrike = "Right-toe-strike";
    /// <summary>
    /// Right-turn.
    /// </summary>
    public const string KahnRightTurn = "Right-turn";
    /// <summary>
    /// Rip.
    /// </summary>
    public const string KahnRip = "Rip";
    /// <summary>
    /// Ripple.
    /// </summary>
    public const string KahnRipple = "Ripple";
    /// <summary>
    /// Scrape.
    /// </summary>
    public const string KahnScrape = "Scrape";
    /// <summary>
    /// Scuff.
    /// </summary>
    public const string KahnScuff = "Scuff";
    /// <summary>
    /// Scuffle.
    /// </summary>
    public const string KahnScuffle = "Scuffle";
    /// <summary>
    /// Shuffle.
    /// </summary>
    public const string KahnShuffle = "Shuffle";
    /// <summary>
    /// Slam.
    /// </summary>
    public const string KahnSlam = "Slam";
    /// <summary>
    /// Slap.
    /// </summary>
    public const string KahnSlap = "Slap";
    /// <summary>
    /// Slide-step.
    /// </summary>
    public const string KahnSlideStep = "Slide-step";
    /// <summary>
    /// Slide-tap.
    /// </summary>
    public const string KahnSlideTap = "Slide-tap";
    /// <summary>
    /// Snap.
    /// </summary>
    public const string KahnSnap = "Snap";
    /// <summary>
    /// Stamp.
    /// </summary>
    public const string KahnStamp = "Stamp";
    /// <summary>
    /// Stamp-stamp.
    /// </summary>
    public const string KahnStampStamp = "Stamp-stamp";
    /// <summary>
    /// Step.
    /// </summary>
    public const string KahnStep = "Step";
    /// <summary>
    /// Step-stamp.
    /// </summary>
    public const string KahnStepStamp = "Step-stamp";
    /// <summary>
    /// Stomp.
    /// </summary>
    public const string KahnStomp = "Stomp";
    /// <summary>
    /// Stomp-brush.
    /// </summary>
    public const string KahnStompBrush = "Stomp-brush";
    /// <summary>
    /// Tap.
    /// </summary>
    public const string KahnTap = "Tap";
    /// <summary>
    /// Toe.
    /// </summary>
    public const string KahnToe = "Toe";
    /// <summary>
    /// Toe-click.
    /// </summary>
    public const string KahnToeClick = "Toe-click";
    /// <summary>
    /// Toe-drop.
    /// </summary>
    public const string KahnToeDrop = "Toe-drop";
    /// <summary>
    /// Toe-step.
    /// </summary>
    public const string KahnToeStep = "Toe-step";
    /// <summary>
    /// Toe-tap.
    /// </summary>
    public const string KahnToeTap = "Toe-tap";
    /// <summary>
    /// Trench.
    /// </summary>
    public const string KahnTrench = "Trench";
    /// <summary>
    /// Wing.
    /// </summary>
    public const string KahnWing = "Wing";
    /// <summary>
    /// Wing-change.
    /// </summary>
    public const string KahnWingChange = "Wing-change";
    /// <summary>
    /// Zank.
    /// </summary>
    public const string KahnZank = "Zank";
    /// <summary>
    /// Zink.
    /// </summary>
    public const string KahnZink = "Zink";
    /// <summary>
    /// Clavichord bebung, 2 finger movements (above).
    /// </summary>
    public const string KeyboardBebung2DotsAbove = "Clavichord bebung, 2 finger movements (above)";
    /// <summary>
    /// Clavichord bebung, 2 finger movements (below).
    /// </summary>
    public const string KeyboardBebung2DotsBelow = "Clavichord bebung, 2 finger movements (below)";
    /// <summary>
    /// Clavichord bebung, 3 finger movements (above).
    /// </summary>
    public const string KeyboardBebung3DotsAbove = "Clavichord bebung, 3 finger movements (above)";
    /// <summary>
    /// Clavichord bebung, 3 finger movements (below).
    /// </summary>
    public const string KeyboardBebung3DotsBelow = "Clavichord bebung, 3 finger movements (below)";
    /// <summary>
    /// Clavichord bebung, 4 finger movements (above).
    /// </summary>
    public const string KeyboardBebung4DotsAbove = "Clavichord bebung, 4 finger movements (above)";
    /// <summary>
    /// Clavichord bebung, 4 finger movements (below).
    /// </summary>
    public const string KeyboardBebung4DotsBelow = "Clavichord bebung, 4 finger movements (below)";
    /// <summary>
    /// Left pedal pictogram.
    /// </summary>
    public const string KeyboardLeftPedalPictogram = "Left pedal pictogram";
    /// <summary>
    /// Middle pedal pictogram.
    /// </summary>
    public const string KeyboardMiddlePedalPictogram = "Middle pedal pictogram";
    /// <summary>
    /// Pedal d.
    /// </summary>
    public const string KeyboardPedalD = "Pedal d";
    /// <summary>
    /// Pedal dot.
    /// </summary>
    public const string KeyboardPedalDot = "Pedal dot";
    /// <summary>
    /// Pedal e.
    /// </summary>
    public const string KeyboardPedalE = "Pedal e";
    /// <summary>
    /// Half-pedal mark.
    /// </summary>
    public const string KeyboardPedalHalf = "Half-pedal mark";
    /// <summary>
    /// Half pedal mark 1.
    /// </summary>
    public const string KeyboardPedalHalf2 = "Half pedal mark 1";
    /// <summary>
    /// Half pedal mark 2.
    /// </summary>
    public const string KeyboardPedalHalf3 = "Half pedal mark 2";
    /// <summary>
    /// Pedal heel 1.
    /// </summary>
    public const string KeyboardPedalHeel1 = "Pedal heel 1";
    /// <summary>
    /// Pedal heel 2.
    /// </summary>
    public const string KeyboardPedalHeel2 = "Pedal heel 2";
    /// <summary>
    /// Pedal heel 3 (Davis).
    /// </summary>
    public const string KeyboardPedalHeel3 = "Pedal heel 3 (Davis)";
    /// <summary>
    /// Pedal heel to toe.
    /// </summary>
    public const string KeyboardPedalHeelToToe = "Pedal heel to toe";
    /// <summary>
    /// Pedal heel or toe.
    /// </summary>
    public const string KeyboardPedalHeelToe = "Pedal heel or toe";
    /// <summary>
    /// Pedal hook end.
    /// </summary>
    public const string KeyboardPedalHookEnd = "Pedal hook end";
    /// <summary>
    /// Pedal hook start.
    /// </summary>
    public const string KeyboardPedalHookStart = "Pedal hook start";
    /// <summary>
    /// Pedal hyphen.
    /// </summary>
    public const string KeyboardPedalHyphen = "Pedal hyphen";
    /// <summary>
    /// Pedal P.
    /// </summary>
    public const string KeyboardPedalP = "Pedal P";
    /// <summary>
    /// Left parenthesis for pedal marking.
    /// </summary>
    public const string KeyboardPedalParensLeft = "Left parenthesis for pedal marking";
    /// <summary>
    /// Right parenthesis for pedal marking.
    /// </summary>
    public const string KeyboardPedalParensRight = "Right parenthesis for pedal marking";
    /// <summary>
    /// Pedal mark.
    /// </summary>
    public const string KeyboardPedalPed = "Pedal mark";
    /// <summary>
    /// Pedal S.
    /// </summary>
    public const string KeyboardPedalS = "Pedal S";
    /// <summary>
    /// Sostenuto pedal mark.
    /// </summary>
    public const string KeyboardPedalSost = "Sostenuto pedal mark";
    /// <summary>
    /// Pedal toe 1.
    /// </summary>
    public const string KeyboardPedalToe1 = "Pedal toe 1";
    /// <summary>
    /// Pedal toe 2.
    /// </summary>
    public const string KeyboardPedalToe2 = "Pedal toe 2";
    /// <summary>
    /// Pedal toe to heel.
    /// </summary>
    public const string KeyboardPedalToeToHeel = "Pedal toe to heel";
    /// <summary>
    /// Pedal up mark.
    /// </summary>
    public const string KeyboardPedalUp = "Pedal up mark";
    /// <summary>
    /// Pedal up notch.
    /// </summary>
    public const string KeyboardPedalUpNotch = "Pedal up notch";
    /// <summary>
    /// Pedal up special.
    /// </summary>
    public const string KeyboardPedalUpSpecial = "Pedal up special";
    /// <summary>
    /// Play with left hand.
    /// </summary>
    public const string KeyboardPlayWithLH = "Play with left hand";
    /// <summary>
    /// Play with left hand (end).
    /// </summary>
    public const string KeyboardPlayWithLHEnd = "Play with left hand (end)";
    /// <summary>
    /// Play with right hand.
    /// </summary>
    public const string KeyboardPlayWithRH = "Play with right hand";
    /// <summary>
    /// Play with right hand (end).
    /// </summary>
    public const string KeyboardPlayWithRHEnd = "Play with right hand (end)";
    /// <summary>
    /// Pluck strings inside piano (Maderna).
    /// </summary>
    public const string KeyboardPluckInside = "Pluck strings inside piano (Maderna)";
    /// <summary>
    /// Right pedal pictogram.
    /// </summary>
    public const string KeyboardRightPedalPictogram = "Right pedal pictogram";
    /// <summary>
    /// Kievan flat.
    /// </summary>
    public const string KievanAccidentalFlat = "Kievan flat";
    /// <summary>
    /// Kievan sharp.
    /// </summary>
    public const string KievanAccidentalSharp = "Kievan sharp";
    /// <summary>
    /// Kievan augmentation dot.
    /// </summary>
    public const string KievanAugmentationDot = "Kievan augmentation dot";
    /// <summary>
    /// Kievan C clef (tse-fa-ut).
    /// </summary>
    public const string KievanCClef = "Kievan C clef (tse-fa-ut)";
    /// <summary>
    /// Kievan ending symbol.
    /// </summary>
    public const string KievanEndingSymbol = "Kievan ending symbol";
    /// <summary>
    /// Kievan eighth note, stem down.
    /// </summary>
    public const string KievanNote8thStemDown = "Kievan eighth note, stem down";
    /// <summary>
    /// Kievan eighth note, stem up.
    /// </summary>
    public const string KievanNote8thStemUp = "Kievan eighth note, stem up";
    /// <summary>
    /// Kievan beam.
    /// </summary>
    public const string KievanNoteBeam = "Kievan beam";
    /// <summary>
    /// Kievan half note (on staff line).
    /// </summary>
    public const string KievanNoteHalfStaffLine = "Kievan half note (on staff line)";
    /// <summary>
    /// Kievan half note (in staff space).
    /// </summary>
    public const string KievanNoteHalfStaffSpace = "Kievan half note (in staff space)";
    /// <summary>
    /// Kievan quarter note, stem down.
    /// </summary>
    public const string KievanNoteQuarterStemDown = "Kievan quarter note, stem down";
    /// <summary>
    /// Kievan quarter note, stem up.
    /// </summary>
    public const string KievanNoteQuarterStemUp = "Kievan quarter note, stem up";
    /// <summary>
    /// Kievan reciting note.
    /// </summary>
    public const string KievanNoteReciting = "Kievan reciting note";
    /// <summary>
    /// Kievan whole note.
    /// </summary>
    public const string KievanNoteWhole = "Kievan whole note";
    /// <summary>
    /// Kievan final whole note.
    /// </summary>
    public const string KievanNoteWholeFinal = "Kievan final whole note";
    /// <summary>
    /// Do hand sign.
    /// </summary>
    public const string KodalyHandDo = "Do hand sign";
    /// <summary>
    /// Fa hand sign.
    /// </summary>
    public const string KodalyHandFa = "Fa hand sign";
    /// <summary>
    /// La hand sign.
    /// </summary>
    public const string KodalyHandLa = "La hand sign";
    /// <summary>
    /// Mi hand sign.
    /// </summary>
    public const string KodalyHandMi = "Mi hand sign";
    /// <summary>
    /// Re hand sign.
    /// </summary>
    public const string KodalyHandRe = "Re hand sign";
    /// <summary>
    /// So hand sign.
    /// </summary>
    public const string KodalyHandSo = "So hand sign";
    /// <summary>
    /// Ti hand sign.
    /// </summary>
    public const string KodalyHandTi = "Ti hand sign";
    /// <summary>
    /// Left repeat sign within bar.
    /// </summary>
    public const string LeftRepeatSmall = "Left repeat sign within bar";
    /// <summary>
    /// Leger line.
    /// </summary>
    public const string LegerLine = "Leger line";
    /// <summary>
    /// Leger line (narrow).
    /// </summary>
    public const string LegerLineNarrow = "Leger line (narrow)";
    /// <summary>
    /// Leger line (wide).
    /// </summary>
    public const string LegerLineWide = "Leger line (wide)";
    /// <summary>
    /// Lute tablature end repeat barline.
    /// </summary>
    public const string LuteBarlineEndRepeat = "Lute tablature end repeat barline";
    /// <summary>
    /// Lute tablature final barline.
    /// </summary>
    public const string LuteBarlineFinal = "Lute tablature final barline";
    /// <summary>
    /// Lute tablature start repeat barline.
    /// </summary>
    public const string LuteBarlineStartRepeat = "Lute tablature start repeat barline";
    /// <summary>
    /// 16th note (semiquaver) duration sign.
    /// </summary>
    public const string LuteDuration16th = "16th note (semiquaver) duration sign";
    /// <summary>
    /// 32nd note (demisemiquaver) duration sign.
    /// </summary>
    public const string LuteDuration32nd = "32nd note (demisemiquaver) duration sign";
    /// <summary>
    /// Eighth note (quaver) duration sign.
    /// </summary>
    public const string LuteDuration8th = "Eighth note (quaver) duration sign";
    /// <summary>
    /// Double whole note (breve) duration sign.
    /// </summary>
    public const string LuteDurationDoubleWhole = "Double whole note (breve) duration sign";
    /// <summary>
    /// Half note (minim) duration sign.
    /// </summary>
    public const string LuteDurationHalf = "Half note (minim) duration sign";
    /// <summary>
    /// Quarter note (crotchet) duration sign.
    /// </summary>
    public const string LuteDurationQuarter = "Quarter note (crotchet) duration sign";
    /// <summary>
    /// Whole note (semibreve) duration sign.
    /// </summary>
    public const string LuteDurationWhole = "Whole note (semibreve) duration sign";
    /// <summary>
    /// Right-hand fingering, first finger.
    /// </summary>
    public const string LuteFingeringRHFirst = "Right-hand fingering, first finger";
    /// <summary>
    /// Right-hand fingering, second finger.
    /// </summary>
    public const string LuteFingeringRHSecond = "Right-hand fingering, second finger";
    /// <summary>
    /// Right-hand fingering, third finger.
    /// </summary>
    public const string LuteFingeringRHThird = "Right-hand fingering, third finger";
    /// <summary>
    /// Right-hand fingering, thumb.
    /// </summary>
    public const string LuteFingeringRHThumb = "Right-hand fingering, thumb";
    /// <summary>
    /// 10th course (diapason).
    /// </summary>
    public const string LuteFrench10thCourse = "10th course (diapason)";
    /// <summary>
    /// Seventh course (diapason).
    /// </summary>
    public const string LuteFrench7thCourse = "Seventh course (diapason)";
    /// <summary>
    /// Eighth course (diapason).
    /// </summary>
    public const string LuteFrench8thCourse = "Eighth course (diapason)";
    /// <summary>
    /// Ninth course (diapason).
    /// </summary>
    public const string LuteFrench9thCourse = "Ninth course (diapason)";
    /// <summary>
    /// Appoggiatura from above.
    /// </summary>
    public const string LuteFrenchAppoggiaturaAbove = "Appoggiatura from above";
    /// <summary>
    /// Appoggiatura from below.
    /// </summary>
    public const string LuteFrenchAppoggiaturaBelow = "Appoggiatura from below";
    /// <summary>
    /// Open string (a).
    /// </summary>
    public const string LuteFrenchFretA = "Open string (a)";
    /// <summary>
    /// First fret (b).
    /// </summary>
    public const string LuteFrenchFretB = "First fret (b)";
    /// <summary>
    /// Second fret (c).
    /// </summary>
    public const string LuteFrenchFretC = "Second fret (c)";
    /// <summary>
    /// Third fret (d).
    /// </summary>
    public const string LuteFrenchFretD = "Third fret (d)";
    /// <summary>
    /// Fourth fret (e).
    /// </summary>
    public const string LuteFrenchFretE = "Fourth fret (e)";
    /// <summary>
    /// Fifth fret (f).
    /// </summary>
    public const string LuteFrenchFretF = "Fifth fret (f)";
    /// <summary>
    /// Sixth fret (g).
    /// </summary>
    public const string LuteFrenchFretG = "Sixth fret (g)";
    /// <summary>
    /// Seventh fret (h).
    /// </summary>
    public const string LuteFrenchFretH = "Seventh fret (h)";
    /// <summary>
    /// Eighth fret (i).
    /// </summary>
    public const string LuteFrenchFretI = "Eighth fret (i)";
    /// <summary>
    /// Ninth fret (k).
    /// </summary>
    public const string LuteFrenchFretK = "Ninth fret (k)";
    /// <summary>
    /// 10th fret (l).
    /// </summary>
    public const string LuteFrenchFretL = "10th fret (l)";
    /// <summary>
    /// 11th fret (m).
    /// </summary>
    public const string LuteFrenchFretM = "11th fret (m)";
    /// <summary>
    /// 12th fret (n).
    /// </summary>
    public const string LuteFrenchFretN = "12th fret (n)";
    /// <summary>
    /// Inverted mordent.
    /// </summary>
    public const string LuteFrenchMordentInverted = "Inverted mordent";
    /// <summary>
    /// Mordent with lower auxiliary.
    /// </summary>
    public const string LuteFrenchMordentLower = "Mordent with lower auxiliary";
    /// <summary>
    /// Mordent with upper auxiliary.
    /// </summary>
    public const string LuteFrenchMordentUpper = "Mordent with upper auxiliary";
    /// <summary>
    /// 5th course, 1st fret (a).
    /// </summary>
    public const string LuteGermanALower = "5th course, 1st fret (a)";
    /// <summary>
    /// 6th course, 1st fret (A).
    /// </summary>
    public const string LuteGermanAUpper = "6th course, 1st fret (A)";
    /// <summary>
    /// 4th course, 1st fret (b).
    /// </summary>
    public const string LuteGermanBLower = "4th course, 1st fret (b)";
    /// <summary>
    /// 6th course, 2nd fret (B).
    /// </summary>
    public const string LuteGermanBUpper = "6th course, 2nd fret (B)";
    /// <summary>
    /// 3rd course, 1st fret (c).
    /// </summary>
    public const string LuteGermanCLower = "3rd course, 1st fret (c)";
    /// <summary>
    /// 6th course, 3rd fret (C).
    /// </summary>
    public const string LuteGermanCUpper = "6th course, 3rd fret (C)";
    /// <summary>
    /// 2nd course, 1st fret (d).
    /// </summary>
    public const string LuteGermanDLower = "2nd course, 1st fret (d)";
    /// <summary>
    /// 6th course, 4th fret (D).
    /// </summary>
    public const string LuteGermanDUpper = "6th course, 4th fret (D)";
    /// <summary>
    /// 1st course, 1st fret (e).
    /// </summary>
    public const string LuteGermanELower = "1st course, 1st fret (e)";
    /// <summary>
    /// 6th course, 5th fret (E).
    /// </summary>
    public const string LuteGermanEUpper = "6th course, 5th fret (E)";
    /// <summary>
    /// 5th course, 2nd fret (f).
    /// </summary>
    public const string LuteGermanFLower = "5th course, 2nd fret (f)";
    /// <summary>
    /// 6th course, 6th fret (F).
    /// </summary>
    public const string LuteGermanFUpper = "6th course, 6th fret (F)";
    /// <summary>
    /// 4th course, 2nd fret (g).
    /// </summary>
    public const string LuteGermanGLower = "4th course, 2nd fret (g)";
    /// <summary>
    /// 6th course, 7th fret (G).
    /// </summary>
    public const string LuteGermanGUpper = "6th course, 7th fret (G)";
    /// <summary>
    /// 3rd course, 2nd fret (h).
    /// </summary>
    public const string LuteGermanHLower = "3rd course, 2nd fret (h)";
    /// <summary>
    /// 6th course, 8th fret (H).
    /// </summary>
    public const string LuteGermanHUpper = "6th course, 8th fret (H)";
    /// <summary>
    /// 2nd course, 2nd fret (i).
    /// </summary>
    public const string LuteGermanILower = "2nd course, 2nd fret (i)";
    /// <summary>
    /// 6th course, 9th fret (I).
    /// </summary>
    public const string LuteGermanIUpper = "6th course, 9th fret (I)";
    /// <summary>
    /// 1st course, 2nd fret (k).
    /// </summary>
    public const string LuteGermanKLower = "1st course, 2nd fret (k)";
    /// <summary>
    /// 6th course, 10th fret (K).
    /// </summary>
    public const string LuteGermanKUpper = "6th course, 10th fret (K)";
    /// <summary>
    /// 5th course, 3rd fret (l).
    /// </summary>
    public const string LuteGermanLLower = "5th course, 3rd fret (l)";
    /// <summary>
    /// 6th course, 11th fret (L).
    /// </summary>
    public const string LuteGermanLUpper = "6th course, 11th fret (L)";
    /// <summary>
    /// 4th course, 3rd fret (m).
    /// </summary>
    public const string LuteGermanMLower = "4th course, 3rd fret (m)";
    /// <summary>
    /// 6th course, 12th fret (M).
    /// </summary>
    public const string LuteGermanMUpper = "6th course, 12th fret (M)";
    /// <summary>
    /// 3rd course, 3rd fret (n).
    /// </summary>
    public const string LuteGermanNLower = "3rd course, 3rd fret (n)";
    /// <summary>
    /// 6th course, 13th fret (N).
    /// </summary>
    public const string LuteGermanNUpper = "6th course, 13th fret (N)";
    /// <summary>
    /// 2nd course, 3rd fret (o).
    /// </summary>
    public const string LuteGermanOLower = "2nd course, 3rd fret (o)";
    /// <summary>
    /// 1st course, 3rd fret (p).
    /// </summary>
    public const string LuteGermanPLower = "1st course, 3rd fret (p)";
    /// <summary>
    /// 5th course, 4th fret (q).
    /// </summary>
    public const string LuteGermanQLower = "5th course, 4th fret (q)";
    /// <summary>
    /// 4th course, 4th fret (r).
    /// </summary>
    public const string LuteGermanRLower = "4th course, 4th fret (r)";
    /// <summary>
    /// 3rd course, 4th fret (s).
    /// </summary>
    public const string LuteGermanSLower = "3rd course, 4th fret (s)";
    /// <summary>
    /// 2nd course, 4th fret (t).
    /// </summary>
    public const string LuteGermanTLower = "2nd course, 4th fret (t)";
    /// <summary>
    /// 1st course, 4th fret (v).
    /// </summary>
    public const string LuteGermanVLower = "1st course, 4th fret (v)";
    /// <summary>
    /// 5th course, 5th fret (x).
    /// </summary>
    public const string LuteGermanXLower = "5th course, 5th fret (x)";
    /// <summary>
    /// 4th course, 5th fret (y).
    /// </summary>
    public const string LuteGermanYLower = "4th course, 5th fret (y)";
    /// <summary>
    /// 3rd course, 5th fret (z).
    /// </summary>
    public const string LuteGermanZLower = "3rd course, 5th fret (z)";
    /// <summary>
    /// C sol fa ut clef.
    /// </summary>
    public const string LuteItalianClefCSolFaUt = "C sol fa ut clef";
    /// <summary>
    /// F fa ut clef.
    /// </summary>
    public const string LuteItalianClefFFaUt = "F fa ut clef";
    /// <summary>
    /// Open string (0).
    /// </summary>
    public const string LuteItalianFret0 = "Open string (0)";
    /// <summary>
    /// First fret (1).
    /// </summary>
    public const string LuteItalianFret1 = "First fret (1)";
    /// <summary>
    /// Second fret (2).
    /// </summary>
    public const string LuteItalianFret2 = "Second fret (2)";
    /// <summary>
    /// Third fret (3).
    /// </summary>
    public const string LuteItalianFret3 = "Third fret (3)";
    /// <summary>
    /// Fourth fret (4).
    /// </summary>
    public const string LuteItalianFret4 = "Fourth fret (4)";
    /// <summary>
    /// Fifth fret (5).
    /// </summary>
    public const string LuteItalianFret5 = "Fifth fret (5)";
    /// <summary>
    /// Sixth fret (6).
    /// </summary>
    public const string LuteItalianFret6 = "Sixth fret (6)";
    /// <summary>
    /// Seventh fret (7).
    /// </summary>
    public const string LuteItalianFret7 = "Seventh fret (7)";
    /// <summary>
    /// Eighth fret (8).
    /// </summary>
    public const string LuteItalianFret8 = "Eighth fret (8)";
    /// <summary>
    /// Ninth fret (9).
    /// </summary>
    public const string LuteItalianFret9 = "Ninth fret (9)";
    /// <summary>
    /// Hold finger in place.
    /// </summary>
    public const string LuteItalianHoldFinger = "Hold finger in place";
    /// <summary>
    /// Hold note.
    /// </summary>
    public const string LuteItalianHoldNote = "Hold note";
    /// <summary>
    /// Release finger.
    /// </summary>
    public const string LuteItalianReleaseFinger = "Release finger";
    /// <summary>
    /// Fast tempo indication (de Mudarra).
    /// </summary>
    public const string LuteItalianTempoFast = "Fast tempo indication (de Mudarra)";
    /// <summary>
    /// Neither fast nor slow tempo indication (de Mudarra).
    /// </summary>
    public const string LuteItalianTempoNeitherFastNorSlow = "Neither fast nor slow tempo indication (de Mudarra)";
    /// <summary>
    /// Slow tempo indication (de Mudarra).
    /// </summary>
    public const string LuteItalianTempoSlow = "Slow tempo indication (de Mudarra)";
    /// <summary>
    /// Somewhat fast tempo indication (de Narvaez).
    /// </summary>
    public const string LuteItalianTempoSomewhatFast = "Somewhat fast tempo indication (de Narvaez)";
    /// <summary>
    /// Very slow indication (de Narvaez).
    /// </summary>
    public const string LuteItalianTempoVerySlow = "Very slow indication (de Narvaez)";
    /// <summary>
    /// Triple time indication.
    /// </summary>
    public const string LuteItalianTimeTriple = "Triple time indication";
    /// <summary>
    /// Single-finger tremolo or mordent.
    /// </summary>
    public const string LuteItalianTremolo = "Single-finger tremolo or mordent";
    /// <summary>
    /// Vibrato (verre cassé).
    /// </summary>
    public const string LuteItalianVibrato = "Vibrato (verre cassé)";
    /// <summary>
    /// Lute tablature staff, 6 courses.
    /// </summary>
    public const string LuteStaff6Lines = "Lute tablature staff, 6 courses";
    /// <summary>
    /// Lute tablature staff, 6 courses (narrow).
    /// </summary>
    public const string LuteStaff6LinesNarrow = "Lute tablature staff, 6 courses (narrow)";
    /// <summary>
    /// Lute tablature staff, 6 courses (wide).
    /// </summary>
    public const string LuteStaff6LinesWide = "Lute tablature staff, 6 courses (wide)";
    /// <summary>
    /// Elision.
    /// </summary>
    public const string LyricsElision = "Elision";
    /// <summary>
    /// Narrow elision.
    /// </summary>
    public const string LyricsElisionNarrow = "Narrow elision";
    /// <summary>
    /// Wide elision.
    /// </summary>
    public const string LyricsElisionWide = "Wide elision";
    /// <summary>
    /// Baseline hyphen.
    /// </summary>
    public const string LyricsHyphenBaseline = "Baseline hyphen";
    /// <summary>
    /// Non-breaking baseline hyphen.
    /// </summary>
    public const string LyricsHyphenBaselineNonBreaking = "Non-breaking baseline hyphen";
    /// <summary>
    /// Text repeats.
    /// </summary>
    public const string LyricsTextRepeat = "Text repeats";
    /// <summary>
    /// Flat, hard b (mi).
    /// </summary>
    public const string MedRenFlatHardB = "Flat, hard b (mi)";
    /// <summary>
    /// Flat, soft b (fa).
    /// </summary>
    public const string MedRenFlatSoftB = "Flat, soft b (fa)";
    /// <summary>
    /// Flat with dot.
    /// </summary>
    public const string MedRenFlatWithDot = "Flat with dot";
    /// <summary>
    /// G clef (Corpus Monodicum).
    /// </summary>
    public const string MedRenGClefCMN = "G clef (Corpus Monodicum)";
    /// <summary>
    /// Liquescence.
    /// </summary>
    public const string MedRenLiquescenceCMN = "Liquescence";
    /// <summary>
    /// Liquescent ascending (Corpus Monodicum).
    /// </summary>
    public const string MedRenLiquescentAscCMN = "Liquescent ascending (Corpus Monodicum)";
    /// <summary>
    /// Liquescent descending (Corpus Monodicum).
    /// </summary>
    public const string MedRenLiquescentDescCMN = "Liquescent descending (Corpus Monodicum)";
    /// <summary>
    /// Natural.
    /// </summary>
    public const string MedRenNatural = "Natural";
    /// <summary>
    /// Natural with interrupted cross.
    /// </summary>
    public const string MedRenNaturalWithCross = "Natural with interrupted cross";
    /// <summary>
    /// Oriscus (Corpus Monodicum).
    /// </summary>
    public const string MedRenOriscusCMN = "Oriscus (Corpus Monodicum)";
    /// <summary>
    /// Plica.
    /// </summary>
    public const string MedRenPlicaCMN = "Plica";
    /// <summary>
    /// Punctum (Corpus Monodicum).
    /// </summary>
    public const string MedRenPunctumCMN = "Punctum (Corpus Monodicum)";
    /// <summary>
    /// Quilisma (Corpus Monodicum).
    /// </summary>
    public const string MedRenQuilismaCMN = "Quilisma (Corpus Monodicum)";
    /// <summary>
    /// Croix.
    /// </summary>
    public const string MedRenSharpCroix = "Croix";
    /// <summary>
    /// Strophicus (Corpus Monodicum).
    /// </summary>
    public const string MedRenStrophicusCMN = "Strophicus (Corpus Monodicum)";
    /// <summary>
    /// Alteration sign.
    /// </summary>
    public const string MensuralAlterationSign = "Alteration sign";
    /// <summary>
    /// Black mensural brevis.
    /// </summary>
    public const string MensuralBlackBrevis = "Black mensural brevis";
    /// <summary>
    /// Black mensural void brevis.
    /// </summary>
    public const string MensuralBlackBrevisVoid = "Black mensural void brevis";
    /// <summary>
    /// Black mensural dragma.
    /// </summary>
    public const string MensuralBlackDragma = "Black mensural dragma";
    /// <summary>
    /// Black mensural longa.
    /// </summary>
    public const string MensuralBlackLonga = "Black mensural longa";
    /// <summary>
    /// Black mensural maxima.
    /// </summary>
    public const string MensuralBlackMaxima = "Black mensural maxima";
    /// <summary>
    /// Black mensural minima.
    /// </summary>
    public const string MensuralBlackMinima = "Black mensural minima";
    /// <summary>
    /// Black mensural void minima.
    /// </summary>
    public const string MensuralBlackMinimaVoid = "Black mensural void minima";
    /// <summary>
    /// Black mensural semibrevis.
    /// </summary>
    public const string MensuralBlackSemibrevis = "Black mensural semibrevis";
    /// <summary>
    /// Black mensural semibrevis caudata.
    /// </summary>
    public const string MensuralBlackSemibrevisCaudata = "Black mensural semibrevis caudata";
    /// <summary>
    /// Black mensural oblique semibrevis.
    /// </summary>
    public const string MensuralBlackSemibrevisOblique = "Black mensural oblique semibrevis";
    /// <summary>
    /// Black mensural void semibrevis.
    /// </summary>
    public const string MensuralBlackSemibrevisVoid = "Black mensural void semibrevis";
    /// <summary>
    /// Black mensural semiminima.
    /// </summary>
    public const string MensuralBlackSemiminima = "Black mensural semiminima";
    /// <summary>
    /// Mensural C clef.
    /// </summary>
    public const string MensuralCclef = "Mensural C clef";
    /// <summary>
    /// Petrucci C clef, high position.
    /// </summary>
    public const string MensuralCclefPetrucciPosHigh = "Petrucci C clef, high position";
    /// <summary>
    /// Petrucci C clef, highest position.
    /// </summary>
    public const string MensuralCclefPetrucciPosHighest = "Petrucci C clef, highest position";
    /// <summary>
    /// Petrucci C clef, low position.
    /// </summary>
    public const string MensuralCclefPetrucciPosLow = "Petrucci C clef, low position";
    /// <summary>
    /// Petrucci C clef, lowest position.
    /// </summary>
    public const string MensuralCclefPetrucciPosLowest = "Petrucci C clef, lowest position";
    /// <summary>
    /// Petrucci C clef, middle position.
    /// </summary>
    public const string MensuralCclefPetrucciPosMiddle = "Petrucci C clef, middle position";
    /// <summary>
    /// Coloration end, round.
    /// </summary>
    public const string MensuralColorationEndRound = "Coloration end, round";
    /// <summary>
    /// Coloration end, square.
    /// </summary>
    public const string MensuralColorationEndSquare = "Coloration end, square";
    /// <summary>
    /// Coloration start, round.
    /// </summary>
    public const string MensuralColorationStartRound = "Coloration start, round";
    /// <summary>
    /// Coloration start, square.
    /// </summary>
    public const string MensuralColorationStartSquare = "Coloration start, square";
    /// <summary>
    /// Combining stem diagonal.
    /// </summary>
    public const string MensuralCombStemDiagonal = "Combining stem diagonal";
    /// <summary>
    /// Combining stem down.
    /// </summary>
    public const string MensuralCombStemDown = "Combining stem down";
    /// <summary>
    /// Combining stem with extended flag down.
    /// </summary>
    public const string MensuralCombStemDownFlagExtended = "Combining stem with extended flag down";
    /// <summary>
    /// Combining stem with flared flag down.
    /// </summary>
    public const string MensuralCombStemDownFlagFlared = "Combining stem with flared flag down";
    /// <summary>
    /// Combining stem with fusa flag down.
    /// </summary>
    public const string MensuralCombStemDownFlagFusa = "Combining stem with fusa flag down";
    /// <summary>
    /// Combining stem with flag left down.
    /// </summary>
    public const string MensuralCombStemDownFlagLeft = "Combining stem with flag left down";
    /// <summary>
    /// Combining stem with flag right down.
    /// </summary>
    public const string MensuralCombStemDownFlagRight = "Combining stem with flag right down";
    /// <summary>
    /// Combining stem with semiminima flag down.
    /// </summary>
    public const string MensuralCombStemDownFlagSemiminima = "Combining stem with semiminima flag down";
    /// <summary>
    /// Combining stem up.
    /// </summary>
    public const string MensuralCombStemUp = "Combining stem up";
    /// <summary>
    /// Combining stem with extended flag up.
    /// </summary>
    public const string MensuralCombStemUpFlagExtended = "Combining stem with extended flag up";
    /// <summary>
    /// Combining stem with flared flag up.
    /// </summary>
    public const string MensuralCombStemUpFlagFlared = "Combining stem with flared flag up";
    /// <summary>
    /// Combining stem with fusa flag up.
    /// </summary>
    public const string MensuralCombStemUpFlagFusa = "Combining stem with fusa flag up";
    /// <summary>
    /// Combining stem with flag left up.
    /// </summary>
    public const string MensuralCombStemUpFlagLeft = "Combining stem with flag left up";
    /// <summary>
    /// Combining stem with flag right up.
    /// </summary>
    public const string MensuralCombStemUpFlagRight = "Combining stem with flag right up";
    /// <summary>
    /// Combining stem with semiminima flag up.
    /// </summary>
    public const string MensuralCombStemUpFlagSemiminima = "Combining stem with semiminima flag up";
    /// <summary>
    /// Checkmark custos.
    /// </summary>
    public const string MensuralCustosCheckmark = "Checkmark custos";
    /// <summary>
    /// Mensural custos down.
    /// </summary>
    public const string MensuralCustosDown = "Mensural custos down";
    /// <summary>
    /// Turn-like custos.
    /// </summary>
    public const string MensuralCustosTurn = "Turn-like custos";
    /// <summary>
    /// Mensural custos up.
    /// </summary>
    public const string MensuralCustosUp = "Mensural custos up";
    /// <summary>
    /// Mensural F clef.
    /// </summary>
    public const string MensuralFclef = "Mensural F clef";
    /// <summary>
    /// Petrucci F clef.
    /// </summary>
    public const string MensuralFclefPetrucci = "Petrucci F clef";
    /// <summary>
    /// Mensural G clef.
    /// </summary>
    public const string MensuralGclef = "Mensural G clef";
    /// <summary>
    /// Petrucci G clef.
    /// </summary>
    public const string MensuralGclefPetrucci = "Petrucci G clef";
    /// <summary>
    /// Modus imperfectum, vertical.
    /// </summary>
    public const string MensuralModusImperfectumVert = "Modus imperfectum, vertical";
    /// <summary>
    /// Modus perfectum, vertical.
    /// </summary>
    public const string MensuralModusPerfectumVert = "Modus perfectum, vertical";
    /// <summary>
    /// Longa/brevis notehead, black.
    /// </summary>
    public const string MensuralNoteheadLongaBlack = "Longa/brevis notehead, black";
    /// <summary>
    /// Longa/brevis notehead, black and void.
    /// </summary>
    public const string MensuralNoteheadLongaBlackVoid = "Longa/brevis notehead, black and void";
    /// <summary>
    /// Longa/brevis notehead, void.
    /// </summary>
    public const string MensuralNoteheadLongaVoid = "Longa/brevis notehead, void";
    /// <summary>
    /// Longa/brevis notehead, white.
    /// </summary>
    public const string MensuralNoteheadLongaWhite = "Longa/brevis notehead, white";
    /// <summary>
    /// Maxima notehead, black.
    /// </summary>
    public const string MensuralNoteheadMaximaBlack = "Maxima notehead, black";
    /// <summary>
    /// Maxima notehead, black and void.
    /// </summary>
    public const string MensuralNoteheadMaximaBlackVoid = "Maxima notehead, black and void";
    /// <summary>
    /// Maxima notehead, void.
    /// </summary>
    public const string MensuralNoteheadMaximaVoid = "Maxima notehead, void";
    /// <summary>
    /// Maxima notehead, white.
    /// </summary>
    public const string MensuralNoteheadMaximaWhite = "Maxima notehead, white";
    /// <summary>
    /// Minima notehead, white.
    /// </summary>
    public const string MensuralNoteheadMinimaWhite = "Minima notehead, white";
    /// <summary>
    /// Semibrevis notehead, black.
    /// </summary>
    public const string MensuralNoteheadSemibrevisBlack = "Semibrevis notehead, black";
    /// <summary>
    /// Semibrevis notehead, black and void.
    /// </summary>
    public const string MensuralNoteheadSemibrevisBlackVoid = "Semibrevis notehead, black and void";
    /// <summary>
    /// Semibrevis notehead, black and void (turned).
    /// </summary>
    public const string MensuralNoteheadSemibrevisBlackVoidTurned = "Semibrevis notehead, black and void (turned)";
    /// <summary>
    /// Semibrevis notehead, void.
    /// </summary>
    public const string MensuralNoteheadSemibrevisVoid = "Semibrevis notehead, void";
    /// <summary>
    /// Semiminima/fusa notehead, white.
    /// </summary>
    public const string MensuralNoteheadSemiminimaWhite = "Semiminima/fusa notehead, white";
    /// <summary>
    /// Oblique form, ascending 2nd, black.
    /// </summary>
    public const string MensuralObliqueAsc2ndBlack = "Oblique form, ascending 2nd, black";
    /// <summary>
    /// Oblique form, ascending 2nd, black and void.
    /// </summary>
    public const string MensuralObliqueAsc2ndBlackVoid = "Oblique form, ascending 2nd, black and void";
    /// <summary>
    /// Oblique form, ascending 2nd, void.
    /// </summary>
    public const string MensuralObliqueAsc2ndVoid = "Oblique form, ascending 2nd, void";
    /// <summary>
    /// Oblique form, ascending 2nd, white.
    /// </summary>
    public const string MensuralObliqueAsc2ndWhite = "Oblique form, ascending 2nd, white";
    /// <summary>
    /// Oblique form, ascending 3rd, black.
    /// </summary>
    public const string MensuralObliqueAsc3rdBlack = "Oblique form, ascending 3rd, black";
    /// <summary>
    /// Oblique form, ascending 3rd, black and void.
    /// </summary>
    public const string MensuralObliqueAsc3rdBlackVoid = "Oblique form, ascending 3rd, black and void";
    /// <summary>
    /// Oblique form, ascending 3rd, void.
    /// </summary>
    public const string MensuralObliqueAsc3rdVoid = "Oblique form, ascending 3rd, void";
    /// <summary>
    /// Oblique form, ascending 3rd, white.
    /// </summary>
    public const string MensuralObliqueAsc3rdWhite = "Oblique form, ascending 3rd, white";
    /// <summary>
    /// Oblique form, ascending 4th, black.
    /// </summary>
    public const string MensuralObliqueAsc4thBlack = "Oblique form, ascending 4th, black";
    /// <summary>
    /// Oblique form, ascending 4th, black and void.
    /// </summary>
    public const string MensuralObliqueAsc4thBlackVoid = "Oblique form, ascending 4th, black and void";
    /// <summary>
    /// Oblique form, ascending 4th, void.
    /// </summary>
    public const string MensuralObliqueAsc4thVoid = "Oblique form, ascending 4th, void";
    /// <summary>
    /// Oblique form, ascending 4th, white.
    /// </summary>
    public const string MensuralObliqueAsc4thWhite = "Oblique form, ascending 4th, white";
    /// <summary>
    /// Oblique form, ascending 5th, black.
    /// </summary>
    public const string MensuralObliqueAsc5thBlack = "Oblique form, ascending 5th, black";
    /// <summary>
    /// Oblique form, ascending 5th, black and void.
    /// </summary>
    public const string MensuralObliqueAsc5thBlackVoid = "Oblique form, ascending 5th, black and void";
    /// <summary>
    /// Oblique form, ascending 5th, void.
    /// </summary>
    public const string MensuralObliqueAsc5thVoid = "Oblique form, ascending 5th, void";
    /// <summary>
    /// Oblique form, ascending 5th, white.
    /// </summary>
    public const string MensuralObliqueAsc5thWhite = "Oblique form, ascending 5th, white";
    /// <summary>
    /// Oblique form, descending 2nd, black.
    /// </summary>
    public const string MensuralObliqueDesc2ndBlack = "Oblique form, descending 2nd, black";
    /// <summary>
    /// Oblique form, descending 2nd, black and void.
    /// </summary>
    public const string MensuralObliqueDesc2ndBlackVoid = "Oblique form, descending 2nd, black and void";
    /// <summary>
    /// Oblique form, descending 2nd, void.
    /// </summary>
    public const string MensuralObliqueDesc2ndVoid = "Oblique form, descending 2nd, void";
    /// <summary>
    /// Oblique form, descending 2nd, white.
    /// </summary>
    public const string MensuralObliqueDesc2ndWhite = "Oblique form, descending 2nd, white";
    /// <summary>
    /// Oblique form, descending 3rd, black.
    /// </summary>
    public const string MensuralObliqueDesc3rdBlack = "Oblique form, descending 3rd, black";
    /// <summary>
    /// Oblique form, descending 3rd, black and void.
    /// </summary>
    public const string MensuralObliqueDesc3rdBlackVoid = "Oblique form, descending 3rd, black and void";
    /// <summary>
    /// Oblique form, descending 3rd, void.
    /// </summary>
    public const string MensuralObliqueDesc3rdVoid = "Oblique form, descending 3rd, void";
    /// <summary>
    /// Oblique form, descending 3rd, white.
    /// </summary>
    public const string MensuralObliqueDesc3rdWhite = "Oblique form, descending 3rd, white";
    /// <summary>
    /// Oblique form, descending 4th, black.
    /// </summary>
    public const string MensuralObliqueDesc4thBlack = "Oblique form, descending 4th, black";
    /// <summary>
    /// Oblique form, descending 4th, black and void.
    /// </summary>
    public const string MensuralObliqueDesc4thBlackVoid = "Oblique form, descending 4th, black and void";
    /// <summary>
    /// Oblique form, descending 4th, void.
    /// </summary>
    public const string MensuralObliqueDesc4thVoid = "Oblique form, descending 4th, void";
    /// <summary>
    /// Oblique form, descending 4th, white.
    /// </summary>
    public const string MensuralObliqueDesc4thWhite = "Oblique form, descending 4th, white";
    /// <summary>
    /// Oblique form, descending 5th, black.
    /// </summary>
    public const string MensuralObliqueDesc5thBlack = "Oblique form, descending 5th, black";
    /// <summary>
    /// Oblique form, descending 5th, black and void.
    /// </summary>
    public const string MensuralObliqueDesc5thBlackVoid = "Oblique form, descending 5th, black and void";
    /// <summary>
    /// Oblique form, descending 5th, void.
    /// </summary>
    public const string MensuralObliqueDesc5thVoid = "Oblique form, descending 5th, void";
    /// <summary>
    /// Oblique form, descending 5th, white.
    /// </summary>
    public const string MensuralObliqueDesc5thWhite = "Oblique form, descending 5th, white";
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta (9/8).
    /// </summary>
    public const string MensuralProlation1 = "Tempus perfectum cum prolatione perfecta (9/8)";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 4.
    /// </summary>
    public const string MensuralProlation10 = "Tempus imperfectum cum prolatione imperfecta diminution 4";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 5.
    /// </summary>
    public const string MensuralProlation11 = "Tempus imperfectum cum prolatione imperfecta diminution 5";
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta (3/4).
    /// </summary>
    public const string MensuralProlation2 = "Tempus perfectum cum prolatione imperfecta (3/4)";
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta diminution 1 (3/8).
    /// </summary>
    public const string MensuralProlation3 = "Tempus perfectum cum prolatione imperfecta diminution 1 (3/8)";
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta diminution 2 (9/16).
    /// </summary>
    public const string MensuralProlation4 = "Tempus perfectum cum prolatione perfecta diminution 2 (9/16)";
    /// <summary>
    /// Tempus imperfectum cum prolatione perfecta (6/8).
    /// </summary>
    public const string MensuralProlation5 = "Tempus imperfectum cum prolatione perfecta (6/8)";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta (2/4).
    /// </summary>
    public const string MensuralProlation6 = "Tempus imperfectum cum prolatione imperfecta (2/4)";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2).
    /// </summary>
    public const string MensuralProlation7 = "Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2)";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 2 (6/16).
    /// </summary>
    public const string MensuralProlation8 = "Tempus imperfectum cum prolatione imperfecta diminution 2 (6/16)";
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2).
    /// </summary>
    public const string MensuralProlation9 = "Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2)";
    /// <summary>
    /// Combining dot.
    /// </summary>
    public const string MensuralProlationCombiningDot = "Combining dot";
    /// <summary>
    /// Combining void dot.
    /// </summary>
    public const string MensuralProlationCombiningDotVoid = "Combining void dot";
    /// <summary>
    /// Combining vertical stroke.
    /// </summary>
    public const string MensuralProlationCombiningStroke = "Combining vertical stroke";
    /// <summary>
    /// Combining three dots horizontal.
    /// </summary>
    public const string MensuralProlationCombiningThreeDots = "Combining three dots horizontal";
    /// <summary>
    /// Combining three dots triangular.
    /// </summary>
    public const string MensuralProlationCombiningThreeDotsTri = "Combining three dots triangular";
    /// <summary>
    /// Combining two dots.
    /// </summary>
    public const string MensuralProlationCombiningTwoDots = "Combining two dots";
    /// <summary>
    /// Mensural proportion 1.
    /// </summary>
    public const string MensuralProportion1 = "Mensural proportion 1";
    /// <summary>
    /// Mensural proportion 2.
    /// </summary>
    public const string MensuralProportion2 = "Mensural proportion 2";
    /// <summary>
    /// Mensural proportion 3.
    /// </summary>
    public const string MensuralProportion3 = "Mensural proportion 3";
    /// <summary>
    /// Mensural proportion 4.
    /// </summary>
    public const string MensuralProportion4 = "Mensural proportion 4";
    /// <summary>
    /// Mensural proportion 5.
    /// </summary>
    public const string MensuralProportion5 = "Mensural proportion 5";
    /// <summary>
    /// Mensural proportion 6.
    /// </summary>
    public const string MensuralProportion6 = "Mensural proportion 6";
    /// <summary>
    /// Mensural proportion 7.
    /// </summary>
    public const string MensuralProportion7 = "Mensural proportion 7";
    /// <summary>
    /// Mensural proportion 8.
    /// </summary>
    public const string MensuralProportion8 = "Mensural proportion 8";
    /// <summary>
    /// Mensural proportion 9.
    /// </summary>
    public const string MensuralProportion9 = "Mensural proportion 9";
    /// <summary>
    /// Mensural proportion major.
    /// </summary>
    public const string MensuralProportionMajor = "Mensural proportion major";
    /// <summary>
    /// Mensural proportion minor.
    /// </summary>
    public const string MensuralProportionMinor = "Mensural proportion minor";
    /// <summary>
    /// Proportio dupla 1.
    /// </summary>
    public const string MensuralProportionProportioDupla1 = "Proportio dupla 1";
    /// <summary>
    /// Proportio dupla 2.
    /// </summary>
    public const string MensuralProportionProportioDupla2 = "Proportio dupla 2";
    /// <summary>
    /// Proportio quadrupla.
    /// </summary>
    public const string MensuralProportionProportioQuadrupla = "Proportio quadrupla";
    /// <summary>
    /// Proportio tripla.
    /// </summary>
    public const string MensuralProportionProportioTripla = "Proportio tripla";
    /// <summary>
    /// Tempus perfectum.
    /// </summary>
    public const string MensuralProportionTempusPerfectum = "Tempus perfectum";
    /// <summary>
    /// Brevis rest.
    /// </summary>
    public const string MensuralRestBrevis = "Brevis rest";
    /// <summary>
    /// Fusa rest.
    /// </summary>
    public const string MensuralRestFusa = "Fusa rest";
    /// <summary>
    /// Longa imperfecta rest.
    /// </summary>
    public const string MensuralRestLongaImperfecta = "Longa imperfecta rest";
    /// <summary>
    /// Longa perfecta rest.
    /// </summary>
    public const string MensuralRestLongaPerfecta = "Longa perfecta rest";
    /// <summary>
    /// Maxima rest.
    /// </summary>
    public const string MensuralRestMaxima = "Maxima rest";
    /// <summary>
    /// Minima rest.
    /// </summary>
    public const string MensuralRestMinima = "Minima rest";
    /// <summary>
    /// Semibrevis rest.
    /// </summary>
    public const string MensuralRestSemibrevis = "Semibrevis rest";
    /// <summary>
    /// Semifusa rest.
    /// </summary>
    public const string MensuralRestSemifusa = "Semifusa rest";
    /// <summary>
    /// Semiminima rest.
    /// </summary>
    public const string MensuralRestSemiminima = "Semiminima rest";
    /// <summary>
    /// Signum congruentiae down.
    /// </summary>
    public const string MensuralSignumDown = "Signum congruentiae down";
    /// <summary>
    /// Signum congruentiae up.
    /// </summary>
    public const string MensuralSignumUp = "Signum congruentiae up";
    /// <summary>
    /// Tempus imperfectum, horizontal.
    /// </summary>
    public const string MensuralTempusImperfectumHoriz = "Tempus imperfectum, horizontal";
    /// <summary>
    /// Tempus perfectum, horizontal.
    /// </summary>
    public const string MensuralTempusPerfectumHoriz = "Tempus perfectum, horizontal";
    /// <summary>
    /// White mensural brevis.
    /// </summary>
    public const string MensuralWhiteBrevis = "White mensural brevis";
    /// <summary>
    /// White mensural fusa.
    /// </summary>
    public const string MensuralWhiteFusa = "White mensural fusa";
    /// <summary>
    /// White mensural longa.
    /// </summary>
    public const string MensuralWhiteLonga = "White mensural longa";
    /// <summary>
    /// White mensural maxima.
    /// </summary>
    public const string MensuralWhiteMaxima = "White mensural maxima";
    /// <summary>
    /// White mensural minima.
    /// </summary>
    public const string MensuralWhiteMinima = "White mensural minima";
    /// <summary>
    /// White mensural semibrevis.
    /// </summary>
    public const string MensuralWhiteSemibrevis = "White mensural semibrevis";
    /// <summary>
    /// White mensural semiminima.
    /// </summary>
    public const string MensuralWhiteSemiminima = "White mensural semiminima";
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const string MetAugmentationDot = "Augmentation dot";
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote1024thDown = "1024th note (semihemidemisemihemidemisemiquaver) stem down";
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote1024thUp = "1024th note (semihemidemisemihemidemisemiquaver) stem up";
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote128thDown = "128th note (semihemidemisemiquaver) stem down";
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote128thUp = "128th note (semihemidemisemiquaver) stem up";
    /// <summary>
    /// 16th note (semiquaver) stem down.
    /// </summary>
    public const string MetNote16thDown = "16th note (semiquaver) stem down";
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    public const string MetNote16thUp = "16th note (semiquaver) stem up";
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote256thDown = "256th note (demisemihemidemisemiquaver) stem down";
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote256thUp = "256th note (demisemihemidemisemiquaver) stem up";
    /// <summary>
    /// 32nd note (demisemiquaver) stem down.
    /// </summary>
    public const string MetNote32ndDown = "32nd note (demisemiquaver) stem down";
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    public const string MetNote32ndUp = "32nd note (demisemiquaver) stem up";
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote512thDown = "512th note (hemidemisemihemidemisemiquaver) stem down";
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote512thUp = "512th note (hemidemisemihemidemisemiquaver) stem up";
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem down.
    /// </summary>
    public const string MetNote64thDown = "64th note (hemidemisemiquaver) stem down";
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    public const string MetNote64thUp = "64th note (hemidemisemiquaver) stem up";
    /// <summary>
    /// Eighth note (quaver) stem down.
    /// </summary>
    public const string MetNote8thDown = "Eighth note (quaver) stem down";
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    public const string MetNote8thUp = "Eighth note (quaver) stem up";
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    public const string MetNoteDoubleWhole = "Double whole note (breve)";
    /// <summary>
    /// Double whole note (square).
    /// </summary>
    public const string MetNoteDoubleWholeSquare = "Double whole note (square)";
    /// <summary>
    /// Half note (minim) stem down.
    /// </summary>
    public const string MetNoteHalfDown = "Half note (minim) stem down";
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    public const string MetNoteHalfUp = "Half note (minim) stem up";
    /// <summary>
    /// Quarter note (crotchet) stem down.
    /// </summary>
    public const string MetNoteQuarterDown = "Quarter note (crotchet) stem down";
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    public const string MetNoteQuarterUp = "Quarter note (crotchet) stem up";
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    public const string MetNoteWhole = "Whole note (semibreve)";
    /// <summary>
    /// Left-pointing arrow for metric modulation.
    /// </summary>
    public const string MetricModulationArrowLeft = "Left-pointing arrow for metric modulation";
    /// <summary>
    /// Right-pointing arrow for metric modulation.
    /// </summary>
    public const string MetricModulationArrowRight = "Right-pointing arrow for metric modulation";
    /// <summary>
    /// Do not copy.
    /// </summary>
    public const string MiscDoNotCopy = "Do not copy";
    /// <summary>
    /// Do not photocopy.
    /// </summary>
    public const string MiscDoNotPhotocopy = "Do not photocopy";
    /// <summary>
    /// Eyeglasses.
    /// </summary>
    public const string MiscEyeglasses = "Eyeglasses";
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string Note1024thDown = "1024th note (semihemidemisemihemidemisemiquaver) stem down";
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string Note1024thUp = "1024th note (semihemidemisemihemidemisemiquaver) stem up";
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem down.
    /// </summary>
    public const string Note128thDown = "128th note (semihemidemisemiquaver) stem down";
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    public const string Note128thUp = "128th note (semihemidemisemiquaver) stem up";
    /// <summary>
    /// 16th note (semiquaver) stem down.
    /// </summary>
    public const string Note16thDown = "16th note (semiquaver) stem down";
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    public const string Note16thUp = "16th note (semiquaver) stem up";
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string Note256thDown = "256th note (demisemihemidemisemiquaver) stem down";
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string Note256thUp = "256th note (demisemihemidemisemiquaver) stem up";
    /// <summary>
    /// 32nd note (demisemiquaver) stem down.
    /// </summary>
    public const string Note32ndDown = "32nd note (demisemiquaver) stem down";
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    public const string Note32ndUp = "32nd note (demisemiquaver) stem up";
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const string Note512thDown = "512th note (hemidemisemihemidemisemiquaver) stem down";
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const string Note512thUp = "512th note (hemidemisemihemidemisemiquaver) stem up";
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem down.
    /// </summary>
    public const string Note64thDown = "64th note (hemidemisemiquaver) stem down";
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    public const string Note64thUp = "64th note (hemidemisemiquaver) stem up";
    /// <summary>
    /// Eighth note (quaver) stem down.
    /// </summary>
    public const string Note8thDown = "Eighth note (quaver) stem down";
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    public const string Note8thUp = "Eighth note (quaver) stem up";
    /// <summary>
    /// A (black note).
    /// </summary>
    public const string NoteABlack = "A (black note)";
    /// <summary>
    /// A flat (black note).
    /// </summary>
    public const string NoteAFlatBlack = "A flat (black note)";
    /// <summary>
    /// A flat (half note).
    /// </summary>
    public const string NoteAFlatHalf = "A flat (half note)";
    /// <summary>
    /// A flat (whole note).
    /// </summary>
    public const string NoteAFlatWhole = "A flat (whole note)";
    /// <summary>
    /// A (half note).
    /// </summary>
    public const string NoteAHalf = "A (half note)";
    /// <summary>
    /// A sharp (black note).
    /// </summary>
    public const string NoteASharpBlack = "A sharp (black note)";
    /// <summary>
    /// A sharp (half note).
    /// </summary>
    public const string NoteASharpHalf = "A sharp (half note)";
    /// <summary>
    /// A sharp (whole note).
    /// </summary>
    public const string NoteASharpWhole = "A sharp (whole note)";
    /// <summary>
    /// A (whole note).
    /// </summary>
    public const string NoteAWhole = "A (whole note)";
    /// <summary>
    /// B (black note).
    /// </summary>
    public const string NoteBBlack = "B (black note)";
    /// <summary>
    /// B flat (black note).
    /// </summary>
    public const string NoteBFlatBlack = "B flat (black note)";
    /// <summary>
    /// B flat (half note).
    /// </summary>
    public const string NoteBFlatHalf = "B flat (half note)";
    /// <summary>
    /// B flat (whole note).
    /// </summary>
    public const string NoteBFlatWhole = "B flat (whole note)";
    /// <summary>
    /// B (half note).
    /// </summary>
    public const string NoteBHalf = "B (half note)";
    /// <summary>
    /// B sharp (black note).
    /// </summary>
    public const string NoteBSharpBlack = "B sharp (black note)";
    /// <summary>
    /// B sharp (half note).
    /// </summary>
    public const string NoteBSharpHalf = "B sharp (half note)";
    /// <summary>
    /// B sharp (whole note).
    /// </summary>
    public const string NoteBSharpWhole = "B sharp (whole note)";
    /// <summary>
    /// B (whole note).
    /// </summary>
    public const string NoteBWhole = "B (whole note)";
    /// <summary>
    /// C (black note).
    /// </summary>
    public const string NoteCBlack = "C (black note)";
    /// <summary>
    /// C flat (black note).
    /// </summary>
    public const string NoteCFlatBlack = "C flat (black note)";
    /// <summary>
    /// C flat (half note).
    /// </summary>
    public const string NoteCFlatHalf = "C flat (half note)";
    /// <summary>
    /// C flat (whole note).
    /// </summary>
    public const string NoteCFlatWhole = "C flat (whole note)";
    /// <summary>
    /// C (half note).
    /// </summary>
    public const string NoteCHalf = "C (half note)";
    /// <summary>
    /// C sharp (black note).
    /// </summary>
    public const string NoteCSharpBlack = "C sharp (black note)";
    /// <summary>
    /// C sharp (half note).
    /// </summary>
    public const string NoteCSharpHalf = "C sharp (half note)";
    /// <summary>
    /// C sharp (whole note).
    /// </summary>
    public const string NoteCSharpWhole = "C sharp (whole note)";
    /// <summary>
    /// C (whole note).
    /// </summary>
    public const string NoteCWhole = "C (whole note)";
    /// <summary>
    /// D (black note).
    /// </summary>
    public const string NoteDBlack = "D (black note)";
    /// <summary>
    /// D flat (black note).
    /// </summary>
    public const string NoteDFlatBlack = "D flat (black note)";
    /// <summary>
    /// D flat (half note).
    /// </summary>
    public const string NoteDFlatHalf = "D flat (half note)";
    /// <summary>
    /// D flat (whole note).
    /// </summary>
    public const string NoteDFlatWhole = "D flat (whole note)";
    /// <summary>
    /// D (half note).
    /// </summary>
    public const string NoteDHalf = "D (half note)";
    /// <summary>
    /// D sharp (black note).
    /// </summary>
    public const string NoteDSharpBlack = "D sharp (black note)";
    /// <summary>
    /// D sharp (half note).
    /// </summary>
    public const string NoteDSharpHalf = "D sharp (half note)";
    /// <summary>
    /// D sharp (whole note).
    /// </summary>
    public const string NoteDSharpWhole = "D sharp (whole note)";
    /// <summary>
    /// D (whole note).
    /// </summary>
    public const string NoteDWhole = "D (whole note)";
    /// <summary>
    /// Di (black note).
    /// </summary>
    public const string NoteDiBlack = "Di (black note)";
    /// <summary>
    /// Di (half note).
    /// </summary>
    public const string NoteDiHalf = "Di (half note)";
    /// <summary>
    /// Di (whole note).
    /// </summary>
    public const string NoteDiWhole = "Di (whole note)";
    /// <summary>
    /// Do (black note).
    /// </summary>
    public const string NoteDoBlack = "Do (black note)";
    /// <summary>
    /// Do (half note).
    /// </summary>
    public const string NoteDoHalf = "Do (half note)";
    /// <summary>
    /// Do (whole note).
    /// </summary>
    public const string NoteDoWhole = "Do (whole note)";
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    public const string NoteDoubleWhole = "Double whole note (breve)";
    /// <summary>
    /// Double whole note (square).
    /// </summary>
    public const string NoteDoubleWholeSquare = "Double whole note (square)";
    /// <summary>
    /// E (black note).
    /// </summary>
    public const string NoteEBlack = "E (black note)";
    /// <summary>
    /// E flat (black note).
    /// </summary>
    public const string NoteEFlatBlack = "E flat (black note)";
    /// <summary>
    /// E flat (half note).
    /// </summary>
    public const string NoteEFlatHalf = "E flat (half note)";
    /// <summary>
    /// E flat (whole note).
    /// </summary>
    public const string NoteEFlatWhole = "E flat (whole note)";
    /// <summary>
    /// E (half note).
    /// </summary>
    public const string NoteEHalf = "E (half note)";
    /// <summary>
    /// E sharp (black note).
    /// </summary>
    public const string NoteESharpBlack = "E sharp (black note)";
    /// <summary>
    /// E sharp (half note).
    /// </summary>
    public const string NoteESharpHalf = "E sharp (half note)";
    /// <summary>
    /// E sharp (whole note).
    /// </summary>
    public const string NoteESharpWhole = "E sharp (whole note)";
    /// <summary>
    /// E (whole note).
    /// </summary>
    public const string NoteEWhole = "E (whole note)";
    /// <summary>
    /// Empty black note.
    /// </summary>
    public const string NoteEmptyBlack = "Empty black note";
    /// <summary>
    /// Empty half note.
    /// </summary>
    public const string NoteEmptyHalf = "Empty half note";
    /// <summary>
    /// Empty whole note.
    /// </summary>
    public const string NoteEmptyWhole = "Empty whole note";
    /// <summary>
    /// F (black note).
    /// </summary>
    public const string NoteFBlack = "F (black note)";
    /// <summary>
    /// F flat (black note).
    /// </summary>
    public const string NoteFFlatBlack = "F flat (black note)";
    /// <summary>
    /// F flat (half note).
    /// </summary>
    public const string NoteFFlatHalf = "F flat (half note)";
    /// <summary>
    /// F flat (whole note).
    /// </summary>
    public const string NoteFFlatWhole = "F flat (whole note)";
    /// <summary>
    /// F (half note).
    /// </summary>
    public const string NoteFHalf = "F (half note)";
    /// <summary>
    /// F sharp (black note).
    /// </summary>
    public const string NoteFSharpBlack = "F sharp (black note)";
    /// <summary>
    /// F sharp (half note).
    /// </summary>
    public const string NoteFSharpHalf = "F sharp (half note)";
    /// <summary>
    /// F sharp (whole note).
    /// </summary>
    public const string NoteFSharpWhole = "F sharp (whole note)";
    /// <summary>
    /// F (whole note).
    /// </summary>
    public const string NoteFWhole = "F (whole note)";
    /// <summary>
    /// Fa (black note).
    /// </summary>
    public const string NoteFaBlack = "Fa (black note)";
    /// <summary>
    /// Fa (half note).
    /// </summary>
    public const string NoteFaHalf = "Fa (half note)";
    /// <summary>
    /// Fa (whole note).
    /// </summary>
    public const string NoteFaWhole = "Fa (whole note)";
    /// <summary>
    /// Fi (black note).
    /// </summary>
    public const string NoteFiBlack = "Fi (black note)";
    /// <summary>
    /// Fi (half note).
    /// </summary>
    public const string NoteFiHalf = "Fi (half note)";
    /// <summary>
    /// Fi (whole note).
    /// </summary>
    public const string NoteFiWhole = "Fi (whole note)";
    /// <summary>
    /// G (black note).
    /// </summary>
    public const string NoteGBlack = "G (black note)";
    /// <summary>
    /// G flat (black note).
    /// </summary>
    public const string NoteGFlatBlack = "G flat (black note)";
    /// <summary>
    /// G flat (half note).
    /// </summary>
    public const string NoteGFlatHalf = "G flat (half note)";
    /// <summary>
    /// G flat (whole note).
    /// </summary>
    public const string NoteGFlatWhole = "G flat (whole note)";
    /// <summary>
    /// G (half note).
    /// </summary>
    public const string NoteGHalf = "G (half note)";
    /// <summary>
    /// G sharp (black note).
    /// </summary>
    public const string NoteGSharpBlack = "G sharp (black note)";
    /// <summary>
    /// G sharp (half note).
    /// </summary>
    public const string NoteGSharpHalf = "G sharp (half note)";
    /// <summary>
    /// G sharp (whole note).
    /// </summary>
    public const string NoteGSharpWhole = "G sharp (whole note)";
    /// <summary>
    /// G (whole note).
    /// </summary>
    public const string NoteGWhole = "G (whole note)";
    /// <summary>
    /// H (black note).
    /// </summary>
    public const string NoteHBlack = "H (black note)";
    /// <summary>
    /// H (half note).
    /// </summary>
    public const string NoteHHalf = "H (half note)";
    /// <summary>
    /// H sharp (black note).
    /// </summary>
    public const string NoteHSharpBlack = "H sharp (black note)";
    /// <summary>
    /// H sharp (half note).
    /// </summary>
    public const string NoteHSharpHalf = "H sharp (half note)";
    /// <summary>
    /// H sharp (whole note).
    /// </summary>
    public const string NoteHSharpWhole = "H sharp (whole note)";
    /// <summary>
    /// H (whole note).
    /// </summary>
    public const string NoteHWhole = "H (whole note)";
    /// <summary>
    /// Half note (minim) stem down.
    /// </summary>
    public const string NoteHalfDown = "Half note (minim) stem down";
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    public const string NoteHalfUp = "Half note (minim) stem up";
    /// <summary>
    /// La (black note).
    /// </summary>
    public const string NoteLaBlack = "La (black note)";
    /// <summary>
    /// La (half note).
    /// </summary>
    public const string NoteLaHalf = "La (half note)";
    /// <summary>
    /// La (whole note).
    /// </summary>
    public const string NoteLaWhole = "La (whole note)";
    /// <summary>
    /// Le (black note).
    /// </summary>
    public const string NoteLeBlack = "Le (black note)";
    /// <summary>
    /// Le (half note).
    /// </summary>
    public const string NoteLeHalf = "Le (half note)";
    /// <summary>
    /// Le (whole note).
    /// </summary>
    public const string NoteLeWhole = "Le (whole note)";
    /// <summary>
    /// Li (black note).
    /// </summary>
    public const string NoteLiBlack = "Li (black note)";
    /// <summary>
    /// Li (half note).
    /// </summary>
    public const string NoteLiHalf = "Li (half note)";
    /// <summary>
    /// Li (whole note).
    /// </summary>
    public const string NoteLiWhole = "Li (whole note)";
    /// <summary>
    /// Me (black note).
    /// </summary>
    public const string NoteMeBlack = "Me (black note)";
    /// <summary>
    /// Me (half note).
    /// </summary>
    public const string NoteMeHalf = "Me (half note)";
    /// <summary>
    /// Me (whole note).
    /// </summary>
    public const string NoteMeWhole = "Me (whole note)";
    /// <summary>
    /// Mi (black note).
    /// </summary>
    public const string NoteMiBlack = "Mi (black note)";
    /// <summary>
    /// Mi (half note).
    /// </summary>
    public const string NoteMiHalf = "Mi (half note)";
    /// <summary>
    /// Mi (whole note).
    /// </summary>
    public const string NoteMiWhole = "Mi (whole note)";
    /// <summary>
    /// Quarter note (crotchet) stem down.
    /// </summary>
    public const string NoteQuarterDown = "Quarter note (crotchet) stem down";
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    public const string NoteQuarterUp = "Quarter note (crotchet) stem up";
    /// <summary>
    /// Ra (black note).
    /// </summary>
    public const string NoteRaBlack = "Ra (black note)";
    /// <summary>
    /// Ra (half note).
    /// </summary>
    public const string NoteRaHalf = "Ra (half note)";
    /// <summary>
    /// Ra (whole note).
    /// </summary>
    public const string NoteRaWhole = "Ra (whole note)";
    /// <summary>
    /// Re (black note).
    /// </summary>
    public const string NoteReBlack = "Re (black note)";
    /// <summary>
    /// Re (half note).
    /// </summary>
    public const string NoteReHalf = "Re (half note)";
    /// <summary>
    /// Re (whole note).
    /// </summary>
    public const string NoteReWhole = "Re (whole note)";
    /// <summary>
    /// Ri (black note).
    /// </summary>
    public const string NoteRiBlack = "Ri (black note)";
    /// <summary>
    /// Ri (half note).
    /// </summary>
    public const string NoteRiHalf = "Ri (half note)";
    /// <summary>
    /// Ri (whole note).
    /// </summary>
    public const string NoteRiWhole = "Ri (whole note)";
    /// <summary>
    /// Se (black note).
    /// </summary>
    public const string NoteSeBlack = "Se (black note)";
    /// <summary>
    /// Se (half note).
    /// </summary>
    public const string NoteSeHalf = "Se (half note)";
    /// <summary>
    /// Se (whole note).
    /// </summary>
    public const string NoteSeWhole = "Se (whole note)";
    /// <summary>
    /// Arrowhead left black (Funk 7-shape re).
    /// </summary>
    public const string NoteShapeArrowheadLeftBlack = "Arrowhead left black (Funk 7-shape re)";
    /// <summary>
    /// Arrowhead left double whole (Funk 7-shape re).
    /// </summary>
    public const string NoteShapeArrowheadLeftDoubleWhole = "Arrowhead left double whole (Funk 7-shape re)";
    /// <summary>
    /// Arrowhead left white (Funk 7-shape re).
    /// </summary>
    public const string NoteShapeArrowheadLeftWhite = "Arrowhead left white (Funk 7-shape re)";
    /// <summary>
    /// Diamond black (4-shape mi; 7-shape mi).
    /// </summary>
    public const string NoteShapeDiamondBlack = "Diamond black (4-shape mi; 7-shape mi)";
    /// <summary>
    /// Diamond double whole (4-shape mi; 7-shape mi).
    /// </summary>
    public const string NoteShapeDiamondDoubleWhole = "Diamond double whole (4-shape mi; 7-shape mi)";
    /// <summary>
    /// Diamond white (4-shape mi; 7-shape mi).
    /// </summary>
    public const string NoteShapeDiamondWhite = "Diamond white (4-shape mi; 7-shape mi)";
    /// <summary>
    /// Isosceles triangle black (Walker 7-shape ti).
    /// </summary>
    public const string NoteShapeIsoscelesTriangleBlack = "Isosceles triangle black (Walker 7-shape ti)";
    /// <summary>
    /// Isosceles triangle double whole (Walker 7-shape ti).
    /// </summary>
    public const string NoteShapeIsoscelesTriangleDoubleWhole = "Isosceles triangle double whole (Walker 7-shape ti)";
    /// <summary>
    /// Isosceles triangle white (Walker 7-shape ti).
    /// </summary>
    public const string NoteShapeIsoscelesTriangleWhite = "Isosceles triangle white (Walker 7-shape ti)";
    /// <summary>
    /// Inverted keystone black (Walker 7-shape do).
    /// </summary>
    public const string NoteShapeKeystoneBlack = "Inverted keystone black (Walker 7-shape do)";
    /// <summary>
    /// Inverted keystone double whole (Walker 7-shape do).
    /// </summary>
    public const string NoteShapeKeystoneDoubleWhole = "Inverted keystone double whole (Walker 7-shape do)";
    /// <summary>
    /// Inverted keystone white (Walker 7-shape do).
    /// </summary>
    public const string NoteShapeKeystoneWhite = "Inverted keystone white (Walker 7-shape do)";
    /// <summary>
    /// Moon black (Aikin 7-shape re).
    /// </summary>
    public const string NoteShapeMoonBlack = "Moon black (Aikin 7-shape re)";
    /// <summary>
    /// Moon double whole (Aikin 7-shape re).
    /// </summary>
    public const string NoteShapeMoonDoubleWhole = "Moon double whole (Aikin 7-shape re)";
    /// <summary>
    /// Moon left black (Funk 7-shape do).
    /// </summary>
    public const string NoteShapeMoonLeftBlack = "Moon left black (Funk 7-shape do)";
    /// <summary>
    /// Moon left double whole (Funk 7-shape do).
    /// </summary>
    public const string NoteShapeMoonLeftDoubleWhole = "Moon left double whole (Funk 7-shape do)";
    /// <summary>
    /// Moon left white (Funk 7-shape do).
    /// </summary>
    public const string NoteShapeMoonLeftWhite = "Moon left white (Funk 7-shape do)";
    /// <summary>
    /// Moon white (Aikin 7-shape re).
    /// </summary>
    public const string NoteShapeMoonWhite = "Moon white (Aikin 7-shape re)";
    /// <summary>
    /// Quarter moon black (Walker 7-shape re).
    /// </summary>
    public const string NoteShapeQuarterMoonBlack = "Quarter moon black (Walker 7-shape re)";
    /// <summary>
    /// Quarter moon double whole (Walker 7-shape re).
    /// </summary>
    public const string NoteShapeQuarterMoonDoubleWhole = "Quarter moon double whole (Walker 7-shape re)";
    /// <summary>
    /// Quarter moon white (Walker 7-shape re).
    /// </summary>
    public const string NoteShapeQuarterMoonWhite = "Quarter moon white (Walker 7-shape re)";
    /// <summary>
    /// Round black (4-shape sol; 7-shape so).
    /// </summary>
    public const string NoteShapeRoundBlack = "Round black (4-shape sol; 7-shape so)";
    /// <summary>
    /// Round double whole (4-shape sol; 7-shape so).
    /// </summary>
    public const string NoteShapeRoundDoubleWhole = "Round double whole (4-shape sol; 7-shape so)";
    /// <summary>
    /// Round white (4-shape sol; 7-shape so).
    /// </summary>
    public const string NoteShapeRoundWhite = "Round white (4-shape sol; 7-shape so)";
    /// <summary>
    /// Square black (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const string NoteShapeSquareBlack = "Square black (4-shape la; Aikin 7-shape la)";
    /// <summary>
    /// Square double whole (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const string NoteShapeSquareDoubleWhole = "Square double whole (4-shape la; Aikin 7-shape la)";
    /// <summary>
    /// Square white (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const string NoteShapeSquareWhite = "Square white (4-shape la; Aikin 7-shape la)";
    /// <summary>
    /// Triangle left black (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleLeftBlack = "Triangle left black (stem up; 4-shape fa; 7-shape fa)";
    /// <summary>
    /// Triangle left double whole (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleLeftDoubleWhole = "Triangle left double whole (stem up; 4-shape fa; 7-shape fa)";
    /// <summary>
    /// Triangle left white (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleLeftWhite = "Triangle left white (stem up; 4-shape fa; 7-shape fa)";
    /// <summary>
    /// Triangle right black (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleRightBlack = "Triangle right black (stem down; 4-shape fa; 7-shape fa)";
    /// <summary>
    /// Triangle right double whole (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleRightDoubleWhole = "Triangle right double whole (stem down; 4-shape fa; 7-shape fa)";
    /// <summary>
    /// Triangle right white (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const string NoteShapeTriangleRightWhite = "Triangle right white (stem down; 4-shape fa; 7-shape fa)";
    /// <summary>
    /// Triangle-round black (Aikin 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundBlack = "Triangle-round black (Aikin 7-shape ti)";
    /// <summary>
    /// Triangle-round white (Aikin 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundDoubleWhole = "Triangle-round white (Aikin 7-shape ti)";
    /// <summary>
    /// Triangle-round left black (Funk 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundLeftBlack = "Triangle-round left black (Funk 7-shape ti)";
    /// <summary>
    /// Triangle-round left double whole (Funk 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundLeftDoubleWhole = "Triangle-round left double whole (Funk 7-shape ti)";
    /// <summary>
    /// Triangle-round left white (Funk 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundLeftWhite = "Triangle-round left white (Funk 7-shape ti)";
    /// <summary>
    /// Triangle-round white (Aikin 7-shape ti).
    /// </summary>
    public const string NoteShapeTriangleRoundWhite = "Triangle-round white (Aikin 7-shape ti)";
    /// <summary>
    /// Triangle up black (Aikin 7-shape do).
    /// </summary>
    public const string NoteShapeTriangleUpBlack = "Triangle up black (Aikin 7-shape do)";
    /// <summary>
    /// Triangle up double whole (Aikin 7-shape do).
    /// </summary>
    public const string NoteShapeTriangleUpDoubleWhole = "Triangle up double whole (Aikin 7-shape do)";
    /// <summary>
    /// Triangle up white (Aikin 7-shape do).
    /// </summary>
    public const string NoteShapeTriangleUpWhite = "Triangle up white (Aikin 7-shape do)";
    /// <summary>
    /// Si (black note).
    /// </summary>
    public const string NoteSiBlack = "Si (black note)";
    /// <summary>
    /// Si (half note).
    /// </summary>
    public const string NoteSiHalf = "Si (half note)";
    /// <summary>
    /// Si (whole note).
    /// </summary>
    public const string NoteSiWhole = "Si (whole note)";
    /// <summary>
    /// So (black note).
    /// </summary>
    public const string NoteSoBlack = "So (black note)";
    /// <summary>
    /// So (half note).
    /// </summary>
    public const string NoteSoHalf = "So (half note)";
    /// <summary>
    /// So (whole note).
    /// </summary>
    public const string NoteSoWhole = "So (whole note)";
    /// <summary>
    /// Te (black note).
    /// </summary>
    public const string NoteTeBlack = "Te (black note)";
    /// <summary>
    /// Te (half note).
    /// </summary>
    public const string NoteTeHalf = "Te (half note)";
    /// <summary>
    /// Te (whole note).
    /// </summary>
    public const string NoteTeWhole = "Te (whole note)";
    /// <summary>
    /// Ti (black note).
    /// </summary>
    public const string NoteTiBlack = "Ti (black note)";
    /// <summary>
    /// Ti (half note).
    /// </summary>
    public const string NoteTiHalf = "Ti (half note)";
    /// <summary>
    /// Ti (whole note).
    /// </summary>
    public const string NoteTiWhole = "Ti (whole note)";
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    public const string NoteWhole = "Whole note (semibreve)";
    /// <summary>
    /// Black notehead.
    /// </summary>
    public const string NoteheadBlack = "Black notehead";
    /// <summary>
    /// Circle slash notehead.
    /// </summary>
    public const string NoteheadCircleSlash = "Circle slash notehead";
    /// <summary>
    /// Circle X notehead.
    /// </summary>
    public const string NoteheadCircleX = "Circle X notehead";
    /// <summary>
    /// Circle X double whole.
    /// </summary>
    public const string NoteheadCircleXDoubleWhole = "Circle X double whole";
    /// <summary>
    /// Circle X half.
    /// </summary>
    public const string NoteheadCircleXHalf = "Circle X half";
    /// <summary>
    /// Circle X whole.
    /// </summary>
    public const string NoteheadCircleXWhole = "Circle X whole";
    /// <summary>
    /// Circled black notehead.
    /// </summary>
    public const string NoteheadCircledBlack = "Circled black notehead";
    /// <summary>
    /// Black notehead in large circle.
    /// </summary>
    public const string NoteheadCircledBlackLarge = "Black notehead in large circle";
    /// <summary>
    /// Circled double whole notehead.
    /// </summary>
    public const string NoteheadCircledDoubleWhole = "Circled double whole notehead";
    /// <summary>
    /// Double whole notehead in large circle.
    /// </summary>
    public const string NoteheadCircledDoubleWholeLarge = "Double whole notehead in large circle";
    /// <summary>
    /// Circled half notehead.
    /// </summary>
    public const string NoteheadCircledHalf = "Circled half notehead";
    /// <summary>
    /// Half notehead in large circle.
    /// </summary>
    public const string NoteheadCircledHalfLarge = "Half notehead in large circle";
    /// <summary>
    /// Circled whole notehead.
    /// </summary>
    public const string NoteheadCircledWhole = "Circled whole notehead";
    /// <summary>
    /// Whole notehead in large circle.
    /// </summary>
    public const string NoteheadCircledWholeLarge = "Whole notehead in large circle";
    /// <summary>
    /// Cross notehead in large circle.
    /// </summary>
    public const string NoteheadCircledXLarge = "Cross notehead in large circle";
    /// <summary>
    /// Double whole note cluster, 2nd.
    /// </summary>
    public const string NoteheadClusterDoubleWhole2nd = "Double whole note cluster, 2nd";
    /// <summary>
    /// Double whole note cluster, 3rd.
    /// </summary>
    public const string NoteheadClusterDoubleWhole3rd = "Double whole note cluster, 3rd";
    /// <summary>
    /// Combining double whole note cluster, bottom.
    /// </summary>
    public const string NoteheadClusterDoubleWholeBottom = "Combining double whole note cluster, bottom";
    /// <summary>
    /// Combining double whole note cluster, middle.
    /// </summary>
    public const string NoteheadClusterDoubleWholeMiddle = "Combining double whole note cluster, middle";
    /// <summary>
    /// Combining double whole note cluster, top.
    /// </summary>
    public const string NoteheadClusterDoubleWholeTop = "Combining double whole note cluster, top";
    /// <summary>
    /// Half note cluster, 2nd.
    /// </summary>
    public const string NoteheadClusterHalf2nd = "Half note cluster, 2nd";
    /// <summary>
    /// Half note cluster, 3rd.
    /// </summary>
    public const string NoteheadClusterHalf3rd = "Half note cluster, 3rd";
    /// <summary>
    /// Combining half note cluster, bottom.
    /// </summary>
    public const string NoteheadClusterHalfBottom = "Combining half note cluster, bottom";
    /// <summary>
    /// Combining half note cluster, middle.
    /// </summary>
    public const string NoteheadClusterHalfMiddle = "Combining half note cluster, middle";
    /// <summary>
    /// Combining half note cluster, top.
    /// </summary>
    public const string NoteheadClusterHalfTop = "Combining half note cluster, top";
    /// <summary>
    /// Quarter note cluster, 2nd.
    /// </summary>
    public const string NoteheadClusterQuarter2nd = "Quarter note cluster, 2nd";
    /// <summary>
    /// Quarter note cluster, 3rd.
    /// </summary>
    public const string NoteheadClusterQuarter3rd = "Quarter note cluster, 3rd";
    /// <summary>
    /// Combining quarter note cluster, bottom.
    /// </summary>
    public const string NoteheadClusterQuarterBottom = "Combining quarter note cluster, bottom";
    /// <summary>
    /// Combining quarter note cluster, middle.
    /// </summary>
    public const string NoteheadClusterQuarterMiddle = "Combining quarter note cluster, middle";
    /// <summary>
    /// Combining quarter note cluster, top.
    /// </summary>
    public const string NoteheadClusterQuarterTop = "Combining quarter note cluster, top";
    /// <summary>
    /// Cluster notehead black (round).
    /// </summary>
    public const string NoteheadClusterRoundBlack = "Cluster notehead black (round)";
    /// <summary>
    /// Cluster notehead white (round).
    /// </summary>
    public const string NoteheadClusterRoundWhite = "Cluster notehead white (round)";
    /// <summary>
    /// Cluster notehead black (square).
    /// </summary>
    public const string NoteheadClusterSquareBlack = "Cluster notehead black (square)";
    /// <summary>
    /// Cluster notehead white (square).
    /// </summary>
    public const string NoteheadClusterSquareWhite = "Cluster notehead white (square)";
    /// <summary>
    /// Whole note cluster, 2nd.
    /// </summary>
    public const string NoteheadClusterWhole2nd = "Whole note cluster, 2nd";
    /// <summary>
    /// Whole note cluster, 3rd.
    /// </summary>
    public const string NoteheadClusterWhole3rd = "Whole note cluster, 3rd";
    /// <summary>
    /// Combining whole note cluster, bottom.
    /// </summary>
    public const string NoteheadClusterWholeBottom = "Combining whole note cluster, bottom";
    /// <summary>
    /// Combining whole note cluster, middle.
    /// </summary>
    public const string NoteheadClusterWholeMiddle = "Combining whole note cluster, middle";
    /// <summary>
    /// Combining whole note cluster, top.
    /// </summary>
    public const string NoteheadClusterWholeTop = "Combining whole note cluster, top";
    /// <summary>
    /// 4/11 note (eleventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellEleventhNoteSeriesHalf = "4/11 note (eleventh note series, Cowell)";
    /// <summary>
    /// 8/11 note (eleventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellEleventhNoteSeriesWhole = "8/11 note (eleventh note series, Cowell)";
    /// <summary>
    /// 2/11 note (eleventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellEleventhSeriesBlack = "2/11 note (eleventh note series, Cowell)";
    /// <summary>
    /// 2/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifteenthNoteSeriesBlack = "2/15 note (fifteenth note series, Cowell)";
    /// <summary>
    /// 4/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifteenthNoteSeriesHalf = "4/15 note (fifteenth note series, Cowell)";
    /// <summary>
    /// 8/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifteenthNoteSeriesWhole = "8/15 note (fifteenth note series, Cowell)";
    /// <summary>
    /// 1/5 note (fifth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifthNoteSeriesBlack = "1/5 note (fifth note series, Cowell)";
    /// <summary>
    /// 2/5 note (fifth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifthNoteSeriesHalf = "2/5 note (fifth note series, Cowell)";
    /// <summary>
    /// 4/5 note (fifth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellFifthNoteSeriesWhole = "4/5 note (fifth note series, Cowell)";
    /// <summary>
    /// 2/9 note (ninth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellNinthNoteSeriesBlack = "2/9 note (ninth note series, Cowell)";
    /// <summary>
    /// 4/9 note (ninth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellNinthNoteSeriesHalf = "4/9 note (ninth note series, Cowell)";
    /// <summary>
    /// 8/9 note (ninth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellNinthNoteSeriesWhole = "8/9 note (ninth note series, Cowell)";
    /// <summary>
    /// 1/7 note (seventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellSeventhNoteSeriesBlack = "1/7 note (seventh note series, Cowell)";
    /// <summary>
    /// 2/7 note (seventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellSeventhNoteSeriesHalf = "2/7 note (seventh note series, Cowell)";
    /// <summary>
    /// 4/7 note (seventh note series, Cowell).
    /// </summary>
    public const string NoteheadCowellSeventhNoteSeriesWhole = "4/7 note (seventh note series, Cowell)";
    /// <summary>
    /// 1/6 note (third note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirdNoteSeriesBlack = "1/6 note (third note series, Cowell)";
    /// <summary>
    /// 1/3 note (third note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirdNoteSeriesHalf = "1/3 note (third note series, Cowell)";
    /// <summary>
    /// 2/3 note (third note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirdNoteSeriesWhole = "2/3 note (third note series, Cowell)";
    /// <summary>
    /// 2/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirteenthNoteSeriesBlack = "2/13 note (thirteenth note series, Cowell)";
    /// <summary>
    /// 4/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirteenthNoteSeriesHalf = "4/13 note (thirteenth note series, Cowell)";
    /// <summary>
    /// 8/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const string NoteheadCowellThirteenthNoteSeriesWhole = "8/13 note (thirteenth note series, Cowell)";
    /// <summary>
    /// Diamond black notehead.
    /// </summary>
    public const string NoteheadDiamondBlack = "Diamond black notehead";
    /// <summary>
    /// Diamond black notehead (old).
    /// </summary>
    public const string NoteheadDiamondBlackOld = "Diamond black notehead (old)";
    /// <summary>
    /// Diamond black notehead (wide).
    /// </summary>
    public const string NoteheadDiamondBlackWide = "Diamond black notehead (wide)";
    /// <summary>
    /// Black diamond cluster, 2nd.
    /// </summary>
    public const string NoteheadDiamondClusterBlack2nd = "Black diamond cluster, 2nd";
    /// <summary>
    /// Black diamond cluster, 3rd.
    /// </summary>
    public const string NoteheadDiamondClusterBlack3rd = "Black diamond cluster, 3rd";
    /// <summary>
    /// Combining black diamond cluster, bottom.
    /// </summary>
    public const string NoteheadDiamondClusterBlackBottom = "Combining black diamond cluster, bottom";
    /// <summary>
    /// Combining black diamond cluster, middle.
    /// </summary>
    public const string NoteheadDiamondClusterBlackMiddle = "Combining black diamond cluster, middle";
    /// <summary>
    /// Combining black diamond cluster, top.
    /// </summary>
    public const string NoteheadDiamondClusterBlackTop = "Combining black diamond cluster, top";
    /// <summary>
    /// White diamond cluster, 2nd.
    /// </summary>
    public const string NoteheadDiamondClusterWhite2nd = "White diamond cluster, 2nd";
    /// <summary>
    /// White diamond cluster, 3rd.
    /// </summary>
    public const string NoteheadDiamondClusterWhite3rd = "White diamond cluster, 3rd";
    /// <summary>
    /// Combining white diamond cluster, bottom.
    /// </summary>
    public const string NoteheadDiamondClusterWhiteBottom = "Combining white diamond cluster, bottom";
    /// <summary>
    /// Combining white diamond cluster, middle.
    /// </summary>
    public const string NoteheadDiamondClusterWhiteMiddle = "Combining white diamond cluster, middle";
    /// <summary>
    /// Combining white diamond cluster, top.
    /// </summary>
    public const string NoteheadDiamondClusterWhiteTop = "Combining white diamond cluster, top";
    /// <summary>
    /// Diamond double whole notehead.
    /// </summary>
    public const string NoteheadDiamondDoubleWhole = "Diamond double whole notehead";
    /// <summary>
    /// Diamond double whole notehead (old).
    /// </summary>
    public const string NoteheadDiamondDoubleWholeOld = "Diamond double whole notehead (old)";
    /// <summary>
    /// Diamond half notehead.
    /// </summary>
    public const string NoteheadDiamondHalf = "Diamond half notehead";
    /// <summary>
    /// Half-filled diamond notehead.
    /// </summary>
    public const string NoteheadDiamondHalfFilled = "Half-filled diamond notehead";
    /// <summary>
    /// Diamond half notehead (old).
    /// </summary>
    public const string NoteheadDiamondHalfOld = "Diamond half notehead (old)";
    /// <summary>
    /// Diamond half notehead (wide).
    /// </summary>
    public const string NoteheadDiamondHalfWide = "Diamond half notehead (wide)";
    /// <summary>
    /// Open diamond notehead.
    /// </summary>
    public const string NoteheadDiamondOpen = "Open diamond notehead";
    /// <summary>
    /// Diamond white notehead.
    /// </summary>
    public const string NoteheadDiamondWhite = "Diamond white notehead";
    /// <summary>
    /// Diamond white notehead (wide).
    /// </summary>
    public const string NoteheadDiamondWhiteWide = "Diamond white notehead (wide)";
    /// <summary>
    /// Diamond whole notehead.
    /// </summary>
    public const string NoteheadDiamondWhole = "Diamond whole notehead";
    /// <summary>
    /// Diamond whole notehead (old).
    /// </summary>
    public const string NoteheadDiamondWholeOld = "Diamond whole notehead (old)";
    /// <summary>
    /// Double whole (breve) notehead.
    /// </summary>
    public const string NoteheadDoubleWhole = "Double whole (breve) notehead";
    /// <summary>
    /// Double whole (breve) notehead (square).
    /// </summary>
    public const string NoteheadDoubleWholeSquare = "Double whole (breve) notehead (square)";
    /// <summary>
    /// Double whole notehead with X.
    /// </summary>
    public const string NoteheadDoubleWholeWithX = "Double whole notehead with X";
    /// <summary>
    /// Half (minim) notehead.
    /// </summary>
    public const string NoteheadHalf = "Half (minim) notehead";
    /// <summary>
    /// Filled half (minim) notehead.
    /// </summary>
    public const string NoteheadHalfFilled = "Filled half (minim) notehead";
    /// <summary>
    /// Half notehead with X.
    /// </summary>
    public const string NoteheadHalfWithX = "Half notehead with X";
    /// <summary>
    /// Heavy X notehead.
    /// </summary>
    public const string NoteheadHeavyX = "Heavy X notehead";
    /// <summary>
    /// Heavy X with hat notehead.
    /// </summary>
    public const string NoteheadHeavyXHat = "Heavy X with hat notehead";
    /// <summary>
    /// Large arrow down (lowest pitch) black notehead.
    /// </summary>
    public const string NoteheadLargeArrowDownBlack = "Large arrow down (lowest pitch) black notehead";
    /// <summary>
    /// Large arrow down (lowest pitch) double whole notehead.
    /// </summary>
    public const string NoteheadLargeArrowDownDoubleWhole = "Large arrow down (lowest pitch) double whole notehead";
    /// <summary>
    /// Large arrow down (lowest pitch) half notehead.
    /// </summary>
    public const string NoteheadLargeArrowDownHalf = "Large arrow down (lowest pitch) half notehead";
    /// <summary>
    /// Large arrow down (lowest pitch) whole notehead.
    /// </summary>
    public const string NoteheadLargeArrowDownWhole = "Large arrow down (lowest pitch) whole notehead";
    /// <summary>
    /// Large arrow up (highest pitch) black notehead.
    /// </summary>
    public const string NoteheadLargeArrowUpBlack = "Large arrow up (highest pitch) black notehead";
    /// <summary>
    /// Large arrow up (highest pitch) double whole notehead.
    /// </summary>
    public const string NoteheadLargeArrowUpDoubleWhole = "Large arrow up (highest pitch) double whole notehead";
    /// <summary>
    /// Large arrow up (highest pitch) half notehead.
    /// </summary>
    public const string NoteheadLargeArrowUpHalf = "Large arrow up (highest pitch) half notehead";
    /// <summary>
    /// Large arrow up (highest pitch) whole notehead.
    /// </summary>
    public const string NoteheadLargeArrowUpWhole = "Large arrow up (highest pitch) whole notehead";
    /// <summary>
    /// Moon notehead black.
    /// </summary>
    public const string NoteheadMoonBlack = "Moon notehead black";
    /// <summary>
    /// Moon notehead white.
    /// </summary>
    public const string NoteheadMoonWhite = "Moon notehead white";
    /// <summary>
    /// Sine notehead (Nancarrow).
    /// </summary>
    public const string NoteheadNancarrowSine = "Sine notehead (Nancarrow)";
    /// <summary>
    /// Null notehead.
    /// </summary>
    public const string NoteheadNull = "Null notehead";
    /// <summary>
    /// Parenthesis notehead.
    /// </summary>
    public const string NoteheadParenthesis = "Parenthesis notehead";
    /// <summary>
    /// Opening parenthesis.
    /// </summary>
    public const string NoteheadParenthesisLeft = "Opening parenthesis";
    /// <summary>
    /// Closing parenthesis.
    /// </summary>
    public const string NoteheadParenthesisRight = "Closing parenthesis";
    /// <summary>
    /// Plus notehead black.
    /// </summary>
    public const string NoteheadPlusBlack = "Plus notehead black";
    /// <summary>
    /// Plus notehead double whole.
    /// </summary>
    public const string NoteheadPlusDoubleWhole = "Plus notehead double whole";
    /// <summary>
    /// Plus notehead half.
    /// </summary>
    public const string NoteheadPlusHalf = "Plus notehead half";
    /// <summary>
    /// Plus notehead whole.
    /// </summary>
    public const string NoteheadPlusWhole = "Plus notehead whole";
    /// <summary>
    /// Combining black rectangular cluster, bottom.
    /// </summary>
    public const string NoteheadRectangularClusterBlackBottom = "Combining black rectangular cluster, bottom";
    /// <summary>
    /// Combining black rectangular cluster, middle.
    /// </summary>
    public const string NoteheadRectangularClusterBlackMiddle = "Combining black rectangular cluster, middle";
    /// <summary>
    /// Combining black rectangular cluster, top.
    /// </summary>
    public const string NoteheadRectangularClusterBlackTop = "Combining black rectangular cluster, top";
    /// <summary>
    /// Combining white rectangular cluster, bottom.
    /// </summary>
    public const string NoteheadRectangularClusterWhiteBottom = "Combining white rectangular cluster, bottom";
    /// <summary>
    /// Combining white rectangular cluster, middle.
    /// </summary>
    public const string NoteheadRectangularClusterWhiteMiddle = "Combining white rectangular cluster, middle";
    /// <summary>
    /// Combining white rectangular cluster, top.
    /// </summary>
    public const string NoteheadRectangularClusterWhiteTop = "Combining white rectangular cluster, top";
    /// <summary>
    /// Round black notehead.
    /// </summary>
    public const string NoteheadRoundBlack = "Round black notehead";
    /// <summary>
    /// Round black notehead, double slashed.
    /// </summary>
    public const string NoteheadRoundBlackDoubleSlashed = "Round black notehead, double slashed";
    /// <summary>
    /// Large round black notehead.
    /// </summary>
    public const string NoteheadRoundBlackLarge = "Large round black notehead";
    /// <summary>
    /// Round black notehead, slashed.
    /// </summary>
    public const string NoteheadRoundBlackSlashed = "Round black notehead, slashed";
    /// <summary>
    /// Large round black notehead, slashed.
    /// </summary>
    public const string NoteheadRoundBlackSlashedLarge = "Large round black notehead, slashed";
    /// <summary>
    /// Round white notehead.
    /// </summary>
    public const string NoteheadRoundWhite = "Round white notehead";
    /// <summary>
    /// Round white notehead, double slashed.
    /// </summary>
    public const string NoteheadRoundWhiteDoubleSlashed = "Round white notehead, double slashed";
    /// <summary>
    /// Large round white notehead.
    /// </summary>
    public const string NoteheadRoundWhiteLarge = "Large round white notehead";
    /// <summary>
    /// Round white notehead, slashed.
    /// </summary>
    public const string NoteheadRoundWhiteSlashed = "Round white notehead, slashed";
    /// <summary>
    /// Large round white notehead, slashed.
    /// </summary>
    public const string NoteheadRoundWhiteSlashedLarge = "Large round white notehead, slashed";
    /// <summary>
    /// Round white notehead with dot.
    /// </summary>
    public const string NoteheadRoundWhiteWithDot = "Round white notehead with dot";
    /// <summary>
    /// Large round white notehead with dot.
    /// </summary>
    public const string NoteheadRoundWhiteWithDotLarge = "Large round white notehead with dot";
    /// <summary>
    /// Large white diamond.
    /// </summary>
    public const string NoteheadSlashDiamondWhite = "Large white diamond";
    /// <summary>
    /// Slash with horizontal ends.
    /// </summary>
    public const string NoteheadSlashHorizontalEnds = "Slash with horizontal ends";
    /// <summary>
    /// Muted slash with horizontal ends.
    /// </summary>
    public const string NoteheadSlashHorizontalEndsMuted = "Muted slash with horizontal ends";
    /// <summary>
    /// Slash with vertical ends.
    /// </summary>
    public const string NoteheadSlashVerticalEnds = "Slash with vertical ends";
    /// <summary>
    /// Muted slash with vertical ends.
    /// </summary>
    public const string NoteheadSlashVerticalEndsMuted = "Muted slash with vertical ends";
    /// <summary>
    /// Small slash with vertical ends.
    /// </summary>
    public const string NoteheadSlashVerticalEndsSmall = "Small slash with vertical ends";
    /// <summary>
    /// White slash double whole.
    /// </summary>
    public const string NoteheadSlashWhiteDoubleWhole = "White slash double whole";
    /// <summary>
    /// White slash half.
    /// </summary>
    public const string NoteheadSlashWhiteHalf = "White slash half";
    /// <summary>
    /// Muted white slash.
    /// </summary>
    public const string NoteheadSlashWhiteMuted = "Muted white slash";
    /// <summary>
    /// White slash whole.
    /// </summary>
    public const string NoteheadSlashWhiteWhole = "White slash whole";
    /// <summary>
    /// Large X notehead.
    /// </summary>
    public const string NoteheadSlashX = "Large X notehead";
    /// <summary>
    /// Slashed black notehead (bottom left to top right).
    /// </summary>
    public const string NoteheadSlashedBlack1 = "Slashed black notehead (bottom left to top right)";
    /// <summary>
    /// Slashed black notehead (top left to bottom right).
    /// </summary>
    public const string NoteheadSlashedBlack2 = "Slashed black notehead (top left to bottom right)";
    /// <summary>
    /// Slashed double whole notehead (bottom left to top right).
    /// </summary>
    public const string NoteheadSlashedDoubleWhole1 = "Slashed double whole notehead (bottom left to top right)";
    /// <summary>
    /// Slashed double whole notehead (top left to bottom right).
    /// </summary>
    public const string NoteheadSlashedDoubleWhole2 = "Slashed double whole notehead (top left to bottom right)";
    /// <summary>
    /// Slashed half notehead (bottom left to top right).
    /// </summary>
    public const string NoteheadSlashedHalf1 = "Slashed half notehead (bottom left to top right)";
    /// <summary>
    /// Slashed half notehead (top left to bottom right).
    /// </summary>
    public const string NoteheadSlashedHalf2 = "Slashed half notehead (top left to bottom right)";
    /// <summary>
    /// Slashed whole notehead (bottom left to top right).
    /// </summary>
    public const string NoteheadSlashedWhole1 = "Slashed whole notehead (bottom left to top right)";
    /// <summary>
    /// Slashed whole notehead (top left to bottom right).
    /// </summary>
    public const string NoteheadSlashedWhole2 = "Slashed whole notehead (top left to bottom right)";
    /// <summary>
    /// Square notehead black.
    /// </summary>
    public const string NoteheadSquareBlack = "Square notehead black";
    /// <summary>
    /// Large square black notehead.
    /// </summary>
    public const string NoteheadSquareBlackLarge = "Large square black notehead";
    /// <summary>
    /// Large square white notehead.
    /// </summary>
    public const string NoteheadSquareBlackWhite = "Large square white notehead";
    /// <summary>
    /// Square notehead white.
    /// </summary>
    public const string NoteheadSquareWhite = "Square notehead white";
    /// <summary>
    /// Triangle notehead down black.
    /// </summary>
    public const string NoteheadTriangleDownBlack = "Triangle notehead down black";
    /// <summary>
    /// Triangle notehead down double whole.
    /// </summary>
    public const string NoteheadTriangleDownDoubleWhole = "Triangle notehead down double whole";
    /// <summary>
    /// Triangle notehead down half.
    /// </summary>
    public const string NoteheadTriangleDownHalf = "Triangle notehead down half";
    /// <summary>
    /// Triangle notehead down white.
    /// </summary>
    public const string NoteheadTriangleDownWhite = "Triangle notehead down white";
    /// <summary>
    /// Triangle notehead down whole.
    /// </summary>
    public const string NoteheadTriangleDownWhole = "Triangle notehead down whole";
    /// <summary>
    /// Triangle notehead left black.
    /// </summary>
    public const string NoteheadTriangleLeftBlack = "Triangle notehead left black";
    /// <summary>
    /// Triangle notehead left white.
    /// </summary>
    public const string NoteheadTriangleLeftWhite = "Triangle notehead left white";
    /// <summary>
    /// Triangle notehead right black.
    /// </summary>
    public const string NoteheadTriangleRightBlack = "Triangle notehead right black";
    /// <summary>
    /// Triangle notehead right white.
    /// </summary>
    public const string NoteheadTriangleRightWhite = "Triangle notehead right white";
    /// <summary>
    /// Triangle-round notehead down black.
    /// </summary>
    public const string NoteheadTriangleRoundDownBlack = "Triangle-round notehead down black";
    /// <summary>
    /// Triangle-round notehead down white.
    /// </summary>
    public const string NoteheadTriangleRoundDownWhite = "Triangle-round notehead down white";
    /// <summary>
    /// Triangle notehead up black.
    /// </summary>
    public const string NoteheadTriangleUpBlack = "Triangle notehead up black";
    /// <summary>
    /// Triangle notehead up double whole.
    /// </summary>
    public const string NoteheadTriangleUpDoubleWhole = "Triangle notehead up double whole";
    /// <summary>
    /// Triangle notehead up half.
    /// </summary>
    public const string NoteheadTriangleUpHalf = "Triangle notehead up half";
    /// <summary>
    /// Triangle notehead up right black.
    /// </summary>
    public const string NoteheadTriangleUpRightBlack = "Triangle notehead up right black";
    /// <summary>
    /// Triangle notehead up right white.
    /// </summary>
    public const string NoteheadTriangleUpRightWhite = "Triangle notehead up right white";
    /// <summary>
    /// Triangle notehead up white.
    /// </summary>
    public const string NoteheadTriangleUpWhite = "Triangle notehead up white";
    /// <summary>
    /// Triangle notehead up whole.
    /// </summary>
    public const string NoteheadTriangleUpWhole = "Triangle notehead up whole";
    /// <summary>
    /// Void notehead with X.
    /// </summary>
    public const string NoteheadVoidWithX = "Void notehead with X";
    /// <summary>
    /// Whole (semibreve) notehead.
    /// </summary>
    public const string NoteheadWhole = "Whole (semibreve) notehead";
    /// <summary>
    /// Filled whole (semibreve) notehead.
    /// </summary>
    public const string NoteheadWholeFilled = "Filled whole (semibreve) notehead";
    /// <summary>
    /// Whole notehead with X.
    /// </summary>
    public const string NoteheadWholeWithX = "Whole notehead with X";
    /// <summary>
    /// X notehead black.
    /// </summary>
    public const string NoteheadXBlack = "X notehead black";
    /// <summary>
    /// X notehead double whole.
    /// </summary>
    public const string NoteheadXDoubleWhole = "X notehead double whole";
    /// <summary>
    /// X notehead half.
    /// </summary>
    public const string NoteheadXHalf = "X notehead half";
    /// <summary>
    /// Ornate X notehead.
    /// </summary>
    public const string NoteheadXOrnate = "Ornate X notehead";
    /// <summary>
    /// Ornate X notehead in ellipse.
    /// </summary>
    public const string NoteheadXOrnateEllipse = "Ornate X notehead in ellipse";
    /// <summary>
    /// X notehead whole.
    /// </summary>
    public const string NoteheadXWhole = "X notehead whole";
    /// <summary>
    /// a (baseline).
    /// </summary>
    public const string OctaveBaselineA = "a (baseline)";
    /// <summary>
    /// b (baseline).
    /// </summary>
    public const string OctaveBaselineB = "b (baseline)";
    /// <summary>
    /// m (baseline).
    /// </summary>
    public const string OctaveBaselineM = "m (baseline)";
    /// <summary>
    /// v (baseline).
    /// </summary>
    public const string OctaveBaselineV = "v (baseline)";
    /// <summary>
    /// Bassa.
    /// </summary>
    public const string OctaveBassa = "Bassa";
    /// <summary>
    /// Loco.
    /// </summary>
    public const string OctaveLoco = "Loco";
    /// <summary>
    /// Left parenthesis for octave signs.
    /// </summary>
    public const string OctaveParensLeft = "Left parenthesis for octave signs";
    /// <summary>
    /// Right parenthesis for octave signs.
    /// </summary>
    public const string OctaveParensRight = "Right parenthesis for octave signs";
    /// <summary>
    /// a (superscript).
    /// </summary>
    public const string OctaveSuperscriptA = "a (superscript)";
    /// <summary>
    /// b (superscript).
    /// </summary>
    public const string OctaveSuperscriptB = "b (superscript)";
    /// <summary>
    /// m (superscript).
    /// </summary>
    public const string OctaveSuperscriptM = "m (superscript)";
    /// <summary>
    /// v (superscript).
    /// </summary>
    public const string OctaveSuperscriptV = "v (superscript)";
    /// <summary>
    /// One-handed roll (Stevens).
    /// </summary>
    public const string OneHandedRollStevens = "One-handed roll (Stevens)";
    /// <summary>
    /// Two Fusae.
    /// </summary>
    public const string OrganGerman2Fusae = "Two Fusae";
    /// <summary>
    /// Two Minimae.
    /// </summary>
    public const string OrganGerman2Minimae = "Two Minimae";
    /// <summary>
    /// Combining double octave line above.
    /// </summary>
    public const string OrganGerman2OctaveUp = "Combining double octave line above";
    /// <summary>
    /// Two Semifusae.
    /// </summary>
    public const string OrganGerman2Semifusae = "Two Semifusae";
    /// <summary>
    /// Two Semiminimae.
    /// </summary>
    public const string OrganGerman2Semiminimae = "Two Semiminimae";
    /// <summary>
    /// Three Fusae.
    /// </summary>
    public const string OrganGerman3Fusae = "Three Fusae";
    /// <summary>
    /// Three Minimae.
    /// </summary>
    public const string OrganGerman3Minimae = "Three Minimae";
    /// <summary>
    /// Three Semifusae.
    /// </summary>
    public const string OrganGerman3Semifusae = "Three Semifusae";
    /// <summary>
    /// Three Semiminimae.
    /// </summary>
    public const string OrganGerman3Semiminimae = "Three Semiminimae";
    /// <summary>
    /// Four Fusae.
    /// </summary>
    public const string OrganGerman4Fusae = "Four Fusae";
    /// <summary>
    /// Four Minimae.
    /// </summary>
    public const string OrganGerman4Minimae = "Four Minimae";
    /// <summary>
    /// Four Semifusae.
    /// </summary>
    public const string OrganGerman4Semifusae = "Four Semifusae";
    /// <summary>
    /// Four Semiminimae.
    /// </summary>
    public const string OrganGerman4Semiminimae = "Four Semiminimae";
    /// <summary>
    /// Five Fusae.
    /// </summary>
    public const string OrganGerman5Fusae = "Five Fusae";
    /// <summary>
    /// Five Minimae.
    /// </summary>
    public const string OrganGerman5Minimae = "Five Minimae";
    /// <summary>
    /// Five Semifusae.
    /// </summary>
    public const string OrganGerman5Semifusae = "Five Semifusae";
    /// <summary>
    /// Five Semiminimae.
    /// </summary>
    public const string OrganGerman5Semiminimae = "Five Semiminimae";
    /// <summary>
    /// Six Fusae.
    /// </summary>
    public const string OrganGerman6Fusae = "Six Fusae";
    /// <summary>
    /// Six Minimae.
    /// </summary>
    public const string OrganGerman6Minimae = "Six Minimae";
    /// <summary>
    /// Six Semifusae.
    /// </summary>
    public const string OrganGerman6Semifusae = "Six Semifusae";
    /// <summary>
    /// Six Semiminimae.
    /// </summary>
    public const string OrganGerman6Semiminimae = "Six Semiminimae";
    /// <summary>
    /// German organ tablature small A.
    /// </summary>
    public const string OrganGermanALower = "German organ tablature small A";
    /// <summary>
    /// German organ tablature great A.
    /// </summary>
    public const string OrganGermanAUpper = "German organ tablature great A";
    /// <summary>
    /// Rhythm Dot.
    /// </summary>
    public const string OrganGermanAugmentationDot = "Rhythm Dot";
    /// <summary>
    /// German organ tablature small B.
    /// </summary>
    public const string OrganGermanBLower = "German organ tablature small B";
    /// <summary>
    /// German organ tablature great B.
    /// </summary>
    public const string OrganGermanBUpper = "German organ tablature great B";
    /// <summary>
    /// Brevis (Binary) Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerBrevis2 = "Brevis (Binary) Buxheimer Orgelbuch";
    /// <summary>
    /// Brevis (Ternary) Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerBrevis3 = "Brevis (Ternary) Buxheimer Orgelbuch";
    /// <summary>
    /// Minima Rest Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerMinimaRest = "Minima Rest Buxheimer Orgelbuch";
    /// <summary>
    /// Semibrevis Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerSemibrevis = "Semibrevis Buxheimer Orgelbuch";
    /// <summary>
    /// Semibrevis Rest Buxheimer Orgelbuch.
    /// </summary>
    public const string OrganGermanBuxheimerSemibrevisRest = "Semibrevis Rest Buxheimer Orgelbuch";
    /// <summary>
    /// German organ tablature small C.
    /// </summary>
    public const string OrganGermanCLower = "German organ tablature small C";
    /// <summary>
    /// German organ tablature great C.
    /// </summary>
    public const string OrganGermanCUpper = "German organ tablature great C";
    /// <summary>
    /// German organ tablature small Cis.
    /// </summary>
    public const string OrganGermanCisLower = "German organ tablature small Cis";
    /// <summary>
    /// German organ tablature great Cis.
    /// </summary>
    public const string OrganGermanCisUpper = "German organ tablature great Cis";
    /// <summary>
    /// German organ tablature small D.
    /// </summary>
    public const string OrganGermanDLower = "German organ tablature small D";
    /// <summary>
    /// German organ tablature great D.
    /// </summary>
    public const string OrganGermanDUpper = "German organ tablature great D";
    /// <summary>
    /// German organ tablature small Dis.
    /// </summary>
    public const string OrganGermanDisLower = "German organ tablature small Dis";
    /// <summary>
    /// German organ tablature great Dis.
    /// </summary>
    public const string OrganGermanDisUpper = "German organ tablature great Dis";
    /// <summary>
    /// German organ tablature small E.
    /// </summary>
    public const string OrganGermanELower = "German organ tablature small E";
    /// <summary>
    /// German organ tablature great E.
    /// </summary>
    public const string OrganGermanEUpper = "German organ tablature great E";
    /// <summary>
    /// German organ tablature small F.
    /// </summary>
    public const string OrganGermanFLower = "German organ tablature small F";
    /// <summary>
    /// German organ tablature great F.
    /// </summary>
    public const string OrganGermanFUpper = "German organ tablature great F";
    /// <summary>
    /// German organ tablature small Fis.
    /// </summary>
    public const string OrganGermanFisLower = "German organ tablature small Fis";
    /// <summary>
    /// German organ tablature great Fis.
    /// </summary>
    public const string OrganGermanFisUpper = "German organ tablature great Fis";
    /// <summary>
    /// Fusa.
    /// </summary>
    public const string OrganGermanFusa = "Fusa";
    /// <summary>
    /// Fusa Rest.
    /// </summary>
    public const string OrganGermanFusaRest = "Fusa Rest";
    /// <summary>
    /// German organ tablature small G.
    /// </summary>
    public const string OrganGermanGLower = "German organ tablature small G";
    /// <summary>
    /// German organ tablature great G.
    /// </summary>
    public const string OrganGermanGUpper = "German organ tablature great G";
    /// <summary>
    /// German organ tablature small Gis.
    /// </summary>
    public const string OrganGermanGisLower = "German organ tablature small Gis";
    /// <summary>
    /// German organ tablature great Gis.
    /// </summary>
    public const string OrganGermanGisUpper = "German organ tablature great Gis";
    /// <summary>
    /// German organ tablature small H.
    /// </summary>
    public const string OrganGermanHLower = "German organ tablature small H";
    /// <summary>
    /// German organ tablature great H.
    /// </summary>
    public const string OrganGermanHUpper = "German organ tablature great H";
    /// <summary>
    /// Minima.
    /// </summary>
    public const string OrganGermanMinima = "Minima";
    /// <summary>
    /// Minima Rest.
    /// </summary>
    public const string OrganGermanMinimaRest = "Minima Rest";
    /// <summary>
    /// Combining single octave line below.
    /// </summary>
    public const string OrganGermanOctaveDown = "Combining single octave line below";
    /// <summary>
    /// Combining single octave line above.
    /// </summary>
    public const string OrganGermanOctaveUp = "Combining single octave line above";
    /// <summary>
    /// Semibrevis.
    /// </summary>
    public const string OrganGermanSemibrevis = "Semibrevis";
    /// <summary>
    /// Semibrevis Rest.
    /// </summary>
    public const string OrganGermanSemibrevisRest = "Semibrevis Rest";
    /// <summary>
    /// Semifusa.
    /// </summary>
    public const string OrganGermanSemifusa = "Semifusa";
    /// <summary>
    /// Semifusa Rest.
    /// </summary>
    public const string OrganGermanSemifusaRest = "Semifusa Rest";
    /// <summary>
    /// Semiminima.
    /// </summary>
    public const string OrganGermanSemiminima = "Semiminima";
    /// <summary>
    /// Semiminima Rest.
    /// </summary>
    public const string OrganGermanSemiminimaRest = "Semiminima Rest";
    /// <summary>
    /// Tie.
    /// </summary>
    public const string OrganGermanTie = "Tie";
    /// <summary>
    /// Ornament bottom left concave stroke.
    /// </summary>
    public const string OrnamentBottomLeftConcaveStroke = "Ornament bottom left concave stroke";
    /// <summary>
    /// Ornament bottom left concave stroke, large.
    /// </summary>
    public const string OrnamentBottomLeftConcaveStrokeLarge = "Ornament bottom left concave stroke, large";
    /// <summary>
    /// Ornament bottom left convex stroke.
    /// </summary>
    public const string OrnamentBottomLeftConvexStroke = "Ornament bottom left convex stroke";
    /// <summary>
    /// Ornament bottom right concave stroke.
    /// </summary>
    public const string OrnamentBottomRightConcaveStroke = "Ornament bottom right concave stroke";
    /// <summary>
    /// Ornament bottom right convex stroke.
    /// </summary>
    public const string OrnamentBottomRightConvexStroke = "Ornament bottom right convex stroke";
    /// <summary>
    /// Comma.
    /// </summary>
    public const string OrnamentComma = "Comma";
    /// <summary>
    /// Double oblique straight lines NW-SE.
    /// </summary>
    public const string OrnamentDoubleObliqueLinesAfterNote = "Double oblique straight lines NW-SE";
    /// <summary>
    /// Double oblique straight lines SW-NE.
    /// </summary>
    public const string OrnamentDoubleObliqueLinesBeforeNote = "Double oblique straight lines SW-NE";
    /// <summary>
    /// Curve below.
    /// </summary>
    public const string OrnamentDownCurve = "Curve below";
    /// <summary>
    /// Haydn ornament.
    /// </summary>
    public const string OrnamentHaydn = "Haydn ornament";
    /// <summary>
    /// Ornament high left concave stroke.
    /// </summary>
    public const string OrnamentHighLeftConcaveStroke = "Ornament high left concave stroke";
    /// <summary>
    /// Ornament high left convex stroke.
    /// </summary>
    public const string OrnamentHighLeftConvexStroke = "Ornament high left convex stroke";
    /// <summary>
    /// Ornament high right concave stroke.
    /// </summary>
    public const string OrnamentHighRightConcaveStroke = "Ornament high right concave stroke";
    /// <summary>
    /// Ornament high right convex stroke.
    /// </summary>
    public const string OrnamentHighRightConvexStroke = "Ornament high right convex stroke";
    /// <summary>
    /// Hook after note.
    /// </summary>
    public const string OrnamentHookAfterNote = "Hook after note";
    /// <summary>
    /// Hook before note.
    /// </summary>
    public const string OrnamentHookBeforeNote = "Hook before note";
    /// <summary>
    /// Left-facing half circle.
    /// </summary>
    public const string OrnamentLeftFacingHalfCircle = "Left-facing half circle";
    /// <summary>
    /// Left-facing hook.
    /// </summary>
    public const string OrnamentLeftFacingHook = "Left-facing hook";
    /// <summary>
    /// Ornament left +.
    /// </summary>
    public const string OrnamentLeftPlus = "Ornament left +";
    /// <summary>
    /// Ornament left shake t.
    /// </summary>
    public const string OrnamentLeftShakeT = "Ornament left shake t";
    /// <summary>
    /// Ornament left vertical stroke.
    /// </summary>
    public const string OrnamentLeftVerticalStroke = "Ornament left vertical stroke";
    /// <summary>
    /// Ornament left vertical stroke with cross (+).
    /// </summary>
    public const string OrnamentLeftVerticalStrokeWithCross = "Ornament left vertical stroke with cross (+)";
    /// <summary>
    /// Ornament low left concave stroke.
    /// </summary>
    public const string OrnamentLowLeftConcaveStroke = "Ornament low left concave stroke";
    /// <summary>
    /// Ornament low left convex stroke.
    /// </summary>
    public const string OrnamentLowLeftConvexStroke = "Ornament low left convex stroke";
    /// <summary>
    /// Ornament low right concave stroke.
    /// </summary>
    public const string OrnamentLowRightConcaveStroke = "Ornament low right concave stroke";
    /// <summary>
    /// Ornament low right convex stroke.
    /// </summary>
    public const string OrnamentLowRightConvexStroke = "Ornament low right convex stroke";
    /// <summary>
    /// Ornament middle vertical stroke.
    /// </summary>
    public const string OrnamentMiddleVerticalStroke = "Ornament middle vertical stroke";
    /// <summary>
    /// Mordent.
    /// </summary>
    public const string OrnamentMordent = "Mordent";
    /// <summary>
    /// Oblique straight line NW-SE.
    /// </summary>
    public const string OrnamentObliqueLineAfterNote = "Oblique straight line NW-SE";
    /// <summary>
    /// Oblique straight line SW-NE.
    /// </summary>
    public const string OrnamentObliqueLineBeforeNote = "Oblique straight line SW-NE";
    /// <summary>
    /// Oblique straight line tilted NW-SE.
    /// </summary>
    public const string OrnamentObliqueLineHorizAfterNote = "Oblique straight line tilted NW-SE";
    /// <summary>
    /// Oblique straight line tilted SW-NE.
    /// </summary>
    public const string OrnamentObliqueLineHorizBeforeNote = "Oblique straight line tilted SW-NE";
    /// <summary>
    /// Oriscus.
    /// </summary>
    public const string OrnamentOriscus = "Oriscus";
    /// <summary>
    /// Pincé (Couperin).
    /// </summary>
    public const string OrnamentPinceCouperin = "Pincé (Couperin)";
    /// <summary>
    /// Port de voix.
    /// </summary>
    public const string OrnamentPortDeVoixV = "Port de voix";
    /// <summary>
    /// Supported appoggiatura trill.
    /// </summary>
    public const string OrnamentPrecompAppoggTrill = "Supported appoggiatura trill";
    /// <summary>
    /// Supported appoggiatura trill with two-note suffix.
    /// </summary>
    public const string OrnamentPrecompAppoggTrillSuffix = "Supported appoggiatura trill with two-note suffix";
    /// <summary>
    /// Cadence.
    /// </summary>
    public const string OrnamentPrecompCadence = "Cadence";
    /// <summary>
    /// Cadence with upper prefix.
    /// </summary>
    public const string OrnamentPrecompCadenceUpperPrefix = "Cadence with upper prefix";
    /// <summary>
    /// Cadence with upper prefix and turn.
    /// </summary>
    public const string OrnamentPrecompCadenceUpperPrefixTurn = "Cadence with upper prefix and turn";
    /// <summary>
    /// Cadence with turn.
    /// </summary>
    public const string OrnamentPrecompCadenceWithTurn = "Cadence with turn";
    /// <summary>
    /// Descending slide.
    /// </summary>
    public const string OrnamentPrecompDescendingSlide = "Descending slide";
    /// <summary>
    /// Double cadence with lower prefix.
    /// </summary>
    public const string OrnamentPrecompDoubleCadenceLowerPrefix = "Double cadence with lower prefix";
    /// <summary>
    /// Double cadence with upper prefix.
    /// </summary>
    public const string OrnamentPrecompDoubleCadenceUpperPrefix = "Double cadence with upper prefix";
    /// <summary>
    /// Double cadence with upper prefix and turn.
    /// </summary>
    public const string OrnamentPrecompDoubleCadenceUpperPrefixTurn = "Double cadence with upper prefix and turn";
    /// <summary>
    /// Inverted mordent with upper prefix.
    /// </summary>
    public const string OrnamentPrecompInvertedMordentUpperPrefix = "Inverted mordent with upper prefix";
    /// <summary>
    /// Mordent with release.
    /// </summary>
    public const string OrnamentPrecompMordentRelease = "Mordent with release";
    /// <summary>
    /// Mordent with upper prefix.
    /// </summary>
    public const string OrnamentPrecompMordentUpperPrefix = "Mordent with upper prefix";
    /// <summary>
    /// Pre-beat port de voix followed by multiple mordent (Dandrieu).
    /// </summary>
    public const string OrnamentPrecompPortDeVoixMordent = "Pre-beat port de voix followed by multiple mordent (Dandrieu)";
    /// <summary>
    /// Slide.
    /// </summary>
    public const string OrnamentPrecompSlide = "Slide";
    /// <summary>
    /// Slide-trill with two-note suffix (J.S. Bach).
    /// </summary>
    public const string OrnamentPrecompSlideTrillBach = "Slide-trill with two-note suffix (J.S. Bach)";
    /// <summary>
    /// Slide-trill (D'Anglebert).
    /// </summary>
    public const string OrnamentPrecompSlideTrillDAnglebert = "Slide-trill (D'Anglebert)";
    /// <summary>
    /// Slide-trill with one-note suffix (Marpurg).
    /// </summary>
    public const string OrnamentPrecompSlideTrillMarpurg = "Slide-trill with one-note suffix (Marpurg)";
    /// <summary>
    /// Slide-trill (Muffat).
    /// </summary>
    public const string OrnamentPrecompSlideTrillMuffat = "Slide-trill (Muffat)";
    /// <summary>
    /// Slide-trill with two-note suffix (Muffat).
    /// </summary>
    public const string OrnamentPrecompSlideTrillSuffixMuffat = "Slide-trill with two-note suffix (Muffat)";
    /// <summary>
    /// Trill with lower suffix.
    /// </summary>
    public const string OrnamentPrecompTrillLowerSuffix = "Trill with lower suffix";
    /// <summary>
    /// Trill with two-note suffix (Dandrieu).
    /// </summary>
    public const string OrnamentPrecompTrillSuffixDandrieu = "Trill with two-note suffix (Dandrieu)";
    /// <summary>
    /// Trill with mordent.
    /// </summary>
    public const string OrnamentPrecompTrillWithMordent = "Trill with mordent";
    /// <summary>
    /// Turn-trill with two-note suffix (J.S. Bach).
    /// </summary>
    public const string OrnamentPrecompTurnTrillBach = "Turn-trill with two-note suffix (J.S. Bach)";
    /// <summary>
    /// Turn-trill (D'Anglebert).
    /// </summary>
    public const string OrnamentPrecompTurnTrillDAnglebert = "Turn-trill (D'Anglebert)";
    /// <summary>
    /// Quilisma.
    /// </summary>
    public const string OrnamentQuilisma = "Quilisma";
    /// <summary>
    /// Right-facing half circle.
    /// </summary>
    public const string OrnamentRightFacingHalfCircle = "Right-facing half circle";
    /// <summary>
    /// Right-facing hook.
    /// </summary>
    public const string OrnamentRightFacingHook = "Right-facing hook";
    /// <summary>
    /// Ornament right vertical stroke.
    /// </summary>
    public const string OrnamentRightVerticalStroke = "Ornament right vertical stroke";
    /// <summary>
    /// Schleifer (long mordent).
    /// </summary>
    public const string OrnamentSchleifer = "Schleifer (long mordent)";
    /// <summary>
    /// Shake.
    /// </summary>
    public const string OrnamentShake3 = "Shake";
    /// <summary>
    /// Shake (Muffat).
    /// </summary>
    public const string OrnamentShakeMuffat1 = "Shake (Muffat)";
    /// <summary>
    /// Short oblique straight line NW-SE.
    /// </summary>
    public const string OrnamentShortObliqueLineAfterNote = "Short oblique straight line NW-SE";
    /// <summary>
    /// Short oblique straight line SW-NE.
    /// </summary>
    public const string OrnamentShortObliqueLineBeforeNote = "Short oblique straight line SW-NE";
    /// <summary>
    /// Short trill.
    /// </summary>
    public const string OrnamentShortTrill = "Short trill";
    /// <summary>
    /// Ornament top left concave stroke.
    /// </summary>
    public const string OrnamentTopLeftConcaveStroke = "Ornament top left concave stroke";
    /// <summary>
    /// Ornament top left convex stroke.
    /// </summary>
    public const string OrnamentTopLeftConvexStroke = "Ornament top left convex stroke";
    /// <summary>
    /// Ornament top right concave stroke.
    /// </summary>
    public const string OrnamentTopRightConcaveStroke = "Ornament top right concave stroke";
    /// <summary>
    /// Ornament top right convex stroke.
    /// </summary>
    public const string OrnamentTopRightConvexStroke = "Ornament top right convex stroke";
    /// <summary>
    /// Tremblement.
    /// </summary>
    public const string OrnamentTremblement = "Tremblement";
    /// <summary>
    /// Tremblement appuyé (Couperin).
    /// </summary>
    public const string OrnamentTremblementCouperin = "Tremblement appuyé (Couperin)";
    /// <summary>
    /// Trill.
    /// </summary>
    public const string OrnamentTrill = "Trill";
    /// <summary>
    /// Turn.
    /// </summary>
    public const string OrnamentTurn = "Turn";
    /// <summary>
    /// Inverted turn.
    /// </summary>
    public const string OrnamentTurnInverted = "Inverted turn";
    /// <summary>
    /// Turn with slash.
    /// </summary>
    public const string OrnamentTurnSlash = "Turn with slash";
    /// <summary>
    /// Turn up.
    /// </summary>
    public const string OrnamentTurnUp = "Turn up";
    /// <summary>
    /// Inverted turn up.
    /// </summary>
    public const string OrnamentTurnUpS = "Inverted turn up";
    /// <summary>
    /// Curve above.
    /// </summary>
    public const string OrnamentUpCurve = "Curve above";
    /// <summary>
    /// Vertical line.
    /// </summary>
    public const string OrnamentVerticalLine = "Vertical line";
    /// <summary>
    /// Ornament zig-zag line without right-hand end.
    /// </summary>
    public const string OrnamentZigZagLineNoRightEnd = "Ornament zig-zag line without right-hand end";
    /// <summary>
    /// Ornament zig-zag line with right-hand end.
    /// </summary>
    public const string OrnamentZigZagLineWithRightEnd = "Ornament zig-zag line with right-hand end";
    /// <summary>
    /// Ottava.
    /// </summary>
    public const string Ottava = "Ottava";
    /// <summary>
    /// Ottava alta.
    /// </summary>
    public const string OttavaAlta = "Ottava alta";
    /// <summary>
    /// Ottava bassa.
    /// </summary>
    public const string OttavaBassa = "Ottava bassa";
    /// <summary>
    /// Ottava bassa (ba).
    /// </summary>
    public const string OttavaBassaBa = "Ottava bassa (ba)";
    /// <summary>
    /// Ottava bassa (8vb).
    /// </summary>
    public const string OttavaBassaVb = "Ottava bassa (8vb)";
    /// <summary>
    /// Penderecki unmeasured tremolo.
    /// </summary>
    public const string PendereckiTremolo = "Penderecki unmeasured tremolo";
    /// <summary>
    /// Agogo.
    /// </summary>
    public const string PictAgogo = "Agogo";
    /// <summary>
    /// Almglocken.
    /// </summary>
    public const string PictAlmglocken = "Almglocken";
    /// <summary>
    /// Anvil.
    /// </summary>
    public const string PictAnvil = "Anvil";
    /// <summary>
    /// Bamboo tube chimes.
    /// </summary>
    public const string PictBambooChimes = "Bamboo tube chimes";
    /// <summary>
    /// Bamboo scraper.
    /// </summary>
    public const string PictBambooScraper = "Bamboo scraper";
    /// <summary>
    /// Bass drum.
    /// </summary>
    public const string PictBassDrum = "Bass drum";
    /// <summary>
    /// Bass drum on side.
    /// </summary>
    public const string PictBassDrumOnSide = "Bass drum on side";
    /// <summary>
    /// Bow.
    /// </summary>
    public const string PictBeaterBow = "Bow";
    /// <summary>
    /// Box for percussion beater.
    /// </summary>
    public const string PictBeaterBox = "Box for percussion beater";
    /// <summary>
    /// Brass mallets down.
    /// </summary>
    public const string PictBeaterBrassMalletsDown = "Brass mallets down";
    /// <summary>
    /// Brass mallets left.
    /// </summary>
    public const string PictBeaterBrassMalletsLeft = "Brass mallets left";
    /// <summary>
    /// Brass mallets right.
    /// </summary>
    public const string PictBeaterBrassMalletsRight = "Brass mallets right";
    /// <summary>
    /// Brass mallets up.
    /// </summary>
    public const string PictBeaterBrassMalletsUp = "Brass mallets up";
    /// <summary>
    /// Combining dashed circle for round beaters (plated).
    /// </summary>
    public const string PictBeaterCombiningDashedCircle = "Combining dashed circle for round beaters (plated)";
    /// <summary>
    /// Combining parentheses for round beaters (padded).
    /// </summary>
    public const string PictBeaterCombiningParentheses = "Combining parentheses for round beaters (padded)";
    /// <summary>
    /// Double bass drum stick down.
    /// </summary>
    public const string PictBeaterDoubleBassDrumDown = "Double bass drum stick down";
    /// <summary>
    /// Double bass drum stick up.
    /// </summary>
    public const string PictBeaterDoubleBassDrumUp = "Double bass drum stick up";
    /// <summary>
    /// Finger.
    /// </summary>
    public const string PictBeaterFinger = "Finger";
    /// <summary>
    /// Fingernails.
    /// </summary>
    public const string PictBeaterFingernails = "Fingernails";
    /// <summary>
    /// Fist.
    /// </summary>
    public const string PictBeaterFist = "Fist";
    /// <summary>
    /// Guiro scraper.
    /// </summary>
    public const string PictBeaterGuiroScraper = "Guiro scraper";
    /// <summary>
    /// Hammer.
    /// </summary>
    public const string PictBeaterHammer = "Hammer";
    /// <summary>
    /// Metal hammer, down.
    /// </summary>
    public const string PictBeaterHammerMetalDown = "Metal hammer, down";
    /// <summary>
    /// Metal hammer, up.
    /// </summary>
    public const string PictBeaterHammerMetalUp = "Metal hammer, up";
    /// <summary>
    /// Plastic hammer, down.
    /// </summary>
    public const string PictBeaterHammerPlasticDown = "Plastic hammer, down";
    /// <summary>
    /// Plastic hammer, up.
    /// </summary>
    public const string PictBeaterHammerPlasticUp = "Plastic hammer, up";
    /// <summary>
    /// Wooden hammer, down.
    /// </summary>
    public const string PictBeaterHammerWoodDown = "Wooden hammer, down";
    /// <summary>
    /// Wooden hammer, up.
    /// </summary>
    public const string PictBeaterHammerWoodUp = "Wooden hammer, up";
    /// <summary>
    /// Hand.
    /// </summary>
    public const string PictBeaterHand = "Hand";
    /// <summary>
    /// Hard bass drum stick down.
    /// </summary>
    public const string PictBeaterHardBassDrumDown = "Hard bass drum stick down";
    /// <summary>
    /// Hard bass drum stick up.
    /// </summary>
    public const string PictBeaterHardBassDrumUp = "Hard bass drum stick up";
    /// <summary>
    /// Hard glockenspiel stick down.
    /// </summary>
    public const string PictBeaterHardGlockenspielDown = "Hard glockenspiel stick down";
    /// <summary>
    /// Hard glockenspiel stick left.
    /// </summary>
    public const string PictBeaterHardGlockenspielLeft = "Hard glockenspiel stick left";
    /// <summary>
    /// Hard glockenspiel stick right.
    /// </summary>
    public const string PictBeaterHardGlockenspielRight = "Hard glockenspiel stick right";
    /// <summary>
    /// Hard glockenspiel stick up.
    /// </summary>
    public const string PictBeaterHardGlockenspielUp = "Hard glockenspiel stick up";
    /// <summary>
    /// Hard timpani stick down.
    /// </summary>
    public const string PictBeaterHardTimpaniDown = "Hard timpani stick down";
    /// <summary>
    /// Hard timpani stick left.
    /// </summary>
    public const string PictBeaterHardTimpaniLeft = "Hard timpani stick left";
    /// <summary>
    /// Hard timpani stick right.
    /// </summary>
    public const string PictBeaterHardTimpaniRight = "Hard timpani stick right";
    /// <summary>
    /// Hard timpani stick up.
    /// </summary>
    public const string PictBeaterHardTimpaniUp = "Hard timpani stick up";
    /// <summary>
    /// Hard xylophone stick down.
    /// </summary>
    public const string PictBeaterHardXylophoneDown = "Hard xylophone stick down";
    /// <summary>
    /// Hard xylophone stick left.
    /// </summary>
    public const string PictBeaterHardXylophoneLeft = "Hard xylophone stick left";
    /// <summary>
    /// Hard xylophone stick right.
    /// </summary>
    public const string PictBeaterHardXylophoneRight = "Hard xylophone stick right";
    /// <summary>
    /// Hard xylophone stick up.
    /// </summary>
    public const string PictBeaterHardXylophoneUp = "Hard xylophone stick up";
    /// <summary>
    /// Hard yarn beater down.
    /// </summary>
    public const string PictBeaterHardYarnDown = "Hard yarn beater down";
    /// <summary>
    /// Hard yarn beater left.
    /// </summary>
    public const string PictBeaterHardYarnLeft = "Hard yarn beater left";
    /// <summary>
    /// Hard yarn beater right.
    /// </summary>
    public const string PictBeaterHardYarnRight = "Hard yarn beater right";
    /// <summary>
    /// Hard yarn beater up.
    /// </summary>
    public const string PictBeaterHardYarnUp = "Hard yarn beater up";
    /// <summary>
    /// Jazz sticks down.
    /// </summary>
    public const string PictBeaterJazzSticksDown = "Jazz sticks down";
    /// <summary>
    /// Jazz sticks up.
    /// </summary>
    public const string PictBeaterJazzSticksUp = "Jazz sticks up";
    /// <summary>
    /// Knitting needle.
    /// </summary>
    public const string PictBeaterKnittingNeedle = "Knitting needle";
    /// <summary>
    /// Chime hammer up.
    /// </summary>
    public const string PictBeaterMallet = "Chime hammer up";
    /// <summary>
    /// Chime hammer down.
    /// </summary>
    public const string PictBeaterMalletDown = "Chime hammer down";
    /// <summary>
    /// Medium bass drum stick down.
    /// </summary>
    public const string PictBeaterMediumBassDrumDown = "Medium bass drum stick down";
    /// <summary>
    /// Medium bass drum stick up.
    /// </summary>
    public const string PictBeaterMediumBassDrumUp = "Medium bass drum stick up";
    /// <summary>
    /// Medium timpani stick down.
    /// </summary>
    public const string PictBeaterMediumTimpaniDown = "Medium timpani stick down";
    /// <summary>
    /// Medium timpani stick left.
    /// </summary>
    public const string PictBeaterMediumTimpaniLeft = "Medium timpani stick left";
    /// <summary>
    /// Medium timpani stick right.
    /// </summary>
    public const string PictBeaterMediumTimpaniRight = "Medium timpani stick right";
    /// <summary>
    /// Medium timpani stick up.
    /// </summary>
    public const string PictBeaterMediumTimpaniUp = "Medium timpani stick up";
    /// <summary>
    /// Medium xylophone stick down.
    /// </summary>
    public const string PictBeaterMediumXylophoneDown = "Medium xylophone stick down";
    /// <summary>
    /// Medium xylophone stick left.
    /// </summary>
    public const string PictBeaterMediumXylophoneLeft = "Medium xylophone stick left";
    /// <summary>
    /// Medium xylophone stick right.
    /// </summary>
    public const string PictBeaterMediumXylophoneRight = "Medium xylophone stick right";
    /// <summary>
    /// Medium xylophone stick up.
    /// </summary>
    public const string PictBeaterMediumXylophoneUp = "Medium xylophone stick up";
    /// <summary>
    /// Medium yarn beater down.
    /// </summary>
    public const string PictBeaterMediumYarnDown = "Medium yarn beater down";
    /// <summary>
    /// Medium yarn beater left.
    /// </summary>
    public const string PictBeaterMediumYarnLeft = "Medium yarn beater left";
    /// <summary>
    /// Medium yarn beater right.
    /// </summary>
    public const string PictBeaterMediumYarnRight = "Medium yarn beater right";
    /// <summary>
    /// Medium yarn beater up.
    /// </summary>
    public const string PictBeaterMediumYarnUp = "Medium yarn beater up";
    /// <summary>
    /// Metal bass drum stick down.
    /// </summary>
    public const string PictBeaterMetalBassDrumDown = "Metal bass drum stick down";
    /// <summary>
    /// Metal bass drum stick up.
    /// </summary>
    public const string PictBeaterMetalBassDrumUp = "Metal bass drum stick up";
    /// <summary>
    /// Metal beater down.
    /// </summary>
    public const string PictBeaterMetalDown = "Metal beater down";
    /// <summary>
    /// Metal hammer.
    /// </summary>
    public const string PictBeaterMetalHammer = "Metal hammer";
    /// <summary>
    /// Metal beater, left.
    /// </summary>
    public const string PictBeaterMetalLeft = "Metal beater, left";
    /// <summary>
    /// Metal beater, right.
    /// </summary>
    public const string PictBeaterMetalRight = "Metal beater, right";
    /// <summary>
    /// Metal beater, up.
    /// </summary>
    public const string PictBeaterMetalUp = "Metal beater, up";
    /// <summary>
    /// Snare sticks down.
    /// </summary>
    public const string PictBeaterSnareSticksDown = "Snare sticks down";
    /// <summary>
    /// Snare sticks up.
    /// </summary>
    public const string PictBeaterSnareSticksUp = "Snare sticks up";
    /// <summary>
    /// Soft bass drum stick down.
    /// </summary>
    public const string PictBeaterSoftBassDrumDown = "Soft bass drum stick down";
    /// <summary>
    /// Soft bass drum stick up.
    /// </summary>
    public const string PictBeaterSoftBassDrumUp = "Soft bass drum stick up";
    /// <summary>
    /// Soft glockenspiel stick down.
    /// </summary>
    public const string PictBeaterSoftGlockenspielDown = "Soft glockenspiel stick down";
    /// <summary>
    /// Soft glockenspiel stick left.
    /// </summary>
    public const string PictBeaterSoftGlockenspielLeft = "Soft glockenspiel stick left";
    /// <summary>
    /// Soft glockenspiel stick right.
    /// </summary>
    public const string PictBeaterSoftGlockenspielRight = "Soft glockenspiel stick right";
    /// <summary>
    /// Soft glockenspiel stick up.
    /// </summary>
    public const string PictBeaterSoftGlockenspielUp = "Soft glockenspiel stick up";
    /// <summary>
    /// Soft timpani stick down.
    /// </summary>
    public const string PictBeaterSoftTimpaniDown = "Soft timpani stick down";
    /// <summary>
    /// Soft timpani stick left.
    /// </summary>
    public const string PictBeaterSoftTimpaniLeft = "Soft timpani stick left";
    /// <summary>
    /// Soft timpani stick right.
    /// </summary>
    public const string PictBeaterSoftTimpaniRight = "Soft timpani stick right";
    /// <summary>
    /// Soft timpani stick up.
    /// </summary>
    public const string PictBeaterSoftTimpaniUp = "Soft timpani stick up";
    /// <summary>
    /// Soft xylophone beaters.
    /// </summary>
    public const string PictBeaterSoftXylophone = "Soft xylophone beaters";
    /// <summary>
    /// Soft xylophone stick down.
    /// </summary>
    public const string PictBeaterSoftXylophoneDown = "Soft xylophone stick down";
    /// <summary>
    /// Soft xylophone stick left.
    /// </summary>
    public const string PictBeaterSoftXylophoneLeft = "Soft xylophone stick left";
    /// <summary>
    /// Soft xylophone stick right.
    /// </summary>
    public const string PictBeaterSoftXylophoneRight = "Soft xylophone stick right";
    /// <summary>
    /// Soft xylophone stick up.
    /// </summary>
    public const string PictBeaterSoftXylophoneUp = "Soft xylophone stick up";
    /// <summary>
    /// Soft yarn beater down.
    /// </summary>
    public const string PictBeaterSoftYarnDown = "Soft yarn beater down";
    /// <summary>
    /// Soft yarn beater left.
    /// </summary>
    public const string PictBeaterSoftYarnLeft = "Soft yarn beater left";
    /// <summary>
    /// Soft yarn beater right.
    /// </summary>
    public const string PictBeaterSoftYarnRight = "Soft yarn beater right";
    /// <summary>
    /// Soft yarn beater up.
    /// </summary>
    public const string PictBeaterSoftYarnUp = "Soft yarn beater up";
    /// <summary>
    /// Spoon-shaped wooden mallet.
    /// </summary>
    public const string PictBeaterSpoonWoodenMallet = "Spoon-shaped wooden mallet";
    /// <summary>
    /// Superball beater down.
    /// </summary>
    public const string PictBeaterSuperballDown = "Superball beater down";
    /// <summary>
    /// Superball beater left.
    /// </summary>
    public const string PictBeaterSuperballLeft = "Superball beater left";
    /// <summary>
    /// Superball beater right.
    /// </summary>
    public const string PictBeaterSuperballRight = "Superball beater right";
    /// <summary>
    /// Superball beater up.
    /// </summary>
    public const string PictBeaterSuperballUp = "Superball beater up";
    /// <summary>
    /// Triangle beater down.
    /// </summary>
    public const string PictBeaterTriangleDown = "Triangle beater down";
    /// <summary>
    /// Triangle beater plain.
    /// </summary>
    public const string PictBeaterTrianglePlain = "Triangle beater plain";
    /// <summary>
    /// Triangle beater up.
    /// </summary>
    public const string PictBeaterTriangleUp = "Triangle beater up";
    /// <summary>
    /// Wire brushes down.
    /// </summary>
    public const string PictBeaterWireBrushesDown = "Wire brushes down";
    /// <summary>
    /// Wire brushes up.
    /// </summary>
    public const string PictBeaterWireBrushesUp = "Wire brushes up";
    /// <summary>
    /// Wood timpani stick down.
    /// </summary>
    public const string PictBeaterWoodTimpaniDown = "Wood timpani stick down";
    /// <summary>
    /// Wood timpani stick left.
    /// </summary>
    public const string PictBeaterWoodTimpaniLeft = "Wood timpani stick left";
    /// <summary>
    /// Wood timpani stick right.
    /// </summary>
    public const string PictBeaterWoodTimpaniRight = "Wood timpani stick right";
    /// <summary>
    /// Wood timpani stick up.
    /// </summary>
    public const string PictBeaterWoodTimpaniUp = "Wood timpani stick up";
    /// <summary>
    /// Wood xylophone stick down.
    /// </summary>
    public const string PictBeaterWoodXylophoneDown = "Wood xylophone stick down";
    /// <summary>
    /// Wood xylophone stick left.
    /// </summary>
    public const string PictBeaterWoodXylophoneLeft = "Wood xylophone stick left";
    /// <summary>
    /// Wood xylophone stick right.
    /// </summary>
    public const string PictBeaterWoodXylophoneRight = "Wood xylophone stick right";
    /// <summary>
    /// Wood xylophone stick up.
    /// </summary>
    public const string PictBeaterWoodXylophoneUp = "Wood xylophone stick up";
    /// <summary>
    /// Bell.
    /// </summary>
    public const string PictBell = "Bell";
    /// <summary>
    /// Bell of cymbal.
    /// </summary>
    public const string PictBellOfCymbal = "Bell of cymbal";
    /// <summary>
    /// Bell plate.
    /// </summary>
    public const string PictBellPlate = "Bell plate";
    /// <summary>
    /// Bell tree.
    /// </summary>
    public const string PictBellTree = "Bell tree";
    /// <summary>
    /// Bird whistle.
    /// </summary>
    public const string PictBirdWhistle = "Bird whistle";
    /// <summary>
    /// Board clapper.
    /// </summary>
    public const string PictBoardClapper = "Board clapper";
    /// <summary>
    /// Bongos.
    /// </summary>
    public const string PictBongos = "Bongos";
    /// <summary>
    /// Brake drum.
    /// </summary>
    public const string PictBrakeDrum = "Brake drum";
    /// <summary>
    /// Cabasa.
    /// </summary>
    public const string PictCabasa = "Cabasa";
    /// <summary>
    /// Cannon.
    /// </summary>
    public const string PictCannon = "Cannon";
    /// <summary>
    /// Car horn.
    /// </summary>
    public const string PictCarHorn = "Car horn";
    /// <summary>
    /// Castanets.
    /// </summary>
    public const string PictCastanets = "Castanets";
    /// <summary>
    /// Castanets with handle.
    /// </summary>
    public const string PictCastanetsWithHandle = "Castanets with handle";
    /// <summary>
    /// Celesta.
    /// </summary>
    public const string PictCelesta = "Celesta";
    /// <summary>
    /// Cencerro.
    /// </summary>
    public const string PictCencerro = "Cencerro";
    /// <summary>
    /// Center (Weinberg).
    /// </summary>
    public const string PictCenter1 = "Center (Weinberg)";
    /// <summary>
    /// Center (Ghent).
    /// </summary>
    public const string PictCenter2 = "Center (Ghent)";
    /// <summary>
    /// Center (Caltabiano).
    /// </summary>
    public const string PictCenter3 = "Center (Caltabiano)";
    /// <summary>
    /// Chain rattle.
    /// </summary>
    public const string PictChainRattle = "Chain rattle";
    /// <summary>
    /// Chimes.
    /// </summary>
    public const string PictChimes = "Chimes";
    /// <summary>
    /// Chinese cymbal.
    /// </summary>
    public const string PictChineseCymbal = "Chinese cymbal";
    /// <summary>
    /// Choke (Weinberg).
    /// </summary>
    public const string PictChokeCymbal = "Choke (Weinberg)";
    /// <summary>
    /// Claves.
    /// </summary>
    public const string PictClaves = "Claves";
    /// <summary>
    /// Coins.
    /// </summary>
    public const string PictCoins = "Coins";
    /// <summary>
    /// Conga.
    /// </summary>
    public const string PictConga = "Conga";
    /// <summary>
    /// Cow bell.
    /// </summary>
    public const string PictCowBell = "Cow bell";
    /// <summary>
    /// Crash cymbals.
    /// </summary>
    public const string PictCrashCymbals = "Crash cymbals";
    /// <summary>
    /// Crotales.
    /// </summary>
    public const string PictCrotales = "Crotales";
    /// <summary>
    /// Combining crush for stem.
    /// </summary>
    public const string PictCrushStem = "Combining crush for stem";
    /// <summary>
    /// Cuica.
    /// </summary>
    public const string PictCuica = "Cuica";
    /// <summary>
    /// Cymbal tongs.
    /// </summary>
    public const string PictCymbalTongs = "Cymbal tongs";
    /// <summary>
    /// Damp.
    /// </summary>
    public const string PictDamp1 = "Damp";
    /// <summary>
    /// Damp 2.
    /// </summary>
    public const string PictDamp2 = "Damp 2";
    /// <summary>
    /// Damp 3.
    /// </summary>
    public const string PictDamp3 = "Damp 3";
    /// <summary>
    /// Damp 4.
    /// </summary>
    public const string PictDamp4 = "Damp 4";
    /// <summary>
    /// Combining X for stem (dead note).
    /// </summary>
    public const string PictDeadNoteStem = "Combining X for stem (dead note)";
    /// <summary>
    /// Drum stick.
    /// </summary>
    public const string PictDrumStick = "Drum stick";
    /// <summary>
    /// Duck call.
    /// </summary>
    public const string PictDuckCall = "Duck call";
    /// <summary>
    /// Edge of cymbal.
    /// </summary>
    public const string PictEdgeOfCymbal = "Edge of cymbal";
    /// <summary>
    /// Empty trapezoid.
    /// </summary>
    public const string PictEmptyTrap = "Empty trapezoid";
    /// <summary>
    /// Finger cymbals.
    /// </summary>
    public const string PictFingerCymbals = "Finger cymbals";
    /// <summary>
    /// Flexatone.
    /// </summary>
    public const string PictFlexatone = "Flexatone";
    /// <summary>
    /// Football rattle.
    /// </summary>
    public const string PictFootballRatchet = "Football rattle";
    /// <summary>
    /// Glass harmonica.
    /// </summary>
    public const string PictGlassHarmonica = "Glass harmonica";
    /// <summary>
    /// Glass harp.
    /// </summary>
    public const string PictGlassHarp = "Glass harp";
    /// <summary>
    /// Glass plate chimes.
    /// </summary>
    public const string PictGlassPlateChimes = "Glass plate chimes";
    /// <summary>
    /// Glass tube chimes.
    /// </summary>
    public const string PictGlassTubeChimes = "Glass tube chimes";
    /// <summary>
    /// Glockenspiel.
    /// </summary>
    public const string PictGlsp = "Glockenspiel";
    /// <summary>
    /// Glockenspiel (Smith Brindle).
    /// </summary>
    public const string PictGlspSmithBrindle = "Glockenspiel (Smith Brindle)";
    /// <summary>
    /// Goblet drum (djembe, dumbek).
    /// </summary>
    public const string PictGobletDrum = "Goblet drum (djembe, dumbek)";
    /// <summary>
    /// Gong.
    /// </summary>
    public const string PictGong = "Gong";
    /// <summary>
    /// Gong with button (nipple).
    /// </summary>
    public const string PictGongWithButton = "Gong with button (nipple)";
    /// <summary>
    /// Guiro.
    /// </summary>
    public const string PictGuiro = "Guiro";
    /// <summary>
    /// Hard gum beater, down.
    /// </summary>
    public const string PictGumHardDown = "Hard gum beater, down";
    /// <summary>
    /// Hard gum beater, left.
    /// </summary>
    public const string PictGumHardLeft = "Hard gum beater, left";
    /// <summary>
    /// Hard gum beater, right.
    /// </summary>
    public const string PictGumHardRight = "Hard gum beater, right";
    /// <summary>
    /// Hard gum beater, up.
    /// </summary>
    public const string PictGumHardUp = "Hard gum beater, up";
    /// <summary>
    /// Medium gum beater, down.
    /// </summary>
    public const string PictGumMediumDown = "Medium gum beater, down";
    /// <summary>
    /// Medium gum beater, left.
    /// </summary>
    public const string PictGumMediumLeft = "Medium gum beater, left";
    /// <summary>
    /// Medium gum beater, right.
    /// </summary>
    public const string PictGumMediumRight = "Medium gum beater, right";
    /// <summary>
    /// Medium gum beater, up.
    /// </summary>
    public const string PictGumMediumUp = "Medium gum beater, up";
    /// <summary>
    /// Soft gum beater, down.
    /// </summary>
    public const string PictGumSoftDown = "Soft gum beater, down";
    /// <summary>
    /// Soft gum beater, left.
    /// </summary>
    public const string PictGumSoftLeft = "Soft gum beater, left";
    /// <summary>
    /// Soft gum beater, right.
    /// </summary>
    public const string PictGumSoftRight = "Soft gum beater, right";
    /// <summary>
    /// Soft gum beater, up.
    /// </summary>
    public const string PictGumSoftUp = "Soft gum beater, up";
    /// <summary>
    /// Half-open.
    /// </summary>
    public const string PictHalfOpen1 = "Half-open";
    /// <summary>
    /// Half-open 2 (Weinberg).
    /// </summary>
    public const string PictHalfOpen2 = "Half-open 2 (Weinberg)";
    /// <summary>
    /// Handbell.
    /// </summary>
    public const string PictHandbell = "Handbell";
    /// <summary>
    /// Hi-hat.
    /// </summary>
    public const string PictHiHat = "Hi-hat";
    /// <summary>
    /// Hi-hat cymbals on stand.
    /// </summary>
    public const string PictHiHatOnStand = "Hi-hat cymbals on stand";
    /// <summary>
    /// Jaw harp.
    /// </summary>
    public const string PictJawHarp = "Jaw harp";
    /// <summary>
    /// Jingle bells.
    /// </summary>
    public const string PictJingleBells = "Jingle bells";
    /// <summary>
    /// Klaxon horn.
    /// </summary>
    public const string PictKlaxonHorn = "Klaxon horn";
    /// <summary>
    /// Right hand (Agostini).
    /// </summary>
    public const string PictLeftHandCircle = "Right hand (Agostini)";
    /// <summary>
    /// Lion's roar.
    /// </summary>
    public const string PictLionsRoar = "Lion's roar";
    /// <summary>
    /// Lithophone.
    /// </summary>
    public const string PictLithophone = "Lithophone";
    /// <summary>
    /// Log drum.
    /// </summary>
    public const string PictLogDrum = "Log drum";
    /// <summary>
    /// Lotus flute.
    /// </summary>
    public const string PictLotusFlute = "Lotus flute";
    /// <summary>
    /// Marimba.
    /// </summary>
    public const string PictMar = "Marimba";
    /// <summary>
    /// Marimba (Smith Brindle).
    /// </summary>
    public const string PictMarSmithBrindle = "Marimba (Smith Brindle)";
    /// <summary>
    /// Maraca.
    /// </summary>
    public const string PictMaraca = "Maraca";
    /// <summary>
    /// Maracas.
    /// </summary>
    public const string PictMaracas = "Maracas";
    /// <summary>
    /// Megaphone.
    /// </summary>
    public const string PictMegaphone = "Megaphone";
    /// <summary>
    /// Metal plate chimes.
    /// </summary>
    public const string PictMetalPlateChimes = "Metal plate chimes";
    /// <summary>
    /// Metal tube chimes.
    /// </summary>
    public const string PictMetalTubeChimes = "Metal tube chimes";
    /// <summary>
    /// Musical saw.
    /// </summary>
    public const string PictMusicalSaw = "Musical saw";
    /// <summary>
    /// Normal position (Caltabiano).
    /// </summary>
    public const string PictNormalPosition = "Normal position (Caltabiano)";
    /// <summary>
    /// On rim.
    /// </summary>
    public const string PictOnRim = "On rim";
    /// <summary>
    /// Open.
    /// </summary>
    public const string PictOpen = "Open";
    /// <summary>
    /// Closed / rim shot.
    /// </summary>
    public const string PictOpenRimShot = "Closed / rim shot";
    /// <summary>
    /// Pistol shot.
    /// </summary>
    public const string PictPistolShot = "Pistol shot";
    /// <summary>
    /// Police whistle.
    /// </summary>
    public const string PictPoliceWhistle = "Police whistle";
    /// <summary>
    /// Quijada (jawbone).
    /// </summary>
    public const string PictQuijada = "Quijada (jawbone)";
    /// <summary>
    /// Rainstick.
    /// </summary>
    public const string PictRainstick = "Rainstick";
    /// <summary>
    /// Ratchet.
    /// </summary>
    public const string PictRatchet = "Ratchet";
    /// <summary>
    /// Reco-reco.
    /// </summary>
    public const string PictRecoReco = "Reco-reco";
    /// <summary>
    /// Left hand (Agostini).
    /// </summary>
    public const string PictRightHandSquare = "Left hand (Agostini)";
    /// <summary>
    /// Rim or edge (Weinberg).
    /// </summary>
    public const string PictRim1 = "Rim or edge (Weinberg)";
    /// <summary>
    /// Rim (Ghent).
    /// </summary>
    public const string PictRim2 = "Rim (Ghent)";
    /// <summary>
    /// Rim (Caltabiano).
    /// </summary>
    public const string PictRim3 = "Rim (Caltabiano)";
    /// <summary>
    /// Rim shot for stem.
    /// </summary>
    public const string PictRimShotOnStem = "Rim shot for stem";
    /// <summary>
    /// Sandpaper blocks.
    /// </summary>
    public const string PictSandpaperBlocks = "Sandpaper blocks";
    /// <summary>
    /// Scrape around rim (counter-clockwise).
    /// </summary>
    public const string PictScrapeAroundRim = "Scrape around rim (counter-clockwise)";
    /// <summary>
    /// Scrape around rim (clockwise).
    /// </summary>
    public const string PictScrapeAroundRimClockwise = "Scrape around rim (clockwise)";
    /// <summary>
    /// Scrape from center to edge.
    /// </summary>
    public const string PictScrapeCenterToEdge = "Scrape from center to edge";
    /// <summary>
    /// Scrape from edge to center.
    /// </summary>
    public const string PictScrapeEdgeToCenter = "Scrape from edge to center";
    /// <summary>
    /// Shell bells.
    /// </summary>
    public const string PictShellBells = "Shell bells";
    /// <summary>
    /// Shell chimes.
    /// </summary>
    public const string PictShellChimes = "Shell chimes";
    /// <summary>
    /// Siren.
    /// </summary>
    public const string PictSiren = "Siren";
    /// <summary>
    /// Sistrum.
    /// </summary>
    public const string PictSistrum = "Sistrum";
    /// <summary>
    /// Sizzle cymbal.
    /// </summary>
    public const string PictSizzleCymbal = "Sizzle cymbal";
    /// <summary>
    /// Sleigh bell.
    /// </summary>
    public const string PictSleighBell = "Sleigh bell";
    /// <summary>
    /// Slide brush on gong.
    /// </summary>
    public const string PictSlideBrushOnGong = "Slide brush on gong";
    /// <summary>
    /// Slide whistle.
    /// </summary>
    public const string PictSlideWhistle = "Slide whistle";
    /// <summary>
    /// Slit drum.
    /// </summary>
    public const string PictSlitDrum = "Slit drum";
    /// <summary>
    /// Snare drum.
    /// </summary>
    public const string PictSnareDrum = "Snare drum";
    /// <summary>
    /// Military snare drum.
    /// </summary>
    public const string PictSnareDrumMilitary = "Military snare drum";
    /// <summary>
    /// Snare drum, snares off.
    /// </summary>
    public const string PictSnareDrumSnaresOff = "Snare drum, snares off";
    /// <summary>
    /// Steel drums.
    /// </summary>
    public const string PictSteelDrums = "Steel drums";
    /// <summary>
    /// Stick shot.
    /// </summary>
    public const string PictStickShot = "Stick shot";
    /// <summary>
    /// Superball.
    /// </summary>
    public const string PictSuperball = "Superball";
    /// <summary>
    /// Suspended cymbal.
    /// </summary>
    public const string PictSuspendedCymbal = "Suspended cymbal";
    /// <summary>
    /// Combining swish for stem.
    /// </summary>
    public const string PictSwishStem = "Combining swish for stem";
    /// <summary>
    /// Indian tabla.
    /// </summary>
    public const string PictTabla = "Indian tabla";
    /// <summary>
    /// Tam-tam.
    /// </summary>
    public const string PictTamTam = "Tam-tam";
    /// <summary>
    /// Tam-tam with beater (Smith Brindle).
    /// </summary>
    public const string PictTamTamWithBeater = "Tam-tam with beater (Smith Brindle)";
    /// <summary>
    /// Tambourine.
    /// </summary>
    public const string PictTambourine = "Tambourine";
    /// <summary>
    /// Temple blocks.
    /// </summary>
    public const string PictTempleBlocks = "Temple blocks";
    /// <summary>
    /// Tenor drum.
    /// </summary>
    public const string PictTenorDrum = "Tenor drum";
    /// <summary>
    /// Thundersheet.
    /// </summary>
    public const string PictThundersheet = "Thundersheet";
    /// <summary>
    /// Timbales.
    /// </summary>
    public const string PictTimbales = "Timbales";
    /// <summary>
    /// Timpani.
    /// </summary>
    public const string PictTimpani = "Timpani";
    /// <summary>
    /// Tom-tom.
    /// </summary>
    public const string PictTomTom = "Tom-tom";
    /// <summary>
    /// Chinese tom-tom.
    /// </summary>
    public const string PictTomTomChinese = "Chinese tom-tom";
    /// <summary>
    /// Indo-American tom tom.
    /// </summary>
    public const string PictTomTomIndoAmerican = "Indo-American tom tom";
    /// <summary>
    /// Japanese tom-tom.
    /// </summary>
    public const string PictTomTomJapanese = "Japanese tom-tom";
    /// <summary>
    /// Triangle.
    /// </summary>
    public const string PictTriangle = "Triangle";
    /// <summary>
    /// Tubaphone.
    /// </summary>
    public const string PictTubaphone = "Tubaphone";
    /// <summary>
    /// Tubular bells.
    /// </summary>
    public const string PictTubularBells = "Tubular bells";
    /// <summary>
    /// Combining turn left for stem.
    /// </summary>
    public const string PictTurnLeftStem = "Combining turn left for stem";
    /// <summary>
    /// Combining turn left or right for stem.
    /// </summary>
    public const string PictTurnRightLeftStem = "Combining turn left or right for stem";
    /// <summary>
    /// Combining turn right for stem.
    /// </summary>
    public const string PictTurnRightStem = "Combining turn right for stem";
    /// <summary>
    /// Vibraphone.
    /// </summary>
    public const string PictVib = "Vibraphone";
    /// <summary>
    /// Metallophone (vibraphone motor off).
    /// </summary>
    public const string PictVibMotorOff = "Metallophone (vibraphone motor off)";
    /// <summary>
    /// Vibraphone (Smith Brindle).
    /// </summary>
    public const string PictVibSmithBrindle = "Vibraphone (Smith Brindle)";
    /// <summary>
    /// Vibraslap.
    /// </summary>
    public const string PictVibraslap = "Vibraslap";
    /// <summary>
    /// Vietnamese hat cymbal.
    /// </summary>
    public const string PictVietnameseHat = "Vietnamese hat cymbal";
    /// <summary>
    /// Whip.
    /// </summary>
    public const string PictWhip = "Whip";
    /// <summary>
    /// Wind chimes (glass).
    /// </summary>
    public const string PictWindChimesGlass = "Wind chimes (glass)";
    /// <summary>
    /// Wind machine.
    /// </summary>
    public const string PictWindMachine = "Wind machine";
    /// <summary>
    /// Wind whistle (or mouth siren).
    /// </summary>
    public const string PictWindWhistle = "Wind whistle (or mouth siren)";
    /// <summary>
    /// Wood block.
    /// </summary>
    public const string PictWoodBlock = "Wood block";
    /// <summary>
    /// Wound beater, hard core down.
    /// </summary>
    public const string PictWoundHardDown = "Wound beater, hard core down";
    /// <summary>
    /// Wound beater, hard core left.
    /// </summary>
    public const string PictWoundHardLeft = "Wound beater, hard core left";
    /// <summary>
    /// Wound beater, hard core right.
    /// </summary>
    public const string PictWoundHardRight = "Wound beater, hard core right";
    /// <summary>
    /// Wound beater, hard core up.
    /// </summary>
    public const string PictWoundHardUp = "Wound beater, hard core up";
    /// <summary>
    /// Wound beater, soft core down.
    /// </summary>
    public const string PictWoundSoftDown = "Wound beater, soft core down";
    /// <summary>
    /// Wound beater, soft core left.
    /// </summary>
    public const string PictWoundSoftLeft = "Wound beater, soft core left";
    /// <summary>
    /// Wound beater, soft core right.
    /// </summary>
    public const string PictWoundSoftRight = "Wound beater, soft core right";
    /// <summary>
    /// Wound beater, soft core up.
    /// </summary>
    public const string PictWoundSoftUp = "Wound beater, soft core up";
    /// <summary>
    /// Xylophone.
    /// </summary>
    public const string PictXyl = "Xylophone";
    /// <summary>
    /// Bass xylophone.
    /// </summary>
    public const string PictXylBass = "Bass xylophone";
    /// <summary>
    /// Xylophone (Smith Brindle).
    /// </summary>
    public const string PictXylSmithBrindle = "Xylophone (Smith Brindle)";
    /// <summary>
    /// Tenor xylophone.
    /// </summary>
    public const string PictXylTenor = "Tenor xylophone";
    /// <summary>
    /// Trough tenor xylophone.
    /// </summary>
    public const string PictXylTenorTrough = "Trough tenor xylophone";
    /// <summary>
    /// Trough xylophone.
    /// </summary>
    public const string PictXylTrough = "Trough xylophone";
    /// <summary>
    /// Buzz pizzicato.
    /// </summary>
    public const string PluckedBuzzPizzicato = "Buzz pizzicato";
    /// <summary>
    /// Damp.
    /// </summary>
    public const string PluckedDamp = "Damp";
    /// <summary>
    /// Damp all.
    /// </summary>
    public const string PluckedDampAll = "Damp all";
    /// <summary>
    /// Damp for stem.
    /// </summary>
    public const string PluckedDampOnStem = "Damp for stem";
    /// <summary>
    /// Fingernail flick.
    /// </summary>
    public const string PluckedFingernailFlick = "Fingernail flick";
    /// <summary>
    /// Left-hand pizzicato.
    /// </summary>
    public const string PluckedLeftHandPizzicato = "Left-hand pizzicato";
    /// <summary>
    /// Plectrum.
    /// </summary>
    public const string PluckedPlectrum = "Plectrum";
    /// <summary>
    /// Snap pizzicato above.
    /// </summary>
    public const string PluckedSnapPizzicatoAbove = "Snap pizzicato above";
    /// <summary>
    /// Snap pizzicato below.
    /// </summary>
    public const string PluckedSnapPizzicatoBelow = "Snap pizzicato below";
    /// <summary>
    /// With fingernails.
    /// </summary>
    public const string PluckedWithFingernails = "With fingernails";
    /// <summary>
    /// Quindicesima.
    /// </summary>
    public const string Quindicesima = "Quindicesima";
    /// <summary>
    /// Quindicesima alta.
    /// </summary>
    public const string QuindicesimaAlta = "Quindicesima alta";
    /// <summary>
    /// Quindicesima bassa.
    /// </summary>
    public const string QuindicesimaBassa = "Quindicesima bassa";
    /// <summary>
    /// Quindicesima bassa (mb).
    /// </summary>
    public const string QuindicesimaBassaMb = "Quindicesima bassa (mb)";
    /// <summary>
    /// Repeat last bar.
    /// </summary>
    public const string Repeat1Bar = "Repeat last bar";
    /// <summary>
    /// Repeat last two bars.
    /// </summary>
    public const string Repeat2Bars = "Repeat last two bars";
    /// <summary>
    /// Repeat last four bars.
    /// </summary>
    public const string Repeat4Bars = "Repeat last four bars";
    /// <summary>
    /// Repeat bar lower dot.
    /// </summary>
    public const string RepeatBarLowerDot = "Repeat bar lower dot";
    /// <summary>
    /// Repeat bar slash.
    /// </summary>
    public const string RepeatBarSlash = "Repeat bar slash";
    /// <summary>
    /// Repeat bar upper dot.
    /// </summary>
    public const string RepeatBarUpperDot = "Repeat bar upper dot";
    /// <summary>
    /// Single repeat dot.
    /// </summary>
    public const string RepeatDot = "Single repeat dot";
    /// <summary>
    /// Repeat dots.
    /// </summary>
    public const string RepeatDots = "Repeat dots";
    /// <summary>
    /// Left (start) repeat sign.
    /// </summary>
    public const string RepeatLeft = "Left (start) repeat sign";
    /// <summary>
    /// Right (end) repeat sign.
    /// </summary>
    public const string RepeatRight = "Right (end) repeat sign";
    /// <summary>
    /// Right and left repeat sign.
    /// </summary>
    public const string RepeatRightLeft = "Right and left repeat sign";
    /// <summary>
    /// 1024th rest.
    /// </summary>
    public const string Rest1024th = "1024th rest";
    /// <summary>
    /// 128th (semihemidemisemiquaver) rest.
    /// </summary>
    public const string Rest128th = "128th (semihemidemisemiquaver) rest";
    /// <summary>
    /// 16th (semiquaver) rest.
    /// </summary>
    public const string Rest16th = "16th (semiquaver) rest";
    /// <summary>
    /// 256th rest.
    /// </summary>
    public const string Rest256th = "256th rest";
    /// <summary>
    /// 32nd (demisemiquaver) rest.
    /// </summary>
    public const string Rest32nd = "32nd (demisemiquaver) rest";
    /// <summary>
    /// 512th rest.
    /// </summary>
    public const string Rest512th = "512th rest";
    /// <summary>
    /// 64th (hemidemisemiquaver) rest.
    /// </summary>
    public const string Rest64th = "64th (hemidemisemiquaver) rest";
    /// <summary>
    /// Eighth (quaver) rest.
    /// </summary>
    public const string Rest8th = "Eighth (quaver) rest";
    /// <summary>
    /// Double whole (breve) rest.
    /// </summary>
    public const string RestDoubleWhole = "Double whole (breve) rest";
    /// <summary>
    /// Double whole rest on leger lines.
    /// </summary>
    public const string RestDoubleWholeLegerLine = "Double whole rest on leger lines";
    /// <summary>
    /// Multiple measure rest.
    /// </summary>
    public const string RestHBar = "Multiple measure rest";
    /// <summary>
    /// H-bar, left half.
    /// </summary>
    public const string RestHBarLeft = "H-bar, left half";
    /// <summary>
    /// H-bar, middle.
    /// </summary>
    public const string RestHBarMiddle = "H-bar, middle";
    /// <summary>
    /// H-bar, right half.
    /// </summary>
    public const string RestHBarRight = "H-bar, right half";
    /// <summary>
    /// Half (minim) rest.
    /// </summary>
    public const string RestHalf = "Half (minim) rest";
    /// <summary>
    /// Half rest on leger line.
    /// </summary>
    public const string RestHalfLegerLine = "Half rest on leger line";
    /// <summary>
    /// Longa rest.
    /// </summary>
    public const string RestLonga = "Longa rest";
    /// <summary>
    /// Maxima rest.
    /// </summary>
    public const string RestMaxima = "Maxima rest";
    /// <summary>
    /// Quarter (crotchet) rest.
    /// </summary>
    public const string RestQuarter = "Quarter (crotchet) rest";
    /// <summary>
    /// Old-style quarter (crotchet) rest.
    /// </summary>
    public const string RestQuarterOld = "Old-style quarter (crotchet) rest";
    /// <summary>
    /// Z-style quarter (crotchet) rest.
    /// </summary>
    public const string RestQuarterZ = "Z-style quarter (crotchet) rest";
    /// <summary>
    /// Whole (semibreve) rest.
    /// </summary>
    public const string RestWhole = "Whole (semibreve) rest";
    /// <summary>
    /// Whole rest on leger line.
    /// </summary>
    public const string RestWholeLegerLine = "Whole rest on leger line";
    /// <summary>
    /// Reversed brace.
    /// </summary>
    public const string ReversedBrace = "Reversed brace";
    /// <summary>
    /// Reversed bracket bottom.
    /// </summary>
    public const string ReversedBracketBottom = "Reversed bracket bottom";
    /// <summary>
    /// Reversed bracket top.
    /// </summary>
    public const string ReversedBracketTop = "Reversed bracket top";
    /// <summary>
    /// Right repeat sign within bar.
    /// </summary>
    public const string RightRepeatSmall = "Right repeat sign within bar";
    /// <summary>
    /// Scale degree 1.
    /// </summary>
    public const string ScaleDegree1 = "Scale degree 1";
    /// <summary>
    /// Scale degree 2.
    /// </summary>
    public const string ScaleDegree2 = "Scale degree 2";
    /// <summary>
    /// Scale degree 3.
    /// </summary>
    public const string ScaleDegree3 = "Scale degree 3";
    /// <summary>
    /// Scale degree 4.
    /// </summary>
    public const string ScaleDegree4 = "Scale degree 4";
    /// <summary>
    /// Scale degree 5.
    /// </summary>
    public const string ScaleDegree5 = "Scale degree 5";
    /// <summary>
    /// Scale degree 6.
    /// </summary>
    public const string ScaleDegree6 = "Scale degree 6";
    /// <summary>
    /// Scale degree 7.
    /// </summary>
    public const string ScaleDegree7 = "Scale degree 7";
    /// <summary>
    /// Scale degree 8.
    /// </summary>
    public const string ScaleDegree8 = "Scale degree 8";
    /// <summary>
    /// Scale degree 9.
    /// </summary>
    public const string ScaleDegree9 = "Scale degree 9";
    /// <summary>
    /// Schäffer clef.
    /// </summary>
    public const string SchaefferClef = "Schäffer clef";
    /// <summary>
    /// Schäffer F clef to G clef change.
    /// </summary>
    public const string SchaefferFClefToGClef = "Schäffer F clef to G clef change";
    /// <summary>
    /// Schäffer G clef to F clef change.
    /// </summary>
    public const string SchaefferGClefToFClef = "Schäffer G clef to F clef change";
    /// <summary>
    /// Schäffer previous clef.
    /// </summary>
    public const string SchaefferPreviousClef = "Schäffer previous clef";
    /// <summary>
    /// Segno.
    /// </summary>
    public const string Segno = "Segno";
    /// <summary>
    /// Segno (serpent).
    /// </summary>
    public const string SegnoSerpent1 = "Segno (serpent)";
    /// <summary>
    /// Segno (serpent with vertical lines).
    /// </summary>
    public const string SegnoSerpent2 = "Segno (serpent with vertical lines)";
    /// <summary>
    /// Semi-pitched percussion clef 1.
    /// </summary>
    public const string SemipitchedPercussionClef1 = "Semi-pitched percussion clef 1";
    /// <summary>
    /// Semi-pitched percussion clef 2.
    /// </summary>
    public const string SemipitchedPercussionClef2 = "Semi-pitched percussion clef 2";
    /// <summary>
    /// Flat.
    /// </summary>
    public const string SmnFlat = "Flat";
    /// <summary>
    /// Flat (white).
    /// </summary>
    public const string SmnFlatWhite = "Flat (white)";
    /// <summary>
    /// Double flat history sign.
    /// </summary>
    public const string SmnHistoryDoubleFlat = "Double flat history sign";
    /// <summary>
    /// Double sharp history sign.
    /// </summary>
    public const string SmnHistoryDoubleSharp = "Double sharp history sign";
    /// <summary>
    /// Flat history sign.
    /// </summary>
    public const string SmnHistoryFlat = "Flat history sign";
    /// <summary>
    /// Sharp history sign.
    /// </summary>
    public const string SmnHistorySharp = "Sharp history sign";
    /// <summary>
    /// Natural (N).
    /// </summary>
    public const string SmnNatural = "Natural (N)";
    /// <summary>
    /// Sharp stem up.
    /// </summary>
    public const string SmnSharp = "Sharp stem up";
    /// <summary>
    /// Sharp stem down.
    /// </summary>
    public const string SmnSharpDown = "Sharp stem down";
    /// <summary>
    /// Sharp (white) stem up.
    /// </summary>
    public const string SmnSharpWhite = "Sharp (white) stem up";
    /// <summary>
    /// Sharp (white) stem down.
    /// </summary>
    public const string SmnSharpWhiteDown = "Sharp (white) stem down";
    /// <summary>
    /// Split bar divider (bar spans a system break).
    /// </summary>
    public const string SplitBarDivider = "Split bar divider (bar spans a system break)";
    /// <summary>
    /// 1-line staff.
    /// </summary>
    public const string Staff1Line = "1-line staff";
    /// <summary>
    /// 1-line staff (narrow).
    /// </summary>
    public const string Staff1LineNarrow = "1-line staff (narrow)";
    /// <summary>
    /// 1-line staff (wide).
    /// </summary>
    public const string Staff1LineWide = "1-line staff (wide)";
    /// <summary>
    /// 2-line staff.
    /// </summary>
    public const string Staff2Lines = "2-line staff";
    /// <summary>
    /// 2-line staff (narrow).
    /// </summary>
    public const string Staff2LinesNarrow = "2-line staff (narrow)";
    /// <summary>
    /// 2-line staff (wide).
    /// </summary>
    public const string Staff2LinesWide = "2-line staff (wide)";
    /// <summary>
    /// 3-line staff.
    /// </summary>
    public const string Staff3Lines = "3-line staff";
    /// <summary>
    /// 3-line staff (narrow).
    /// </summary>
    public const string Staff3LinesNarrow = "3-line staff (narrow)";
    /// <summary>
    /// 3-line staff (wide).
    /// </summary>
    public const string Staff3LinesWide = "3-line staff (wide)";
    /// <summary>
    /// 4-line staff.
    /// </summary>
    public const string Staff4Lines = "4-line staff";
    /// <summary>
    /// 4-line staff (narrow).
    /// </summary>
    public const string Staff4LinesNarrow = "4-line staff (narrow)";
    /// <summary>
    /// 4-line staff (wide).
    /// </summary>
    public const string Staff4LinesWide = "4-line staff (wide)";
    /// <summary>
    /// 5-line staff.
    /// </summary>
    public const string Staff5Lines = "5-line staff";
    /// <summary>
    /// 5-line staff (narrow).
    /// </summary>
    public const string Staff5LinesNarrow = "5-line staff (narrow)";
    /// <summary>
    /// 5-line staff (wide).
    /// </summary>
    public const string Staff5LinesWide = "5-line staff (wide)";
    /// <summary>
    /// 6-line staff.
    /// </summary>
    public const string Staff6Lines = "6-line staff";
    /// <summary>
    /// 6-line staff (narrow).
    /// </summary>
    public const string Staff6LinesNarrow = "6-line staff (narrow)";
    /// <summary>
    /// 6-line staff (wide).
    /// </summary>
    public const string Staff6LinesWide = "6-line staff (wide)";
    /// <summary>
    /// Staff divide arrow down.
    /// </summary>
    public const string StaffDivideArrowDown = "Staff divide arrow down";
    /// <summary>
    /// Staff divide arrow up.
    /// </summary>
    public const string StaffDivideArrowUp = "Staff divide arrow up";
    /// <summary>
    /// Staff divide arrows.
    /// </summary>
    public const string StaffDivideArrowUpDown = "Staff divide arrows";
    /// <summary>
    /// Lower 1 staff position.
    /// </summary>
    public const string StaffPosLower1 = "Lower 1 staff position";
    /// <summary>
    /// Lower 2 staff positions.
    /// </summary>
    public const string StaffPosLower2 = "Lower 2 staff positions";
    /// <summary>
    /// Lower 3 staff positions.
    /// </summary>
    public const string StaffPosLower3 = "Lower 3 staff positions";
    /// <summary>
    /// Lower 4 staff positions.
    /// </summary>
    public const string StaffPosLower4 = "Lower 4 staff positions";
    /// <summary>
    /// Lower 5 staff positions.
    /// </summary>
    public const string StaffPosLower5 = "Lower 5 staff positions";
    /// <summary>
    /// Lower 6 staff positions.
    /// </summary>
    public const string StaffPosLower6 = "Lower 6 staff positions";
    /// <summary>
    /// Lower 7 staff positions.
    /// </summary>
    public const string StaffPosLower7 = "Lower 7 staff positions";
    /// <summary>
    /// Lower 8 staff positions.
    /// </summary>
    public const string StaffPosLower8 = "Lower 8 staff positions";
    /// <summary>
    /// Raise 1 staff position.
    /// </summary>
    public const string StaffPosRaise1 = "Raise 1 staff position";
    /// <summary>
    /// Raise 2 staff positions.
    /// </summary>
    public const string StaffPosRaise2 = "Raise 2 staff positions";
    /// <summary>
    /// Raise 3 staff positions.
    /// </summary>
    public const string StaffPosRaise3 = "Raise 3 staff positions";
    /// <summary>
    /// Raise 4 staff positions.
    /// </summary>
    public const string StaffPosRaise4 = "Raise 4 staff positions";
    /// <summary>
    /// Raise 5 staff positions.
    /// </summary>
    public const string StaffPosRaise5 = "Raise 5 staff positions";
    /// <summary>
    /// Raise 6 staff positions.
    /// </summary>
    public const string StaffPosRaise6 = "Raise 6 staff positions";
    /// <summary>
    /// Raise 7 staff positions.
    /// </summary>
    public const string StaffPosRaise7 = "Raise 7 staff positions";
    /// <summary>
    /// Raise 8 staff positions.
    /// </summary>
    public const string StaffPosRaise8 = "Raise 8 staff positions";
    /// <summary>
    /// Combining stem.
    /// </summary>
    public const string Stem = "Combining stem";
    /// <summary>
    /// Combining bow on bridge stem.
    /// </summary>
    public const string StemBowOnBridge = "Combining bow on bridge stem";
    /// <summary>
    /// Combining bow on tailpiece stem.
    /// </summary>
    public const string StemBowOnTailpiece = "Combining bow on tailpiece stem";
    /// <summary>
    /// Combining buzz roll stem.
    /// </summary>
    public const string StemBuzzRoll = "Combining buzz roll stem";
    /// <summary>
    /// Combining damp stem.
    /// </summary>
    public const string StemDamp = "Combining damp stem";
    /// <summary>
    /// Combining harp string noise stem.
    /// </summary>
    public const string StemHarpStringNoise = "Combining harp string noise stem";
    /// <summary>
    /// Combining multiphonics (black) stem.
    /// </summary>
    public const string StemMultiphonicsBlack = "Combining multiphonics (black) stem";
    /// <summary>
    /// Combining multiphonics (black and white) stem.
    /// </summary>
    public const string StemMultiphonicsBlackWhite = "Combining multiphonics (black and white) stem";
    /// <summary>
    /// Combining multiphonics (white) stem.
    /// </summary>
    public const string StemMultiphonicsWhite = "Combining multiphonics (white) stem";
    /// <summary>
    /// Combining Penderecki unmeasured tremolo stem.
    /// </summary>
    public const string StemPendereckiTremolo = "Combining Penderecki unmeasured tremolo stem";
    /// <summary>
    /// Combining rim shot stem.
    /// </summary>
    public const string StemRimShot = "Combining rim shot stem";
    /// <summary>
    /// Combining sprechgesang stem.
    /// </summary>
    public const string StemSprechgesang = "Combining sprechgesang stem";
    /// <summary>
    /// Combining sul ponticello (bow behind bridge) stem.
    /// </summary>
    public const string StemSulPonticello = "Combining sul ponticello (bow behind bridge) stem";
    /// <summary>
    /// Combining sussurando stem.
    /// </summary>
    public const string StemSussurando = "Combining sussurando stem";
    /// <summary>
    /// Combining swished stem.
    /// </summary>
    public const string StemSwished = "Combining swished stem";
    /// <summary>
    /// Combining vibrato pulse accent (Saunders) stem.
    /// </summary>
    public const string StemVibratoPulse = "Combining vibrato pulse accent (Saunders) stem";
    /// <summary>
    /// Stockhausen irregular tremolo ("Morsen", like Morse code).
    /// </summary>
    public const string StockhausenTremolo = "Stockhausen irregular tremolo (\"Morsen\", like Morse code)";
    /// <summary>
    /// Bow behind bridge (sul ponticello).
    /// </summary>
    public const string StringsBowBehindBridge = "Bow behind bridge (sul ponticello)";
    /// <summary>
    /// Bow behind bridge on four strings.
    /// </summary>
    public const string StringsBowBehindBridgeFourStrings = "Bow behind bridge on four strings";
    /// <summary>
    /// Bow behind bridge on one string.
    /// </summary>
    public const string StringsBowBehindBridgeOneString = "Bow behind bridge on one string";
    /// <summary>
    /// Bow behind bridge on three strings.
    /// </summary>
    public const string StringsBowBehindBridgeThreeStrings = "Bow behind bridge on three strings";
    /// <summary>
    /// Bow behind bridge on two strings.
    /// </summary>
    public const string StringsBowBehindBridgeTwoStrings = "Bow behind bridge on two strings";
    /// <summary>
    /// Bow on top of bridge.
    /// </summary>
    public const string StringsBowOnBridge = "Bow on top of bridge";
    /// <summary>
    /// Bow on tailpiece.
    /// </summary>
    public const string StringsBowOnTailpiece = "Bow on tailpiece";
    /// <summary>
    /// Change bow direction, indeterminate.
    /// </summary>
    public const string StringsChangeBowDirection = "Change bow direction, indeterminate";
    /// <summary>
    /// Down bow.
    /// </summary>
    public const string StringsDownBow = "Down bow";
    /// <summary>
    /// Down bow, away from body.
    /// </summary>
    public const string StringsDownBowAwayFromBody = "Down bow, away from body";
    /// <summary>
    /// Down bow, beyond bridge.
    /// </summary>
    public const string StringsDownBowBeyondBridge = "Down bow, beyond bridge";
    /// <summary>
    /// Down bow, towards body.
    /// </summary>
    public const string StringsDownBowTowardsBody = "Down bow, towards body";
    /// <summary>
    /// Turned down bow.
    /// </summary>
    public const string StringsDownBowTurned = "Turned down bow";
    /// <summary>
    /// Fouetté.
    /// </summary>
    public const string StringsFouette = "Fouetté";
    /// <summary>
    /// Half-harmonic.
    /// </summary>
    public const string StringsHalfHarmonic = "Half-harmonic";
    /// <summary>
    /// Harmonic.
    /// </summary>
    public const string StringsHarmonic = "Harmonic";
    /// <summary>
    /// Jeté (gettato) above.
    /// </summary>
    public const string StringsJeteAbove = "Jeté (gettato) above";
    /// <summary>
    /// Jeté (gettato) below.
    /// </summary>
    public const string StringsJeteBelow = "Jeté (gettato) below";
    /// <summary>
    /// Mute off.
    /// </summary>
    public const string StringsMuteOff = "Mute off";
    /// <summary>
    /// Mute on.
    /// </summary>
    public const string StringsMuteOn = "Mute on";
    /// <summary>
    /// Overpressure, down bow.
    /// </summary>
    public const string StringsOverpressureDownBow = "Overpressure, down bow";
    /// <summary>
    /// Overpressure, no bow direction.
    /// </summary>
    public const string StringsOverpressureNoDirection = "Overpressure, no bow direction";
    /// <summary>
    /// Overpressure possibile, down bow.
    /// </summary>
    public const string StringsOverpressurePossibileDownBow = "Overpressure possibile, down bow";
    /// <summary>
    /// Overpressure possibile, up bow.
    /// </summary>
    public const string StringsOverpressurePossibileUpBow = "Overpressure possibile, up bow";
    /// <summary>
    /// Overpressure, up bow.
    /// </summary>
    public const string StringsOverpressureUpBow = "Overpressure, up bow";
    /// <summary>
    /// Scrape, circular clockwise.
    /// </summary>
    public const string StringsScrapeCircularClockwise = "Scrape, circular clockwise";
    /// <summary>
    /// Scrape, circular counter-clockwise.
    /// </summary>
    public const string StringsScrapeCircularCounterclockwise = "Scrape, circular counter-clockwise";
    /// <summary>
    /// Scrape, parallel inward.
    /// </summary>
    public const string StringsScrapeParallelInward = "Scrape, parallel inward";
    /// <summary>
    /// Scrape, parallel outward.
    /// </summary>
    public const string StringsScrapeParallelOutward = "Scrape, parallel outward";
    /// <summary>
    /// Thumb position.
    /// </summary>
    public const string StringsThumbPosition = "Thumb position";
    /// <summary>
    /// Turned thumb position.
    /// </summary>
    public const string StringsThumbPositionTurned = "Turned thumb position";
    /// <summary>
    /// Triple chop, inward.
    /// </summary>
    public const string StringsTripleChopInward = "Triple chop, inward";
    /// <summary>
    /// Triple chop, outward.
    /// </summary>
    public const string StringsTripleChopOutward = "Triple chop, outward";
    /// <summary>
    /// Up bow.
    /// </summary>
    public const string StringsUpBow = "Up bow";
    /// <summary>
    /// Up bow, away from body.
    /// </summary>
    public const string StringsUpBowAwayFromBody = "Up bow, away from body";
    /// <summary>
    /// Up bow, beyond bridge.
    /// </summary>
    public const string StringsUpBowBeyondBridge = "Up bow, beyond bridge";
    /// <summary>
    /// Up bow, towards body.
    /// </summary>
    public const string StringsUpBowTowardsBody = "Up bow, towards body";
    /// <summary>
    /// Turned up bow.
    /// </summary>
    public const string StringsUpBowTurned = "Turned up bow";
    /// <summary>
    /// Vibrato pulse accent (Saunders) for stem.
    /// </summary>
    public const string StringsVibratoPulse = "Vibrato pulse accent (Saunders) for stem";
    /// <summary>
    /// Swiss rudiments doublé black notehead.
    /// </summary>
    public const string SwissRudimentsNoteheadBlackDouble = "Swiss rudiments doublé black notehead";
    /// <summary>
    /// Swiss rudiments flam black notehead.
    /// </summary>
    public const string SwissRudimentsNoteheadBlackFlam = "Swiss rudiments flam black notehead";
    /// <summary>
    /// Swiss rudiments doublé half (minim) notehead.
    /// </summary>
    public const string SwissRudimentsNoteheadHalfDouble = "Swiss rudiments doublé half (minim) notehead";
    /// <summary>
    /// Swiss rudiments flam half (minim) notehead.
    /// </summary>
    public const string SwissRudimentsNoteheadHalfFlam = "Swiss rudiments flam half (minim) notehead";
    /// <summary>
    /// System divider.
    /// </summary>
    public const string SystemDivider = "System divider";
    /// <summary>
    /// Extra long system divider.
    /// </summary>
    public const string SystemDividerExtraLong = "Extra long system divider";
    /// <summary>
    /// Long system divider.
    /// </summary>
    public const string SystemDividerLong = "Long system divider";
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const string TextAugmentationDot = "Augmentation dot";
    /// <summary>
    /// Black note, fractional 16th beam, long stem.
    /// </summary>
    public const string TextBlackNoteFrac16thLongStem = "Black note, fractional 16th beam, long stem";
    /// <summary>
    /// Black note, fractional 16th beam, short stem.
    /// </summary>
    public const string TextBlackNoteFrac16thShortStem = "Black note, fractional 16th beam, short stem";
    /// <summary>
    /// Black note, fractional 32nd beam, long stem.
    /// </summary>
    public const string TextBlackNoteFrac32ndLongStem = "Black note, fractional 32nd beam, long stem";
    /// <summary>
    /// Black note, fractional 8th beam, long stem.
    /// </summary>
    public const string TextBlackNoteFrac8thLongStem = "Black note, fractional 8th beam, long stem";
    /// <summary>
    /// Black note, fractional 8th beam, short stem.
    /// </summary>
    public const string TextBlackNoteFrac8thShortStem = "Black note, fractional 8th beam, short stem";
    /// <summary>
    /// Black note, long stem.
    /// </summary>
    public const string TextBlackNoteLongStem = "Black note, long stem";
    /// <summary>
    /// Black note, short stem.
    /// </summary>
    public const string TextBlackNoteShortStem = "Black note, short stem";
    /// <summary>
    /// Continuing 16th beam for long stem.
    /// </summary>
    public const string TextCont16thBeamLongStem = "Continuing 16th beam for long stem";
    /// <summary>
    /// Continuing 16th beam for short stem.
    /// </summary>
    public const string TextCont16thBeamShortStem = "Continuing 16th beam for short stem";
    /// <summary>
    /// Continuing 32nd beam for long stem.
    /// </summary>
    public const string TextCont32ndBeamLongStem = "Continuing 32nd beam for long stem";
    /// <summary>
    /// Continuing 8th beam for long stem.
    /// </summary>
    public const string TextCont8thBeamLongStem = "Continuing 8th beam for long stem";
    /// <summary>
    /// Continuing 8th beam for short stem.
    /// </summary>
    public const string TextCont8thBeamShortStem = "Continuing 8th beam for short stem";
    /// <summary>
    /// Headless black note, fractional 16th beam, long stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac16thLongStem = "Headless black note, fractional 16th beam, long stem";
    /// <summary>
    /// Headless black note, fractional 16th beam, short stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac16thShortStem = "Headless black note, fractional 16th beam, short stem";
    /// <summary>
    /// Headless black note, fractional 32nd beam, long stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac32ndLongStem = "Headless black note, fractional 32nd beam, long stem";
    /// <summary>
    /// Headless black note, fractional 8th beam, long stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac8thLongStem = "Headless black note, fractional 8th beam, long stem";
    /// <summary>
    /// Headless black note, fractional 8th beam, short stem.
    /// </summary>
    public const string TextHeadlessBlackNoteFrac8thShortStem = "Headless black note, fractional 8th beam, short stem";
    /// <summary>
    /// Headless black note, long stem.
    /// </summary>
    public const string TextHeadlessBlackNoteLongStem = "Headless black note, long stem";
    /// <summary>
    /// Headless black note, short stem.
    /// </summary>
    public const string TextHeadlessBlackNoteShortStem = "Headless black note, short stem";
    /// <summary>
    /// Tie.
    /// </summary>
    public const string TextTie = "Tie";
    /// <summary>
    /// Tuplet number 3 for long stem.
    /// </summary>
    public const string TextTuplet3LongStem = "Tuplet number 3 for long stem";
    /// <summary>
    /// Tuplet number 3 for short stem.
    /// </summary>
    public const string TextTuplet3ShortStem = "Tuplet number 3 for short stem";
    /// <summary>
    /// Tuplet bracket end for long stem.
    /// </summary>
    public const string TextTupletBracketEndLongStem = "Tuplet bracket end for long stem";
    /// <summary>
    /// Tuplet bracket end for short stem.
    /// </summary>
    public const string TextTupletBracketEndShortStem = "Tuplet bracket end for short stem";
    /// <summary>
    /// Tuplet bracket start for long stem.
    /// </summary>
    public const string TextTupletBracketStartLongStem = "Tuplet bracket start for long stem";
    /// <summary>
    /// Tuplet bracket start for short stem.
    /// </summary>
    public const string TextTupletBracketStartShortStem = "Tuplet bracket start for short stem";
    /// <summary>
    /// Time signature 0.
    /// </summary>
    public const string TimeSig0 = "Time signature 0";
    /// <summary>
    /// Reversed time signature 0.
    /// </summary>
    public const string TimeSig0Reversed = "Reversed time signature 0";
    /// <summary>
    /// Turned time signature 0.
    /// </summary>
    public const string TimeSig0Turned = "Turned time signature 0";
    /// <summary>
    /// Time signature 1.
    /// </summary>
    public const string TimeSig1 = "Time signature 1";
    /// <summary>
    /// Reversed time signature 1.
    /// </summary>
    public const string TimeSig1Reversed = "Reversed time signature 1";
    /// <summary>
    /// Turned time signature 1.
    /// </summary>
    public const string TimeSig1Turned = "Turned time signature 1";
    /// <summary>
    /// Time signature 2.
    /// </summary>
    public const string TimeSig2 = "Time signature 2";
    /// <summary>
    /// Reversed time signature 2.
    /// </summary>
    public const string TimeSig2Reversed = "Reversed time signature 2";
    /// <summary>
    /// Turned time signature 2.
    /// </summary>
    public const string TimeSig2Turned = "Turned time signature 2";
    /// <summary>
    /// Time signature 3.
    /// </summary>
    public const string TimeSig3 = "Time signature 3";
    /// <summary>
    /// Reversed time signature 3.
    /// </summary>
    public const string TimeSig3Reversed = "Reversed time signature 3";
    /// <summary>
    /// Turned time signature 3.
    /// </summary>
    public const string TimeSig3Turned = "Turned time signature 3";
    /// <summary>
    /// Time signature 4.
    /// </summary>
    public const string TimeSig4 = "Time signature 4";
    /// <summary>
    /// Reversed time signature 4.
    /// </summary>
    public const string TimeSig4Reversed = "Reversed time signature 4";
    /// <summary>
    /// Turned time signature 4.
    /// </summary>
    public const string TimeSig4Turned = "Turned time signature 4";
    /// <summary>
    /// Time signature 5.
    /// </summary>
    public const string TimeSig5 = "Time signature 5";
    /// <summary>
    /// Reversed time signature 5.
    /// </summary>
    public const string TimeSig5Reversed = "Reversed time signature 5";
    /// <summary>
    /// Turned time signature 5.
    /// </summary>
    public const string TimeSig5Turned = "Turned time signature 5";
    /// <summary>
    /// Time signature 6.
    /// </summary>
    public const string TimeSig6 = "Time signature 6";
    /// <summary>
    /// Reversed time signature 6.
    /// </summary>
    public const string TimeSig6Reversed = "Reversed time signature 6";
    /// <summary>
    /// Turned time signature 6.
    /// </summary>
    public const string TimeSig6Turned = "Turned time signature 6";
    /// <summary>
    /// Time signature 7.
    /// </summary>
    public const string TimeSig7 = "Time signature 7";
    /// <summary>
    /// Reversed time signature 7.
    /// </summary>
    public const string TimeSig7Reversed = "Reversed time signature 7";
    /// <summary>
    /// Turned time signature 7.
    /// </summary>
    public const string TimeSig7Turned = "Turned time signature 7";
    /// <summary>
    /// Time signature 8.
    /// </summary>
    public const string TimeSig8 = "Time signature 8";
    /// <summary>
    /// Reversed time signature 8.
    /// </summary>
    public const string TimeSig8Reversed = "Reversed time signature 8";
    /// <summary>
    /// Turned time signature 8.
    /// </summary>
    public const string TimeSig8Turned = "Turned time signature 8";
    /// <summary>
    /// Time signature 9.
    /// </summary>
    public const string TimeSig9 = "Time signature 9";
    /// <summary>
    /// Reversed time signature 9.
    /// </summary>
    public const string TimeSig9Reversed = "Reversed time signature 9";
    /// <summary>
    /// Turned time signature 9.
    /// </summary>
    public const string TimeSig9Turned = "Turned time signature 9";
    /// <summary>
    /// Left bracket for whole time signature.
    /// </summary>
    public const string TimeSigBracketLeft = "Left bracket for whole time signature";
    /// <summary>
    /// Left bracket for numerator only.
    /// </summary>
    public const string TimeSigBracketLeftSmall = "Left bracket for numerator only";
    /// <summary>
    /// Right bracket for whole time signature.
    /// </summary>
    public const string TimeSigBracketRight = "Right bracket for whole time signature";
    /// <summary>
    /// Right bracket for numerator only.
    /// </summary>
    public const string TimeSigBracketRightSmall = "Right bracket for numerator only";
    /// <summary>
    /// Control character for denominator digit.
    /// </summary>
    public const string TimeSigCombDenominator = "Control character for denominator digit";
    /// <summary>
    /// Control character for numerator digit.
    /// </summary>
    public const string TimeSigCombNumerator = "Control character for numerator digit";
    /// <summary>
    /// Time signature comma.
    /// </summary>
    public const string TimeSigComma = "Time signature comma";
    /// <summary>
    /// Common time.
    /// </summary>
    public const string TimeSigCommon = "Common time";
    /// <summary>
    /// Reversed common time.
    /// </summary>
    public const string TimeSigCommonReversed = "Reversed common time";
    /// <summary>
    /// Turned common time.
    /// </summary>
    public const string TimeSigCommonTurned = "Turned common time";
    /// <summary>
    /// Cut time (Bach).
    /// </summary>
    public const string TimeSigCut2 = "Cut time (Bach)";
    /// <summary>
    /// Cut triple time (9/8).
    /// </summary>
    public const string TimeSigCut3 = "Cut triple time (9/8)";
    /// <summary>
    /// Cut time.
    /// </summary>
    public const string TimeSigCutCommon = "Cut time";
    /// <summary>
    /// Reversed cut time.
    /// </summary>
    public const string TimeSigCutCommonReversed = "Reversed cut time";
    /// <summary>
    /// Turned cut time.
    /// </summary>
    public const string TimeSigCutCommonTurned = "Turned cut time";
    /// <summary>
    /// Time signature equals.
    /// </summary>
    public const string TimeSigEquals = "Time signature equals";
    /// <summary>
    /// Time signature fraction ½.
    /// </summary>
    public const string TimeSigFractionHalf = "Time signature fraction ½";
    /// <summary>
    /// Time signature fraction ⅓.
    /// </summary>
    public const string TimeSigFractionOneThird = "Time signature fraction ⅓";
    /// <summary>
    /// Time signature fraction ¼.
    /// </summary>
    public const string TimeSigFractionQuarter = "Time signature fraction ¼";
    /// <summary>
    /// Time signature fraction ¾.
    /// </summary>
    public const string TimeSigFractionThreeQuarters = "Time signature fraction ¾";
    /// <summary>
    /// Time signature fraction ⅔.
    /// </summary>
    public const string TimeSigFractionTwoThirds = "Time signature fraction ⅔";
    /// <summary>
    /// Time signature fraction slash.
    /// </summary>
    public const string TimeSigFractionalSlash = "Time signature fraction slash";
    /// <summary>
    /// Time signature minus.
    /// </summary>
    public const string TimeSigMinus = "Time signature minus";
    /// <summary>
    /// Time signature multiply.
    /// </summary>
    public const string TimeSigMultiply = "Time signature multiply";
    /// <summary>
    /// Open time signature (Penderecki).
    /// </summary>
    public const string TimeSigOpenPenderecki = "Open time signature (Penderecki)";
    /// <summary>
    /// Left parenthesis for whole time signature.
    /// </summary>
    public const string TimeSigParensLeft = "Left parenthesis for whole time signature";
    /// <summary>
    /// Left parenthesis for numerator only.
    /// </summary>
    public const string TimeSigParensLeftSmall = "Left parenthesis for numerator only";
    /// <summary>
    /// Right parenthesis for whole time signature.
    /// </summary>
    public const string TimeSigParensRight = "Right parenthesis for whole time signature";
    /// <summary>
    /// Right parenthesis for numerator only.
    /// </summary>
    public const string TimeSigParensRightSmall = "Right parenthesis for numerator only";
    /// <summary>
    /// Time signature +.
    /// </summary>
    public const string TimeSigPlus = "Time signature +";
    /// <summary>
    /// Time signature + (for numerators).
    /// </summary>
    public const string TimeSigPlusSmall = "Time signature + (for numerators)";
    /// <summary>
    /// Time signature slash separator.
    /// </summary>
    public const string TimeSigSlash = "Time signature slash separator";
    /// <summary>
    /// Open time signature.
    /// </summary>
    public const string TimeSigX = "Open time signature";
    /// <summary>
    /// Combining tremolo 1.
    /// </summary>
    public const string Tremolo1 = "Combining tremolo 1";
    /// <summary>
    /// Combining tremolo 2.
    /// </summary>
    public const string Tremolo2 = "Combining tremolo 2";
    /// <summary>
    /// Combining tremolo 3.
    /// </summary>
    public const string Tremolo3 = "Combining tremolo 3";
    /// <summary>
    /// Combining tremolo 4.
    /// </summary>
    public const string Tremolo4 = "Combining tremolo 4";
    /// <summary>
    /// Combining tremolo 5.
    /// </summary>
    public const string Tremolo5 = "Combining tremolo 5";
    /// <summary>
    /// Divide measured tremolo by 2.
    /// </summary>
    public const string TremoloDivisiDots2 = "Divide measured tremolo by 2";
    /// <summary>
    /// Divide measured tremolo by 3.
    /// </summary>
    public const string TremoloDivisiDots3 = "Divide measured tremolo by 3";
    /// <summary>
    /// Divide measured tremolo by 4.
    /// </summary>
    public const string TremoloDivisiDots4 = "Divide measured tremolo by 4";
    /// <summary>
    /// Divide measured tremolo by 6.
    /// </summary>
    public const string TremoloDivisiDots6 = "Divide measured tremolo by 6";
    /// <summary>
    /// Fingered tremolo 1.
    /// </summary>
    public const string TremoloFingered1 = "Fingered tremolo 1";
    /// <summary>
    /// Fingered tremolo 2.
    /// </summary>
    public const string TremoloFingered2 = "Fingered tremolo 2";
    /// <summary>
    /// Fingered tremolo 3.
    /// </summary>
    public const string TremoloFingered3 = "Fingered tremolo 3";
    /// <summary>
    /// Fingered tremolo 4.
    /// </summary>
    public const string TremoloFingered4 = "Fingered tremolo 4";
    /// <summary>
    /// Fingered tremolo 5.
    /// </summary>
    public const string TremoloFingered5 = "Fingered tremolo 5";
    /// <summary>
    /// Triple-tongue above.
    /// </summary>
    public const string TripleTongueAbove = "Triple-tongue above";
    /// <summary>
    /// Triple-tongue below.
    /// </summary>
    public const string TripleTongueBelow = "Triple-tongue below";
    /// <summary>
    /// Tuplet 0.
    /// </summary>
    public const string Tuplet0 = "Tuplet 0";
    /// <summary>
    /// Tuplet 1.
    /// </summary>
    public const string Tuplet1 = "Tuplet 1";
    /// <summary>
    /// Tuplet 2.
    /// </summary>
    public const string Tuplet2 = "Tuplet 2";
    /// <summary>
    /// Tuplet 3.
    /// </summary>
    public const string Tuplet3 = "Tuplet 3";
    /// <summary>
    /// Tuplet 4.
    /// </summary>
    public const string Tuplet4 = "Tuplet 4";
    /// <summary>
    /// Tuplet 5.
    /// </summary>
    public const string Tuplet5 = "Tuplet 5";
    /// <summary>
    /// Tuplet 6.
    /// </summary>
    public const string Tuplet6 = "Tuplet 6";
    /// <summary>
    /// Tuplet 7.
    /// </summary>
    public const string Tuplet7 = "Tuplet 7";
    /// <summary>
    /// Tuplet 8.
    /// </summary>
    public const string Tuplet8 = "Tuplet 8";
    /// <summary>
    /// Tuplet 9.
    /// </summary>
    public const string Tuplet9 = "Tuplet 9";
    /// <summary>
    /// Tuplet colon.
    /// </summary>
    public const string TupletColon = "Tuplet colon";
    /// <summary>
    /// Wieniawski unmeasured tremolo.
    /// </summary>
    public const string UnmeasuredTremolo = "Wieniawski unmeasured tremolo";
    /// <summary>
    /// Wieniawski unmeasured tremolo (simpler).
    /// </summary>
    public const string UnmeasuredTremoloSimple = "Wieniawski unmeasured tremolo (simpler)";
    /// <summary>
    /// Unpitched percussion clef 1.
    /// </summary>
    public const string UnpitchedPercussionClef1 = "Unpitched percussion clef 1";
    /// <summary>
    /// Unpitched percussion clef 2.
    /// </summary>
    public const string UnpitchedPercussionClef2 = "Unpitched percussion clef 2";
    /// <summary>
    /// Ventiduesima.
    /// </summary>
    public const string Ventiduesima = "Ventiduesima";
    /// <summary>
    /// Ventiduesima alta.
    /// </summary>
    public const string VentiduesimaAlta = "Ventiduesima alta";
    /// <summary>
    /// Ventiduesima bassa.
    /// </summary>
    public const string VentiduesimaBassa = "Ventiduesima bassa";
    /// <summary>
    /// Ventiduesima bassa (mb).
    /// </summary>
    public const string VentiduesimaBassaMb = "Ventiduesima bassa (mb)";
    /// <summary>
    /// Finger click (Stockhausen).
    /// </summary>
    public const string VocalFingerClickStockhausen = "Finger click (Stockhausen)";
    /// <summary>
    /// Halb gesungen (semi-sprechgesang).
    /// </summary>
    public const string VocalHalbGesungen = "Halb gesungen (semi-sprechgesang)";
    /// <summary>
    /// Mouth closed.
    /// </summary>
    public const string VocalMouthClosed = "Mouth closed";
    /// <summary>
    /// Mouth open.
    /// </summary>
    public const string VocalMouthOpen = "Mouth open";
    /// <summary>
    /// Mouth pursed.
    /// </summary>
    public const string VocalMouthPursed = "Mouth pursed";
    /// <summary>
    /// Mouth slightly open.
    /// </summary>
    public const string VocalMouthSlightlyOpen = "Mouth slightly open";
    /// <summary>
    /// Mouth wide open.
    /// </summary>
    public const string VocalMouthWideOpen = "Mouth wide open";
    /// <summary>
    /// Nasal voice.
    /// </summary>
    public const string VocalNasalVoice = "Nasal voice";
    /// <summary>
    /// Sprechgesang.
    /// </summary>
    public const string VocalSprechgesang = "Sprechgesang";
    /// <summary>
    /// Tongue click (Stockhausen).
    /// </summary>
    public const string VocalTongueClickStockhausen = "Tongue click (Stockhausen)";
    /// <summary>
    /// Tongue and finger click (Stockhausen).
    /// </summary>
    public const string VocalTongueFingerClickStockhausen = "Tongue and finger click (Stockhausen)";
    /// <summary>
    /// Combining sussurando for stem.
    /// </summary>
    public const string VocalsSussurando = "Combining sussurando for stem";
    /// <summary>
    /// Arpeggiato wiggle segment, downwards.
    /// </summary>
    public const string WiggleArpeggiatoDown = "Arpeggiato wiggle segment, downwards";
    /// <summary>
    /// Arpeggiato arrowhead down.
    /// </summary>
    public const string WiggleArpeggiatoDownArrow = "Arpeggiato arrowhead down";
    /// <summary>
    /// Arpeggiato downward swash.
    /// </summary>
    public const string WiggleArpeggiatoDownSwash = "Arpeggiato downward swash";
    /// <summary>
    /// Arpeggiato wiggle segment, upwards.
    /// </summary>
    public const string WiggleArpeggiatoUp = "Arpeggiato wiggle segment, upwards";
    /// <summary>
    /// Arpeggiato arrowhead up.
    /// </summary>
    public const string WiggleArpeggiatoUpArrow = "Arpeggiato arrowhead up";
    /// <summary>
    /// Arpeggiato upward swash.
    /// </summary>
    public const string WiggleArpeggiatoUpSwash = "Arpeggiato upward swash";
    /// <summary>
    /// Circular motion segment.
    /// </summary>
    public const string WiggleCircular = "Circular motion segment";
    /// <summary>
    /// Constant circular motion segment.
    /// </summary>
    public const string WiggleCircularConstant = "Constant circular motion segment";
    /// <summary>
    /// Constant circular motion segment (flipped).
    /// </summary>
    public const string WiggleCircularConstantFlipped = "Constant circular motion segment (flipped)";
    /// <summary>
    /// Constant circular motion segment (flipped, large).
    /// </summary>
    public const string WiggleCircularConstantFlippedLarge = "Constant circular motion segment (flipped, large)";
    /// <summary>
    /// Constant circular motion segment (large).
    /// </summary>
    public const string WiggleCircularConstantLarge = "Constant circular motion segment (large)";
    /// <summary>
    /// Circular motion end.
    /// </summary>
    public const string WiggleCircularEnd = "Circular motion end";
    /// <summary>
    /// Circular motion segment, large.
    /// </summary>
    public const string WiggleCircularLarge = "Circular motion segment, large";
    /// <summary>
    /// Circular motion segment, larger.
    /// </summary>
    public const string WiggleCircularLarger = "Circular motion segment, larger";
    /// <summary>
    /// Circular motion segment, larger still.
    /// </summary>
    public const string WiggleCircularLargerStill = "Circular motion segment, larger still";
    /// <summary>
    /// Circular motion segment, largest.
    /// </summary>
    public const string WiggleCircularLargest = "Circular motion segment, largest";
    /// <summary>
    /// Circular motion segment, small.
    /// </summary>
    public const string WiggleCircularSmall = "Circular motion segment, small";
    /// <summary>
    /// Circular motion start.
    /// </summary>
    public const string WiggleCircularStart = "Circular motion start";
    /// <summary>
    /// Glissando wiggle segment.
    /// </summary>
    public const string WiggleGlissando = "Glissando wiggle segment";
    /// <summary>
    /// Group glissando 1.
    /// </summary>
    public const string WiggleGlissandoGroup1 = "Group glissando 1";
    /// <summary>
    /// Group glissando 2.
    /// </summary>
    public const string WiggleGlissandoGroup2 = "Group glissando 2";
    /// <summary>
    /// Group glissando 3.
    /// </summary>
    public const string WiggleGlissandoGroup3 = "Group glissando 3";
    /// <summary>
    /// Quasi-random squiggle 1.
    /// </summary>
    public const string WiggleRandom1 = "Quasi-random squiggle 1";
    /// <summary>
    /// Quasi-random squiggle 2.
    /// </summary>
    public const string WiggleRandom2 = "Quasi-random squiggle 2";
    /// <summary>
    /// Quasi-random squiggle 3.
    /// </summary>
    public const string WiggleRandom3 = "Quasi-random squiggle 3";
    /// <summary>
    /// Quasi-random squiggle 4.
    /// </summary>
    public const string WiggleRandom4 = "Quasi-random squiggle 4";
    /// <summary>
    /// Sawtooth line segment.
    /// </summary>
    public const string WiggleSawtooth = "Sawtooth line segment";
    /// <summary>
    /// Narrow sawtooth line segment.
    /// </summary>
    public const string WiggleSawtoothNarrow = "Narrow sawtooth line segment";
    /// <summary>
    /// Wide sawtooth line segment.
    /// </summary>
    public const string WiggleSawtoothWide = "Wide sawtooth line segment";
    /// <summary>
    /// Square wave line segment.
    /// </summary>
    public const string WiggleSquareWave = "Square wave line segment";
    /// <summary>
    /// Narrow square wave line segment.
    /// </summary>
    public const string WiggleSquareWaveNarrow = "Narrow square wave line segment";
    /// <summary>
    /// Wide square wave line segment.
    /// </summary>
    public const string WiggleSquareWaveWide = "Wide square wave line segment";
    /// <summary>
    /// Trill wiggle segment.
    /// </summary>
    public const string WiggleTrill = "Trill wiggle segment";
    /// <summary>
    /// Trill wiggle segment, fast.
    /// </summary>
    public const string WiggleTrillFast = "Trill wiggle segment, fast";
    /// <summary>
    /// Trill wiggle segment, faster.
    /// </summary>
    public const string WiggleTrillFaster = "Trill wiggle segment, faster";
    /// <summary>
    /// Trill wiggle segment, faster still.
    /// </summary>
    public const string WiggleTrillFasterStill = "Trill wiggle segment, faster still";
    /// <summary>
    /// Trill wiggle segment, fastest.
    /// </summary>
    public const string WiggleTrillFastest = "Trill wiggle segment, fastest";
    /// <summary>
    /// Trill wiggle segment, slow.
    /// </summary>
    public const string WiggleTrillSlow = "Trill wiggle segment, slow";
    /// <summary>
    /// Trill wiggle segment, slower.
    /// </summary>
    public const string WiggleTrillSlower = "Trill wiggle segment, slower";
    /// <summary>
    /// Trill wiggle segment, slower still.
    /// </summary>
    public const string WiggleTrillSlowerStill = "Trill wiggle segment, slower still";
    /// <summary>
    /// Trill wiggle segment, slowest.
    /// </summary>
    public const string WiggleTrillSlowest = "Trill wiggle segment, slowest";
    /// <summary>
    /// Vibrato largest, slower.
    /// </summary>
    public const string WiggleVIbratoLargestSlower = "Vibrato largest, slower";
    /// <summary>
    /// Vibrato medium, slower.
    /// </summary>
    public const string WiggleVIbratoMediumSlower = "Vibrato medium, slower";
    /// <summary>
    /// Vibrato / shake wiggle segment.
    /// </summary>
    public const string WiggleVibrato = "Vibrato / shake wiggle segment";
    /// <summary>
    /// Vibrato large, fast.
    /// </summary>
    public const string WiggleVibratoLargeFast = "Vibrato large, fast";
    /// <summary>
    /// Vibrato large, faster.
    /// </summary>
    public const string WiggleVibratoLargeFaster = "Vibrato large, faster";
    /// <summary>
    /// Vibrato large, faster still.
    /// </summary>
    public const string WiggleVibratoLargeFasterStill = "Vibrato large, faster still";
    /// <summary>
    /// Vibrato large, fastest.
    /// </summary>
    public const string WiggleVibratoLargeFastest = "Vibrato large, fastest";
    /// <summary>
    /// Vibrato large, slow.
    /// </summary>
    public const string WiggleVibratoLargeSlow = "Vibrato large, slow";
    /// <summary>
    /// Vibrato large, slower.
    /// </summary>
    public const string WiggleVibratoLargeSlower = "Vibrato large, slower";
    /// <summary>
    /// Vibrato large, slowest.
    /// </summary>
    public const string WiggleVibratoLargeSlowest = "Vibrato large, slowest";
    /// <summary>
    /// Vibrato largest, fast.
    /// </summary>
    public const string WiggleVibratoLargestFast = "Vibrato largest, fast";
    /// <summary>
    /// Vibrato largest, faster.
    /// </summary>
    public const string WiggleVibratoLargestFaster = "Vibrato largest, faster";
    /// <summary>
    /// Vibrato largest, faster still.
    /// </summary>
    public const string WiggleVibratoLargestFasterStill = "Vibrato largest, faster still";
    /// <summary>
    /// Vibrato largest, fastest.
    /// </summary>
    public const string WiggleVibratoLargestFastest = "Vibrato largest, fastest";
    /// <summary>
    /// Vibrato largest, slow.
    /// </summary>
    public const string WiggleVibratoLargestSlow = "Vibrato largest, slow";
    /// <summary>
    /// Vibrato largest, slowest.
    /// </summary>
    public const string WiggleVibratoLargestSlowest = "Vibrato largest, slowest";
    /// <summary>
    /// Vibrato medium, fast.
    /// </summary>
    public const string WiggleVibratoMediumFast = "Vibrato medium, fast";
    /// <summary>
    /// Vibrato medium, faster.
    /// </summary>
    public const string WiggleVibratoMediumFaster = "Vibrato medium, faster";
    /// <summary>
    /// Vibrato medium, faster still.
    /// </summary>
    public const string WiggleVibratoMediumFasterStill = "Vibrato medium, faster still";
    /// <summary>
    /// Vibrato medium, fastest.
    /// </summary>
    public const string WiggleVibratoMediumFastest = "Vibrato medium, fastest";
    /// <summary>
    /// Vibrato medium, slow.
    /// </summary>
    public const string WiggleVibratoMediumSlow = "Vibrato medium, slow";
    /// <summary>
    /// Vibrato medium, slowest.
    /// </summary>
    public const string WiggleVibratoMediumSlowest = "Vibrato medium, slowest";
    /// <summary>
    /// Vibrato small, fast.
    /// </summary>
    public const string WiggleVibratoSmallFast = "Vibrato small, fast";
    /// <summary>
    /// Vibrato small, faster.
    /// </summary>
    public const string WiggleVibratoSmallFaster = "Vibrato small, faster";
    /// <summary>
    /// Vibrato small, faster still.
    /// </summary>
    public const string WiggleVibratoSmallFasterStill = "Vibrato small, faster still";
    /// <summary>
    /// Vibrato small, fastest.
    /// </summary>
    public const string WiggleVibratoSmallFastest = "Vibrato small, fastest";
    /// <summary>
    /// Vibrato small, slow.
    /// </summary>
    public const string WiggleVibratoSmallSlow = "Vibrato small, slow";
    /// <summary>
    /// Vibrato small, slower.
    /// </summary>
    public const string WiggleVibratoSmallSlower = "Vibrato small, slower";
    /// <summary>
    /// Vibrato small, slowest.
    /// </summary>
    public const string WiggleVibratoSmallSlowest = "Vibrato small, slowest";
    /// <summary>
    /// Vibrato smallest, fast.
    /// </summary>
    public const string WiggleVibratoSmallestFast = "Vibrato smallest, fast";
    /// <summary>
    /// Vibrato smallest, faster.
    /// </summary>
    public const string WiggleVibratoSmallestFaster = "Vibrato smallest, faster";
    /// <summary>
    /// Vibrato smallest, faster still.
    /// </summary>
    public const string WiggleVibratoSmallestFasterStill = "Vibrato smallest, faster still";
    /// <summary>
    /// Vibrato smallest, fastest.
    /// </summary>
    public const string WiggleVibratoSmallestFastest = "Vibrato smallest, fastest";
    /// <summary>
    /// Vibrato smallest, slow.
    /// </summary>
    public const string WiggleVibratoSmallestSlow = "Vibrato smallest, slow";
    /// <summary>
    /// Vibrato smallest, slower.
    /// </summary>
    public const string WiggleVibratoSmallestSlower = "Vibrato smallest, slower";
    /// <summary>
    /// Vibrato smallest, slowest.
    /// </summary>
    public const string WiggleVibratoSmallestSlowest = "Vibrato smallest, slowest";
    /// <summary>
    /// Vibrato start.
    /// </summary>
    public const string WiggleVibratoStart = "Vibrato start";
    /// <summary>
    /// Wide vibrato / shake wiggle segment.
    /// </summary>
    public const string WiggleVibratoWide = "Wide vibrato / shake wiggle segment";
    /// <summary>
    /// Wavy line segment.
    /// </summary>
    public const string WiggleWavy = "Wavy line segment";
    /// <summary>
    /// Narrow wavy line segment.
    /// </summary>
    public const string WiggleWavyNarrow = "Narrow wavy line segment";
    /// <summary>
    /// Wide wavy line segment.
    /// </summary>
    public const string WiggleWavyWide = "Wide wavy line segment";
    /// <summary>
    /// Closed hole.
    /// </summary>
    public const string WindClosedHole = "Closed hole";
    /// <summary>
    /// Flatter embouchure.
    /// </summary>
    public const string WindFlatEmbouchure = "Flatter embouchure";
    /// <summary>
    /// Half-closed hole.
    /// </summary>
    public const string WindHalfClosedHole1 = "Half-closed hole";
    /// <summary>
    /// Half-closed hole 2.
    /// </summary>
    public const string WindHalfClosedHole2 = "Half-closed hole 2";
    /// <summary>
    /// Half-open hole.
    /// </summary>
    public const string WindHalfClosedHole3 = "Half-open hole";
    /// <summary>
    /// Somewhat relaxed embouchure.
    /// </summary>
    public const string WindLessRelaxedEmbouchure = "Somewhat relaxed embouchure";
    /// <summary>
    /// Somewhat tight embouchure.
    /// </summary>
    public const string WindLessTightEmbouchure = "Somewhat tight embouchure";
    /// <summary>
    /// Mouthpiece or hand pop.
    /// </summary>
    public const string WindMouthpiecePop = "Mouthpiece or hand pop";
    /// <summary>
    /// Combining multiphonics (black) for stem.
    /// </summary>
    public const string WindMultiphonicsBlackStem = "Combining multiphonics (black) for stem";
    /// <summary>
    /// Combining multiphonics (black and white) for stem.
    /// </summary>
    public const string WindMultiphonicsBlackWhiteStem = "Combining multiphonics (black and white) for stem";
    /// <summary>
    /// Combining multiphonics (white) for stem.
    /// </summary>
    public const string WindMultiphonicsWhiteStem = "Combining multiphonics (white) for stem";
    /// <summary>
    /// Open hole.
    /// </summary>
    public const string WindOpenHole = "Open hole";
    /// <summary>
    /// Much more reed (push inwards).
    /// </summary>
    public const string WindReedPositionIn = "Much more reed (push inwards)";
    /// <summary>
    /// Normal reed position.
    /// </summary>
    public const string WindReedPositionNormal = "Normal reed position";
    /// <summary>
    /// Very little reed (pull outwards).
    /// </summary>
    public const string WindReedPositionOut = "Very little reed (pull outwards)";
    /// <summary>
    /// Relaxed embouchure.
    /// </summary>
    public const string WindRelaxedEmbouchure = "Relaxed embouchure";
    /// <summary>
    /// Rim only.
    /// </summary>
    public const string WindRimOnly = "Rim only";
    /// <summary>
    /// Sharper embouchure.
    /// </summary>
    public const string WindSharpEmbouchure = "Sharper embouchure";
    /// <summary>
    /// Very tight embouchure / strong air pressure.
    /// </summary>
    public const string WindStrongAirPressure = "Very tight embouchure / strong air pressure";
    /// <summary>
    /// Three-quarters closed hole.
    /// </summary>
    public const string WindThreeQuartersClosedHole = "Three-quarters closed hole";
    /// <summary>
    /// Tight embouchure.
    /// </summary>
    public const string WindTightEmbouchure = "Tight embouchure";
    /// <summary>
    /// Trill key.
    /// </summary>
    public const string WindTrillKey = "Trill key";
    /// <summary>
    /// Very tight embouchure.
    /// </summary>
    public const string WindVeryTightEmbouchure = "Very tight embouchure";
    /// <summary>
    /// Very relaxed embouchure / weak air-pressure.
    /// </summary>
    public const string WindWeakAirPressure = "Very relaxed embouchure / weak air-pressure";
}

/// <summary>
/// All glyph name code points.
/// </summary>
public static class GlyphNameCodePoints
{
    /// <summary>
    /// 4-string tab clef.
    /// </summary>
    public const int FourStringTabClef = 57454;
    /// <summary>
    /// 6-string tab clef.
    /// </summary>
    public const int SixStringTabClef = 57453;
    /// <summary>
    /// 11 large diesis down, 3° down [46 EDO].
    /// </summary>
    public const int AccSagittal11LargeDiesisDown = 58125;
    /// <summary>
    /// 11 large diesis up, (11L), (sharp less 11M), 3° up [46 EDO].
    /// </summary>
    public const int AccSagittal11LargeDiesisUp = 58124;
    /// <summary>
    /// 11 medium diesis down, 1°[17 31] 2°46 down, 1/4-tone down.
    /// </summary>
    public const int AccSagittal11MediumDiesisDown = 58123;
    /// <summary>
    /// 11 medium diesis up, (11M), 1°[17 31] 2°46 up, 1/4-tone up.
    /// </summary>
    public const int AccSagittal11MediumDiesisUp = 58122;
    /// <summary>
    /// 11:19 large diesis down.
    /// </summary>
    public const int AccSagittal11v19LargeDiesisDown = 58283;
    /// <summary>
    /// 11:19 large diesis up, (11:19L, apotome less 11:19M).
    /// </summary>
    public const int AccSagittal11v19LargeDiesisUp = 58282;
    /// <summary>
    /// 11:19 medium diesis down.
    /// </summary>
    public const int AccSagittal11v19MediumDiesisDown = 58275;
    /// <summary>
    /// 11:19 medium diesis up, (11:19M, 11M plus 19s).
    /// </summary>
    public const int AccSagittal11v19MediumDiesisUp = 58274;
    /// <summary>
    /// 11:49 comma down.
    /// </summary>
    public const int AccSagittal11v49CommaDown = 58263;
    /// <summary>
    /// 11:49 comma up, (11:49C, 11M less 49C).
    /// </summary>
    public const int AccSagittal11v49CommaUp = 58262;
    /// <summary>
    /// 143 comma down.
    /// </summary>
    public const int AccSagittal143CommaDown = 58261;
    /// <summary>
    /// 143 comma up, (143C, 13L less 11M).
    /// </summary>
    public const int AccSagittal143CommaUp = 58260;
    /// <summary>
    /// 17 comma down.
    /// </summary>
    public const int AccSagittal17CommaDown = 58179;
    /// <summary>
    /// 17 comma up, (17C).
    /// </summary>
    public const int AccSagittal17CommaUp = 58178;
    /// <summary>
    /// 17 kleisma down.
    /// </summary>
    public const int AccSagittal17KleismaDown = 58259;
    /// <summary>
    /// 17 kleisma up, (17k).
    /// </summary>
    public const int AccSagittal17KleismaUp = 58258;
    /// <summary>
    /// 19 comma down.
    /// </summary>
    public const int AccSagittal19CommaDown = 58265;
    /// <summary>
    /// 19 comma up, (19C).
    /// </summary>
    public const int AccSagittal19CommaUp = 58264;
    /// <summary>
    /// 19 schisma down.
    /// </summary>
    public const int AccSagittal19SchismaDown = 58257;
    /// <summary>
    /// 19 schisma up, (19s).
    /// </summary>
    public const int AccSagittal19SchismaUp = 58256;
    /// <summary>
    /// 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down.
    /// </summary>
    public const int AccSagittal1MinaDown = 58357;
    /// <summary>
    /// 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up.
    /// </summary>
    public const int AccSagittal1MinaUp = 58356;
    /// <summary>
    /// 1 tina down, 7²⋅11⋅19/5-schismina down, 0.17 cents down.
    /// </summary>
    public const int AccSagittal1TinaDown = 58361;
    /// <summary>
    /// 1 tina up, 7²⋅11⋅19/5-schismina up, 0.17 cents up.
    /// </summary>
    public const int AccSagittal1TinaUp = 58360;
    /// <summary>
    /// 23 comma down, 2° down [96 EDO], 1/8-tone down.
    /// </summary>
    public const int AccSagittal23CommaDown = 58225;
    /// <summary>
    /// 23 comma up, (23C), 2° up [96 EDO], 1/8-tone up.
    /// </summary>
    public const int AccSagittal23CommaUp = 58224;
    /// <summary>
    /// 23 small diesis down.
    /// </summary>
    public const int AccSagittal23SmallDiesisDown = 58271;
    /// <summary>
    /// 23 small diesis up, (23S).
    /// </summary>
    public const int AccSagittal23SmallDiesisUp = 58270;
    /// <summary>
    /// 25 small diesis down, 2° down [53 EDO].
    /// </summary>
    public const int AccSagittal25SmallDiesisDown = 58119;
    /// <summary>
    /// 25 small diesis up, (25S, ~5:13S, ~37S, 5C plus 5C), 2° up [53 EDO].
    /// </summary>
    public const int AccSagittal25SmallDiesisUp = 58118;
    /// <summary>
    /// 2 minas down, 65/77-schismina down, 0.83 cents down.
    /// </summary>
    public const int AccSagittal2MinasDown = 58359;
    /// <summary>
    /// 2 minas up, 65/77-schismina up, 0.83 cents up.
    /// </summary>
    public const int AccSagittal2MinasUp = 58358;
    /// <summary>
    /// 2 tinas down, 1/(7³⋅17)-schismina down, 0.30 cents down.
    /// </summary>
    public const int AccSagittal2TinasDown = 58363;
    /// <summary>
    /// 2 tinas up, 1/(7³⋅17)-schismina up, 0.30 cents up.
    /// </summary>
    public const int AccSagittal2TinasUp = 58362;
    /// <summary>
    /// 35 large diesis down, 2° down [50 EDO], 5/18-tone down.
    /// </summary>
    public const int AccSagittal35LargeDiesisDown = 58127;
    /// <summary>
    /// 35 large diesis up, (35L, ~13L, ~125L, sharp less 35M), 2°50 up.
    /// </summary>
    public const int AccSagittal35LargeDiesisUp = 58126;
    /// <summary>
    /// 35 medium diesis down, 1°[50] 2°[27] down, 2/9-tone down.
    /// </summary>
    public const int AccSagittal35MediumDiesisDown = 58121;
    /// <summary>
    /// 35 medium diesis up, (35M, ~13M, ~125M, 5C plus 7C), 2/9-tone up.
    /// </summary>
    public const int AccSagittal35MediumDiesisUp = 58120;
    /// <summary>
    /// 3 tinas down, 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down.
    /// </summary>
    public const int AccSagittal3TinasDown = 58365;
    /// <summary>
    /// 3 tinas up, 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up.
    /// </summary>
    public const int AccSagittal3TinasUp = 58364;
    /// <summary>
    /// 49 large diesis down.
    /// </summary>
    public const int AccSagittal49LargeDiesisDown = 58281;
    /// <summary>
    /// 49 large diesis up, (49L, ~31L, apotome less 49M).
    /// </summary>
    public const int AccSagittal49LargeDiesisUp = 58280;
    /// <summary>
    /// 49 medium diesis down.
    /// </summary>
    public const int AccSagittal49MediumDiesisDown = 58277;
    /// <summary>
    /// 49 medium diesis up, (49M, ~31M, 7C plus 7C).
    /// </summary>
    public const int AccSagittal49MediumDiesisUp = 58276;
    /// <summary>
    /// 49 small diesis down.
    /// </summary>
    public const int AccSagittal49SmallDiesisDown = 58269;
    /// <summary>
    /// 49 small diesis up, (49S, ~31S).
    /// </summary>
    public const int AccSagittal49SmallDiesisUp = 58268;
    /// <summary>
    /// 4 tinas down, 5²⋅11²/7-schismina down, 0.57 cents down.
    /// </summary>
    public const int AccSagittal4TinasDown = 58367;
    /// <summary>
    /// 4 tinas up, 5²⋅11²/7-schismina up, 0.57 cents up.
    /// </summary>
    public const int AccSagittal4TinasUp = 58366;
    /// <summary>
    /// 55 comma down, 3° down [96 EDO], 3/16-tone down.
    /// </summary>
    public const int AccSagittal55CommaDown = 58181;
    /// <summary>
    /// 55 comma up, (55C, 11M less 5C), 3°up [96 EDO], 3/16-tone up.
    /// </summary>
    public const int AccSagittal55CommaUp = 58180;
    /// <summary>
    /// 5 comma down, 1° down [22 27 29 34 41 46 53 96 EDOs], 1/12-tone down.
    /// </summary>
    public const int AccSagittal5CommaDown = 58115;
    /// <summary>
    /// 5 comma up, (5C), 1° up [22 27 29 34 41 46 53 96 EDOs], 1/12-tone up.
    /// </summary>
    public const int AccSagittal5CommaUp = 58114;
    /// <summary>
    /// 5 tinas down, 7⁴/25-schismina down, 0.72 cents down.
    /// </summary>
    public const int AccSagittal5TinasDown = 58369;
    /// <summary>
    /// 5 tinas up, 7⁴/25-schismina up, 0.72 cents up.
    /// </summary>
    public const int AccSagittal5TinasUp = 58368;
    /// <summary>
    /// 5:11 small diesis down.
    /// </summary>
    public const int AccSagittal5v11SmallDiesisDown = 58185;
    /// <summary>
    /// 5:11 small diesis up, (5:11S, ~7:13S, ~11:17S, 5:7k plus 7:11C).
    /// </summary>
    public const int AccSagittal5v11SmallDiesisUp = 58184;
    /// <summary>
    /// 5:13 large diesis down.
    /// </summary>
    public const int AccSagittal5v13LargeDiesisDown = 58285;
    /// <summary>
    /// 5:13 large diesis up, (5:13L, ~37L, apotome less 5:13M).
    /// </summary>
    public const int AccSagittal5v13LargeDiesisUp = 58284;
    /// <summary>
    /// 5:13 medium diesis down.
    /// </summary>
    public const int AccSagittal5v13MediumDiesisDown = 58273;
    /// <summary>
    /// 5:13 medium diesis up, (5:13M, ~37M, 5C plus 13C).
    /// </summary>
    public const int AccSagittal5v13MediumDiesisUp = 58272;
    /// <summary>
    /// 5:19 comma down, 1/20-tone down.
    /// </summary>
    public const int AccSagittal5v19CommaDown = 58227;
    /// <summary>
    /// 5:19 comma up, (5:19C, 5C plus 19s), 1/20-tone up.
    /// </summary>
    public const int AccSagittal5v19CommaUp = 58226;
    /// <summary>
    /// 5:23 small diesis down, 2° down [60 EDO], 1/5-tone down.
    /// </summary>
    public const int AccSagittal5v23SmallDiesisDown = 58229;
    /// <summary>
    /// 5:23 small diesis up, (5:23S, 5C plus 23C), 2° up [60 EDO], 1/5-tone up.
    /// </summary>
    public const int AccSagittal5v23SmallDiesisUp = 58228;
    /// <summary>
    /// 5:49 medium diesis down.
    /// </summary>
    public const int AccSagittal5v49MediumDiesisDown = 58279;
    /// <summary>
    /// 5:49 medium diesis up, (5:49M, half apotome).
    /// </summary>
    public const int AccSagittal5v49MediumDiesisUp = 58278;
    /// <summary>
    /// 5:7 kleisma down.
    /// </summary>
    public const int AccSagittal5v7KleismaDown = 58113;
    /// <summary>
    /// 5:7 kleisma up, (5:7k, ~11:13k, 7C less 5C).
    /// </summary>
    public const int AccSagittal5v7KleismaUp = 58112;
    /// <summary>
    /// 6 tinas down, 2 minas down, 65/77-schismina down, 0.83 cents down.
    /// </summary>
    public const int AccSagittal6TinasDown = 58371;
    /// <summary>
    /// 6 tinas up, 2 minas up, 65/77-schismina up, 0.83 cents up.
    /// </summary>
    public const int AccSagittal6TinasUp = 58370;
    /// <summary>
    /// 7 comma down, 1° down [43 EDO], 2° down [72 EDO], 1/6-tone down.
    /// </summary>
    public const int AccSagittal7CommaDown = 58117;
    /// <summary>
    /// 7 comma up, (7C), 1° up [43 EDO], 2° up [72 EDO], 1/6-tone up.
    /// </summary>
    public const int AccSagittal7CommaUp = 58116;
    /// <summary>
    /// 7 tinas down, 7/(5²⋅17)-schismina down, 1.02 cents down.
    /// </summary>
    public const int AccSagittal7TinasDown = 58373;
    /// <summary>
    /// 7 tinas up, 7/(5²⋅17)-schismina up, 1.02 cents up.
    /// </summary>
    public const int AccSagittal7TinasUp = 58372;
    /// <summary>
    /// 7:11 comma down, 1° down [60 EDO], 1/10-tone down.
    /// </summary>
    public const int AccSagittal7v11CommaDown = 58183;
    /// <summary>
    /// 7:11 comma up, (7:11C, ~13:17S, ~29S, 11L less 7C), 1° up [60 EDO].
    /// </summary>
    public const int AccSagittal7v11CommaUp = 58182;
    /// <summary>
    /// 7:11 kleisma down.
    /// </summary>
    public const int AccSagittal7v11KleismaDown = 58177;
    /// <summary>
    /// 7:11 kleisma up, (7:11k, ~29k).
    /// </summary>
    public const int AccSagittal7v11KleismaUp = 58176;
    /// <summary>
    /// 7:19 comma down.
    /// </summary>
    public const int AccSagittal7v19CommaDown = 58267;
    /// <summary>
    /// 7:19 comma up, (7:19C, 7C less 19s).
    /// </summary>
    public const int AccSagittal7v19CommaUp = 58266;
    /// <summary>
    /// 8 tinas down, 11⋅17/(5²⋅7)-schismina down, 1.14 cents down.
    /// </summary>
    public const int AccSagittal8TinasDown = 58375;
    /// <summary>
    /// 8 tinas up, 11⋅17/(5²⋅7)-schismina up, 1.14 cents up.
    /// </summary>
    public const int AccSagittal8TinasUp = 58374;
    /// <summary>
    /// 9 tinas down, 1/(7²⋅11)-schismina down, 1.26 cents down.
    /// </summary>
    public const int AccSagittal9TinasDown = 58377;
    /// <summary>
    /// 9 tinas up, 1/(7²⋅11)-schismina up, 1.26 cents up.
    /// </summary>
    public const int AccSagittal9TinasUp = 58376;
    /// <summary>
    /// Acute, 5 schisma up (5s), 2 cents up.
    /// </summary>
    public const int AccSagittalAcute = 58354;
    /// <summary>
    /// Double flat, (2 apotomes down)[almost all EDOs], whole-tone down.
    /// </summary>
    public const int AccSagittalDoubleFlat = 58165;
    /// <summary>
    /// Double flat 11:49C-up.
    /// </summary>
    public const int AccSagittalDoubleFlat11v49CUp = 58345;
    /// <summary>
    /// Double flat 143C-up.
    /// </summary>
    public const int AccSagittalDoubleFlat143CUp = 58347;
    /// <summary>
    /// Double flat 17C-up.
    /// </summary>
    public const int AccSagittalDoubleFlat17CUp = 58213;
    /// <summary>
    /// Double flat 17k-up.
    /// </summary>
    public const int AccSagittalDoubleFlat17kUp = 58349;
    /// <summary>
    /// Double flat 19C-up.
    /// </summary>
    public const int AccSagittalDoubleFlat19CUp = 58343;
    /// <summary>
    /// Double flat 19s-up.
    /// </summary>
    public const int AccSagittalDoubleFlat19sUp = 58351;
    /// <summary>
    /// Double flat 23C-up, 14° down [96 EDO], 7/8-tone down.
    /// </summary>
    public const int AccSagittalDoubleFlat23CUp = 58247;
    /// <summary>
    /// Double flat 23S-up.
    /// </summary>
    public const int AccSagittalDoubleFlat23SUp = 58337;
    /// <summary>
    /// Double flat 25S-up, 8°down [53 EDO].
    /// </summary>
    public const int AccSagittalDoubleFlat25SUp = 58157;
    /// <summary>
    /// Double flat 49S-up.
    /// </summary>
    public const int AccSagittalDoubleFlat49SUp = 58339;
    /// <summary>
    /// Double flat 55C-up, 13° down [96 EDO], 13/16-tone down.
    /// </summary>
    public const int AccSagittalDoubleFlat55CUp = 58211;
    /// <summary>
    /// Double flat 5C-up, 5°[22 29] 7°[34 41] 9°53 down, 11/12 tone down.
    /// </summary>
    public const int AccSagittalDoubleFlat5CUp = 58161;
    /// <summary>
    /// Double flat 5:11S-up.
    /// </summary>
    public const int AccSagittalDoubleFlat5v11SUp = 58207;
    /// <summary>
    /// Double flat 5:19C-up, 19/20-tone down.
    /// </summary>
    public const int AccSagittalDoubleFlat5v19CUp = 58245;
    /// <summary>
    /// Double flat 5:23S-up, 8° down [60 EDO], 4/5-tone down.
    /// </summary>
    public const int AccSagittalDoubleFlat5v23SUp = 58243;
    /// <summary>
    /// Double flat 5:7k-up.
    /// </summary>
    public const int AccSagittalDoubleFlat5v7kUp = 58163;
    /// <summary>
    /// Double flat 7C-up, 5° down [43 EDO], 10° down [72 EDO], 5/6-tone down.
    /// </summary>
    public const int AccSagittalDoubleFlat7CUp = 58159;
    /// <summary>
    /// Double flat 7:11C-up, 9° down [60 EDO], 9/10-tone down.
    /// </summary>
    public const int AccSagittalDoubleFlat7v11CUp = 58209;
    /// <summary>
    /// Double flat 7:11k-up.
    /// </summary>
    public const int AccSagittalDoubleFlat7v11kUp = 58215;
    /// <summary>
    /// Double flat 7:19C-up.
    /// </summary>
    public const int AccSagittalDoubleFlat7v19CUp = 58341;
    /// <summary>
    /// Double sharp, (2 apotomes up)[almost all EDOs], whole-tone up.
    /// </summary>
    public const int AccSagittalDoubleSharp = 58164;
    /// <summary>
    /// Double sharp 11:49C-down.
    /// </summary>
    public const int AccSagittalDoubleSharp11v49CDown = 58344;
    /// <summary>
    /// Double sharp 143C-down.
    /// </summary>
    public const int AccSagittalDoubleSharp143CDown = 58346;
    /// <summary>
    /// Double sharp 17C-down.
    /// </summary>
    public const int AccSagittalDoubleSharp17CDown = 58212;
    /// <summary>
    /// Double sharp 17k-down.
    /// </summary>
    public const int AccSagittalDoubleSharp17kDown = 58348;
    /// <summary>
    /// Double sharp 19C-down.
    /// </summary>
    public const int AccSagittalDoubleSharp19CDown = 58342;
    /// <summary>
    /// Double sharp 19s-down.
    /// </summary>
    public const int AccSagittalDoubleSharp19sDown = 58350;
    /// <summary>
    /// Double sharp 23C-down, 14°up [96 EDO], 7/8-tone up.
    /// </summary>
    public const int AccSagittalDoubleSharp23CDown = 58246;
    /// <summary>
    /// Double sharp 23S-down.
    /// </summary>
    public const int AccSagittalDoubleSharp23SDown = 58336;
    /// <summary>
    /// Double sharp 25S-down, 8°up [53 EDO].
    /// </summary>
    public const int AccSagittalDoubleSharp25SDown = 58156;
    /// <summary>
    /// Double sharp 49S-down.
    /// </summary>
    public const int AccSagittalDoubleSharp49SDown = 58338;
    /// <summary>
    /// Double sharp 55C-down, 13° up [96 EDO], 13/16-tone up.
    /// </summary>
    public const int AccSagittalDoubleSharp55CDown = 58210;
    /// <summary>
    /// Double sharp 5C-down, 5°[22 29] 7°[34 41] 9°53 up, 11/12 tone up.
    /// </summary>
    public const int AccSagittalDoubleSharp5CDown = 58160;
    /// <summary>
    /// Double sharp 5:11S-down.
    /// </summary>
    public const int AccSagittalDoubleSharp5v11SDown = 58206;
    /// <summary>
    /// Double sharp 5:19C-down, 19/20-tone up.
    /// </summary>
    public const int AccSagittalDoubleSharp5v19CDown = 58244;
    /// <summary>
    /// Double sharp 5:23S-down, 8° up [60 EDO], 4/5-tone up.
    /// </summary>
    public const int AccSagittalDoubleSharp5v23SDown = 58242;
    /// <summary>
    /// Double sharp 5:7k-down.
    /// </summary>
    public const int AccSagittalDoubleSharp5v7kDown = 58162;
    /// <summary>
    /// Double sharp 7C-down, 5°[43] 10°[72] up, 5/6-tone up.
    /// </summary>
    public const int AccSagittalDoubleSharp7CDown = 58158;
    /// <summary>
    /// Double sharp 7:11C-down, 9° up [60 EDO], 9/10-tone up.
    /// </summary>
    public const int AccSagittalDoubleSharp7v11CDown = 58208;
    /// <summary>
    /// Double sharp 7:11k-down.
    /// </summary>
    public const int AccSagittalDoubleSharp7v11kDown = 58214;
    /// <summary>
    /// Double sharp 7:19C-down.
    /// </summary>
    public const int AccSagittalDoubleSharp7v19CDown = 58340;
    /// <summary>
    /// Flat, (apotome down)[almost all EDOs], 1/2-tone down.
    /// </summary>
    public const int AccSagittalFlat = 58137;
    /// <summary>
    /// Flat 11L-down, 8° up [46 EDO].
    /// </summary>
    public const int AccSagittalFlat11LDown = 58153;
    /// <summary>
    /// Flat 11M-down, 3° down [17 31 EDOs], 7° down [46 EDO], 3/4-tone down.
    /// </summary>
    public const int AccSagittalFlat11MDown = 58151;
    /// <summary>
    /// Flat 11:19L-down.
    /// </summary>
    public const int AccSagittalFlat11v19LDown = 58331;
    /// <summary>
    /// Flat 11:19M-down.
    /// </summary>
    public const int AccSagittalFlat11v19MDown = 58323;
    /// <summary>
    /// Flat 11:49C-down.
    /// </summary>
    public const int AccSagittalFlat11v49CDown = 58311;
    /// <summary>
    /// Flat 11:49C-up.
    /// </summary>
    public const int AccSagittalFlat11v49CUp = 58297;
    /// <summary>
    /// Flat 143C-down.
    /// </summary>
    public const int AccSagittalFlat143CDown = 58309;
    /// <summary>
    /// Flat 143C-up.
    /// </summary>
    public const int AccSagittalFlat143CUp = 58299;
    /// <summary>
    /// Flat 17C-down.
    /// </summary>
    public const int AccSagittalFlat17CDown = 58199;
    /// <summary>
    /// Flat 17C-up.
    /// </summary>
    public const int AccSagittalFlat17CUp = 58193;
    /// <summary>
    /// Flat 17k-down.
    /// </summary>
    public const int AccSagittalFlat17kDown = 58307;
    /// <summary>
    /// Flat 17k-up.
    /// </summary>
    public const int AccSagittalFlat17kUp = 58301;
    /// <summary>
    /// Flat 19C-down.
    /// </summary>
    public const int AccSagittalFlat19CDown = 58313;
    /// <summary>
    /// Flat 19C-up.
    /// </summary>
    public const int AccSagittalFlat19CUp = 58295;
    /// <summary>
    /// Flat 19s-down.
    /// </summary>
    public const int AccSagittalFlat19sDown = 58305;
    /// <summary>
    /// Flat 19s-up.
    /// </summary>
    public const int AccSagittalFlat19sUp = 58303;
    /// <summary>
    /// Flat 23C-down, 10° down [96 EDO], 5/8-tone down.
    /// </summary>
    public const int AccSagittalFlat23CDown = 58237;
    /// <summary>
    /// Flat 23C-up, 6° down [96 EDO], 3/8-tone down.
    /// </summary>
    public const int AccSagittalFlat23CUp = 58235;
    /// <summary>
    /// Flat 23S-down.
    /// </summary>
    public const int AccSagittalFlat23SDown = 58319;
    /// <summary>
    /// Flat 23S-up.
    /// </summary>
    public const int AccSagittalFlat23SUp = 58289;
    /// <summary>
    /// Flat 25S-down, 7° down [53 EDO].
    /// </summary>
    public const int AccSagittalFlat25SDown = 58147;
    /// <summary>
    /// Flat 25S-up, 3° down [53 EDO].
    /// </summary>
    public const int AccSagittalFlat25SUp = 58129;
    /// <summary>
    /// Flat 35L-down, 5° down [50 EDO].
    /// </summary>
    public const int AccSagittalFlat35LDown = 58155;
    /// <summary>
    /// Flat 35M-down, 4° down [50 EDO], 6° down [27 EDO], 13/18-tone down.
    /// </summary>
    public const int AccSagittalFlat35MDown = 58149;
    /// <summary>
    /// Flat 49L-down.
    /// </summary>
    public const int AccSagittalFlat49LDown = 58329;
    /// <summary>
    /// Flat 49M-down.
    /// </summary>
    public const int AccSagittalFlat49MDown = 58325;
    /// <summary>
    /// Flat 49S-down.
    /// </summary>
    public const int AccSagittalFlat49SDown = 58317;
    /// <summary>
    /// Flat 49S-up.
    /// </summary>
    public const int AccSagittalFlat49SUp = 58291;
    /// <summary>
    /// Flat 55C-down, 11° down [96 EDO], 11/16-tone down.
    /// </summary>
    public const int AccSagittalFlat55CDown = 58201;
    /// <summary>
    /// Flat 55C-up, 5° down [96 EDO], 5/16-tone down.
    /// </summary>
    public const int AccSagittalFlat55CUp = 58191;
    /// <summary>
    /// Flat 5C-down, 4°[22 29] 5°[27 34 41] 6°[39 46 53] down, 7/12-tone down.
    /// </summary>
    public const int AccSagittalFlat5CDown = 58143;
    /// <summary>
    /// Flat 5C-up, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°72 7°[96] down, 5/12-tone down.
    /// </summary>
    public const int AccSagittalFlat5CUp = 58133;
    /// <summary>
    /// Flat 5:11S-down.
    /// </summary>
    public const int AccSagittalFlat5v11SDown = 58205;
    /// <summary>
    /// Flat 5:11S-up.
    /// </summary>
    public const int AccSagittalFlat5v11SUp = 58187;
    /// <summary>
    /// Flat 5:13L-down.
    /// </summary>
    public const int AccSagittalFlat5v13LDown = 58333;
    /// <summary>
    /// Flat 5:13M-down.
    /// </summary>
    public const int AccSagittalFlat5v13MDown = 58321;
    /// <summary>
    /// Flat 5:19C-down, 11/20-tone down.
    /// </summary>
    public const int AccSagittalFlat5v19CDown = 58239;
    /// <summary>
    /// Flat 5:19C-up, 9/20-tone down.
    /// </summary>
    public const int AccSagittalFlat5v19CUp = 58233;
    /// <summary>
    /// Flat 5:23S-down, 7° down [60 EDO], 7/10-tone down.
    /// </summary>
    public const int AccSagittalFlat5v23SDown = 58241;
    /// <summary>
    /// Flat 5:23S-up, 3° down [60 EDO], 3/10-tone down.
    /// </summary>
    public const int AccSagittalFlat5v23SUp = 58231;
    /// <summary>
    /// Flat 5:49M-down.
    /// </summary>
    public const int AccSagittalFlat5v49MDown = 58327;
    /// <summary>
    /// Flat 5:7k-down.
    /// </summary>
    public const int AccSagittalFlat5v7kDown = 58141;
    /// <summary>
    /// Flat 5:7k-up.
    /// </summary>
    public const int AccSagittalFlat5v7kUp = 58135;
    /// <summary>
    /// Flat 7C-down, 4° down [43 EDO], 8° down [72 EDO], 2/3-tone down.
    /// </summary>
    public const int AccSagittalFlat7CDown = 58145;
    /// <summary>
    /// Flat 7C-up, 2° down [43 EDO], 4° down [72 EDO], 1/3-tone down.
    /// </summary>
    public const int AccSagittalFlat7CUp = 58131;
    /// <summary>
    /// Flat 7:11C-down, 6° down [60 EDO], 3/5- tone down.
    /// </summary>
    public const int AccSagittalFlat7v11CDown = 58203;
    /// <summary>
    /// Flat 7:11C-up, 4° down [60 EDO], 2/5-tone down.
    /// </summary>
    public const int AccSagittalFlat7v11CUp = 58189;
    /// <summary>
    /// Flat 7:11k-down.
    /// </summary>
    public const int AccSagittalFlat7v11kDown = 58197;
    /// <summary>
    /// Flat 7:11k-up.
    /// </summary>
    public const int AccSagittalFlat7v11kUp = 58195;
    /// <summary>
    /// Flat 7:19C-down.
    /// </summary>
    public const int AccSagittalFlat7v19CDown = 58315;
    /// <summary>
    /// Flat 7:19C-up.
    /// </summary>
    public const int AccSagittalFlat7v19CUp = 58293;
    /// <summary>
    /// Fractional tina down, 77/(5⋅37)-schismina down, 0.08 cents down.
    /// </summary>
    public const int AccSagittalFractionalTinaDown = 58379;
    /// <summary>
    /// Fractional tina up, 77/(5⋅37)-schismina up, 0.08 cents up.
    /// </summary>
    public const int AccSagittalFractionalTinaUp = 58378;
    /// <summary>
    /// Grave, 5 schisma down, 2 cents down.
    /// </summary>
    public const int AccSagittalGrave = 58355;
    /// <summary>
    /// Shaft down, (natural for use with only diacritics down).
    /// </summary>
    public const int AccSagittalShaftDown = 58353;
    /// <summary>
    /// Shaft up, (natural for use with only diacritics up).
    /// </summary>
    public const int AccSagittalShaftUp = 58352;
    /// <summary>
    /// Sharp, (apotome up)[almost all EDOs], 1/2-tone up.
    /// </summary>
    public const int AccSagittalSharp = 58136;
    /// <summary>
    /// Sharp 11L-up, 8° up [46 EDO].
    /// </summary>
    public const int AccSagittalSharp11LUp = 58152;
    /// <summary>
    /// Sharp 11M-up, 3° up [17 31 EDOs], 7° up [46 EDO], 3/4-tone up.
    /// </summary>
    public const int AccSagittalSharp11MUp = 58150;
    /// <summary>
    /// Sharp 11:19L-up.
    /// </summary>
    public const int AccSagittalSharp11v19LUp = 58330;
    /// <summary>
    /// Sharp 11:19M-up.
    /// </summary>
    public const int AccSagittalSharp11v19MUp = 58322;
    /// <summary>
    /// Sharp 11:49C-down.
    /// </summary>
    public const int AccSagittalSharp11v49CDown = 58296;
    /// <summary>
    /// Sharp 11:49C-up.
    /// </summary>
    public const int AccSagittalSharp11v49CUp = 58310;
    /// <summary>
    /// Sharp 143C-down.
    /// </summary>
    public const int AccSagittalSharp143CDown = 58298;
    /// <summary>
    /// Sharp 143C-up.
    /// </summary>
    public const int AccSagittalSharp143CUp = 58308;
    /// <summary>
    /// Sharp 17C-down.
    /// </summary>
    public const int AccSagittalSharp17CDown = 58192;
    /// <summary>
    /// Sharp 17C-up.
    /// </summary>
    public const int AccSagittalSharp17CUp = 58198;
    /// <summary>
    /// Sharp 17k-down.
    /// </summary>
    public const int AccSagittalSharp17kDown = 58300;
    /// <summary>
    /// Sharp 17k-up.
    /// </summary>
    public const int AccSagittalSharp17kUp = 58306;
    /// <summary>
    /// Sharp 19C-down.
    /// </summary>
    public const int AccSagittalSharp19CDown = 58294;
    /// <summary>
    /// Sharp 19C-up.
    /// </summary>
    public const int AccSagittalSharp19CUp = 58312;
    /// <summary>
    /// Sharp 19s-down.
    /// </summary>
    public const int AccSagittalSharp19sDown = 58302;
    /// <summary>
    /// Sharp 19s-up.
    /// </summary>
    public const int AccSagittalSharp19sUp = 58304;
    /// <summary>
    /// Sharp 23C-down, 6° up [96 EDO], 3/8-tone up.
    /// </summary>
    public const int AccSagittalSharp23CDown = 58234;
    /// <summary>
    /// Sharp 23C-up, 10° up [96 EDO], 5/8-tone up.
    /// </summary>
    public const int AccSagittalSharp23CUp = 58236;
    /// <summary>
    /// Sharp 23S-down.
    /// </summary>
    public const int AccSagittalSharp23SDown = 58288;
    /// <summary>
    /// Sharp 23S-up.
    /// </summary>
    public const int AccSagittalSharp23SUp = 58318;
    /// <summary>
    /// Sharp 25S-down, 3° up [53 EDO].
    /// </summary>
    public const int AccSagittalSharp25SDown = 58128;
    /// <summary>
    /// Sharp 25S-up, 7° up [53 EDO].
    /// </summary>
    public const int AccSagittalSharp25SUp = 58146;
    /// <summary>
    /// Sharp 35L-up, 5° up [50 EDO].
    /// </summary>
    public const int AccSagittalSharp35LUp = 58154;
    /// <summary>
    /// Sharp 35M-up, 4° up [50 EDO], 6° up [27 EDO], 13/18-tone up.
    /// </summary>
    public const int AccSagittalSharp35MUp = 58148;
    /// <summary>
    /// Sharp 49L-up.
    /// </summary>
    public const int AccSagittalSharp49LUp = 58328;
    /// <summary>
    /// Sharp 49M-up.
    /// </summary>
    public const int AccSagittalSharp49MUp = 58324;
    /// <summary>
    /// Sharp 49S-down.
    /// </summary>
    public const int AccSagittalSharp49SDown = 58290;
    /// <summary>
    /// Sharp 49S-up.
    /// </summary>
    public const int AccSagittalSharp49SUp = 58316;
    /// <summary>
    /// Sharp 55C-down, 5° up [96 EDO], 5/16-tone up.
    /// </summary>
    public const int AccSagittalSharp55CDown = 58190;
    /// <summary>
    /// Sharp 55C-up, 11° up [96 EDO], 11/16-tone up.
    /// </summary>
    public const int AccSagittalSharp55CUp = 58200;
    /// <summary>
    /// Sharp 5C-down, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°[72] 7°[96] up, 5/12-tone up.
    /// </summary>
    public const int AccSagittalSharp5CDown = 58132;
    /// <summary>
    /// Sharp 5C-up, 4°[22 29] 5°[27 34 41] 6°[39 46 53] up, 7/12-tone up.
    /// </summary>
    public const int AccSagittalSharp5CUp = 58142;
    /// <summary>
    /// Sharp 5:11S-down.
    /// </summary>
    public const int AccSagittalSharp5v11SDown = 58186;
    /// <summary>
    /// Sharp 5:11S-up.
    /// </summary>
    public const int AccSagittalSharp5v11SUp = 58204;
    /// <summary>
    /// Sharp 5:13L-up.
    /// </summary>
    public const int AccSagittalSharp5v13LUp = 58332;
    /// <summary>
    /// Sharp 5:13M-up.
    /// </summary>
    public const int AccSagittalSharp5v13MUp = 58320;
    /// <summary>
    /// Sharp 5:19C-down, 9/20-tone up.
    /// </summary>
    public const int AccSagittalSharp5v19CDown = 58232;
    /// <summary>
    /// Sharp 5:19C-up, 11/20-tone up.
    /// </summary>
    public const int AccSagittalSharp5v19CUp = 58238;
    /// <summary>
    /// Sharp 5:23S-down, 3° up [60 EDO], 3/10-tone up.
    /// </summary>
    public const int AccSagittalSharp5v23SDown = 58230;
    /// <summary>
    /// Sharp 5:23S-up, 7° up [60 EDO], 7/10-tone up.
    /// </summary>
    public const int AccSagittalSharp5v23SUp = 58240;
    /// <summary>
    /// Sharp 5:49M-up, (one and a half apotomes).
    /// </summary>
    public const int AccSagittalSharp5v49MUp = 58326;
    /// <summary>
    /// Sharp 5:7k-down.
    /// </summary>
    public const int AccSagittalSharp5v7kDown = 58134;
    /// <summary>
    /// Sharp 5:7k-up.
    /// </summary>
    public const int AccSagittalSharp5v7kUp = 58140;
    /// <summary>
    /// Sharp 7C-down, 2° up [43 EDO], 4° up [72 EDO], 1/3-tone up.
    /// </summary>
    public const int AccSagittalSharp7CDown = 58130;
    /// <summary>
    /// Sharp 7C-up, 4° up [43 EDO], 8° up [72 EDO], 2/3-tone up.
    /// </summary>
    public const int AccSagittalSharp7CUp = 58144;
    /// <summary>
    /// Sharp 7:11C-down, 4° up [60 EDO], 2/5-tone up.
    /// </summary>
    public const int AccSagittalSharp7v11CDown = 58188;
    /// <summary>
    /// Sharp 7:11C-up, 6° up [60 EDO], 3/5- tone up.
    /// </summary>
    public const int AccSagittalSharp7v11CUp = 58202;
    /// <summary>
    /// Sharp 7:11k-down.
    /// </summary>
    public const int AccSagittalSharp7v11kDown = 58194;
    /// <summary>
    /// Sharp 7:11k-up.
    /// </summary>
    public const int AccSagittalSharp7v11kUp = 58196;
    /// <summary>
    /// Sharp 7:19C-down.
    /// </summary>
    public const int AccSagittalSharp7v19CDown = 58292;
    /// <summary>
    /// Sharp 7:19C-up.
    /// </summary>
    public const int AccSagittalSharp7v19CUp = 58314;
    /// <summary>
    /// Unused.
    /// </summary>
    public const int AccSagittalUnused1 = 58138;
    /// <summary>
    /// Unused.
    /// </summary>
    public const int AccSagittalUnused2 = 58139;
    /// <summary>
    /// Unused.
    /// </summary>
    public const int AccSagittalUnused3 = 58334;
    /// <summary>
    /// Unused.
    /// </summary>
    public const int AccSagittalUnused4 = 58335;
    /// <summary>
    /// Combining accordion coupler dot.
    /// </summary>
    public const int AccdnCombDot = 59594;
    /// <summary>
    /// Combining left hand, 2 ranks, empty.
    /// </summary>
    public const int AccdnCombLH2RanksEmpty = 59592;
    /// <summary>
    /// Combining left hand, 3 ranks, empty (square).
    /// </summary>
    public const int AccdnCombLH3RanksEmptySquare = 59593;
    /// <summary>
    /// Combining right hand, 3 ranks, empty.
    /// </summary>
    public const int AccdnCombRH3RanksEmpty = 59590;
    /// <summary>
    /// Combining right hand, 4 ranks, empty.
    /// </summary>
    public const int AccdnCombRH4RanksEmpty = 59591;
    /// <summary>
    /// Diatonic accordion clef.
    /// </summary>
    public const int AccdnDiatonicClef = 57465;
    /// <summary>
    /// Left hand, 2 ranks, 16' stop (round).
    /// </summary>
    public const int AccdnLH2Ranks16Round = 59580;
    /// <summary>
    /// Left hand, 2 ranks, 8' stop + 16' stop (round).
    /// </summary>
    public const int AccdnLH2Ranks8Plus16Round = 59581;
    /// <summary>
    /// Left hand, 2 ranks, 8' stop (round).
    /// </summary>
    public const int AccdnLH2Ranks8Round = 59579;
    /// <summary>
    /// Left hand, 2 ranks, full master (round).
    /// </summary>
    public const int AccdnLH2RanksFullMasterRound = 59584;
    /// <summary>
    /// Left hand, 2 ranks, master + 16' stop (round).
    /// </summary>
    public const int AccdnLH2RanksMasterPlus16Round = 59583;
    /// <summary>
    /// Left hand, 2 ranks, master (round).
    /// </summary>
    public const int AccdnLH2RanksMasterRound = 59582;
    /// <summary>
    /// Left hand, 3 ranks, 2' stop + 8' stop (square).
    /// </summary>
    public const int AccdnLH3Ranks2Plus8Square = 59588;
    /// <summary>
    /// Left hand, 3 ranks, 2' stop (square).
    /// </summary>
    public const int AccdnLH3Ranks2Square = 59586;
    /// <summary>
    /// Left hand, 3 ranks, 8' stop (square).
    /// </summary>
    public const int AccdnLH3Ranks8Square = 59585;
    /// <summary>
    /// Left hand, 3 ranks, double 8' stop (square).
    /// </summary>
    public const int AccdnLH3RanksDouble8Square = 59587;
    /// <summary>
    /// Left hand, 3 ranks, 2' stop + double 8' stop (tutti) (square).
    /// </summary>
    public const int AccdnLH3RanksTuttiSquare = 59589;
    /// <summary>
    /// Pull.
    /// </summary>
    public const int AccdnPull = 59596;
    /// <summary>
    /// Push.
    /// </summary>
    public const int AccdnPush = 59595;
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + upper tremolo 8' stop + 16' stop (accordion).
    /// </summary>
    public const int AccdnRH3RanksAccordion = 59564;
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop (authentic musette).
    /// </summary>
    public const int AccdnRH3RanksAuthenticMusette = 59560;
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + 16' stop (bandoneón).
    /// </summary>
    public const int AccdnRH3RanksBandoneon = 59563;
    /// <summary>
    /// Right hand, 3 ranks, 16' stop (bassoon).
    /// </summary>
    public const int AccdnRH3RanksBassoon = 59556;
    /// <summary>
    /// Right hand, 3 ranks, 8' stop (clarinet).
    /// </summary>
    public const int AccdnRH3RanksClarinet = 59553;
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const int AccdnRH3RanksDoubleTremoloLower8ve = 59569;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const int AccdnRH3RanksDoubleTremoloUpper8ve = 59570;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const int AccdnRH3RanksFullFactory = 59571;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop + 16' stop (harmonium).
    /// </summary>
    public const int AccdnRH3RanksHarmonium = 59562;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop + upper tremolo 8' stop (imitation musette).
    /// </summary>
    public const int AccdnRH3RanksImitationMusette = 59559;
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop.
    /// </summary>
    public const int AccdnRH3RanksLowerTremolo8 = 59555;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop + 16' stop (master).
    /// </summary>
    public const int AccdnRH3RanksMaster = 59565;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 8' stop (oboe).
    /// </summary>
    public const int AccdnRH3RanksOboe = 59557;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + 16' stop (organ).
    /// </summary>
    public const int AccdnRH3RanksOrgan = 59561;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop (piccolo).
    /// </summary>
    public const int AccdnRH3RanksPiccolo = 59552;
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop + 16' stop.
    /// </summary>
    public const int AccdnRH3RanksTremoloLower8ve = 59567;
    /// <summary>
    /// Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const int AccdnRH3RanksTremoloUpper8ve = 59568;
    /// <summary>
    /// Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop.
    /// </summary>
    public const int AccdnRH3RanksTwoChoirs = 59566;
    /// <summary>
    /// Right hand, 3 ranks, upper tremolo 8' stop.
    /// </summary>
    public const int AccdnRH3RanksUpperTremolo8 = 59554;
    /// <summary>
    /// Right hand, 3 ranks, 8' stop + upper tremolo 8' stop (violin).
    /// </summary>
    public const int AccdnRH3RanksViolin = 59558;
    /// <summary>
    /// Right hand, 4 ranks, alto.
    /// </summary>
    public const int AccdnRH4RanksAlto = 59573;
    /// <summary>
    /// Right hand, 4 ranks, bass/alto.
    /// </summary>
    public const int AccdnRH4RanksBassAlto = 59578;
    /// <summary>
    /// Right hand, 4 ranks, master.
    /// </summary>
    public const int AccdnRH4RanksMaster = 59575;
    /// <summary>
    /// Right hand, 4 ranks, soft bass.
    /// </summary>
    public const int AccdnRH4RanksSoftBass = 59576;
    /// <summary>
    /// Right hand, 4 ranks, soft tenor.
    /// </summary>
    public const int AccdnRH4RanksSoftTenor = 59577;
    /// <summary>
    /// Right hand, 4 ranks, soprano.
    /// </summary>
    public const int AccdnRH4RanksSoprano = 59572;
    /// <summary>
    /// Right hand, 4 ranks, tenor.
    /// </summary>
    public const int AccdnRH4RanksTenor = 59574;
    /// <summary>
    /// Ricochet (2 tones).
    /// </summary>
    public const int AccdnRicochet2 = 59597;
    /// <summary>
    /// Ricochet (3 tones).
    /// </summary>
    public const int AccdnRicochet3 = 59598;
    /// <summary>
    /// Ricochet (4 tones).
    /// </summary>
    public const int AccdnRicochet4 = 59599;
    /// <summary>
    /// Ricochet (5 tones).
    /// </summary>
    public const int AccdnRicochet5 = 59600;
    /// <summary>
    /// Ricochet (6 tones).
    /// </summary>
    public const int AccdnRicochet6 = 59601;
    /// <summary>
    /// Combining ricochet for stem (2 tones).
    /// </summary>
    public const int AccdnRicochetStem2 = 59602;
    /// <summary>
    /// Combining ricochet for stem (3 tones).
    /// </summary>
    public const int AccdnRicochetStem3 = 59603;
    /// <summary>
    /// Combining ricochet for stem (4 tones).
    /// </summary>
    public const int AccdnRicochetStem4 = 59604;
    /// <summary>
    /// Combining ricochet for stem (5 tones).
    /// </summary>
    public const int AccdnRicochetStem5 = 59605;
    /// <summary>
    /// Combining ricochet for stem (6 tones).
    /// </summary>
    public const int AccdnRicochetStem6 = 59606;
    /// <summary>
    /// 1-comma flat.
    /// </summary>
    public const int Accidental1CommaFlat = 58452;
    /// <summary>
    /// 1-comma sharp.
    /// </summary>
    public const int Accidental1CommaSharp = 58448;
    /// <summary>
    /// 2-comma flat.
    /// </summary>
    public const int Accidental2CommaFlat = 58453;
    /// <summary>
    /// 2-comma sharp.
    /// </summary>
    public const int Accidental2CommaSharp = 58449;
    /// <summary>
    /// 3-comma flat.
    /// </summary>
    public const int Accidental3CommaFlat = 58454;
    /// <summary>
    /// 3-comma sharp.
    /// </summary>
    public const int Accidental3CommaSharp = 58450;
    /// <summary>
    /// 4-comma flat.
    /// </summary>
    public const int Accidental4CommaFlat = 58455;
    /// <summary>
    /// 5-comma sharp.
    /// </summary>
    public const int Accidental5CommaSharp = 58451;
    /// <summary>
    /// Arrow down (lower by one quarter-tone).
    /// </summary>
    public const int AccidentalArrowDown = 57979;
    /// <summary>
    /// Arrow up (raise by one quarter-tone).
    /// </summary>
    public const int AccidentalArrowUp = 57978;
    /// <summary>
    /// Bakiye (flat).
    /// </summary>
    public const int AccidentalBakiyeFlat = 58434;
    /// <summary>
    /// Bakiye (sharp).
    /// </summary>
    public const int AccidentalBakiyeSharp = 58437;
    /// <summary>
    /// Accidental bracket, left.
    /// </summary>
    public const int AccidentalBracketLeft = 57964;
    /// <summary>
    /// Accidental bracket, right.
    /// </summary>
    public const int AccidentalBracketRight = 57965;
    /// <summary>
    /// Büyük mücenneb (flat).
    /// </summary>
    public const int AccidentalBuyukMucennebFlat = 58432;
    /// <summary>
    /// Büyük mücenneb (sharp).
    /// </summary>
    public const int AccidentalBuyukMucennebSharp = 58439;
    /// <summary>
    /// Combining close curly brace.
    /// </summary>
    public const int AccidentalCombiningCloseCurlyBrace = 58095;
    /// <summary>
    /// Combining lower by one 17-limit schisma.
    /// </summary>
    public const int AccidentalCombiningLower17Schisma = 58086;
    /// <summary>
    /// Combining lower by one 19-limit schisma.
    /// </summary>
    public const int AccidentalCombiningLower19Schisma = 58088;
    /// <summary>
    /// Combining lower by one 23-limit comma.
    /// </summary>
    public const int AccidentalCombiningLower23Limit29LimitComma = 58090;
    /// <summary>
    /// Combining lower by one 29-limit comma.
    /// </summary>
    public const int AccidentalCombiningLower29LimitComma = 61008;
    /// <summary>
    /// Combining lower by one 31-limit schisma.
    /// </summary>
    public const int AccidentalCombiningLower31Schisma = 58092;
    /// <summary>
    /// Combining lower by one 37-limit quartertone.
    /// </summary>
    public const int AccidentalCombiningLower37Quartertone = 61010;
    /// <summary>
    /// Combining lower by one 41-limit comma.
    /// </summary>
    public const int AccidentalCombiningLower41Comma = 61012;
    /// <summary>
    /// Combining lower by one 43-limit comma.
    /// </summary>
    public const int AccidentalCombiningLower43Comma = 61014;
    /// <summary>
    /// Combining lower by one 47-limit quartertone.
    /// </summary>
    public const int AccidentalCombiningLower47Quartertone = 61016;
    /// <summary>
    /// Combining lower by one 53-limit comma.
    /// </summary>
    public const int AccidentalCombiningLower53LimitComma = 58103;
    /// <summary>
    /// Combining open curly brace.
    /// </summary>
    public const int AccidentalCombiningOpenCurlyBrace = 58094;
    /// <summary>
    /// Combining raise by one 17-limit schisma.
    /// </summary>
    public const int AccidentalCombiningRaise17Schisma = 58087;
    /// <summary>
    /// Combining raise by one 19-limit schisma.
    /// </summary>
    public const int AccidentalCombiningRaise19Schisma = 58089;
    /// <summary>
    /// Combining raise by one 23-limit comma.
    /// </summary>
    public const int AccidentalCombiningRaise23Limit29LimitComma = 58091;
    /// <summary>
    /// Combining raise by one 29-limit comma.
    /// </summary>
    public const int AccidentalCombiningRaise29LimitComma = 61009;
    /// <summary>
    /// Combining raise by one 31-limit schisma.
    /// </summary>
    public const int AccidentalCombiningRaise31Schisma = 58093;
    /// <summary>
    /// Combining raise by one 37-limit quartertone.
    /// </summary>
    public const int AccidentalCombiningRaise37Quartertone = 61011;
    /// <summary>
    /// Combining raise by one 41-limit comma.
    /// </summary>
    public const int AccidentalCombiningRaise41Comma = 61013;
    /// <summary>
    /// Combining raise by one 43-limit comma.
    /// </summary>
    public const int AccidentalCombiningRaise43Comma = 61015;
    /// <summary>
    /// Combining raise by one 47-limit quartertone.
    /// </summary>
    public const int AccidentalCombiningRaise47Quartertone = 61017;
    /// <summary>
    /// Combining raise by one 53-limit comma.
    /// </summary>
    public const int AccidentalCombiningRaise53LimitComma = 58104;
    /// <summary>
    /// Syntonic/Didymus comma (80:81) down (Bosanquet).
    /// </summary>
    public const int AccidentalCommaSlashDown = 58490;
    /// <summary>
    /// Syntonic/Didymus comma (80:81) up (Bosanquet).
    /// </summary>
    public const int AccidentalCommaSlashUp = 58489;
    /// <summary>
    /// Double flat.
    /// </summary>
    public const int AccidentalDoubleFlat = 57956;
    /// <summary>
    /// Arabic double flat.
    /// </summary>
    public const int AccidentalDoubleFlatArabic = 60720;
    /// <summary>
    /// Double flat equal tempered semitone.
    /// </summary>
    public const int AccidentalDoubleFlatEqualTempered = 58096;
    /// <summary>
    /// Double flat lowered by one syntonic comma.
    /// </summary>
    public const int AccidentalDoubleFlatOneArrowDown = 58048;
    /// <summary>
    /// Double flat raised by one syntonic comma.
    /// </summary>
    public const int AccidentalDoubleFlatOneArrowUp = 58053;
    /// <summary>
    /// Reversed double flat.
    /// </summary>
    public const int AccidentalDoubleFlatReversed = 58499;
    /// <summary>
    /// Double flat lowered by three syntonic commas.
    /// </summary>
    public const int AccidentalDoubleFlatThreeArrowsDown = 58068;
    /// <summary>
    /// Double flat raised by three syntonic commas.
    /// </summary>
    public const int AccidentalDoubleFlatThreeArrowsUp = 58073;
    /// <summary>
    /// Turned double flat.
    /// </summary>
    public const int AccidentalDoubleFlatTurned = 58501;
    /// <summary>
    /// Double flat lowered by two syntonic commas.
    /// </summary>
    public const int AccidentalDoubleFlatTwoArrowsDown = 58058;
    /// <summary>
    /// Double flat raised by two syntonic commas.
    /// </summary>
    public const int AccidentalDoubleFlatTwoArrowsUp = 58063;
    /// <summary>
    /// Double sharp.
    /// </summary>
    public const int AccidentalDoubleSharp = 57955;
    /// <summary>
    /// Arabic double sharp.
    /// </summary>
    public const int AccidentalDoubleSharpArabic = 60728;
    /// <summary>
    /// Double sharp equal tempered semitone.
    /// </summary>
    public const int AccidentalDoubleSharpEqualTempered = 58100;
    /// <summary>
    /// Double sharp lowered by one syntonic comma.
    /// </summary>
    public const int AccidentalDoubleSharpOneArrowDown = 58052;
    /// <summary>
    /// Double sharp raised by one syntonic comma.
    /// </summary>
    public const int AccidentalDoubleSharpOneArrowUp = 58057;
    /// <summary>
    /// Double sharp lowered by three syntonic commas.
    /// </summary>
    public const int AccidentalDoubleSharpThreeArrowsDown = 58072;
    /// <summary>
    /// Double sharp raised by three syntonic commas.
    /// </summary>
    public const int AccidentalDoubleSharpThreeArrowsUp = 58077;
    /// <summary>
    /// Double sharp lowered by two syntonic commas.
    /// </summary>
    public const int AccidentalDoubleSharpTwoArrowsDown = 58062;
    /// <summary>
    /// Double sharp raised by two syntonic commas.
    /// </summary>
    public const int AccidentalDoubleSharpTwoArrowsUp = 58067;
    /// <summary>
    /// Enharmonically reinterpret accidental almost equal to.
    /// </summary>
    public const int AccidentalEnharmonicAlmostEqualTo = 58106;
    /// <summary>
    /// Enharmonically reinterpret accidental equals.
    /// </summary>
    public const int AccidentalEnharmonicEquals = 58107;
    /// <summary>
    /// Enharmonically reinterpret accidental tilde.
    /// </summary>
    public const int AccidentalEnharmonicTilde = 58105;
    /// <summary>
    /// Filled reversed flat and flat.
    /// </summary>
    public const int AccidentalFilledReversedFlatAndFlat = 58006;
    /// <summary>
    /// Filled reversed flat and flat with arrow down.
    /// </summary>
    public const int AccidentalFilledReversedFlatAndFlatArrowDown = 58008;
    /// <summary>
    /// Filled reversed flat and flat with arrow up.
    /// </summary>
    public const int AccidentalFilledReversedFlatAndFlatArrowUp = 58007;
    /// <summary>
    /// Filled reversed flat with arrow down.
    /// </summary>
    public const int AccidentalFilledReversedFlatArrowDown = 58003;
    /// <summary>
    /// Filled reversed flat with arrow up.
    /// </summary>
    public const int AccidentalFilledReversedFlatArrowUp = 58002;
    /// <summary>
    /// Five-quarter-tones flat.
    /// </summary>
    public const int AccidentalFiveQuarterTonesFlatArrowDown = 57977;
    /// <summary>
    /// Five-quarter-tones sharp.
    /// </summary>
    public const int AccidentalFiveQuarterTonesSharpArrowUp = 57974;
    /// <summary>
    /// Flat.
    /// </summary>
    public const int AccidentalFlat = 57952;
    /// <summary>
    /// Arabic half-tone flat.
    /// </summary>
    public const int AccidentalFlatArabic = 60722;
    /// <summary>
    /// Flat equal tempered semitone.
    /// </summary>
    public const int AccidentalFlatEqualTempered = 58097;
    /// <summary>
    /// Lowered flat (Stockhausen).
    /// </summary>
    public const int AccidentalFlatLoweredStockhausen = 60755;
    /// <summary>
    /// Flat lowered by one syntonic comma.
    /// </summary>
    public const int AccidentalFlatOneArrowDown = 58049;
    /// <summary>
    /// Flat raised by one syntonic comma.
    /// </summary>
    public const int AccidentalFlatOneArrowUp = 58054;
    /// <summary>
    /// Raised flat (Stockhausen).
    /// </summary>
    public const int AccidentalFlatRaisedStockhausen = 60754;
    /// <summary>
    /// Repeated flat, note on line (Stockhausen).
    /// </summary>
    public const int AccidentalFlatRepeatedLineStockhausen = 60764;
    /// <summary>
    /// Repeated flat, note in space (Stockhausen).
    /// </summary>
    public const int AccidentalFlatRepeatedSpaceStockhausen = 60763;
    /// <summary>
    /// Flat lowered by three syntonic commas.
    /// </summary>
    public const int AccidentalFlatThreeArrowsDown = 58069;
    /// <summary>
    /// Flat raised by three syntonic commas.
    /// </summary>
    public const int AccidentalFlatThreeArrowsUp = 58074;
    /// <summary>
    /// Turned flat.
    /// </summary>
    public const int AccidentalFlatTurned = 58500;
    /// <summary>
    /// Flat lowered by two syntonic commas.
    /// </summary>
    public const int AccidentalFlatTwoArrowsDown = 58059;
    /// <summary>
    /// Flat raised by two syntonic commas.
    /// </summary>
    public const int AccidentalFlatTwoArrowsUp = 58064;
    /// <summary>
    /// Quarter-tone higher (Alois Hába).
    /// </summary>
    public const int AccidentalHabaFlatQuarterToneHigher = 61029;
    /// <summary>
    /// Three quarter-tones lower (Alois Hába).
    /// </summary>
    public const int AccidentalHabaFlatThreeQuarterTonesLower = 61033;
    /// <summary>
    /// Quarter-tone higher (Alois Hába).
    /// </summary>
    public const int AccidentalHabaQuarterToneHigher = 61028;
    /// <summary>
    /// Quarter-tone lower (Alois Hába).
    /// </summary>
    public const int AccidentalHabaQuarterToneLower = 61031;
    /// <summary>
    /// Quarter-tone lower (Alois Hába).
    /// </summary>
    public const int AccidentalHabaSharpQuarterToneLower = 61032;
    /// <summary>
    /// Three quarter-tones higher (Alois Hába).
    /// </summary>
    public const int AccidentalHabaSharpThreeQuarterTonesHigher = 61030;
    /// <summary>
    /// Half sharp with arrow down.
    /// </summary>
    public const int AccidentalHalfSharpArrowDown = 58010;
    /// <summary>
    /// Half sharp with arrow up.
    /// </summary>
    public const int AccidentalHalfSharpArrowUp = 58009;
    /// <summary>
    /// Thirteen (raise by 65:64).
    /// </summary>
    public const int AccidentalJohnston13 = 58038;
    /// <summary>
    /// Inverted 13 (lower by 65:64).
    /// </summary>
    public const int AccidentalJohnston31 = 58039;
    /// <summary>
    /// Down arrow (lower by 33:32).
    /// </summary>
    public const int AccidentalJohnstonDown = 58037;
    /// <summary>
    /// Inverted seven (raise by 36:35).
    /// </summary>
    public const int AccidentalJohnstonEl = 58034;
    /// <summary>
    /// Minus (lower by 81:80).
    /// </summary>
    public const int AccidentalJohnstonMinus = 58033;
    /// <summary>
    /// Plus (raise by 81:80).
    /// </summary>
    public const int AccidentalJohnstonPlus = 58032;
    /// <summary>
    /// Seven (lower by 36:35).
    /// </summary>
    public const int AccidentalJohnstonSeven = 58035;
    /// <summary>
    /// Up arrow (raise by 33:32).
    /// </summary>
    public const int AccidentalJohnstonUp = 58036;
    /// <summary>
    /// Koma (flat).
    /// </summary>
    public const int AccidentalKomaFlat = 58435;
    /// <summary>
    /// Koma (sharp).
    /// </summary>
    public const int AccidentalKomaSharp = 58436;
    /// <summary>
    /// Koron (quarter tone flat).
    /// </summary>
    public const int AccidentalKoron = 58464;
    /// <summary>
    /// Küçük mücenneb (flat).
    /// </summary>
    public const int AccidentalKucukMucennebFlat = 58433;
    /// <summary>
    /// Küçük mücenneb (sharp).
    /// </summary>
    public const int AccidentalKucukMucennebSharp = 58438;
    /// <summary>
    /// Large double sharp.
    /// </summary>
    public const int AccidentalLargeDoubleSharp = 58493;
    /// <summary>
    /// Lower by one septimal comma.
    /// </summary>
    public const int AccidentalLowerOneSeptimalComma = 58078;
    /// <summary>
    /// Lower by one tridecimal quartertone.
    /// </summary>
    public const int AccidentalLowerOneTridecimalQuartertone = 58084;
    /// <summary>
    /// Lower by one undecimal quartertone.
    /// </summary>
    public const int AccidentalLowerOneUndecimalQuartertone = 58082;
    /// <summary>
    /// Lower by two septimal commas.
    /// </summary>
    public const int AccidentalLowerTwoSeptimalCommas = 58080;
    /// <summary>
    /// Lowered (Stockhausen).
    /// </summary>
    public const int AccidentalLoweredStockhausen = 60753;
    /// <summary>
    /// Narrow reversed flat(quarter-tone flat).
    /// </summary>
    public const int AccidentalNarrowReversedFlat = 57988;
    /// <summary>
    /// Narrow reversed flat and flat(three-quarter-tones flat).
    /// </summary>
    public const int AccidentalNarrowReversedFlatAndFlat = 57989;
    /// <summary>
    /// Natural.
    /// </summary>
    public const int AccidentalNatural = 57953;
    /// <summary>
    /// Arabic natural.
    /// </summary>
    public const int AccidentalNaturalArabic = 60724;
    /// <summary>
    /// Natural equal tempered semitone.
    /// </summary>
    public const int AccidentalNaturalEqualTempered = 58098;
    /// <summary>
    /// Natural flat.
    /// </summary>
    public const int AccidentalNaturalFlat = 57959;
    /// <summary>
    /// Lowered natural (Stockhausen).
    /// </summary>
    public const int AccidentalNaturalLoweredStockhausen = 60757;
    /// <summary>
    /// Natural lowered by one syntonic comma.
    /// </summary>
    public const int AccidentalNaturalOneArrowDown = 58050;
    /// <summary>
    /// Natural raised by one syntonic comma.
    /// </summary>
    public const int AccidentalNaturalOneArrowUp = 58055;
    /// <summary>
    /// Raised natural (Stockhausen).
    /// </summary>
    public const int AccidentalNaturalRaisedStockhausen = 60756;
    /// <summary>
    /// Reversed natural.
    /// </summary>
    public const int AccidentalNaturalReversed = 58498;
    /// <summary>
    /// Natural sharp.
    /// </summary>
    public const int AccidentalNaturalSharp = 57960;
    /// <summary>
    /// Natural lowered by three syntonic commas.
    /// </summary>
    public const int AccidentalNaturalThreeArrowsDown = 58070;
    /// <summary>
    /// Natural raised by three syntonic commas.
    /// </summary>
    public const int AccidentalNaturalThreeArrowsUp = 58075;
    /// <summary>
    /// Natural lowered by two syntonic commas.
    /// </summary>
    public const int AccidentalNaturalTwoArrowsDown = 58060;
    /// <summary>
    /// Natural raised by two syntonic commas.
    /// </summary>
    public const int AccidentalNaturalTwoArrowsUp = 58065;
    /// <summary>
    /// One and a half sharps with arrow down.
    /// </summary>
    public const int AccidentalOneAndAHalfSharpsArrowDown = 58012;
    /// <summary>
    /// One and a half sharps with arrow up.
    /// </summary>
    public const int AccidentalOneAndAHalfSharpsArrowUp = 58011;
    /// <summary>
    /// One-quarter-tone flat (Ferneyhough).
    /// </summary>
    public const int AccidentalOneQuarterToneFlatFerneyhough = 58511;
    /// <summary>
    /// One-quarter-tone flat (Stockhausen).
    /// </summary>
    public const int AccidentalOneQuarterToneFlatStockhausen = 60761;
    /// <summary>
    /// One-quarter-tone sharp (Ferneyhough).
    /// </summary>
    public const int AccidentalOneQuarterToneSharpFerneyhough = 58510;
    /// <summary>
    /// One-quarter-tone sharp (Stockhausen).
    /// </summary>
    public const int AccidentalOneQuarterToneSharpStockhausen = 60760;
    /// <summary>
    /// One-third-tone flat (Ferneyhough).
    /// </summary>
    public const int AccidentalOneThirdToneFlatFerneyhough = 58507;
    /// <summary>
    /// One-third-tone sharp (Ferneyhough).
    /// </summary>
    public const int AccidentalOneThirdToneSharpFerneyhough = 58506;
    /// <summary>
    /// Accidental parenthesis, left.
    /// </summary>
    public const int AccidentalParensLeft = 57962;
    /// <summary>
    /// Accidental parenthesis, right.
    /// </summary>
    public const int AccidentalParensRight = 57963;
    /// <summary>
    /// Lower by one equal tempered quarter-tone.
    /// </summary>
    public const int AccidentalQuarterFlatEqualTempered = 58101;
    /// <summary>
    /// Raise by one equal tempered quarter tone.
    /// </summary>
    public const int AccidentalQuarterSharpEqualTempered = 58102;
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const int AccidentalQuarterToneFlat4 = 58495;
    /// <summary>
    /// Arabic quarter-tone flat.
    /// </summary>
    public const int AccidentalQuarterToneFlatArabic = 60723;
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const int AccidentalQuarterToneFlatArrowUp = 57968;
    /// <summary>
    /// Filled reversed flat (quarter-tone flat).
    /// </summary>
    public const int AccidentalQuarterToneFlatFilledReversed = 58496;
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const int AccidentalQuarterToneFlatNaturalArrowDown = 57971;
    /// <summary>
    /// Quarter tone flat (Penderecki).
    /// </summary>
    public const int AccidentalQuarterToneFlatPenderecki = 58488;
    /// <summary>
    /// Reversed flat (quarter-tone flat) (Stein).
    /// </summary>
    public const int AccidentalQuarterToneFlatStein = 57984;
    /// <summary>
    /// Quarter-tone flat (van Blankenburg).
    /// </summary>
    public const int AccidentalQuarterToneFlatVanBlankenburg = 58504;
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const int AccidentalQuarterToneSharp4 = 58494;
    /// <summary>
    /// Arabic quarter-tone sharp.
    /// </summary>
    public const int AccidentalQuarterToneSharpArabic = 60725;
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const int AccidentalQuarterToneSharpArrowDown = 57973;
    /// <summary>
    /// Quarter tone sharp (Bussotti).
    /// </summary>
    public const int AccidentalQuarterToneSharpBusotti = 58482;
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const int AccidentalQuarterToneSharpNaturalArrowUp = 57970;
    /// <summary>
    /// Half sharp (quarter-tone sharp) (Stein).
    /// </summary>
    public const int AccidentalQuarterToneSharpStein = 57986;
    /// <summary>
    /// Quarter tone sharp with wiggly tail.
    /// </summary>
    public const int AccidentalQuarterToneSharpWiggle = 58485;
    /// <summary>
    /// Raise by one septimal comma.
    /// </summary>
    public const int AccidentalRaiseOneSeptimalComma = 58079;
    /// <summary>
    /// Raise by one tridecimal quartertone.
    /// </summary>
    public const int AccidentalRaiseOneTridecimalQuartertone = 58085;
    /// <summary>
    /// Raise by one undecimal quartertone.
    /// </summary>
    public const int AccidentalRaiseOneUndecimalQuartertone = 58083;
    /// <summary>
    /// Raise by two septimal commas.
    /// </summary>
    public const int AccidentalRaiseTwoSeptimalCommas = 58081;
    /// <summary>
    /// Raised (Stockhausen).
    /// </summary>
    public const int AccidentalRaisedStockhausen = 60752;
    /// <summary>
    /// Reversed flat and flat with arrow down.
    /// </summary>
    public const int AccidentalReversedFlatAndFlatArrowDown = 58005;
    /// <summary>
    /// Reversed flat and flat with arrow up.
    /// </summary>
    public const int AccidentalReversedFlatAndFlatArrowUp = 58004;
    /// <summary>
    /// Reversed flat with arrow down.
    /// </summary>
    public const int AccidentalReversedFlatArrowDown = 58001;
    /// <summary>
    /// Reversed flat with arrow up.
    /// </summary>
    public const int AccidentalReversedFlatArrowUp = 58000;
    /// <summary>
    /// Sharp.
    /// </summary>
    public const int AccidentalSharp = 57954;
    /// <summary>
    /// Arabic half-tone sharp.
    /// </summary>
    public const int AccidentalSharpArabic = 60726;
    /// <summary>
    /// Sharp equal tempered semitone.
    /// </summary>
    public const int AccidentalSharpEqualTempered = 58099;
    /// <summary>
    /// Lowered sharp (Stockhausen).
    /// </summary>
    public const int AccidentalSharpLoweredStockhausen = 60759;
    /// <summary>
    /// Sharp lowered by one syntonic comma.
    /// </summary>
    public const int AccidentalSharpOneArrowDown = 58051;
    /// <summary>
    /// Sharp raised by one syntonic comma.
    /// </summary>
    public const int AccidentalSharpOneArrowUp = 58056;
    /// <summary>
    /// One or three quarter tones sharp.
    /// </summary>
    public const int AccidentalSharpOneHorizontalStroke = 58483;
    /// <summary>
    /// Raised sharp (Stockhausen).
    /// </summary>
    public const int AccidentalSharpRaisedStockhausen = 60758;
    /// <summary>
    /// Repeated sharp, note on line (Stockhausen).
    /// </summary>
    public const int AccidentalSharpRepeatedLineStockhausen = 60766;
    /// <summary>
    /// Repeated sharp, note in space (Stockhausen).
    /// </summary>
    public const int AccidentalSharpRepeatedSpaceStockhausen = 60765;
    /// <summary>
    /// Reversed sharp.
    /// </summary>
    public const int AccidentalSharpReversed = 58497;
    /// <summary>
    /// Sharp sharp.
    /// </summary>
    public const int AccidentalSharpSharp = 57961;
    /// <summary>
    /// Sharp lowered by three syntonic commas.
    /// </summary>
    public const int AccidentalSharpThreeArrowsDown = 58071;
    /// <summary>
    /// Sharp raised by three syntonic commas.
    /// </summary>
    public const int AccidentalSharpThreeArrowsUp = 58076;
    /// <summary>
    /// Sharp lowered by two syntonic commas.
    /// </summary>
    public const int AccidentalSharpTwoArrowsDown = 58061;
    /// <summary>
    /// Sharp raised by two syntonic commas.
    /// </summary>
    public const int AccidentalSharpTwoArrowsUp = 58066;
    /// <summary>
    /// 1/12 tone low.
    /// </summary>
    public const int AccidentalSims12Down = 58016;
    /// <summary>
    /// 1/12 tone high.
    /// </summary>
    public const int AccidentalSims12Up = 58019;
    /// <summary>
    /// 1/4 tone low.
    /// </summary>
    public const int AccidentalSims4Down = 58018;
    /// <summary>
    /// 1/4 tone high.
    /// </summary>
    public const int AccidentalSims4Up = 58021;
    /// <summary>
    /// 1/6 tone low.
    /// </summary>
    public const int AccidentalSims6Down = 58017;
    /// <summary>
    /// 1/6 tone high.
    /// </summary>
    public const int AccidentalSims6Up = 58020;
    /// <summary>
    /// Sori (quarter tone sharp).
    /// </summary>
    public const int AccidentalSori = 58465;
    /// <summary>
    /// Byzantine-style Bakiye flat (Tavener).
    /// </summary>
    public const int AccidentalTavenerFlat = 58487;
    /// <summary>
    /// Byzantine-style Büyük mücenneb sharp (Tavener).
    /// </summary>
    public const int AccidentalTavenerSharp = 58486;
    /// <summary>
    /// Arabic three-quarter-tones flat.
    /// </summary>
    public const int AccidentalThreeQuarterTonesFlatArabic = 60721;
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    public const int AccidentalThreeQuarterTonesFlatArrowDown = 57969;
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    public const int AccidentalThreeQuarterTonesFlatArrowUp = 57976;
    /// <summary>
    /// Three-quarter-tones flat (Couper).
    /// </summary>
    public const int AccidentalThreeQuarterTonesFlatCouper = 58505;
    /// <summary>
    /// Three-quarter-tones flat (Grisey).
    /// </summary>
    public const int AccidentalThreeQuarterTonesFlatGrisey = 58502;
    /// <summary>
    /// Three-quarter-tones flat (Tartini).
    /// </summary>
    public const int AccidentalThreeQuarterTonesFlatTartini = 58503;
    /// <summary>
    /// Reversed flat and flat (three-quarter-tones flat) (Zimmermann).
    /// </summary>
    public const int AccidentalThreeQuarterTonesFlatZimmermann = 57985;
    /// <summary>
    /// Arabic three-quarter-tones sharp.
    /// </summary>
    public const int AccidentalThreeQuarterTonesSharpArabic = 60727;
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    public const int AccidentalThreeQuarterTonesSharpArrowDown = 57975;
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    public const int AccidentalThreeQuarterTonesSharpArrowUp = 57972;
    /// <summary>
    /// Three quarter tones sharp (Bussotti).
    /// </summary>
    public const int AccidentalThreeQuarterTonesSharpBusotti = 58484;
    /// <summary>
    /// One and a half sharps (three-quarter-tones sharp) (Stein).
    /// </summary>
    public const int AccidentalThreeQuarterTonesSharpStein = 57987;
    /// <summary>
    /// Three-quarter-tones sharp (Stockhausen).
    /// </summary>
    public const int AccidentalThreeQuarterTonesSharpStockhausen = 60762;
    /// <summary>
    /// Triple flat.
    /// </summary>
    public const int AccidentalTripleFlat = 57958;
    /// <summary>
    /// Triple sharp.
    /// </summary>
    public const int AccidentalTripleSharp = 57957;
    /// <summary>
    /// Two-third-tones flat (Ferneyhough).
    /// </summary>
    public const int AccidentalTwoThirdTonesFlatFerneyhough = 58509;
    /// <summary>
    /// Two-third-tones sharp (Ferneyhough).
    /// </summary>
    public const int AccidentalTwoThirdTonesSharpFerneyhough = 58508;
    /// <summary>
    /// Accidental down.
    /// </summary>
    public const int AccidentalUpsAndDownsDown = 61025;
    /// <summary>
    /// Accidental less.
    /// </summary>
    public const int AccidentalUpsAndDownsLess = 61027;
    /// <summary>
    /// Accidental more.
    /// </summary>
    public const int AccidentalUpsAndDownsMore = 61026;
    /// <summary>
    /// Accidental up.
    /// </summary>
    public const int AccidentalUpsAndDownsUp = 61024;
    /// <summary>
    /// Wilson minus (5 comma down).
    /// </summary>
    public const int AccidentalWilsonMinus = 58492;
    /// <summary>
    /// Wilson plus (5 comma up).
    /// </summary>
    public const int AccidentalWilsonPlus = 58491;
    /// <summary>
    /// 5/6 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky10TwelfthsFlat = 58420;
    /// <summary>
    /// 5/6 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky10TwelfthsSharp = 58409;
    /// <summary>
    /// 11/12 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky11TwelfthsFlat = 58421;
    /// <summary>
    /// 11/12 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky11TwelfthsSharp = 58410;
    /// <summary>
    /// 1/12 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky1TwelfthsFlat = 58411;
    /// <summary>
    /// 1/12 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky1TwelfthsSharp = 58400;
    /// <summary>
    /// 1/6 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky2TwelfthsFlat = 58412;
    /// <summary>
    /// 1/6 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky2TwelfthsSharp = 58401;
    /// <summary>
    /// 1/4 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky3TwelfthsFlat = 58413;
    /// <summary>
    /// 1/4 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky3TwelfthsSharp = 58402;
    /// <summary>
    /// 1/3 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky4TwelfthsFlat = 58414;
    /// <summary>
    /// 1/3 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky4TwelfthsSharp = 58403;
    /// <summary>
    /// 5/12 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky5TwelfthsFlat = 58415;
    /// <summary>
    /// 5/12 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky5TwelfthsSharp = 58404;
    /// <summary>
    /// 1/2 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky6TwelfthsFlat = 58416;
    /// <summary>
    /// 1/2 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky6TwelfthsSharp = 58405;
    /// <summary>
    /// 7/12 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky7TwelfthsFlat = 58417;
    /// <summary>
    /// 7/12 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky7TwelfthsSharp = 58406;
    /// <summary>
    /// 2/3 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky8TwelfthsFlat = 58418;
    /// <summary>
    /// 2/3 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky8TwelfthsSharp = 58407;
    /// <summary>
    /// 3/4 tone flat.
    /// </summary>
    public const int AccidentalWyschnegradsky9TwelfthsFlat = 58419;
    /// <summary>
    /// 3/4 tone sharp.
    /// </summary>
    public const int AccidentalWyschnegradsky9TwelfthsSharp = 58408;
    /// <summary>
    /// One-third-tone sharp (Xenakis).
    /// </summary>
    public const int AccidentalXenakisOneThirdToneSharp = 58480;
    /// <summary>
    /// Two-third-tones sharp (Xenakis).
    /// </summary>
    public const int AccidentalXenakisTwoThirdTonesSharp = 58481;
    /// <summary>
    /// Choralmelodie (Berg).
    /// </summary>
    public const int AnalyticsChoralmelodie = 59498;
    /// <summary>
    /// End of stimme.
    /// </summary>
    public const int AnalyticsEndStimme = 59491;
    /// <summary>
    /// Hauptrhythmus (Berg).
    /// </summary>
    public const int AnalyticsHauptrhythmus = 59499;
    /// <summary>
    /// Hauptstimme.
    /// </summary>
    public const int AnalyticsHauptstimme = 59488;
    /// <summary>
    /// Inversion 1.
    /// </summary>
    public const int AnalyticsInversion1 = 59497;
    /// <summary>
    /// Nebenstimme.
    /// </summary>
    public const int AnalyticsNebenstimme = 59489;
    /// <summary>
    /// Start of stimme.
    /// </summary>
    public const int AnalyticsStartStimme = 59490;
    /// <summary>
    /// Theme.
    /// </summary>
    public const int AnalyticsTheme = 59492;
    /// <summary>
    /// Theme 1.
    /// </summary>
    public const int AnalyticsTheme1 = 59496;
    /// <summary>
    /// Inversion of theme.
    /// </summary>
    public const int AnalyticsThemeInversion = 59495;
    /// <summary>
    /// Retrograde of theme.
    /// </summary>
    public const int AnalyticsThemeRetrograde = 59493;
    /// <summary>
    /// Retrograde inversion of theme.
    /// </summary>
    public const int AnalyticsThemeRetrogradeInversion = 59494;
    /// <summary>
    /// Arpeggiato.
    /// </summary>
    public const int Arpeggiato = 58940;
    /// <summary>
    /// Arpeggiato down.
    /// </summary>
    public const int ArpeggiatoDown = 58933;
    /// <summary>
    /// Arpeggiato up.
    /// </summary>
    public const int ArpeggiatoUp = 58932;
    /// <summary>
    /// Black arrow down (S).
    /// </summary>
    public const int ArrowBlackDown = 60260;
    /// <summary>
    /// Black arrow down-left (SW).
    /// </summary>
    public const int ArrowBlackDownLeft = 60261;
    /// <summary>
    /// Black arrow down-right (SE).
    /// </summary>
    public const int ArrowBlackDownRight = 60259;
    /// <summary>
    /// Black arrow left (W).
    /// </summary>
    public const int ArrowBlackLeft = 60262;
    /// <summary>
    /// Black arrow right (E).
    /// </summary>
    public const int ArrowBlackRight = 60258;
    /// <summary>
    /// Black arrow up (N).
    /// </summary>
    public const int ArrowBlackUp = 60256;
    /// <summary>
    /// Black arrow up-left (NW).
    /// </summary>
    public const int ArrowBlackUpLeft = 60263;
    /// <summary>
    /// Black arrow up-right (NE).
    /// </summary>
    public const int ArrowBlackUpRight = 60257;
    /// <summary>
    /// Open arrow down (S).
    /// </summary>
    public const int ArrowOpenDown = 60276;
    /// <summary>
    /// Open arrow down-left (SW).
    /// </summary>
    public const int ArrowOpenDownLeft = 60277;
    /// <summary>
    /// Open arrow down-right (SE).
    /// </summary>
    public const int ArrowOpenDownRight = 60275;
    /// <summary>
    /// Open arrow left (W).
    /// </summary>
    public const int ArrowOpenLeft = 60278;
    /// <summary>
    /// Open arrow right (E).
    /// </summary>
    public const int ArrowOpenRight = 60274;
    /// <summary>
    /// Open arrow up (N).
    /// </summary>
    public const int ArrowOpenUp = 60272;
    /// <summary>
    /// Open arrow up-left (NW).
    /// </summary>
    public const int ArrowOpenUpLeft = 60279;
    /// <summary>
    /// Open arrow up-right (NE).
    /// </summary>
    public const int ArrowOpenUpRight = 60273;
    /// <summary>
    /// White arrow down (S).
    /// </summary>
    public const int ArrowWhiteDown = 60268;
    /// <summary>
    /// White arrow down-left (SW).
    /// </summary>
    public const int ArrowWhiteDownLeft = 60269;
    /// <summary>
    /// White arrow down-right (SE).
    /// </summary>
    public const int ArrowWhiteDownRight = 60267;
    /// <summary>
    /// White arrow left (W).
    /// </summary>
    public const int ArrowWhiteLeft = 60270;
    /// <summary>
    /// White arrow right (E).
    /// </summary>
    public const int ArrowWhiteRight = 60266;
    /// <summary>
    /// White arrow up (N).
    /// </summary>
    public const int ArrowWhiteUp = 60264;
    /// <summary>
    /// White arrow up-left (NW).
    /// </summary>
    public const int ArrowWhiteUpLeft = 60271;
    /// <summary>
    /// White arrow up-right (NE).
    /// </summary>
    public const int ArrowWhiteUpRight = 60265;
    /// <summary>
    /// Black arrowhead down (S).
    /// </summary>
    public const int ArrowheadBlackDown = 60284;
    /// <summary>
    /// Black arrowhead down-left (SW).
    /// </summary>
    public const int ArrowheadBlackDownLeft = 60285;
    /// <summary>
    /// Black arrowhead down-right (SE).
    /// </summary>
    public const int ArrowheadBlackDownRight = 60283;
    /// <summary>
    /// Black arrowhead left (W).
    /// </summary>
    public const int ArrowheadBlackLeft = 60286;
    /// <summary>
    /// Black arrowhead right (E).
    /// </summary>
    public const int ArrowheadBlackRight = 60282;
    /// <summary>
    /// Black arrowhead up (N).
    /// </summary>
    public const int ArrowheadBlackUp = 60280;
    /// <summary>
    /// Black arrowhead up-left (NW).
    /// </summary>
    public const int ArrowheadBlackUpLeft = 60287;
    /// <summary>
    /// Black arrowhead up-right (NE).
    /// </summary>
    public const int ArrowheadBlackUpRight = 60281;
    /// <summary>
    /// Open arrowhead down (S).
    /// </summary>
    public const int ArrowheadOpenDown = 60300;
    /// <summary>
    /// Open arrowhead down-left (SW).
    /// </summary>
    public const int ArrowheadOpenDownLeft = 60301;
    /// <summary>
    /// Open arrowhead down-right (SE).
    /// </summary>
    public const int ArrowheadOpenDownRight = 60299;
    /// <summary>
    /// Open arrowhead left (W).
    /// </summary>
    public const int ArrowheadOpenLeft = 60302;
    /// <summary>
    /// Open arrowhead right (E).
    /// </summary>
    public const int ArrowheadOpenRight = 60298;
    /// <summary>
    /// Open arrowhead up (N).
    /// </summary>
    public const int ArrowheadOpenUp = 60296;
    /// <summary>
    /// Open arrowhead up-left (NW).
    /// </summary>
    public const int ArrowheadOpenUpLeft = 60303;
    /// <summary>
    /// Open arrowhead up-right (NE).
    /// </summary>
    public const int ArrowheadOpenUpRight = 60297;
    /// <summary>
    /// White arrowhead down (S).
    /// </summary>
    public const int ArrowheadWhiteDown = 60292;
    /// <summary>
    /// White arrowhead down-left (SW).
    /// </summary>
    public const int ArrowheadWhiteDownLeft = 60293;
    /// <summary>
    /// White arrowhead down-right (SE).
    /// </summary>
    public const int ArrowheadWhiteDownRight = 60291;
    /// <summary>
    /// White arrowhead left (W).
    /// </summary>
    public const int ArrowheadWhiteLeft = 60294;
    /// <summary>
    /// White arrowhead right (E).
    /// </summary>
    public const int ArrowheadWhiteRight = 60290;
    /// <summary>
    /// White arrowhead up (N).
    /// </summary>
    public const int ArrowheadWhiteUp = 60288;
    /// <summary>
    /// White arrowhead up-left (NW).
    /// </summary>
    public const int ArrowheadWhiteUpLeft = 60295;
    /// <summary>
    /// White arrowhead up-right (NE).
    /// </summary>
    public const int ArrowheadWhiteUpRight = 60289;
    /// <summary>
    /// Accent above.
    /// </summary>
    public const int ArticAccentAbove = 58528;
    /// <summary>
    /// Accent below.
    /// </summary>
    public const int ArticAccentBelow = 58529;
    /// <summary>
    /// Accent-staccato above.
    /// </summary>
    public const int ArticAccentStaccatoAbove = 58544;
    /// <summary>
    /// Accent-staccato below.
    /// </summary>
    public const int ArticAccentStaccatoBelow = 58545;
    /// <summary>
    /// Laissez vibrer (l.v.) above.
    /// </summary>
    public const int ArticLaissezVibrerAbove = 58554;
    /// <summary>
    /// Laissez vibrer (l.v.) below.
    /// </summary>
    public const int ArticLaissezVibrerBelow = 58555;
    /// <summary>
    /// Marcato above.
    /// </summary>
    public const int ArticMarcatoAbove = 58540;
    /// <summary>
    /// Marcato below.
    /// </summary>
    public const int ArticMarcatoBelow = 58541;
    /// <summary>
    /// Marcato-staccato above.
    /// </summary>
    public const int ArticMarcatoStaccatoAbove = 58542;
    /// <summary>
    /// Marcato-staccato below.
    /// </summary>
    public const int ArticMarcatoStaccatoBelow = 58543;
    /// <summary>
    /// Marcato-tenuto above.
    /// </summary>
    public const int ArticMarcatoTenutoAbove = 58556;
    /// <summary>
    /// Marcato-tenuto below.
    /// </summary>
    public const int ArticMarcatoTenutoBelow = 58557;
    /// <summary>
    /// Soft accent above.
    /// </summary>
    public const int ArticSoftAccentAbove = 60736;
    /// <summary>
    /// Soft accent below.
    /// </summary>
    public const int ArticSoftAccentBelow = 60737;
    /// <summary>
    /// Soft accent-staccato above.
    /// </summary>
    public const int ArticSoftAccentStaccatoAbove = 60738;
    /// <summary>
    /// Soft accent-staccato below.
    /// </summary>
    public const int ArticSoftAccentStaccatoBelow = 60739;
    /// <summary>
    /// Soft accent-tenuto above.
    /// </summary>
    public const int ArticSoftAccentTenutoAbove = 60740;
    /// <summary>
    /// Soft accent-tenuto below.
    /// </summary>
    public const int ArticSoftAccentTenutoBelow = 60741;
    /// <summary>
    /// Soft accent-tenuto-staccato above.
    /// </summary>
    public const int ArticSoftAccentTenutoStaccatoAbove = 60742;
    /// <summary>
    /// Soft accent-tenuto-staccato below.
    /// </summary>
    public const int ArticSoftAccentTenutoStaccatoBelow = 60743;
    /// <summary>
    /// Staccatissimo above.
    /// </summary>
    public const int ArticStaccatissimoAbove = 58534;
    /// <summary>
    /// Staccatissimo below.
    /// </summary>
    public const int ArticStaccatissimoBelow = 58535;
    /// <summary>
    /// Staccatissimo stroke above.
    /// </summary>
    public const int ArticStaccatissimoStrokeAbove = 58538;
    /// <summary>
    /// Staccatissimo stroke below.
    /// </summary>
    public const int ArticStaccatissimoStrokeBelow = 58539;
    /// <summary>
    /// Staccatissimo wedge above.
    /// </summary>
    public const int ArticStaccatissimoWedgeAbove = 58536;
    /// <summary>
    /// Staccatissimo wedge below.
    /// </summary>
    public const int ArticStaccatissimoWedgeBelow = 58537;
    /// <summary>
    /// Staccato above.
    /// </summary>
    public const int ArticStaccatoAbove = 58530;
    /// <summary>
    /// Staccato below.
    /// </summary>
    public const int ArticStaccatoBelow = 58531;
    /// <summary>
    /// Stress above.
    /// </summary>
    public const int ArticStressAbove = 58550;
    /// <summary>
    /// Stress below.
    /// </summary>
    public const int ArticStressBelow = 58551;
    /// <summary>
    /// Tenuto above.
    /// </summary>
    public const int ArticTenutoAbove = 58532;
    /// <summary>
    /// Tenuto-accent above.
    /// </summary>
    public const int ArticTenutoAccentAbove = 58548;
    /// <summary>
    /// Tenuto-accent below.
    /// </summary>
    public const int ArticTenutoAccentBelow = 58549;
    /// <summary>
    /// Tenuto below.
    /// </summary>
    public const int ArticTenutoBelow = 58533;
    /// <summary>
    /// Louré (tenuto-staccato) above.
    /// </summary>
    public const int ArticTenutoStaccatoAbove = 58546;
    /// <summary>
    /// Louré (tenuto-staccato) below.
    /// </summary>
    public const int ArticTenutoStaccatoBelow = 58547;
    /// <summary>
    /// Unstress above.
    /// </summary>
    public const int ArticUnstressAbove = 58552;
    /// <summary>
    /// Unstress below.
    /// </summary>
    public const int ArticUnstressBelow = 58553;
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const int AugmentationDot = 57831;
    /// <summary>
    /// Dashed barline.
    /// </summary>
    public const int BarlineDashed = 57398;
    /// <summary>
    /// Dotted barline.
    /// </summary>
    public const int BarlineDotted = 57399;
    /// <summary>
    /// Double barline.
    /// </summary>
    public const int BarlineDouble = 57393;
    /// <summary>
    /// Final barline.
    /// </summary>
    public const int BarlineFinal = 57394;
    /// <summary>
    /// Heavy barline.
    /// </summary>
    public const int BarlineHeavy = 57396;
    /// <summary>
    /// Heavy double barline.
    /// </summary>
    public const int BarlineHeavyHeavy = 57397;
    /// <summary>
    /// Reverse final barline.
    /// </summary>
    public const int BarlineReverseFinal = 57395;
    /// <summary>
    /// Short barline.
    /// </summary>
    public const int BarlineShort = 57400;
    /// <summary>
    /// Single barline.
    /// </summary>
    public const int BarlineSingle = 57392;
    /// <summary>
    /// Tick barline.
    /// </summary>
    public const int BarlineTick = 57401;
    /// <summary>
    /// Accel./rit. beam 1 (widest).
    /// </summary>
    public const int BeamAccelRit1 = 60148;
    /// <summary>
    /// Accel./rit. beam 10.
    /// </summary>
    public const int BeamAccelRit10 = 60157;
    /// <summary>
    /// Accel./rit. beam 11.
    /// </summary>
    public const int BeamAccelRit11 = 60158;
    /// <summary>
    /// Accel./rit. beam 12.
    /// </summary>
    public const int BeamAccelRit12 = 60159;
    /// <summary>
    /// Accel./rit. beam 13.
    /// </summary>
    public const int BeamAccelRit13 = 60160;
    /// <summary>
    /// Accel./rit. beam 14.
    /// </summary>
    public const int BeamAccelRit14 = 60161;
    /// <summary>
    /// Accel./rit. beam 15 (narrowest).
    /// </summary>
    public const int BeamAccelRit15 = 60162;
    /// <summary>
    /// Accel./rit. beam 2.
    /// </summary>
    public const int BeamAccelRit2 = 60149;
    /// <summary>
    /// Accel./rit. beam 3.
    /// </summary>
    public const int BeamAccelRit3 = 60150;
    /// <summary>
    /// Accel./rit. beam 4.
    /// </summary>
    public const int BeamAccelRit4 = 60151;
    /// <summary>
    /// Accel./rit. beam 5.
    /// </summary>
    public const int BeamAccelRit5 = 60152;
    /// <summary>
    /// Accel./rit. beam 6.
    /// </summary>
    public const int BeamAccelRit6 = 60153;
    /// <summary>
    /// Accel./rit. beam 7.
    /// </summary>
    public const int BeamAccelRit7 = 60154;
    /// <summary>
    /// Accel./rit. beam 8.
    /// </summary>
    public const int BeamAccelRit8 = 60155;
    /// <summary>
    /// Accel./rit. beam 9.
    /// </summary>
    public const int BeamAccelRit9 = 60156;
    /// <summary>
    /// Accel./rit. beam terminating line.
    /// </summary>
    public const int BeamAccelRitFinal = 60163;
    /// <summary>
    /// Brace.
    /// </summary>
    public const int Brace = 57344;
    /// <summary>
    /// Bracket.
    /// </summary>
    public const int Bracket = 57346;
    /// <summary>
    /// Bracket bottom.
    /// </summary>
    public const int BracketBottom = 57348;
    /// <summary>
    /// Bracket top.
    /// </summary>
    public const int BracketTop = 57347;
    /// <summary>
    /// Bend.
    /// </summary>
    public const int BrassBend = 58851;
    /// <summary>
    /// Doit, long.
    /// </summary>
    public const int BrassDoitLong = 58838;
    /// <summary>
    /// Doit, medium.
    /// </summary>
    public const int BrassDoitMedium = 58837;
    /// <summary>
    /// Doit, short.
    /// </summary>
    public const int BrassDoitShort = 58836;
    /// <summary>
    /// Lip fall, long.
    /// </summary>
    public const int BrassFallLipLong = 58841;
    /// <summary>
    /// Lip fall, medium.
    /// </summary>
    public const int BrassFallLipMedium = 58840;
    /// <summary>
    /// Lip fall, short.
    /// </summary>
    public const int BrassFallLipShort = 58839;
    /// <summary>
    /// Rough fall, long.
    /// </summary>
    public const int BrassFallRoughLong = 58847;
    /// <summary>
    /// Rough fall, medium.
    /// </summary>
    public const int BrassFallRoughMedium = 58846;
    /// <summary>
    /// Rough fall, short.
    /// </summary>
    public const int BrassFallRoughShort = 58845;
    /// <summary>
    /// Smooth fall, long.
    /// </summary>
    public const int BrassFallSmoothLong = 58844;
    /// <summary>
    /// Smooth fall, medium.
    /// </summary>
    public const int BrassFallSmoothMedium = 58843;
    /// <summary>
    /// Smooth fall, short.
    /// </summary>
    public const int BrassFallSmoothShort = 58842;
    /// <summary>
    /// Flip.
    /// </summary>
    public const int BrassFlip = 58849;
    /// <summary>
    /// Harmon mute, stem in.
    /// </summary>
    public const int BrassHarmonMuteClosed = 58856;
    /// <summary>
    /// Harmon mute, stem extended, left.
    /// </summary>
    public const int BrassHarmonMuteStemHalfLeft = 58857;
    /// <summary>
    /// Harmon mute, stem extended, right.
    /// </summary>
    public const int BrassHarmonMuteStemHalfRight = 58858;
    /// <summary>
    /// Harmon mute, stem out.
    /// </summary>
    public const int BrassHarmonMuteStemOpen = 58859;
    /// <summary>
    /// Jazz turn.
    /// </summary>
    public const int BrassJazzTurn = 58852;
    /// <summary>
    /// Lift, long.
    /// </summary>
    public const int BrassLiftLong = 58835;
    /// <summary>
    /// Lift, medium.
    /// </summary>
    public const int BrassLiftMedium = 58834;
    /// <summary>
    /// Lift, short.
    /// </summary>
    public const int BrassLiftShort = 58833;
    /// <summary>
    /// Smooth lift, long.
    /// </summary>
    public const int BrassLiftSmoothLong = 58862;
    /// <summary>
    /// Smooth lift, medium.
    /// </summary>
    public const int BrassLiftSmoothMedium = 58861;
    /// <summary>
    /// Smooth lift, short.
    /// </summary>
    public const int BrassLiftSmoothShort = 58860;
    /// <summary>
    /// Muted (closed).
    /// </summary>
    public const int BrassMuteClosed = 58853;
    /// <summary>
    /// Half-muted (half-closed).
    /// </summary>
    public const int BrassMuteHalfClosed = 58854;
    /// <summary>
    /// Open.
    /// </summary>
    public const int BrassMuteOpen = 58855;
    /// <summary>
    /// Plop.
    /// </summary>
    public const int BrassPlop = 58848;
    /// <summary>
    /// Scoop.
    /// </summary>
    public const int BrassScoop = 58832;
    /// <summary>
    /// Smear.
    /// </summary>
    public const int BrassSmear = 58850;
    /// <summary>
    /// Valve trill.
    /// </summary>
    public const int BrassValveTrill = 58863;
    /// <summary>
    /// Breath mark (comma).
    /// </summary>
    public const int BreathMarkComma = 58574;
    /// <summary>
    /// Breath mark (Salzedo).
    /// </summary>
    public const int BreathMarkSalzedo = 58581;
    /// <summary>
    /// Breath mark (tick-like).
    /// </summary>
    public const int BreathMarkTick = 58575;
    /// <summary>
    /// Breath mark (upbow-like).
    /// </summary>
    public const int BreathMarkUpbow = 58576;
    /// <summary>
    /// Bridge clef.
    /// </summary>
    public const int BridgeClef = 57464;
    /// <summary>
    /// Buzz roll.
    /// </summary>
    public const int BuzzRoll = 57898;
    /// <summary>
    /// C clef.
    /// </summary>
    public const int CClef = 57436;
    /// <summary>
    /// C clef ottava bassa.
    /// </summary>
    public const int CClef8vb = 57437;
    /// <summary>
    /// C clef, arrow down.
    /// </summary>
    public const int CClefArrowDown = 57439;
    /// <summary>
    /// C clef, arrow up.
    /// </summary>
    public const int CClefArrowUp = 57438;
    /// <summary>
    /// C clef change.
    /// </summary>
    public const int CClefChange = 57467;
    /// <summary>
    /// Combining C clef.
    /// </summary>
    public const int CClefCombining = 57441;
    /// <summary>
    /// Reversed C clef.
    /// </summary>
    public const int CClefReversed = 57461;
    /// <summary>
    /// C clef (19th century).
    /// </summary>
    public const int CClefSquare = 57440;
    /// <summary>
    /// Caesura.
    /// </summary>
    public const int Caesura = 58577;
    /// <summary>
    /// Curved caesura.
    /// </summary>
    public const int CaesuraCurved = 58580;
    /// <summary>
    /// Short caesura.
    /// </summary>
    public const int CaesuraShort = 58579;
    /// <summary>
    /// Single stroke caesura.
    /// </summary>
    public const int CaesuraSingleStroke = 58583;
    /// <summary>
    /// Thick caesura.
    /// </summary>
    public const int CaesuraThick = 58578;
    /// <summary>
    /// Accentus above.
    /// </summary>
    public const int ChantAccentusAbove = 59862;
    /// <summary>
    /// Accentus below.
    /// </summary>
    public const int ChantAccentusBelow = 59863;
    /// <summary>
    /// Punctum auctum, ascending.
    /// </summary>
    public const int ChantAuctumAsc = 59796;
    /// <summary>
    /// Punctum auctum, descending.
    /// </summary>
    public const int ChantAuctumDesc = 59797;
    /// <summary>
    /// Augmentum (mora).
    /// </summary>
    public const int ChantAugmentum = 59865;
    /// <summary>
    /// Caesura.
    /// </summary>
    public const int ChantCaesura = 59640;
    /// <summary>
    /// Plainchant C clef.
    /// </summary>
    public const int ChantCclef = 59654;
    /// <summary>
    /// Circulus above.
    /// </summary>
    public const int ChantCirculusAbove = 59858;
    /// <summary>
    /// Circulus below.
    /// </summary>
    public const int ChantCirculusBelow = 59859;
    /// <summary>
    /// Connecting line, ascending 2nd.
    /// </summary>
    public const int ChantConnectingLineAsc2nd = 59837;
    /// <summary>
    /// Connecting line, ascending 3rd.
    /// </summary>
    public const int ChantConnectingLineAsc3rd = 59838;
    /// <summary>
    /// Connecting line, ascending 4th.
    /// </summary>
    public const int ChantConnectingLineAsc4th = 59839;
    /// <summary>
    /// Connecting line, ascending 5th.
    /// </summary>
    public const int ChantConnectingLineAsc5th = 59840;
    /// <summary>
    /// Connecting line, ascending 6th.
    /// </summary>
    public const int ChantConnectingLineAsc6th = 59841;
    /// <summary>
    /// Plainchant custos, stem down, high position.
    /// </summary>
    public const int ChantCustosStemDownPosHigh = 59912;
    /// <summary>
    /// Plainchant custos, stem down, highest position.
    /// </summary>
    public const int ChantCustosStemDownPosHighest = 59913;
    /// <summary>
    /// Plainchant custos, stem down, middle position.
    /// </summary>
    public const int ChantCustosStemDownPosMiddle = 59911;
    /// <summary>
    /// Plainchant custos, stem up, low position.
    /// </summary>
    public const int ChantCustosStemUpPosLow = 59909;
    /// <summary>
    /// Plainchant custos, stem up, lowest position.
    /// </summary>
    public const int ChantCustosStemUpPosLowest = 59908;
    /// <summary>
    /// Plainchant custos, stem up, middle position.
    /// </summary>
    public const int ChantCustosStemUpPosMiddle = 59910;
    /// <summary>
    /// Punctum deminutum, lower.
    /// </summary>
    public const int ChantDeminutumLower = 59827;
    /// <summary>
    /// Punctum deminutum, upper.
    /// </summary>
    public const int ChantDeminutumUpper = 59826;
    /// <summary>
    /// Divisio finalis.
    /// </summary>
    public const int ChantDivisioFinalis = 59638;
    /// <summary>
    /// Divisio maior.
    /// </summary>
    public const int ChantDivisioMaior = 59636;
    /// <summary>
    /// Divisio maxima.
    /// </summary>
    public const int ChantDivisioMaxima = 59637;
    /// <summary>
    /// Divisio minima.
    /// </summary>
    public const int ChantDivisioMinima = 59635;
    /// <summary>
    /// Entry line, ascending 2nd.
    /// </summary>
    public const int ChantEntryLineAsc2nd = 59828;
    /// <summary>
    /// Entry line, ascending 3rd.
    /// </summary>
    public const int ChantEntryLineAsc3rd = 59829;
    /// <summary>
    /// Entry line, ascending 4th.
    /// </summary>
    public const int ChantEntryLineAsc4th = 59830;
    /// <summary>
    /// Entry line, ascending 5th.
    /// </summary>
    public const int ChantEntryLineAsc5th = 59831;
    /// <summary>
    /// Entry line, ascending 6th.
    /// </summary>
    public const int ChantEntryLineAsc6th = 59832;
    /// <summary>
    /// Episema.
    /// </summary>
    public const int ChantEpisema = 59864;
    /// <summary>
    /// Plainchant F clef.
    /// </summary>
    public const int ChantFclef = 59650;
    /// <summary>
    /// Ictus above.
    /// </summary>
    public const int ChantIctusAbove = 59856;
    /// <summary>
    /// Ictus below.
    /// </summary>
    public const int ChantIctusBelow = 59857;
    /// <summary>
    /// Ligated stroke, descending 2nd.
    /// </summary>
    public const int ChantLigaturaDesc2nd = 59833;
    /// <summary>
    /// Ligated stroke, descending 3rd.
    /// </summary>
    public const int ChantLigaturaDesc3rd = 59834;
    /// <summary>
    /// Ligated stroke, descending 4th.
    /// </summary>
    public const int ChantLigaturaDesc4th = 59835;
    /// <summary>
    /// Ligated stroke, descending 5th.
    /// </summary>
    public const int ChantLigaturaDesc5th = 59836;
    /// <summary>
    /// Oriscus ascending.
    /// </summary>
    public const int ChantOriscusAscending = 59804;
    /// <summary>
    /// Oriscus descending.
    /// </summary>
    public const int ChantOriscusDescending = 59805;
    /// <summary>
    /// Oriscus liquescens.
    /// </summary>
    public const int ChantOriscusLiquescens = 59806;
    /// <summary>
    /// Podatus, lower.
    /// </summary>
    public const int ChantPodatusLower = 59824;
    /// <summary>
    /// Podatus, upper.
    /// </summary>
    public const int ChantPodatusUpper = 59825;
    /// <summary>
    /// Punctum.
    /// </summary>
    public const int ChantPunctum = 59792;
    /// <summary>
    /// Punctum cavum.
    /// </summary>
    public const int ChantPunctumCavum = 59800;
    /// <summary>
    /// Punctum deminutum.
    /// </summary>
    public const int ChantPunctumDeminutum = 59809;
    /// <summary>
    /// Punctum inclinatum.
    /// </summary>
    public const int ChantPunctumInclinatum = 59793;
    /// <summary>
    /// Punctum inclinatum auctum.
    /// </summary>
    public const int ChantPunctumInclinatumAuctum = 59794;
    /// <summary>
    /// Punctum inclinatum deminutum.
    /// </summary>
    public const int ChantPunctumInclinatumDeminutum = 59795;
    /// <summary>
    /// Punctum linea.
    /// </summary>
    public const int ChantPunctumLinea = 59801;
    /// <summary>
    /// Punctum linea cavum.
    /// </summary>
    public const int ChantPunctumLineaCavum = 59802;
    /// <summary>
    /// Punctum virga.
    /// </summary>
    public const int ChantPunctumVirga = 59798;
    /// <summary>
    /// Punctum virga, reversed.
    /// </summary>
    public const int ChantPunctumVirgaReversed = 59799;
    /// <summary>
    /// Quilisma.
    /// </summary>
    public const int ChantQuilisma = 59803;
    /// <summary>
    /// Semicirculus above.
    /// </summary>
    public const int ChantSemicirculusAbove = 59860;
    /// <summary>
    /// Semicirculus below.
    /// </summary>
    public const int ChantSemicirculusBelow = 59861;
    /// <summary>
    /// Plainchant staff.
    /// </summary>
    public const int ChantStaff = 59632;
    /// <summary>
    /// Plainchant staff (narrow).
    /// </summary>
    public const int ChantStaffNarrow = 59634;
    /// <summary>
    /// Plainchant staff (wide).
    /// </summary>
    public const int ChantStaffWide = 59633;
    /// <summary>
    /// Strophicus.
    /// </summary>
    public const int ChantStrophicus = 59807;
    /// <summary>
    /// Strophicus auctus.
    /// </summary>
    public const int ChantStrophicusAuctus = 59808;
    /// <summary>
    /// Strophicus liquescens, 2nd.
    /// </summary>
    public const int ChantStrophicusLiquescens2nd = 59842;
    /// <summary>
    /// Strophicus liquescens, 3rd.
    /// </summary>
    public const int ChantStrophicusLiquescens3rd = 59843;
    /// <summary>
    /// Strophicus liquescens, 4th.
    /// </summary>
    public const int ChantStrophicusLiquescens4th = 59844;
    /// <summary>
    /// Strophicus liquescens, 5th.
    /// </summary>
    public const int ChantStrophicusLiquescens5th = 59845;
    /// <summary>
    /// Virgula.
    /// </summary>
    public const int ChantVirgula = 59639;
    /// <summary>
    /// 15 for clefs.
    /// </summary>
    public const int Clef15 = 57470;
    /// <summary>
    /// 8 for clefs.
    /// </summary>
    public const int Clef8 = 57469;
    /// <summary>
    /// Combining clef change.
    /// </summary>
    public const int ClefChangeCombining = 57471;
    /// <summary>
    /// Coda.
    /// </summary>
    public const int Coda = 57416;
    /// <summary>
    /// Square coda.
    /// </summary>
    public const int CodaSquare = 57417;
    /// <summary>
    /// Beat 2, compound time.
    /// </summary>
    public const int ConductorBeat2Compound = 59543;
    /// <summary>
    /// Beat 2, simple time.
    /// </summary>
    public const int ConductorBeat2Simple = 59540;
    /// <summary>
    /// Beat 3, compound time.
    /// </summary>
    public const int ConductorBeat3Compound = 59544;
    /// <summary>
    /// Beat 3, simple time.
    /// </summary>
    public const int ConductorBeat3Simple = 59541;
    /// <summary>
    /// Beat 4, compound time.
    /// </summary>
    public const int ConductorBeat4Compound = 59545;
    /// <summary>
    /// Beat 4, simple time.
    /// </summary>
    public const int ConductorBeat4Simple = 59542;
    /// <summary>
    /// Left-hand beat or cue.
    /// </summary>
    public const int ConductorLeftBeat = 59537;
    /// <summary>
    /// Right-hand beat or cue.
    /// </summary>
    public const int ConductorRightBeat = 59538;
    /// <summary>
    /// Strong beat or cue.
    /// </summary>
    public const int ConductorStrongBeat = 59536;
    /// <summary>
    /// Unconducted/free passages.
    /// </summary>
    public const int ConductorUnconducted = 59546;
    /// <summary>
    /// Weak beat or cue.
    /// </summary>
    public const int ConductorWeakBeat = 59539;
    /// <summary>
    /// Begin beam.
    /// </summary>
    public const int ControlBeginBeam = 59616;
    /// <summary>
    /// Begin phrase.
    /// </summary>
    public const int ControlBeginPhrase = 59622;
    /// <summary>
    /// Begin slur.
    /// </summary>
    public const int ControlBeginSlur = 59620;
    /// <summary>
    /// Begin tie.
    /// </summary>
    public const int ControlBeginTie = 59618;
    /// <summary>
    /// End beam.
    /// </summary>
    public const int ControlEndBeam = 59617;
    /// <summary>
    /// End phrase.
    /// </summary>
    public const int ControlEndPhrase = 59623;
    /// <summary>
    /// End slur.
    /// </summary>
    public const int ControlEndSlur = 59621;
    /// <summary>
    /// End tie.
    /// </summary>
    public const int ControlEndTie = 59619;
    /// <summary>
    /// Double flat.
    /// </summary>
    public const int CsymAccidentalDoubleFlat = 60772;
    /// <summary>
    /// Double sharp.
    /// </summary>
    public const int CsymAccidentalDoubleSharp = 60771;
    /// <summary>
    /// Flat.
    /// </summary>
    public const int CsymAccidentalFlat = 60768;
    /// <summary>
    /// Natural.
    /// </summary>
    public const int CsymAccidentalNatural = 60769;
    /// <summary>
    /// Sharp.
    /// </summary>
    public const int CsymAccidentalSharp = 60770;
    /// <summary>
    /// Triple flat.
    /// </summary>
    public const int CsymAccidentalTripleFlat = 60774;
    /// <summary>
    /// Triple sharp.
    /// </summary>
    public const int CsymAccidentalTripleSharp = 60773;
    /// <summary>
    /// Slash for altered bass note.
    /// </summary>
    public const int CsymAlteredBassSlash = 59515;
    /// <summary>
    /// Augmented.
    /// </summary>
    public const int CsymAugmented = 59506;
    /// <summary>
    /// Double-height left bracket.
    /// </summary>
    public const int CsymBracketLeftTall = 59511;
    /// <summary>
    /// Double-height right bracket.
    /// </summary>
    public const int CsymBracketRightTall = 59512;
    /// <summary>
    /// Slash for chord symbols arranged diagonally.
    /// </summary>
    public const int CsymDiagonalArrangementSlash = 59516;
    /// <summary>
    /// Diminished.
    /// </summary>
    public const int CsymDiminished = 59504;
    /// <summary>
    /// Half-diminished.
    /// </summary>
    public const int CsymHalfDiminished = 59505;
    /// <summary>
    /// Major seventh.
    /// </summary>
    public const int CsymMajorSeventh = 59507;
    /// <summary>
    /// Minor.
    /// </summary>
    public const int CsymMinor = 59508;
    /// <summary>
    /// Double-height left parenthesis.
    /// </summary>
    public const int CsymParensLeftTall = 59509;
    /// <summary>
    /// Triple-height left parenthesis.
    /// </summary>
    public const int CsymParensLeftVeryTall = 59513;
    /// <summary>
    /// Double-height right parenthesis.
    /// </summary>
    public const int CsymParensRightTall = 59510;
    /// <summary>
    /// Triple-height right parenthesis.
    /// </summary>
    public const int CsymParensRightVeryTall = 59514;
    /// <summary>
    /// Curlew (Britten).
    /// </summary>
    public const int CurlewSign = 58582;
    /// <summary>
    /// Da capo.
    /// </summary>
    public const int DaCapo = 57414;
    /// <summary>
    /// Dal segno.
    /// </summary>
    public const int DalSegno = 57413;
    /// <summary>
    /// Daseian excellentes 1.
    /// </summary>
    public const int DaseianExcellentes1 = 59964;
    /// <summary>
    /// Daseian excellentes 2.
    /// </summary>
    public const int DaseianExcellentes2 = 59965;
    /// <summary>
    /// Daseian excellentes 3.
    /// </summary>
    public const int DaseianExcellentes3 = 59966;
    /// <summary>
    /// Daseian excellentes 4.
    /// </summary>
    public const int DaseianExcellentes4 = 59967;
    /// <summary>
    /// Daseian finales 1.
    /// </summary>
    public const int DaseianFinales1 = 59956;
    /// <summary>
    /// Daseian finales 2.
    /// </summary>
    public const int DaseianFinales2 = 59957;
    /// <summary>
    /// Daseian finales 3.
    /// </summary>
    public const int DaseianFinales3 = 59958;
    /// <summary>
    /// Daseian finales 4.
    /// </summary>
    public const int DaseianFinales4 = 59959;
    /// <summary>
    /// Daseian graves 1.
    /// </summary>
    public const int DaseianGraves1 = 59952;
    /// <summary>
    /// Daseian graves 2.
    /// </summary>
    public const int DaseianGraves2 = 59953;
    /// <summary>
    /// Daseian graves 3.
    /// </summary>
    public const int DaseianGraves3 = 59954;
    /// <summary>
    /// Daseian graves 4.
    /// </summary>
    public const int DaseianGraves4 = 59955;
    /// <summary>
    /// Daseian residua 1.
    /// </summary>
    public const int DaseianResidua1 = 59968;
    /// <summary>
    /// Daseian residua 2.
    /// </summary>
    public const int DaseianResidua2 = 59969;
    /// <summary>
    /// Daseian superiores 1.
    /// </summary>
    public const int DaseianSuperiores1 = 59960;
    /// <summary>
    /// Daseian superiores 2.
    /// </summary>
    public const int DaseianSuperiores2 = 59961;
    /// <summary>
    /// Daseian superiores 3.
    /// </summary>
    public const int DaseianSuperiores3 = 59962;
    /// <summary>
    /// Daseian superiores 4.
    /// </summary>
    public const int DaseianSuperiores4 = 59963;
    /// <summary>
    /// Double lateral roll (Stevens).
    /// </summary>
    public const int DoubleLateralRollStevens = 57908;
    /// <summary>
    /// Double-tongue above.
    /// </summary>
    public const int DoubleTongueAbove = 58864;
    /// <summary>
    /// Double-tongue below.
    /// </summary>
    public const int DoubleTongueBelow = 58865;
    /// <summary>
    /// Colon separator for combined dynamics.
    /// </summary>
    public const int DynamicCombinedSeparatorColon = 58694;
    /// <summary>
    /// Hyphen separator for combined dynamics.
    /// </summary>
    public const int DynamicCombinedSeparatorHyphen = 58695;
    /// <summary>
    /// Slash separator for combined dynamics.
    /// </summary>
    public const int DynamicCombinedSeparatorSlash = 58697;
    /// <summary>
    /// Space separator for combined dynamics.
    /// </summary>
    public const int DynamicCombinedSeparatorSpace = 58696;
    /// <summary>
    /// Crescendo.
    /// </summary>
    public const int DynamicCrescendoHairpin = 58686;
    /// <summary>
    /// Diminuendo.
    /// </summary>
    public const int DynamicDiminuendoHairpin = 58687;
    /// <summary>
    /// ff.
    /// </summary>
    public const int DynamicFF = 58671;
    /// <summary>
    /// fff.
    /// </summary>
    public const int DynamicFFF = 58672;
    /// <summary>
    /// ffff.
    /// </summary>
    public const int DynamicFFFF = 58673;
    /// <summary>
    /// fffff.
    /// </summary>
    public const int DynamicFFFFF = 58674;
    /// <summary>
    /// ffffff.
    /// </summary>
    public const int DynamicFFFFFF = 58675;
    /// <summary>
    /// Forte.
    /// </summary>
    public const int DynamicForte = 58658;
    /// <summary>
    /// Forte-piano.
    /// </summary>
    public const int DynamicFortePiano = 58676;
    /// <summary>
    /// Forzando.
    /// </summary>
    public const int DynamicForzando = 58677;
    /// <summary>
    /// Left bracket (for hairpins).
    /// </summary>
    public const int DynamicHairpinBracketLeft = 58692;
    /// <summary>
    /// Right bracket (for hairpins).
    /// </summary>
    public const int DynamicHairpinBracketRight = 58693;
    /// <summary>
    /// Left parenthesis (for hairpins).
    /// </summary>
    public const int DynamicHairpinParenthesisLeft = 58690;
    /// <summary>
    /// Right parenthesis (for hairpins).
    /// </summary>
    public const int DynamicHairpinParenthesisRight = 58691;
    /// <summary>
    /// mf.
    /// </summary>
    public const int DynamicMF = 58669;
    /// <summary>
    /// mp.
    /// </summary>
    public const int DynamicMP = 58668;
    /// <summary>
    /// Messa di voce.
    /// </summary>
    public const int DynamicMessaDiVoce = 58688;
    /// <summary>
    /// Mezzo.
    /// </summary>
    public const int DynamicMezzo = 58657;
    /// <summary>
    /// Niente.
    /// </summary>
    public const int DynamicNiente = 58662;
    /// <summary>
    /// Niente (for hairpins).
    /// </summary>
    public const int DynamicNienteForHairpin = 58689;
    /// <summary>
    /// pf.
    /// </summary>
    public const int DynamicPF = 58670;
    /// <summary>
    /// pp.
    /// </summary>
    public const int DynamicPP = 58667;
    /// <summary>
    /// ppp.
    /// </summary>
    public const int DynamicPPP = 58666;
    /// <summary>
    /// pppp.
    /// </summary>
    public const int DynamicPPPP = 58665;
    /// <summary>
    /// ppppp.
    /// </summary>
    public const int DynamicPPPPP = 58664;
    /// <summary>
    /// pppppp.
    /// </summary>
    public const int DynamicPPPPPP = 58663;
    /// <summary>
    /// Piano.
    /// </summary>
    public const int DynamicPiano = 58656;
    /// <summary>
    /// Rinforzando.
    /// </summary>
    public const int DynamicRinforzando = 58659;
    /// <summary>
    /// Rinforzando 1.
    /// </summary>
    public const int DynamicRinforzando1 = 58684;
    /// <summary>
    /// Rinforzando 2.
    /// </summary>
    public const int DynamicRinforzando2 = 58685;
    /// <summary>
    /// Sforzando.
    /// </summary>
    public const int DynamicSforzando = 58660;
    /// <summary>
    /// Sforzando 1.
    /// </summary>
    public const int DynamicSforzando1 = 58678;
    /// <summary>
    /// Sforzando-pianissimo.
    /// </summary>
    public const int DynamicSforzandoPianissimo = 58680;
    /// <summary>
    /// Sforzando-piano.
    /// </summary>
    public const int DynamicSforzandoPiano = 58679;
    /// <summary>
    /// Sforzato.
    /// </summary>
    public const int DynamicSforzato = 58681;
    /// <summary>
    /// Sforzatissimo.
    /// </summary>
    public const int DynamicSforzatoFF = 58683;
    /// <summary>
    /// Sforzato-piano.
    /// </summary>
    public const int DynamicSforzatoPiano = 58682;
    /// <summary>
    /// Z.
    /// </summary>
    public const int DynamicZ = 58661;
    /// <summary>
    /// Eight channels (7.1 surround).
    /// </summary>
    public const int ElecAudioChannelsEight = 60230;
    /// <summary>
    /// Five channels.
    /// </summary>
    public const int ElecAudioChannelsFive = 60227;
    /// <summary>
    /// Four channels.
    /// </summary>
    public const int ElecAudioChannelsFour = 60226;
    /// <summary>
    /// One channel (mono).
    /// </summary>
    public const int ElecAudioChannelsOne = 60222;
    /// <summary>
    /// Seven channels.
    /// </summary>
    public const int ElecAudioChannelsSeven = 60229;
    /// <summary>
    /// Six channels (5.1 surround).
    /// </summary>
    public const int ElecAudioChannelsSix = 60228;
    /// <summary>
    /// Three channels (frontal).
    /// </summary>
    public const int ElecAudioChannelsThreeFrontal = 60224;
    /// <summary>
    /// Three channels (surround).
    /// </summary>
    public const int ElecAudioChannelsThreeSurround = 60225;
    /// <summary>
    /// Two channels (stereo).
    /// </summary>
    public const int ElecAudioChannelsTwo = 60223;
    /// <summary>
    /// Audio in.
    /// </summary>
    public const int ElecAudioIn = 60233;
    /// <summary>
    /// Mono audio setup.
    /// </summary>
    public const int ElecAudioMono = 60220;
    /// <summary>
    /// Audio out.
    /// </summary>
    public const int ElecAudioOut = 60234;
    /// <summary>
    /// Stereo audio setup.
    /// </summary>
    public const int ElecAudioStereo = 60221;
    /// <summary>
    /// Camera.
    /// </summary>
    public const int ElecCamera = 60187;
    /// <summary>
    /// Data in.
    /// </summary>
    public const int ElecDataIn = 60237;
    /// <summary>
    /// Data out.
    /// </summary>
    public const int ElecDataOut = 60238;
    /// <summary>
    /// Disc.
    /// </summary>
    public const int ElecDisc = 60179;
    /// <summary>
    /// Download.
    /// </summary>
    public const int ElecDownload = 60239;
    /// <summary>
    /// Eject.
    /// </summary>
    public const int ElecEject = 60203;
    /// <summary>
    /// Fast-forward.
    /// </summary>
    public const int ElecFastForward = 60191;
    /// <summary>
    /// Headphones.
    /// </summary>
    public const int ElecHeadphones = 60177;
    /// <summary>
    /// Headset.
    /// </summary>
    public const int ElecHeadset = 60178;
    /// <summary>
    /// Line in.
    /// </summary>
    public const int ElecLineIn = 60231;
    /// <summary>
    /// Line out.
    /// </summary>
    public const int ElecLineOut = 60232;
    /// <summary>
    /// Loop.
    /// </summary>
    public const int ElecLoop = 60195;
    /// <summary>
    /// Loudspeaker.
    /// </summary>
    public const int ElecLoudspeaker = 60186;
    /// <summary>
    /// MIDI controller 0%.
    /// </summary>
    public const int ElecMIDIController0 = 60214;
    /// <summary>
    /// MIDI controller 100%.
    /// </summary>
    public const int ElecMIDIController100 = 60219;
    /// <summary>
    /// MIDI controller 20%.
    /// </summary>
    public const int ElecMIDIController20 = 60215;
    /// <summary>
    /// MIDI controller 40%.
    /// </summary>
    public const int ElecMIDIController40 = 60216;
    /// <summary>
    /// MIDI controller 60%.
    /// </summary>
    public const int ElecMIDIController60 = 60217;
    /// <summary>
    /// MIDI controller 80%.
    /// </summary>
    public const int ElecMIDIController80 = 60218;
    /// <summary>
    /// MIDI in.
    /// </summary>
    public const int ElecMIDIIn = 60212;
    /// <summary>
    /// MIDI out.
    /// </summary>
    public const int ElecMIDIOut = 60213;
    /// <summary>
    /// Microphone.
    /// </summary>
    public const int ElecMicrophone = 60176;
    /// <summary>
    /// Mute microphone.
    /// </summary>
    public const int ElecMicrophoneMute = 60200;
    /// <summary>
    /// Unmute microphone.
    /// </summary>
    public const int ElecMicrophoneUnmute = 60201;
    /// <summary>
    /// Mixing console.
    /// </summary>
    public const int ElecMixingConsole = 60181;
    /// <summary>
    /// Monitor.
    /// </summary>
    public const int ElecMonitor = 60184;
    /// <summary>
    /// Mute.
    /// </summary>
    public const int ElecMute = 60198;
    /// <summary>
    /// Pause.
    /// </summary>
    public const int ElecPause = 60190;
    /// <summary>
    /// Play.
    /// </summary>
    public const int ElecPlay = 60188;
    /// <summary>
    /// Power on/off.
    /// </summary>
    public const int ElecPowerOnOff = 60202;
    /// <summary>
    /// Projector.
    /// </summary>
    public const int ElecProjector = 60185;
    /// <summary>
    /// Replay.
    /// </summary>
    public const int ElecReplay = 60196;
    /// <summary>
    /// Rewind.
    /// </summary>
    public const int ElecRewind = 60192;
    /// <summary>
    /// Shuffle.
    /// </summary>
    public const int ElecShuffle = 60197;
    /// <summary>
    /// Skip backwards.
    /// </summary>
    public const int ElecSkipBackwards = 60194;
    /// <summary>
    /// Skip forwards.
    /// </summary>
    public const int ElecSkipForwards = 60193;
    /// <summary>
    /// Stop.
    /// </summary>
    public const int ElecStop = 60189;
    /// <summary>
    /// Tape.
    /// </summary>
    public const int ElecTape = 60180;
    /// <summary>
    /// USB connection.
    /// </summary>
    public const int ElecUSB = 60182;
    /// <summary>
    /// Unmute.
    /// </summary>
    public const int ElecUnmute = 60199;
    /// <summary>
    /// Upload.
    /// </summary>
    public const int ElecUpload = 60240;
    /// <summary>
    /// Video camera.
    /// </summary>
    public const int ElecVideoCamera = 60183;
    /// <summary>
    /// Video in.
    /// </summary>
    public const int ElecVideoIn = 60235;
    /// <summary>
    /// Video out.
    /// </summary>
    public const int ElecVideoOut = 60236;
    /// <summary>
    /// Combining volume fader.
    /// </summary>
    public const int ElecVolumeFader = 60204;
    /// <summary>
    /// Combining volume fader thumb.
    /// </summary>
    public const int ElecVolumeFaderThumb = 60205;
    /// <summary>
    /// Volume level 0%.
    /// </summary>
    public const int ElecVolumeLevel0 = 60206;
    /// <summary>
    /// Volume level 100%.
    /// </summary>
    public const int ElecVolumeLevel100 = 60211;
    /// <summary>
    /// Volume level 20%.
    /// </summary>
    public const int ElecVolumeLevel20 = 60207;
    /// <summary>
    /// Volume level 40%.
    /// </summary>
    public const int ElecVolumeLevel40 = 60208;
    /// <summary>
    /// Volume level 60%.
    /// </summary>
    public const int ElecVolumeLevel60 = 60209;
    /// <summary>
    /// Volume level 80%.
    /// </summary>
    public const int ElecVolumeLevel80 = 60210;
    /// <summary>
    /// F clef.
    /// </summary>
    public const int FClef = 57442;
    /// <summary>
    /// F clef quindicesima alta.
    /// </summary>
    public const int FClef15ma = 57446;
    /// <summary>
    /// F clef quindicesima bassa.
    /// </summary>
    public const int FClef15mb = 57443;
    /// <summary>
    /// F clef ottava alta.
    /// </summary>
    public const int FClef8va = 57445;
    /// <summary>
    /// F clef ottava bassa.
    /// </summary>
    public const int FClef8vb = 57444;
    /// <summary>
    /// F clef, arrow down.
    /// </summary>
    public const int FClefArrowDown = 57448;
    /// <summary>
    /// F clef, arrow up.
    /// </summary>
    public const int FClefArrowUp = 57447;
    /// <summary>
    /// F clef change.
    /// </summary>
    public const int FClefChange = 57468;
    /// <summary>
    /// Reversed F clef.
    /// </summary>
    public const int FClefReversed = 57462;
    /// <summary>
    /// Turned F clef.
    /// </summary>
    public const int FClefTurned = 57463;
    /// <summary>
    /// Fermata above.
    /// </summary>
    public const int FermataAbove = 58560;
    /// <summary>
    /// Fermata below.
    /// </summary>
    public const int FermataBelow = 58561;
    /// <summary>
    /// Long fermata above.
    /// </summary>
    public const int FermataLongAbove = 58566;
    /// <summary>
    /// Long fermata below.
    /// </summary>
    public const int FermataLongBelow = 58567;
    /// <summary>
    /// Long fermata (Henze) above.
    /// </summary>
    public const int FermataLongHenzeAbove = 58570;
    /// <summary>
    /// Long fermata (Henze) below.
    /// </summary>
    public const int FermataLongHenzeBelow = 58571;
    /// <summary>
    /// Short fermata above.
    /// </summary>
    public const int FermataShortAbove = 58564;
    /// <summary>
    /// Short fermata below.
    /// </summary>
    public const int FermataShortBelow = 58565;
    /// <summary>
    /// Short fermata (Henze) above.
    /// </summary>
    public const int FermataShortHenzeAbove = 58572;
    /// <summary>
    /// Short fermata (Henze) below.
    /// </summary>
    public const int FermataShortHenzeBelow = 58573;
    /// <summary>
    /// Very long fermata above.
    /// </summary>
    public const int FermataVeryLongAbove = 58568;
    /// <summary>
    /// Very long fermata below.
    /// </summary>
    public const int FermataVeryLongBelow = 58569;
    /// <summary>
    /// Very short fermata above.
    /// </summary>
    public const int FermataVeryShortAbove = 58562;
    /// <summary>
    /// Very short fermata below.
    /// </summary>
    public const int FermataVeryShortBelow = 58563;
    /// <summary>
    /// Figured bass 0.
    /// </summary>
    public const int Figbass0 = 59984;
    /// <summary>
    /// Figured bass 1.
    /// </summary>
    public const int Figbass1 = 59985;
    /// <summary>
    /// Figured bass 2.
    /// </summary>
    public const int Figbass2 = 59986;
    /// <summary>
    /// Figured bass 2 raised by half-step.
    /// </summary>
    public const int Figbass2Raised = 59987;
    /// <summary>
    /// Figured bass 3.
    /// </summary>
    public const int Figbass3 = 59988;
    /// <summary>
    /// Figured bass 4.
    /// </summary>
    public const int Figbass4 = 59989;
    /// <summary>
    /// Figured bass 4 raised by half-step.
    /// </summary>
    public const int Figbass4Raised = 59990;
    /// <summary>
    /// Figured bass 5.
    /// </summary>
    public const int Figbass5 = 59991;
    /// <summary>
    /// Figured bass 5 raised by half-step.
    /// </summary>
    public const int Figbass5Raised1 = 59992;
    /// <summary>
    /// Figured bass 5 raised by half-step 2.
    /// </summary>
    public const int Figbass5Raised2 = 59993;
    /// <summary>
    /// Figured bass diminished 5.
    /// </summary>
    public const int Figbass5Raised3 = 59994;
    /// <summary>
    /// Figured bass 6.
    /// </summary>
    public const int Figbass6 = 59995;
    /// <summary>
    /// Figured bass 6 raised by half-step.
    /// </summary>
    public const int Figbass6Raised = 59996;
    /// <summary>
    /// Figured bass 6 raised by half-step 2.
    /// </summary>
    public const int Figbass6Raised2 = 60015;
    /// <summary>
    /// Figured bass 7.
    /// </summary>
    public const int Figbass7 = 59997;
    /// <summary>
    /// Figured bass 7 diminished.
    /// </summary>
    public const int Figbass7Diminished = 60608;
    /// <summary>
    /// Figured bass 7 raised by half-step.
    /// </summary>
    public const int Figbass7Raised1 = 59998;
    /// <summary>
    /// Figured bass 7 lowered by a half-step.
    /// </summary>
    public const int Figbass7Raised2 = 59999;
    /// <summary>
    /// Figured bass 8.
    /// </summary>
    public const int Figbass8 = 60000;
    /// <summary>
    /// Figured bass 9.
    /// </summary>
    public const int Figbass9 = 60001;
    /// <summary>
    /// Figured bass 9 raised by half-step.
    /// </summary>
    public const int Figbass9Raised = 60002;
    /// <summary>
    /// Figured bass [.
    /// </summary>
    public const int FigbassBracketLeft = 60008;
    /// <summary>
    /// Figured bass ].
    /// </summary>
    public const int FigbassBracketRight = 60009;
    /// <summary>
    /// Combining lower.
    /// </summary>
    public const int FigbassCombiningLowering = 60014;
    /// <summary>
    /// Combining raise.
    /// </summary>
    public const int FigbassCombiningRaising = 60013;
    /// <summary>
    /// Figured bass double flat.
    /// </summary>
    public const int FigbassDoubleFlat = 60003;
    /// <summary>
    /// Figured bass double sharp.
    /// </summary>
    public const int FigbassDoubleSharp = 60007;
    /// <summary>
    /// Figured bass flat.
    /// </summary>
    public const int FigbassFlat = 60004;
    /// <summary>
    /// Figured bass natural.
    /// </summary>
    public const int FigbassNatural = 60005;
    /// <summary>
    /// Figured bass (.
    /// </summary>
    public const int FigbassParensLeft = 60010;
    /// <summary>
    /// Figured bass ).
    /// </summary>
    public const int FigbassParensRight = 60011;
    /// <summary>
    /// Figured bass +.
    /// </summary>
    public const int FigbassPlus = 60012;
    /// <summary>
    /// Figured bass sharp.
    /// </summary>
    public const int FigbassSharp = 60006;
    /// <summary>
    /// Figured bass triple flat.
    /// </summary>
    public const int FigbassTripleFlat = 60609;
    /// <summary>
    /// Figured bass triple sharp.
    /// </summary>
    public const int FigbassTripleSharp = 60610;
    /// <summary>
    /// Fingering 0 (open string).
    /// </summary>
    public const int Fingering0 = 60688;
    /// <summary>
    /// Fingering 0 italic (open string).
    /// </summary>
    public const int Fingering0Italic = 60800;
    /// <summary>
    /// Fingering 1 (thumb).
    /// </summary>
    public const int Fingering1 = 60689;
    /// <summary>
    /// Fingering 1 italic (thumb).
    /// </summary>
    public const int Fingering1Italic = 60801;
    /// <summary>
    /// Fingering 2 (index finger).
    /// </summary>
    public const int Fingering2 = 60690;
    /// <summary>
    /// Fingering 2 italic (index finger).
    /// </summary>
    public const int Fingering2Italic = 60802;
    /// <summary>
    /// Fingering 3 (middle finger).
    /// </summary>
    public const int Fingering3 = 60691;
    /// <summary>
    /// Fingering 3 italic (middle finger).
    /// </summary>
    public const int Fingering3Italic = 60803;
    /// <summary>
    /// Fingering 4 (ring finger).
    /// </summary>
    public const int Fingering4 = 60692;
    /// <summary>
    /// Fingering 4 italic (ring finger).
    /// </summary>
    public const int Fingering4Italic = 60804;
    /// <summary>
    /// Fingering 5 (little finger).
    /// </summary>
    public const int Fingering5 = 60693;
    /// <summary>
    /// Fingering 5 italic (little finger).
    /// </summary>
    public const int Fingering5Italic = 60805;
    /// <summary>
    /// Fingering 6.
    /// </summary>
    public const int Fingering6 = 60708;
    /// <summary>
    /// Fingering 6 italic.
    /// </summary>
    public const int Fingering6Italic = 60806;
    /// <summary>
    /// Fingering 7.
    /// </summary>
    public const int Fingering7 = 60709;
    /// <summary>
    /// Fingering 7 italic.
    /// </summary>
    public const int Fingering7Italic = 60807;
    /// <summary>
    /// Fingering 8.
    /// </summary>
    public const int Fingering8 = 60710;
    /// <summary>
    /// Fingering 8 italic.
    /// </summary>
    public const int Fingering8Italic = 60808;
    /// <summary>
    /// Fingering 9.
    /// </summary>
    public const int Fingering9 = 60711;
    /// <summary>
    /// Fingering 9 italic.
    /// </summary>
    public const int Fingering9Italic = 60809;
    /// <summary>
    /// Fingering a (anular; right-hand ring finger for guitar).
    /// </summary>
    public const int FingeringALower = 60699;
    /// <summary>
    /// Fingering c (right-hand little finger for guitar).
    /// </summary>
    public const int FingeringCLower = 60700;
    /// <summary>
    /// Fingering e (right-hand little finger for guitar).
    /// </summary>
    public const int FingeringELower = 60702;
    /// <summary>
    /// Fingering i (indicio; right-hand index finger for guitar).
    /// </summary>
    public const int FingeringILower = 60697;
    /// <summary>
    /// Fingering left bracket.
    /// </summary>
    public const int FingeringLeftBracket = 60714;
    /// <summary>
    /// Fingering left bracket italic.
    /// </summary>
    public const int FingeringLeftBracketItalic = 60812;
    /// <summary>
    /// Fingering left parenthesis.
    /// </summary>
    public const int FingeringLeftParenthesis = 60712;
    /// <summary>
    /// Fingering left parenthesis italic.
    /// </summary>
    public const int FingeringLeftParenthesisItalic = 60810;
    /// <summary>
    /// Fingering m (medio; right-hand middle finger for guitar).
    /// </summary>
    public const int FingeringMLower = 60698;
    /// <summary>
    /// Multiple notes played by thumb or single finger.
    /// </summary>
    public const int FingeringMultipleNotes = 60707;
    /// <summary>
    /// Fingering o (right-hand little finger for guitar).
    /// </summary>
    public const int FingeringOLower = 60703;
    /// <summary>
    /// Fingering p (pulgar; right-hand thumb for guitar).
    /// </summary>
    public const int FingeringPLower = 60695;
    /// <summary>
    /// Fingering q (right-hand little finger for guitar).
    /// </summary>
    public const int FingeringQLower = 60814;
    /// <summary>
    /// Fingering right bracket.
    /// </summary>
    public const int FingeringRightBracket = 60715;
    /// <summary>
    /// Fingering right bracket italic.
    /// </summary>
    public const int FingeringRightBracketItalic = 60813;
    /// <summary>
    /// Fingering right parenthesis.
    /// </summary>
    public const int FingeringRightParenthesis = 60713;
    /// <summary>
    /// Fingering right parenthesis italic.
    /// </summary>
    public const int FingeringRightParenthesisItalic = 60811;
    /// <summary>
    /// Fingering s (right-hand little finger for guitar).
    /// </summary>
    public const int FingeringSLower = 60815;
    /// <summary>
    /// Fingering middle dot separator.
    /// </summary>
    public const int FingeringSeparatorMiddleDot = 60716;
    /// <summary>
    /// Fingering white middle dot separator.
    /// </summary>
    public const int FingeringSeparatorMiddleDotWhite = 60717;
    /// <summary>
    /// Fingering forward slash separator.
    /// </summary>
    public const int FingeringSeparatorSlash = 60718;
    /// <summary>
    /// Finger substitution above.
    /// </summary>
    public const int FingeringSubstitutionAbove = 60704;
    /// <summary>
    /// Finger substitution below.
    /// </summary>
    public const int FingeringSubstitutionBelow = 60705;
    /// <summary>
    /// Finger substitution dash.
    /// </summary>
    public const int FingeringSubstitutionDash = 60706;
    /// <summary>
    /// Fingering t (right-hand thumb for guitar).
    /// </summary>
    public const int FingeringTLower = 60696;
    /// <summary>
    /// Fingering T (left-hand thumb for guitar).
    /// </summary>
    public const int FingeringTUpper = 60694;
    /// <summary>
    /// Fingering x (right-hand little finger for guitar).
    /// </summary>
    public const int FingeringXLower = 60701;
    /// <summary>
    /// Combining flag 8 (1024th) below.
    /// </summary>
    public const int Flag1024thDown = 57935;
    /// <summary>
    /// Combining flag 8 (1024th) above.
    /// </summary>
    public const int Flag1024thUp = 57934;
    /// <summary>
    /// Combining flag 5 (128th) below.
    /// </summary>
    public const int Flag128thDown = 57929;
    /// <summary>
    /// Combining flag 5 (128th) above.
    /// </summary>
    public const int Flag128thUp = 57928;
    /// <summary>
    /// Combining flag 2 (16th) below.
    /// </summary>
    public const int Flag16thDown = 57923;
    /// <summary>
    /// Combining flag 2 (16th) above.
    /// </summary>
    public const int Flag16thUp = 57922;
    /// <summary>
    /// Combining flag 6 (256th) below.
    /// </summary>
    public const int Flag256thDown = 57931;
    /// <summary>
    /// Combining flag 6 (256th) above.
    /// </summary>
    public const int Flag256thUp = 57930;
    /// <summary>
    /// Combining flag 3 (32nd) below.
    /// </summary>
    public const int Flag32ndDown = 57925;
    /// <summary>
    /// Combining flag 3 (32nd) above.
    /// </summary>
    public const int Flag32ndUp = 57924;
    /// <summary>
    /// Combining flag 7 (512th) below.
    /// </summary>
    public const int Flag512thDown = 57933;
    /// <summary>
    /// Combining flag 7 (512th) above.
    /// </summary>
    public const int Flag512thUp = 57932;
    /// <summary>
    /// Combining flag 4 (64th) below.
    /// </summary>
    public const int Flag64thDown = 57927;
    /// <summary>
    /// Combining flag 4 (64th) above.
    /// </summary>
    public const int Flag64thUp = 57926;
    /// <summary>
    /// Combining flag 1 (8th) below.
    /// </summary>
    public const int Flag8thDown = 57921;
    /// <summary>
    /// Combining flag 1 (8th) above.
    /// </summary>
    public const int Flag8thUp = 57920;
    /// <summary>
    /// Internal combining flag below.
    /// </summary>
    public const int FlagInternalDown = 57937;
    /// <summary>
    /// Internal combining flag above.
    /// </summary>
    public const int FlagInternalUp = 57936;
    /// <summary>
    /// 3-string fretboard.
    /// </summary>
    public const int Fretboard3String = 59472;
    /// <summary>
    /// 3-string fretboard at nut.
    /// </summary>
    public const int Fretboard3StringNut = 59473;
    /// <summary>
    /// 4-string fretboard.
    /// </summary>
    public const int Fretboard4String = 59474;
    /// <summary>
    /// 4-string fretboard at nut.
    /// </summary>
    public const int Fretboard4StringNut = 59475;
    /// <summary>
    /// 5-string fretboard.
    /// </summary>
    public const int Fretboard5String = 59476;
    /// <summary>
    /// 5-string fretboard at nut.
    /// </summary>
    public const int Fretboard5StringNut = 59477;
    /// <summary>
    /// 6-string fretboard.
    /// </summary>
    public const int Fretboard6String = 59478;
    /// <summary>
    /// 6-string fretboard at nut.
    /// </summary>
    public const int Fretboard6StringNut = 59479;
    /// <summary>
    /// Fingered fret (filled circle).
    /// </summary>
    public const int FretboardFilledCircle = 59480;
    /// <summary>
    /// Open string (O).
    /// </summary>
    public const int FretboardO = 59482;
    /// <summary>
    /// String not played (X).
    /// </summary>
    public const int FretboardX = 59481;
    /// <summary>
    /// Function theory angle bracket left.
    /// </summary>
    public const int FunctionAngleLeft = 60051;
    /// <summary>
    /// Function theory angle bracket right.
    /// </summary>
    public const int FunctionAngleRight = 60052;
    /// <summary>
    /// Function theory bracket left.
    /// </summary>
    public const int FunctionBracketLeft = 60047;
    /// <summary>
    /// Function theory bracket right.
    /// </summary>
    public const int FunctionBracketRight = 60048;
    /// <summary>
    /// Function theory dominant of dominant.
    /// </summary>
    public const int FunctionDD = 60033;
    /// <summary>
    /// Function theory minor dominant.
    /// </summary>
    public const int FunctionDLower = 60032;
    /// <summary>
    /// Function theory major dominant.
    /// </summary>
    public const int FunctionDUpper = 60031;
    /// <summary>
    /// Function theory 8.
    /// </summary>
    public const int FunctionEight = 60024;
    /// <summary>
    /// Function theory F.
    /// </summary>
    public const int FunctionFUpper = 60057;
    /// <summary>
    /// Function theory 5.
    /// </summary>
    public const int FunctionFive = 60021;
    /// <summary>
    /// Function theory 4.
    /// </summary>
    public const int FunctionFour = 60020;
    /// <summary>
    /// Function theory g.
    /// </summary>
    public const int FunctionGLower = 60036;
    /// <summary>
    /// Function theory G.
    /// </summary>
    public const int FunctionGUpper = 60035;
    /// <summary>
    /// Function theory greater than.
    /// </summary>
    public const int FunctionGreaterThan = 60028;
    /// <summary>
    /// Function theory i.
    /// </summary>
    public const int FunctionILower = 60059;
    /// <summary>
    /// Function theory I.
    /// </summary>
    public const int FunctionIUpper = 60058;
    /// <summary>
    /// Function theory k.
    /// </summary>
    public const int FunctionKLower = 60061;
    /// <summary>
    /// Function theory K.
    /// </summary>
    public const int FunctionKUpper = 60060;
    /// <summary>
    /// Function theory l.
    /// </summary>
    public const int FunctionLLower = 60063;
    /// <summary>
    /// Function theory L.
    /// </summary>
    public const int FunctionLUpper = 60062;
    /// <summary>
    /// Function theory less than.
    /// </summary>
    public const int FunctionLessThan = 60026;
    /// <summary>
    /// Function theory m.
    /// </summary>
    public const int FunctionMLower = 60673;
    /// <summary>
    /// Function theory M.
    /// </summary>
    public const int FunctionMUpper = 60672;
    /// <summary>
    /// Function theory minus.
    /// </summary>
    public const int FunctionMinus = 60027;
    /// <summary>
    /// Function theory n.
    /// </summary>
    public const int FunctionNLower = 60038;
    /// <summary>
    /// Function theory N.
    /// </summary>
    public const int FunctionNUpper = 60037;
    /// <summary>
    /// Function theory superscript N.
    /// </summary>
    public const int FunctionNUpperSuperscript = 60674;
    /// <summary>
    /// Function theory 9.
    /// </summary>
    public const int FunctionNine = 60025;
    /// <summary>
    /// Function theory 1.
    /// </summary>
    public const int FunctionOne = 60017;
    /// <summary>
    /// Function theory p.
    /// </summary>
    public const int FunctionPLower = 60040;
    /// <summary>
    /// Function theory P.
    /// </summary>
    public const int FunctionPUpper = 60039;
    /// <summary>
    /// Function theory parenthesis left.
    /// </summary>
    public const int FunctionParensLeft = 60049;
    /// <summary>
    /// Function theory parenthesis right.
    /// </summary>
    public const int FunctionParensRight = 60050;
    /// <summary>
    /// Function theory prefix plus.
    /// </summary>
    public const int FunctionPlus = 60056;
    /// <summary>
    /// Function theory r.
    /// </summary>
    public const int FunctionRLower = 60675;
    /// <summary>
    /// Function theory repetition 1.
    /// </summary>
    public const int FunctionRepetition1 = 60053;
    /// <summary>
    /// Function theory repetition 2.
    /// </summary>
    public const int FunctionRepetition2 = 60054;
    /// <summary>
    /// Function theory prefix ring.
    /// </summary>
    public const int FunctionRing = 60055;
    /// <summary>
    /// Function theory minor subdominant.
    /// </summary>
    public const int FunctionSLower = 60042;
    /// <summary>
    /// Function theory minor subdominant of subdominant.
    /// </summary>
    public const int FunctionSSLower = 60030;
    /// <summary>
    /// Function theory major subdominant of subdominant.
    /// </summary>
    public const int FunctionSSUpper = 60029;
    /// <summary>
    /// Function theory major subdominant.
    /// </summary>
    public const int FunctionSUpper = 60041;
    /// <summary>
    /// Function theory 7.
    /// </summary>
    public const int FunctionSeven = 60023;
    /// <summary>
    /// Function theory 6.
    /// </summary>
    public const int FunctionSix = 60022;
    /// <summary>
    /// Function theory double dominant seventh.
    /// </summary>
    public const int FunctionSlashedDD = 60034;
    /// <summary>
    /// Function theory minor tonic.
    /// </summary>
    public const int FunctionTLower = 60044;
    /// <summary>
    /// Function theory tonic.
    /// </summary>
    public const int FunctionTUpper = 60043;
    /// <summary>
    /// Function theory 3.
    /// </summary>
    public const int FunctionThree = 60019;
    /// <summary>
    /// Function theory 2.
    /// </summary>
    public const int FunctionTwo = 60018;
    /// <summary>
    /// Function theory v.
    /// </summary>
    public const int FunctionVLower = 60046;
    /// <summary>
    /// Function theory V.
    /// </summary>
    public const int FunctionVUpper = 60045;
    /// <summary>
    /// Function theory 0.
    /// </summary>
    public const int FunctionZero = 60016;
    /// <summary>
    /// G clef.
    /// </summary>
    public const int GClef = 57424;
    /// <summary>
    /// G clef quindicesima alta.
    /// </summary>
    public const int GClef15ma = 57428;
    /// <summary>
    /// G clef quindicesima bassa.
    /// </summary>
    public const int GClef15mb = 57425;
    /// <summary>
    /// G clef ottava alta.
    /// </summary>
    public const int GClef8va = 57427;
    /// <summary>
    /// G clef ottava bassa.
    /// </summary>
    public const int GClef8vb = 57426;
    /// <summary>
    /// G clef ottava bassa with C clef.
    /// </summary>
    public const int GClef8vbCClef = 57430;
    /// <summary>
    /// G clef ottava bassa (old style).
    /// </summary>
    public const int GClef8vbOld = 57429;
    /// <summary>
    /// G clef, optionally ottava bassa.
    /// </summary>
    public const int GClef8vbParens = 57431;
    /// <summary>
    /// G clef, arrow down.
    /// </summary>
    public const int GClefArrowDown = 57435;
    /// <summary>
    /// G clef, arrow up.
    /// </summary>
    public const int GClefArrowUp = 57434;
    /// <summary>
    /// G clef change.
    /// </summary>
    public const int GClefChange = 57466;
    /// <summary>
    /// Combining G clef, number above.
    /// </summary>
    public const int GClefLigatedNumberAbove = 57433;
    /// <summary>
    /// Combining G clef, number below.
    /// </summary>
    public const int GClefLigatedNumberBelow = 57432;
    /// <summary>
    /// Reversed G clef.
    /// </summary>
    public const int GClefReversed = 57459;
    /// <summary>
    /// Turned G clef.
    /// </summary>
    public const int GClefTurned = 57460;
    /// <summary>
    /// Glissando down.
    /// </summary>
    public const int GlissandoDown = 58758;
    /// <summary>
    /// Glissando up.
    /// </summary>
    public const int GlissandoUp = 58757;
    /// <summary>
    /// Slashed grace note stem down.
    /// </summary>
    public const int GraceNoteAcciaccaturaStemDown = 58721;
    /// <summary>
    /// Slashed grace note stem up.
    /// </summary>
    public const int GraceNoteAcciaccaturaStemUp = 58720;
    /// <summary>
    /// Grace note stem down.
    /// </summary>
    public const int GraceNoteAppoggiaturaStemDown = 58723;
    /// <summary>
    /// Grace note stem up.
    /// </summary>
    public const int GraceNoteAppoggiaturaStemUp = 58722;
    /// <summary>
    /// Slash for stem down grace note.
    /// </summary>
    public const int GraceNoteSlashStemDown = 58725;
    /// <summary>
    /// Slash for stem up grace note.
    /// </summary>
    public const int GraceNoteSlashStemUp = 58724;
    /// <summary>
    /// Full barré.
    /// </summary>
    public const int GuitarBarreFull = 59464;
    /// <summary>
    /// Half barré.
    /// </summary>
    public const int GuitarBarreHalf = 59465;
    /// <summary>
    /// Closed wah/volume pedal.
    /// </summary>
    public const int GuitarClosePedal = 59455;
    /// <summary>
    /// Fade in.
    /// </summary>
    public const int GuitarFadeIn = 59459;
    /// <summary>
    /// Fade out.
    /// </summary>
    public const int GuitarFadeOut = 59460;
    /// <summary>
    /// Golpe (tapping the pick guard).
    /// </summary>
    public const int GuitarGolpe = 59458;
    /// <summary>
    /// Half-open wah/volume pedal.
    /// </summary>
    public const int GuitarHalfOpenPedal = 59454;
    /// <summary>
    /// Left-hand tapping.
    /// </summary>
    public const int GuitarLeftHandTapping = 59456;
    /// <summary>
    /// Open wah/volume pedal.
    /// </summary>
    public const int GuitarOpenPedal = 59453;
    /// <summary>
    /// Right-hand tapping.
    /// </summary>
    public const int GuitarRightHandTapping = 59457;
    /// <summary>
    /// Guitar shake.
    /// </summary>
    public const int GuitarShake = 59442;
    /// <summary>
    /// String number 0.
    /// </summary>
    public const int GuitarString0 = 59443;
    /// <summary>
    /// String number 1.
    /// </summary>
    public const int GuitarString1 = 59444;
    /// <summary>
    /// String number 10.
    /// </summary>
    public const int GuitarString10 = 59466;
    /// <summary>
    /// String number 11.
    /// </summary>
    public const int GuitarString11 = 59467;
    /// <summary>
    /// String number 12.
    /// </summary>
    public const int GuitarString12 = 59468;
    /// <summary>
    /// String number 13.
    /// </summary>
    public const int GuitarString13 = 59469;
    /// <summary>
    /// String number 2.
    /// </summary>
    public const int GuitarString2 = 59445;
    /// <summary>
    /// String number 3.
    /// </summary>
    public const int GuitarString3 = 59446;
    /// <summary>
    /// String number 4.
    /// </summary>
    public const int GuitarString4 = 59447;
    /// <summary>
    /// String number 5.
    /// </summary>
    public const int GuitarString5 = 59448;
    /// <summary>
    /// String number 6.
    /// </summary>
    public const int GuitarString6 = 59449;
    /// <summary>
    /// String number 7.
    /// </summary>
    public const int GuitarString7 = 59450;
    /// <summary>
    /// String number 8.
    /// </summary>
    public const int GuitarString8 = 59451;
    /// <summary>
    /// String number 9.
    /// </summary>
    public const int GuitarString9 = 59452;
    /// <summary>
    /// Strum direction down.
    /// </summary>
    public const int GuitarStrumDown = 59463;
    /// <summary>
    /// Strum direction up.
    /// </summary>
    public const int GuitarStrumUp = 59462;
    /// <summary>
    /// Guitar vibrato bar dip.
    /// </summary>
    public const int GuitarVibratoBarDip = 59441;
    /// <summary>
    /// Guitar vibrato bar scoop.
    /// </summary>
    public const int GuitarVibratoBarScoop = 59440;
    /// <summary>
    /// Vibrato wiggle segment.
    /// </summary>
    public const int GuitarVibratoStroke = 60082;
    /// <summary>
    /// Volume swell.
    /// </summary>
    public const int GuitarVolumeSwell = 59461;
    /// <summary>
    /// Wide vibrato wiggle segment.
    /// </summary>
    public const int GuitarWideVibratoStroke = 60083;
    /// <summary>
    /// Belltree.
    /// </summary>
    public const int HandbellsBelltree = 59423;
    /// <summary>
    /// Damp 3.
    /// </summary>
    public const int HandbellsDamp3 = 59422;
    /// <summary>
    /// Echo.
    /// </summary>
    public const int HandbellsEcho1 = 59419;
    /// <summary>
    /// Echo 2.
    /// </summary>
    public const int HandbellsEcho2 = 59420;
    /// <summary>
    /// Gyro.
    /// </summary>
    public const int HandbellsGyro = 59421;
    /// <summary>
    /// Hand martellato.
    /// </summary>
    public const int HandbellsHandMartellato = 59410;
    /// <summary>
    /// Mallet, bell on table.
    /// </summary>
    public const int HandbellsMalletBellOnTable = 59413;
    /// <summary>
    /// Mallet, bell suspended.
    /// </summary>
    public const int HandbellsMalletBellSuspended = 59412;
    /// <summary>
    /// Mallet lift.
    /// </summary>
    public const int HandbellsMalletLft = 59414;
    /// <summary>
    /// Martellato.
    /// </summary>
    public const int HandbellsMartellato = 59408;
    /// <summary>
    /// Martellato lift.
    /// </summary>
    public const int HandbellsMartellatoLift = 59409;
    /// <summary>
    /// Muted martellato.
    /// </summary>
    public const int HandbellsMutedMartellato = 59411;
    /// <summary>
    /// Pluck lift.
    /// </summary>
    public const int HandbellsPluckLift = 59415;
    /// <summary>
    /// Swing.
    /// </summary>
    public const int HandbellsSwing = 59418;
    /// <summary>
    /// Swing down.
    /// </summary>
    public const int HandbellsSwingDown = 59417;
    /// <summary>
    /// Swing up.
    /// </summary>
    public const int HandbellsSwingUp = 59416;
    /// <summary>
    /// Table pair of handbells.
    /// </summary>
    public const int HandbellsTablePairBells = 59425;
    /// <summary>
    /// Table single handbell.
    /// </summary>
    public const int HandbellsTableSingleBell = 59424;
    /// <summary>
    /// Metal rod pictogram.
    /// </summary>
    public const int HarpMetalRod = 59023;
    /// <summary>
    /// Harp pedal centered (natural).
    /// </summary>
    public const int HarpPedalCentered = 59009;
    /// <summary>
    /// Harp pedal divider.
    /// </summary>
    public const int HarpPedalDivider = 59011;
    /// <summary>
    /// Harp pedal lowered (sharp).
    /// </summary>
    public const int HarpPedalLowered = 59010;
    /// <summary>
    /// Harp pedal raised (flat).
    /// </summary>
    public const int HarpPedalRaised = 59008;
    /// <summary>
    /// Ascending aeolian chords (Salzedo).
    /// </summary>
    public const int HarpSalzedoAeolianAscending = 59029;
    /// <summary>
    /// Descending aeolian chords (Salzedo).
    /// </summary>
    public const int HarpSalzedoAeolianDescending = 59030;
    /// <summary>
    /// Damp above (Salzedo).
    /// </summary>
    public const int HarpSalzedoDampAbove = 59034;
    /// <summary>
    /// Damp below (Salzedo).
    /// </summary>
    public const int HarpSalzedoDampBelow = 59033;
    /// <summary>
    /// Damp with both hands (Salzedo).
    /// </summary>
    public const int HarpSalzedoDampBothHands = 59032;
    /// <summary>
    /// Damp only low strings (Salzedo).
    /// </summary>
    public const int HarpSalzedoDampLowStrings = 59031;
    /// <summary>
    /// Fluidic sounds, left hand (Salzedo).
    /// </summary>
    public const int HarpSalzedoFluidicSoundsLeft = 59021;
    /// <summary>
    /// Fluidic sounds, right hand (Salzedo).
    /// </summary>
    public const int HarpSalzedoFluidicSoundsRight = 59022;
    /// <summary>
    /// Isolated sounds (Salzedo).
    /// </summary>
    public const int HarpSalzedoIsolatedSounds = 59036;
    /// <summary>
    /// Metallic sounds (Salzedo).
    /// </summary>
    public const int HarpSalzedoMetallicSounds = 59016;
    /// <summary>
    /// Metallic sounds, one string (Salzedo).
    /// </summary>
    public const int HarpSalzedoMetallicSoundsOneString = 59035;
    /// <summary>
    /// Muffle totally (Salzedo).
    /// </summary>
    public const int HarpSalzedoMuffleTotally = 59020;
    /// <summary>
    /// Oboic flux (Salzedo).
    /// </summary>
    public const int HarpSalzedoOboicFlux = 59013;
    /// <summary>
    /// Play at upper end of strings (Salzedo).
    /// </summary>
    public const int HarpSalzedoPlayUpperEnd = 59018;
    /// <summary>
    /// Slide with suppleness (Salzedo).
    /// </summary>
    public const int HarpSalzedoSlideWithSuppleness = 59012;
    /// <summary>
    /// Snare drum effect (Salzedo).
    /// </summary>
    public const int HarpSalzedoSnareDrum = 59037;
    /// <summary>
    /// Tam-tam sounds (Salzedo).
    /// </summary>
    public const int HarpSalzedoTamTamSounds = 59017;
    /// <summary>
    /// Thunder effect (Salzedo).
    /// </summary>
    public const int HarpSalzedoThunderEffect = 59014;
    /// <summary>
    /// Timpanic sounds (Salzedo).
    /// </summary>
    public const int HarpSalzedoTimpanicSounds = 59019;
    /// <summary>
    /// Whistling sounds (Salzedo).
    /// </summary>
    public const int HarpSalzedoWhistlingSounds = 59015;
    /// <summary>
    /// Combining string noise for stem.
    /// </summary>
    public const int HarpStringNoiseStem = 59028;
    /// <summary>
    /// Tuning key pictogram.
    /// </summary>
    public const int HarpTuningKey = 59024;
    /// <summary>
    /// Retune strings for glissando.
    /// </summary>
    public const int HarpTuningKeyGlissando = 59027;
    /// <summary>
    /// Use handle of tuning key pictogram.
    /// </summary>
    public const int HarpTuningKeyHandle = 59025;
    /// <summary>
    /// Use shank of tuning key pictogram.
    /// </summary>
    public const int HarpTuningKeyShank = 59026;
    /// <summary>
    /// Indian drum clef.
    /// </summary>
    public const int IndianDrumClef = 60784;
    /// <summary>
    /// Back-chug.
    /// </summary>
    public const int KahnBackChug = 60898;
    /// <summary>
    /// Back-flap.
    /// </summary>
    public const int KahnBackFlap = 60888;
    /// <summary>
    /// Back-riff.
    /// </summary>
    public const int KahnBackRiff = 60897;
    /// <summary>
    /// Back-rip.
    /// </summary>
    public const int KahnBackRip = 60890;
    /// <summary>
    /// Ball-change.
    /// </summary>
    public const int KahnBallChange = 60870;
    /// <summary>
    /// Ball-dig.
    /// </summary>
    public const int KahnBallDig = 60877;
    /// <summary>
    /// Brush-backward.
    /// </summary>
    public const int KahnBrushBackward = 60839;
    /// <summary>
    /// Brush-forward.
    /// </summary>
    public const int KahnBrushForward = 60838;
    /// <summary>
    /// Chug.
    /// </summary>
    public const int KahnChug = 60893;
    /// <summary>
    /// Clap.
    /// </summary>
    public const int KahnClap = 60856;
    /// <summary>
    /// Double-snap.
    /// </summary>
    public const int KahnDoubleSnap = 60858;
    /// <summary>
    /// Double-wing.
    /// </summary>
    public const int KahnDoubleWing = 60907;
    /// <summary>
    /// Draw-step.
    /// </summary>
    public const int KahnDrawStep = 60850;
    /// <summary>
    /// Draw-tap.
    /// </summary>
    public const int KahnDrawTap = 60851;
    /// <summary>
    /// Flam.
    /// </summary>
    public const int KahnFlam = 60879;
    /// <summary>
    /// Flap.
    /// </summary>
    public const int KahnFlap = 60885;
    /// <summary>
    /// Flap-step.
    /// </summary>
    public const int KahnFlapStep = 60887;
    /// <summary>
    /// Flat.
    /// </summary>
    public const int KahnFlat = 60841;
    /// <summary>
    /// Flea-hop.
    /// </summary>
    public const int KahnFleaHop = 60848;
    /// <summary>
    /// Flea-tap.
    /// </summary>
    public const int KahnFleaTap = 60849;
    /// <summary>
    /// Grace-tap.
    /// </summary>
    public const int KahnGraceTap = 60840;
    /// <summary>
    /// Grace-tap-change.
    /// </summary>
    public const int KahnGraceTapChange = 60881;
    /// <summary>
    /// Grace-tap-hop.
    /// </summary>
    public const int KahnGraceTapHop = 60880;
    /// <summary>
    /// Grace-tap-stamp.
    /// </summary>
    public const int KahnGraceTapStamp = 60883;
    /// <summary>
    /// Heel.
    /// </summary>
    public const int KahnHeel = 60842;
    /// <summary>
    /// Heel-change.
    /// </summary>
    public const int KahnHeelChange = 60873;
    /// <summary>
    /// Heel-click.
    /// </summary>
    public const int KahnHeelClick = 60859;
    /// <summary>
    /// Heel-drop.
    /// </summary>
    public const int KahnHeelDrop = 60854;
    /// <summary>
    /// Heel-step.
    /// </summary>
    public const int KahnHeelStep = 60868;
    /// <summary>
    /// Heel-tap.
    /// </summary>
    public const int KahnHeelTap = 60875;
    /// <summary>
    /// Hop.
    /// </summary>
    public const int KahnHop = 60834;
    /// <summary>
    /// Jump-apart.
    /// </summary>
    public const int KahnJumpApart = 60837;
    /// <summary>
    /// Jump-together.
    /// </summary>
    public const int KahnJumpTogether = 60836;
    /// <summary>
    /// Knee-inward.
    /// </summary>
    public const int KahnKneeInward = 60845;
    /// <summary>
    /// Knee-outward.
    /// </summary>
    public const int KahnKneeOutward = 60844;
    /// <summary>
    /// Leap.
    /// </summary>
    public const int KahnLeap = 60835;
    /// <summary>
    /// Leap-flat-foot.
    /// </summary>
    public const int KahnLeapFlatFoot = 60882;
    /// <summary>
    /// Leap-heel-click.
    /// </summary>
    public const int KahnLeapHeelClick = 60884;
    /// <summary>
    /// Left-catch.
    /// </summary>
    public const int KahnLeftCatch = 60863;
    /// <summary>
    /// Left-cross.
    /// </summary>
    public const int KahnLeftCross = 60861;
    /// <summary>
    /// Left-foot.
    /// </summary>
    public const int KahnLeftFoot = 60910;
    /// <summary>
    /// Left-toe-strike.
    /// </summary>
    public const int KahnLeftToeStrike = 60865;
    /// <summary>
    /// Left-turn.
    /// </summary>
    public const int KahnLeftTurn = 60912;
    /// <summary>
    /// Over-the-top.
    /// </summary>
    public const int KahnOverTheTop = 60908;
    /// <summary>
    /// Over-the-top-tap.
    /// </summary>
    public const int KahnOverTheTopTap = 60909;
    /// <summary>
    /// Pull.
    /// </summary>
    public const int KahnPull = 60899;
    /// <summary>
    /// Push.
    /// </summary>
    public const int KahnPush = 60894;
    /// <summary>
    /// Riff.
    /// </summary>
    public const int KahnRiff = 60896;
    /// <summary>
    /// Riffle.
    /// </summary>
    public const int KahnRiffle = 60903;
    /// <summary>
    /// Right-catch.
    /// </summary>
    public const int KahnRightCatch = 60864;
    /// <summary>
    /// Right-cross.
    /// </summary>
    public const int KahnRightCross = 60862;
    /// <summary>
    /// Right-foot.
    /// </summary>
    public const int KahnRightFoot = 60911;
    /// <summary>
    /// Right-toe-strike.
    /// </summary>
    public const int KahnRightToeStrike = 60866;
    /// <summary>
    /// Right-turn.
    /// </summary>
    public const int KahnRightTurn = 60913;
    /// <summary>
    /// Rip.
    /// </summary>
    public const int KahnRip = 60886;
    /// <summary>
    /// Ripple.
    /// </summary>
    public const int KahnRipple = 60904;
    /// <summary>
    /// Scrape.
    /// </summary>
    public const int KahnScrape = 60846;
    /// <summary>
    /// Scuff.
    /// </summary>
    public const int KahnScuff = 60892;
    /// <summary>
    /// Scuffle.
    /// </summary>
    public const int KahnScuffle = 60902;
    /// <summary>
    /// Shuffle.
    /// </summary>
    public const int KahnShuffle = 60901;
    /// <summary>
    /// Slam.
    /// </summary>
    public const int KahnSlam = 60878;
    /// <summary>
    /// Slap.
    /// </summary>
    public const int KahnSlap = 60889;
    /// <summary>
    /// Slide-step.
    /// </summary>
    public const int KahnSlideStep = 60852;
    /// <summary>
    /// Slide-tap.
    /// </summary>
    public const int KahnSlideTap = 60853;
    /// <summary>
    /// Snap.
    /// </summary>
    public const int KahnSnap = 60857;
    /// <summary>
    /// Stamp.
    /// </summary>
    public const int KahnStamp = 60867;
    /// <summary>
    /// Stamp-stamp.
    /// </summary>
    public const int KahnStampStamp = 60872;
    /// <summary>
    /// Step.
    /// </summary>
    public const int KahnStep = 60832;
    /// <summary>
    /// Step-stamp.
    /// </summary>
    public const int KahnStepStamp = 60871;
    /// <summary>
    /// Stomp.
    /// </summary>
    public const int KahnStomp = 60874;
    /// <summary>
    /// Stomp-brush.
    /// </summary>
    public const int KahnStompBrush = 60891;
    /// <summary>
    /// Tap.
    /// </summary>
    public const int KahnTap = 60833;
    /// <summary>
    /// Toe.
    /// </summary>
    public const int KahnToe = 60843;
    /// <summary>
    /// Toe-click.
    /// </summary>
    public const int KahnToeClick = 60860;
    /// <summary>
    /// Toe-drop.
    /// </summary>
    public const int KahnToeDrop = 60855;
    /// <summary>
    /// Toe-step.
    /// </summary>
    public const int KahnToeStep = 60869;
    /// <summary>
    /// Toe-tap.
    /// </summary>
    public const int KahnToeTap = 60876;
    /// <summary>
    /// Trench.
    /// </summary>
    public const int KahnTrench = 60847;
    /// <summary>
    /// Wing.
    /// </summary>
    public const int KahnWing = 60905;
    /// <summary>
    /// Wing-change.
    /// </summary>
    public const int KahnWingChange = 60906;
    /// <summary>
    /// Zank.
    /// </summary>
    public const int KahnZank = 60900;
    /// <summary>
    /// Zink.
    /// </summary>
    public const int KahnZink = 60895;
    /// <summary>
    /// Clavichord bebung, 2 finger movements (above).
    /// </summary>
    public const int KeyboardBebung2DotsAbove = 58984;
    /// <summary>
    /// Clavichord bebung, 2 finger movements (below).
    /// </summary>
    public const int KeyboardBebung2DotsBelow = 58985;
    /// <summary>
    /// Clavichord bebung, 3 finger movements (above).
    /// </summary>
    public const int KeyboardBebung3DotsAbove = 58986;
    /// <summary>
    /// Clavichord bebung, 3 finger movements (below).
    /// </summary>
    public const int KeyboardBebung3DotsBelow = 58987;
    /// <summary>
    /// Clavichord bebung, 4 finger movements (above).
    /// </summary>
    public const int KeyboardBebung4DotsAbove = 58988;
    /// <summary>
    /// Clavichord bebung, 4 finger movements (below).
    /// </summary>
    public const int KeyboardBebung4DotsBelow = 58989;
    /// <summary>
    /// Left pedal pictogram.
    /// </summary>
    public const int KeyboardLeftPedalPictogram = 58974;
    /// <summary>
    /// Middle pedal pictogram.
    /// </summary>
    public const int KeyboardMiddlePedalPictogram = 58975;
    /// <summary>
    /// Pedal d.
    /// </summary>
    public const int KeyboardPedalD = 58963;
    /// <summary>
    /// Pedal dot.
    /// </summary>
    public const int KeyboardPedalDot = 58964;
    /// <summary>
    /// Pedal e.
    /// </summary>
    public const int KeyboardPedalE = 58962;
    /// <summary>
    /// Half-pedal mark.
    /// </summary>
    public const int KeyboardPedalHalf = 58966;
    /// <summary>
    /// Half pedal mark 1.
    /// </summary>
    public const int KeyboardPedalHalf2 = 58971;
    /// <summary>
    /// Half pedal mark 2.
    /// </summary>
    public const int KeyboardPedalHalf3 = 58972;
    /// <summary>
    /// Pedal heel 1.
    /// </summary>
    public const int KeyboardPedalHeel1 = 58977;
    /// <summary>
    /// Pedal heel 2.
    /// </summary>
    public const int KeyboardPedalHeel2 = 58978;
    /// <summary>
    /// Pedal heel 3 (Davis).
    /// </summary>
    public const int KeyboardPedalHeel3 = 58979;
    /// <summary>
    /// Pedal heel to toe.
    /// </summary>
    public const int KeyboardPedalHeelToToe = 58996;
    /// <summary>
    /// Pedal heel or toe.
    /// </summary>
    public const int KeyboardPedalHeelToe = 58982;
    /// <summary>
    /// Pedal hook end.
    /// </summary>
    public const int KeyboardPedalHookEnd = 58995;
    /// <summary>
    /// Pedal hook start.
    /// </summary>
    public const int KeyboardPedalHookStart = 58994;
    /// <summary>
    /// Pedal hyphen.
    /// </summary>
    public const int KeyboardPedalHyphen = 58968;
    /// <summary>
    /// Pedal P.
    /// </summary>
    public const int KeyboardPedalP = 58961;
    /// <summary>
    /// Left parenthesis for pedal marking.
    /// </summary>
    public const int KeyboardPedalParensLeft = 58998;
    /// <summary>
    /// Right parenthesis for pedal marking.
    /// </summary>
    public const int KeyboardPedalParensRight = 58999;
    /// <summary>
    /// Pedal mark.
    /// </summary>
    public const int KeyboardPedalPed = 58960;
    /// <summary>
    /// Pedal S.
    /// </summary>
    public const int KeyboardPedalS = 58970;
    /// <summary>
    /// Sostenuto pedal mark.
    /// </summary>
    public const int KeyboardPedalSost = 58969;
    /// <summary>
    /// Pedal toe 1.
    /// </summary>
    public const int KeyboardPedalToe1 = 58980;
    /// <summary>
    /// Pedal toe 2.
    /// </summary>
    public const int KeyboardPedalToe2 = 58981;
    /// <summary>
    /// Pedal toe to heel.
    /// </summary>
    public const int KeyboardPedalToeToHeel = 58997;
    /// <summary>
    /// Pedal up mark.
    /// </summary>
    public const int KeyboardPedalUp = 58965;
    /// <summary>
    /// Pedal up notch.
    /// </summary>
    public const int KeyboardPedalUpNotch = 58967;
    /// <summary>
    /// Pedal up special.
    /// </summary>
    public const int KeyboardPedalUpSpecial = 58973;
    /// <summary>
    /// Play with left hand.
    /// </summary>
    public const int KeyboardPlayWithLH = 58992;
    /// <summary>
    /// Play with left hand (end).
    /// </summary>
    public const int KeyboardPlayWithLHEnd = 58993;
    /// <summary>
    /// Play with right hand.
    /// </summary>
    public const int KeyboardPlayWithRH = 58990;
    /// <summary>
    /// Play with right hand (end).
    /// </summary>
    public const int KeyboardPlayWithRHEnd = 58991;
    /// <summary>
    /// Pluck strings inside piano (Maderna).
    /// </summary>
    public const int KeyboardPluckInside = 58983;
    /// <summary>
    /// Right pedal pictogram.
    /// </summary>
    public const int KeyboardRightPedalPictogram = 58976;
    /// <summary>
    /// Kievan flat.
    /// </summary>
    public const int KievanAccidentalFlat = 60478;
    /// <summary>
    /// Kievan sharp.
    /// </summary>
    public const int KievanAccidentalSharp = 60477;
    /// <summary>
    /// Kievan augmentation dot.
    /// </summary>
    public const int KievanAugmentationDot = 60476;
    /// <summary>
    /// Kievan C clef (tse-fa-ut).
    /// </summary>
    public const int KievanCClef = 60464;
    /// <summary>
    /// Kievan ending symbol.
    /// </summary>
    public const int KievanEndingSymbol = 60465;
    /// <summary>
    /// Kievan eighth note, stem down.
    /// </summary>
    public const int KievanNote8thStemDown = 60474;
    /// <summary>
    /// Kievan eighth note, stem up.
    /// </summary>
    public const int KievanNote8thStemUp = 60473;
    /// <summary>
    /// Kievan beam.
    /// </summary>
    public const int KievanNoteBeam = 60475;
    /// <summary>
    /// Kievan half note (on staff line).
    /// </summary>
    public const int KievanNoteHalfStaffLine = 60469;
    /// <summary>
    /// Kievan half note (in staff space).
    /// </summary>
    public const int KievanNoteHalfStaffSpace = 60470;
    /// <summary>
    /// Kievan quarter note, stem down.
    /// </summary>
    public const int KievanNoteQuarterStemDown = 60472;
    /// <summary>
    /// Kievan quarter note, stem up.
    /// </summary>
    public const int KievanNoteQuarterStemUp = 60471;
    /// <summary>
    /// Kievan reciting note.
    /// </summary>
    public const int KievanNoteReciting = 60466;
    /// <summary>
    /// Kievan whole note.
    /// </summary>
    public const int KievanNoteWhole = 60467;
    /// <summary>
    /// Kievan final whole note.
    /// </summary>
    public const int KievanNoteWholeFinal = 60468;
    /// <summary>
    /// Do hand sign.
    /// </summary>
    public const int KodalyHandDo = 60480;
    /// <summary>
    /// Fa hand sign.
    /// </summary>
    public const int KodalyHandFa = 60483;
    /// <summary>
    /// La hand sign.
    /// </summary>
    public const int KodalyHandLa = 60485;
    /// <summary>
    /// Mi hand sign.
    /// </summary>
    public const int KodalyHandMi = 60482;
    /// <summary>
    /// Re hand sign.
    /// </summary>
    public const int KodalyHandRe = 60481;
    /// <summary>
    /// So hand sign.
    /// </summary>
    public const int KodalyHandSo = 60484;
    /// <summary>
    /// Ti hand sign.
    /// </summary>
    public const int KodalyHandTi = 60486;
    /// <summary>
    /// Left repeat sign within bar.
    /// </summary>
    public const int LeftRepeatSmall = 57420;
    /// <summary>
    /// Leger line.
    /// </summary>
    public const int LegerLine = 57378;
    /// <summary>
    /// Leger line (narrow).
    /// </summary>
    public const int LegerLineNarrow = 57380;
    /// <summary>
    /// Leger line (wide).
    /// </summary>
    public const int LegerLineWide = 57379;
    /// <summary>
    /// Lute tablature end repeat barline.
    /// </summary>
    public const int LuteBarlineEndRepeat = 60324;
    /// <summary>
    /// Lute tablature final barline.
    /// </summary>
    public const int LuteBarlineFinal = 60325;
    /// <summary>
    /// Lute tablature start repeat barline.
    /// </summary>
    public const int LuteBarlineStartRepeat = 60323;
    /// <summary>
    /// 16th note (semiquaver) duration sign.
    /// </summary>
    public const int LuteDuration16th = 60331;
    /// <summary>
    /// 32nd note (demisemiquaver) duration sign.
    /// </summary>
    public const int LuteDuration32nd = 60332;
    /// <summary>
    /// Eighth note (quaver) duration sign.
    /// </summary>
    public const int LuteDuration8th = 60330;
    /// <summary>
    /// Double whole note (breve) duration sign.
    /// </summary>
    public const int LuteDurationDoubleWhole = 60326;
    /// <summary>
    /// Half note (minim) duration sign.
    /// </summary>
    public const int LuteDurationHalf = 60328;
    /// <summary>
    /// Quarter note (crotchet) duration sign.
    /// </summary>
    public const int LuteDurationQuarter = 60329;
    /// <summary>
    /// Whole note (semibreve) duration sign.
    /// </summary>
    public const int LuteDurationWhole = 60327;
    /// <summary>
    /// Right-hand fingering, first finger.
    /// </summary>
    public const int LuteFingeringRHFirst = 60334;
    /// <summary>
    /// Right-hand fingering, second finger.
    /// </summary>
    public const int LuteFingeringRHSecond = 60335;
    /// <summary>
    /// Right-hand fingering, third finger.
    /// </summary>
    public const int LuteFingeringRHThird = 60336;
    /// <summary>
    /// Right-hand fingering, thumb.
    /// </summary>
    public const int LuteFingeringRHThumb = 60333;
    /// <summary>
    /// 10th course (diapason).
    /// </summary>
    public const int LuteFrench10thCourse = 60368;
    /// <summary>
    /// Seventh course (diapason).
    /// </summary>
    public const int LuteFrench7thCourse = 60365;
    /// <summary>
    /// Eighth course (diapason).
    /// </summary>
    public const int LuteFrench8thCourse = 60366;
    /// <summary>
    /// Ninth course (diapason).
    /// </summary>
    public const int LuteFrench9thCourse = 60367;
    /// <summary>
    /// Appoggiatura from above.
    /// </summary>
    public const int LuteFrenchAppoggiaturaAbove = 60373;
    /// <summary>
    /// Appoggiatura from below.
    /// </summary>
    public const int LuteFrenchAppoggiaturaBelow = 60372;
    /// <summary>
    /// Open string (a).
    /// </summary>
    public const int LuteFrenchFretA = 60352;
    /// <summary>
    /// First fret (b).
    /// </summary>
    public const int LuteFrenchFretB = 60353;
    /// <summary>
    /// Second fret (c).
    /// </summary>
    public const int LuteFrenchFretC = 60354;
    /// <summary>
    /// Third fret (d).
    /// </summary>
    public const int LuteFrenchFretD = 60355;
    /// <summary>
    /// Fourth fret (e).
    /// </summary>
    public const int LuteFrenchFretE = 60356;
    /// <summary>
    /// Fifth fret (f).
    /// </summary>
    public const int LuteFrenchFretF = 60357;
    /// <summary>
    /// Sixth fret (g).
    /// </summary>
    public const int LuteFrenchFretG = 60358;
    /// <summary>
    /// Seventh fret (h).
    /// </summary>
    public const int LuteFrenchFretH = 60359;
    /// <summary>
    /// Eighth fret (i).
    /// </summary>
    public const int LuteFrenchFretI = 60360;
    /// <summary>
    /// Ninth fret (k).
    /// </summary>
    public const int LuteFrenchFretK = 60361;
    /// <summary>
    /// 10th fret (l).
    /// </summary>
    public const int LuteFrenchFretL = 60362;
    /// <summary>
    /// 11th fret (m).
    /// </summary>
    public const int LuteFrenchFretM = 60363;
    /// <summary>
    /// 12th fret (n).
    /// </summary>
    public const int LuteFrenchFretN = 60364;
    /// <summary>
    /// Inverted mordent.
    /// </summary>
    public const int LuteFrenchMordentInverted = 60371;
    /// <summary>
    /// Mordent with lower auxiliary.
    /// </summary>
    public const int LuteFrenchMordentLower = 60370;
    /// <summary>
    /// Mordent with upper auxiliary.
    /// </summary>
    public const int LuteFrenchMordentUpper = 60369;
    /// <summary>
    /// 5th course, 1st fret (a).
    /// </summary>
    public const int LuteGermanALower = 60416;
    /// <summary>
    /// 6th course, 1st fret (A).
    /// </summary>
    public const int LuteGermanAUpper = 60439;
    /// <summary>
    /// 4th course, 1st fret (b).
    /// </summary>
    public const int LuteGermanBLower = 60417;
    /// <summary>
    /// 6th course, 2nd fret (B).
    /// </summary>
    public const int LuteGermanBUpper = 60440;
    /// <summary>
    /// 3rd course, 1st fret (c).
    /// </summary>
    public const int LuteGermanCLower = 60418;
    /// <summary>
    /// 6th course, 3rd fret (C).
    /// </summary>
    public const int LuteGermanCUpper = 60441;
    /// <summary>
    /// 2nd course, 1st fret (d).
    /// </summary>
    public const int LuteGermanDLower = 60419;
    /// <summary>
    /// 6th course, 4th fret (D).
    /// </summary>
    public const int LuteGermanDUpper = 60442;
    /// <summary>
    /// 1st course, 1st fret (e).
    /// </summary>
    public const int LuteGermanELower = 60420;
    /// <summary>
    /// 6th course, 5th fret (E).
    /// </summary>
    public const int LuteGermanEUpper = 60443;
    /// <summary>
    /// 5th course, 2nd fret (f).
    /// </summary>
    public const int LuteGermanFLower = 60421;
    /// <summary>
    /// 6th course, 6th fret (F).
    /// </summary>
    public const int LuteGermanFUpper = 60444;
    /// <summary>
    /// 4th course, 2nd fret (g).
    /// </summary>
    public const int LuteGermanGLower = 60422;
    /// <summary>
    /// 6th course, 7th fret (G).
    /// </summary>
    public const int LuteGermanGUpper = 60445;
    /// <summary>
    /// 3rd course, 2nd fret (h).
    /// </summary>
    public const int LuteGermanHLower = 60423;
    /// <summary>
    /// 6th course, 8th fret (H).
    /// </summary>
    public const int LuteGermanHUpper = 60446;
    /// <summary>
    /// 2nd course, 2nd fret (i).
    /// </summary>
    public const int LuteGermanILower = 60424;
    /// <summary>
    /// 6th course, 9th fret (I).
    /// </summary>
    public const int LuteGermanIUpper = 60447;
    /// <summary>
    /// 1st course, 2nd fret (k).
    /// </summary>
    public const int LuteGermanKLower = 60425;
    /// <summary>
    /// 6th course, 10th fret (K).
    /// </summary>
    public const int LuteGermanKUpper = 60448;
    /// <summary>
    /// 5th course, 3rd fret (l).
    /// </summary>
    public const int LuteGermanLLower = 60426;
    /// <summary>
    /// 6th course, 11th fret (L).
    /// </summary>
    public const int LuteGermanLUpper = 60449;
    /// <summary>
    /// 4th course, 3rd fret (m).
    /// </summary>
    public const int LuteGermanMLower = 60427;
    /// <summary>
    /// 6th course, 12th fret (M).
    /// </summary>
    public const int LuteGermanMUpper = 60450;
    /// <summary>
    /// 3rd course, 3rd fret (n).
    /// </summary>
    public const int LuteGermanNLower = 60428;
    /// <summary>
    /// 6th course, 13th fret (N).
    /// </summary>
    public const int LuteGermanNUpper = 60451;
    /// <summary>
    /// 2nd course, 3rd fret (o).
    /// </summary>
    public const int LuteGermanOLower = 60429;
    /// <summary>
    /// 1st course, 3rd fret (p).
    /// </summary>
    public const int LuteGermanPLower = 60430;
    /// <summary>
    /// 5th course, 4th fret (q).
    /// </summary>
    public const int LuteGermanQLower = 60431;
    /// <summary>
    /// 4th course, 4th fret (r).
    /// </summary>
    public const int LuteGermanRLower = 60432;
    /// <summary>
    /// 3rd course, 4th fret (s).
    /// </summary>
    public const int LuteGermanSLower = 60433;
    /// <summary>
    /// 2nd course, 4th fret (t).
    /// </summary>
    public const int LuteGermanTLower = 60434;
    /// <summary>
    /// 1st course, 4th fret (v).
    /// </summary>
    public const int LuteGermanVLower = 60435;
    /// <summary>
    /// 5th course, 5th fret (x).
    /// </summary>
    public const int LuteGermanXLower = 60436;
    /// <summary>
    /// 4th course, 5th fret (y).
    /// </summary>
    public const int LuteGermanYLower = 60437;
    /// <summary>
    /// 3rd course, 5th fret (z).
    /// </summary>
    public const int LuteGermanZLower = 60438;
    /// <summary>
    /// C sol fa ut clef.
    /// </summary>
    public const int LuteItalianClefCSolFaUt = 60401;
    /// <summary>
    /// F fa ut clef.
    /// </summary>
    public const int LuteItalianClefFFaUt = 60400;
    /// <summary>
    /// Open string (0).
    /// </summary>
    public const int LuteItalianFret0 = 60384;
    /// <summary>
    /// First fret (1).
    /// </summary>
    public const int LuteItalianFret1 = 60385;
    /// <summary>
    /// Second fret (2).
    /// </summary>
    public const int LuteItalianFret2 = 60386;
    /// <summary>
    /// Third fret (3).
    /// </summary>
    public const int LuteItalianFret3 = 60387;
    /// <summary>
    /// Fourth fret (4).
    /// </summary>
    public const int LuteItalianFret4 = 60388;
    /// <summary>
    /// Fifth fret (5).
    /// </summary>
    public const int LuteItalianFret5 = 60389;
    /// <summary>
    /// Sixth fret (6).
    /// </summary>
    public const int LuteItalianFret6 = 60390;
    /// <summary>
    /// Seventh fret (7).
    /// </summary>
    public const int LuteItalianFret7 = 60391;
    /// <summary>
    /// Eighth fret (8).
    /// </summary>
    public const int LuteItalianFret8 = 60392;
    /// <summary>
    /// Ninth fret (9).
    /// </summary>
    public const int LuteItalianFret9 = 60393;
    /// <summary>
    /// Hold finger in place.
    /// </summary>
    public const int LuteItalianHoldFinger = 60404;
    /// <summary>
    /// Hold note.
    /// </summary>
    public const int LuteItalianHoldNote = 60403;
    /// <summary>
    /// Release finger.
    /// </summary>
    public const int LuteItalianReleaseFinger = 60405;
    /// <summary>
    /// Fast tempo indication (de Mudarra).
    /// </summary>
    public const int LuteItalianTempoFast = 60394;
    /// <summary>
    /// Neither fast nor slow tempo indication (de Mudarra).
    /// </summary>
    public const int LuteItalianTempoNeitherFastNorSlow = 60396;
    /// <summary>
    /// Slow tempo indication (de Mudarra).
    /// </summary>
    public const int LuteItalianTempoSlow = 60397;
    /// <summary>
    /// Somewhat fast tempo indication (de Narvaez).
    /// </summary>
    public const int LuteItalianTempoSomewhatFast = 60395;
    /// <summary>
    /// Very slow indication (de Narvaez).
    /// </summary>
    public const int LuteItalianTempoVerySlow = 60398;
    /// <summary>
    /// Triple time indication.
    /// </summary>
    public const int LuteItalianTimeTriple = 60399;
    /// <summary>
    /// Single-finger tremolo or mordent.
    /// </summary>
    public const int LuteItalianTremolo = 60402;
    /// <summary>
    /// Vibrato (verre cassé).
    /// </summary>
    public const int LuteItalianVibrato = 60406;
    /// <summary>
    /// Lute tablature staff, 6 courses.
    /// </summary>
    public const int LuteStaff6Lines = 60320;
    /// <summary>
    /// Lute tablature staff, 6 courses (narrow).
    /// </summary>
    public const int LuteStaff6LinesNarrow = 60322;
    /// <summary>
    /// Lute tablature staff, 6 courses (wide).
    /// </summary>
    public const int LuteStaff6LinesWide = 60321;
    /// <summary>
    /// Elision.
    /// </summary>
    public const int LyricsElision = 58705;
    /// <summary>
    /// Narrow elision.
    /// </summary>
    public const int LyricsElisionNarrow = 58704;
    /// <summary>
    /// Wide elision.
    /// </summary>
    public const int LyricsElisionWide = 58706;
    /// <summary>
    /// Baseline hyphen.
    /// </summary>
    public const int LyricsHyphenBaseline = 58707;
    /// <summary>
    /// Non-breaking baseline hyphen.
    /// </summary>
    public const int LyricsHyphenBaselineNonBreaking = 58708;
    /// <summary>
    /// Text repeats.
    /// </summary>
    public const int LyricsTextRepeat = 58709;
    /// <summary>
    /// Flat, hard b (mi).
    /// </summary>
    public const int MedRenFlatHardB = 59873;
    /// <summary>
    /// Flat, soft b (fa).
    /// </summary>
    public const int MedRenFlatSoftB = 59872;
    /// <summary>
    /// Flat with dot.
    /// </summary>
    public const int MedRenFlatWithDot = 59876;
    /// <summary>
    /// G clef (Corpus Monodicum).
    /// </summary>
    public const int MedRenGClefCMN = 59940;
    /// <summary>
    /// Liquescence.
    /// </summary>
    public const int MedRenLiquescenceCMN = 59938;
    /// <summary>
    /// Liquescent ascending (Corpus Monodicum).
    /// </summary>
    public const int MedRenLiquescentAscCMN = 59942;
    /// <summary>
    /// Liquescent descending (Corpus Monodicum).
    /// </summary>
    public const int MedRenLiquescentDescCMN = 59943;
    /// <summary>
    /// Natural.
    /// </summary>
    public const int MedRenNatural = 59874;
    /// <summary>
    /// Natural with interrupted cross.
    /// </summary>
    public const int MedRenNaturalWithCross = 59877;
    /// <summary>
    /// Oriscus (Corpus Monodicum).
    /// </summary>
    public const int MedRenOriscusCMN = 59946;
    /// <summary>
    /// Plica.
    /// </summary>
    public const int MedRenPlicaCMN = 59939;
    /// <summary>
    /// Punctum (Corpus Monodicum).
    /// </summary>
    public const int MedRenPunctumCMN = 59941;
    /// <summary>
    /// Quilisma (Corpus Monodicum).
    /// </summary>
    public const int MedRenQuilismaCMN = 59944;
    /// <summary>
    /// Croix.
    /// </summary>
    public const int MedRenSharpCroix = 59875;
    /// <summary>
    /// Strophicus (Corpus Monodicum).
    /// </summary>
    public const int MedRenStrophicusCMN = 59945;
    /// <summary>
    /// Alteration sign.
    /// </summary>
    public const int MensuralAlterationSign = 59920;
    /// <summary>
    /// Black mensural brevis.
    /// </summary>
    public const int MensuralBlackBrevis = 59730;
    /// <summary>
    /// Black mensural void brevis.
    /// </summary>
    public const int MensuralBlackBrevisVoid = 59734;
    /// <summary>
    /// Black mensural dragma.
    /// </summary>
    public const int MensuralBlackDragma = 59738;
    /// <summary>
    /// Black mensural longa.
    /// </summary>
    public const int MensuralBlackLonga = 59729;
    /// <summary>
    /// Black mensural maxima.
    /// </summary>
    public const int MensuralBlackMaxima = 59728;
    /// <summary>
    /// Black mensural minima.
    /// </summary>
    public const int MensuralBlackMinima = 59732;
    /// <summary>
    /// Black mensural void minima.
    /// </summary>
    public const int MensuralBlackMinimaVoid = 59736;
    /// <summary>
    /// Black mensural semibrevis.
    /// </summary>
    public const int MensuralBlackSemibrevis = 59731;
    /// <summary>
    /// Black mensural semibrevis caudata.
    /// </summary>
    public const int MensuralBlackSemibrevisCaudata = 59737;
    /// <summary>
    /// Black mensural oblique semibrevis.
    /// </summary>
    public const int MensuralBlackSemibrevisOblique = 59739;
    /// <summary>
    /// Black mensural void semibrevis.
    /// </summary>
    public const int MensuralBlackSemibrevisVoid = 59735;
    /// <summary>
    /// Black mensural semiminima.
    /// </summary>
    public const int MensuralBlackSemiminima = 59733;
    /// <summary>
    /// Mensural C clef.
    /// </summary>
    public const int MensuralCclef = 59653;
    /// <summary>
    /// Petrucci C clef, high position.
    /// </summary>
    public const int MensuralCclefPetrucciPosHigh = 59658;
    /// <summary>
    /// Petrucci C clef, highest position.
    /// </summary>
    public const int MensuralCclefPetrucciPosHighest = 59659;
    /// <summary>
    /// Petrucci C clef, low position.
    /// </summary>
    public const int MensuralCclefPetrucciPosLow = 59656;
    /// <summary>
    /// Petrucci C clef, lowest position.
    /// </summary>
    public const int MensuralCclefPetrucciPosLowest = 59655;
    /// <summary>
    /// Petrucci C clef, middle position.
    /// </summary>
    public const int MensuralCclefPetrucciPosMiddle = 59657;
    /// <summary>
    /// Coloration end, round.
    /// </summary>
    public const int MensuralColorationEndRound = 59919;
    /// <summary>
    /// Coloration end, square.
    /// </summary>
    public const int MensuralColorationEndSquare = 59917;
    /// <summary>
    /// Coloration start, round.
    /// </summary>
    public const int MensuralColorationStartRound = 59918;
    /// <summary>
    /// Coloration start, square.
    /// </summary>
    public const int MensuralColorationStartSquare = 59916;
    /// <summary>
    /// Combining stem diagonal.
    /// </summary>
    public const int MensuralCombStemDiagonal = 59712;
    /// <summary>
    /// Combining stem down.
    /// </summary>
    public const int MensuralCombStemDown = 59711;
    /// <summary>
    /// Combining stem with extended flag down.
    /// </summary>
    public const int MensuralCombStemDownFlagExtended = 59720;
    /// <summary>
    /// Combining stem with flared flag down.
    /// </summary>
    public const int MensuralCombStemDownFlagFlared = 59718;
    /// <summary>
    /// Combining stem with fusa flag down.
    /// </summary>
    public const int MensuralCombStemDownFlagFusa = 59724;
    /// <summary>
    /// Combining stem with flag left down.
    /// </summary>
    public const int MensuralCombStemDownFlagLeft = 59716;
    /// <summary>
    /// Combining stem with flag right down.
    /// </summary>
    public const int MensuralCombStemDownFlagRight = 59714;
    /// <summary>
    /// Combining stem with semiminima flag down.
    /// </summary>
    public const int MensuralCombStemDownFlagSemiminima = 59722;
    /// <summary>
    /// Combining stem up.
    /// </summary>
    public const int MensuralCombStemUp = 59710;
    /// <summary>
    /// Combining stem with extended flag up.
    /// </summary>
    public const int MensuralCombStemUpFlagExtended = 59719;
    /// <summary>
    /// Combining stem with flared flag up.
    /// </summary>
    public const int MensuralCombStemUpFlagFlared = 59717;
    /// <summary>
    /// Combining stem with fusa flag up.
    /// </summary>
    public const int MensuralCombStemUpFlagFusa = 59723;
    /// <summary>
    /// Combining stem with flag left up.
    /// </summary>
    public const int MensuralCombStemUpFlagLeft = 59715;
    /// <summary>
    /// Combining stem with flag right up.
    /// </summary>
    public const int MensuralCombStemUpFlagRight = 59713;
    /// <summary>
    /// Combining stem with semiminima flag up.
    /// </summary>
    public const int MensuralCombStemUpFlagSemiminima = 59721;
    /// <summary>
    /// Checkmark custos.
    /// </summary>
    public const int MensuralCustosCheckmark = 59914;
    /// <summary>
    /// Mensural custos down.
    /// </summary>
    public const int MensuralCustosDown = 59907;
    /// <summary>
    /// Turn-like custos.
    /// </summary>
    public const int MensuralCustosTurn = 59915;
    /// <summary>
    /// Mensural custos up.
    /// </summary>
    public const int MensuralCustosUp = 59906;
    /// <summary>
    /// Mensural F clef.
    /// </summary>
    public const int MensuralFclef = 59651;
    /// <summary>
    /// Petrucci F clef.
    /// </summary>
    public const int MensuralFclefPetrucci = 59652;
    /// <summary>
    /// Mensural G clef.
    /// </summary>
    public const int MensuralGclef = 59648;
    /// <summary>
    /// Petrucci G clef.
    /// </summary>
    public const int MensuralGclefPetrucci = 59649;
    /// <summary>
    /// Modus imperfectum, vertical.
    /// </summary>
    public const int MensuralModusImperfectumVert = 59693;
    /// <summary>
    /// Modus perfectum, vertical.
    /// </summary>
    public const int MensuralModusPerfectumVert = 59692;
    /// <summary>
    /// Longa/brevis notehead, black.
    /// </summary>
    public const int MensuralNoteheadLongaBlack = 59700;
    /// <summary>
    /// Longa/brevis notehead, black and void.
    /// </summary>
    public const int MensuralNoteheadLongaBlackVoid = 59702;
    /// <summary>
    /// Longa/brevis notehead, void.
    /// </summary>
    public const int MensuralNoteheadLongaVoid = 59701;
    /// <summary>
    /// Longa/brevis notehead, white.
    /// </summary>
    public const int MensuralNoteheadLongaWhite = 59703;
    /// <summary>
    /// Maxima notehead, black.
    /// </summary>
    public const int MensuralNoteheadMaximaBlack = 59696;
    /// <summary>
    /// Maxima notehead, black and void.
    /// </summary>
    public const int MensuralNoteheadMaximaBlackVoid = 59698;
    /// <summary>
    /// Maxima notehead, void.
    /// </summary>
    public const int MensuralNoteheadMaximaVoid = 59697;
    /// <summary>
    /// Maxima notehead, white.
    /// </summary>
    public const int MensuralNoteheadMaximaWhite = 59699;
    /// <summary>
    /// Minima notehead, white.
    /// </summary>
    public const int MensuralNoteheadMinimaWhite = 59708;
    /// <summary>
    /// Semibrevis notehead, black.
    /// </summary>
    public const int MensuralNoteheadSemibrevisBlack = 59704;
    /// <summary>
    /// Semibrevis notehead, black and void.
    /// </summary>
    public const int MensuralNoteheadSemibrevisBlackVoid = 59706;
    /// <summary>
    /// Semibrevis notehead, black and void (turned).
    /// </summary>
    public const int MensuralNoteheadSemibrevisBlackVoidTurned = 59707;
    /// <summary>
    /// Semibrevis notehead, void.
    /// </summary>
    public const int MensuralNoteheadSemibrevisVoid = 59705;
    /// <summary>
    /// Semiminima/fusa notehead, white.
    /// </summary>
    public const int MensuralNoteheadSemiminimaWhite = 59709;
    /// <summary>
    /// Oblique form, ascending 2nd, black.
    /// </summary>
    public const int MensuralObliqueAsc2ndBlack = 59760;
    /// <summary>
    /// Oblique form, ascending 2nd, black and void.
    /// </summary>
    public const int MensuralObliqueAsc2ndBlackVoid = 59762;
    /// <summary>
    /// Oblique form, ascending 2nd, void.
    /// </summary>
    public const int MensuralObliqueAsc2ndVoid = 59761;
    /// <summary>
    /// Oblique form, ascending 2nd, white.
    /// </summary>
    public const int MensuralObliqueAsc2ndWhite = 59763;
    /// <summary>
    /// Oblique form, ascending 3rd, black.
    /// </summary>
    public const int MensuralObliqueAsc3rdBlack = 59764;
    /// <summary>
    /// Oblique form, ascending 3rd, black and void.
    /// </summary>
    public const int MensuralObliqueAsc3rdBlackVoid = 59766;
    /// <summary>
    /// Oblique form, ascending 3rd, void.
    /// </summary>
    public const int MensuralObliqueAsc3rdVoid = 59765;
    /// <summary>
    /// Oblique form, ascending 3rd, white.
    /// </summary>
    public const int MensuralObliqueAsc3rdWhite = 59767;
    /// <summary>
    /// Oblique form, ascending 4th, black.
    /// </summary>
    public const int MensuralObliqueAsc4thBlack = 59768;
    /// <summary>
    /// Oblique form, ascending 4th, black and void.
    /// </summary>
    public const int MensuralObliqueAsc4thBlackVoid = 59770;
    /// <summary>
    /// Oblique form, ascending 4th, void.
    /// </summary>
    public const int MensuralObliqueAsc4thVoid = 59769;
    /// <summary>
    /// Oblique form, ascending 4th, white.
    /// </summary>
    public const int MensuralObliqueAsc4thWhite = 59771;
    /// <summary>
    /// Oblique form, ascending 5th, black.
    /// </summary>
    public const int MensuralObliqueAsc5thBlack = 59772;
    /// <summary>
    /// Oblique form, ascending 5th, black and void.
    /// </summary>
    public const int MensuralObliqueAsc5thBlackVoid = 59774;
    /// <summary>
    /// Oblique form, ascending 5th, void.
    /// </summary>
    public const int MensuralObliqueAsc5thVoid = 59773;
    /// <summary>
    /// Oblique form, ascending 5th, white.
    /// </summary>
    public const int MensuralObliqueAsc5thWhite = 59775;
    /// <summary>
    /// Oblique form, descending 2nd, black.
    /// </summary>
    public const int MensuralObliqueDesc2ndBlack = 59776;
    /// <summary>
    /// Oblique form, descending 2nd, black and void.
    /// </summary>
    public const int MensuralObliqueDesc2ndBlackVoid = 59778;
    /// <summary>
    /// Oblique form, descending 2nd, void.
    /// </summary>
    public const int MensuralObliqueDesc2ndVoid = 59777;
    /// <summary>
    /// Oblique form, descending 2nd, white.
    /// </summary>
    public const int MensuralObliqueDesc2ndWhite = 59779;
    /// <summary>
    /// Oblique form, descending 3rd, black.
    /// </summary>
    public const int MensuralObliqueDesc3rdBlack = 59780;
    /// <summary>
    /// Oblique form, descending 3rd, black and void.
    /// </summary>
    public const int MensuralObliqueDesc3rdBlackVoid = 59782;
    /// <summary>
    /// Oblique form, descending 3rd, void.
    /// </summary>
    public const int MensuralObliqueDesc3rdVoid = 59781;
    /// <summary>
    /// Oblique form, descending 3rd, white.
    /// </summary>
    public const int MensuralObliqueDesc3rdWhite = 59783;
    /// <summary>
    /// Oblique form, descending 4th, black.
    /// </summary>
    public const int MensuralObliqueDesc4thBlack = 59784;
    /// <summary>
    /// Oblique form, descending 4th, black and void.
    /// </summary>
    public const int MensuralObliqueDesc4thBlackVoid = 59786;
    /// <summary>
    /// Oblique form, descending 4th, void.
    /// </summary>
    public const int MensuralObliqueDesc4thVoid = 59785;
    /// <summary>
    /// Oblique form, descending 4th, white.
    /// </summary>
    public const int MensuralObliqueDesc4thWhite = 59787;
    /// <summary>
    /// Oblique form, descending 5th, black.
    /// </summary>
    public const int MensuralObliqueDesc5thBlack = 59788;
    /// <summary>
    /// Oblique form, descending 5th, black and void.
    /// </summary>
    public const int MensuralObliqueDesc5thBlackVoid = 59790;
    /// <summary>
    /// Oblique form, descending 5th, void.
    /// </summary>
    public const int MensuralObliqueDesc5thVoid = 59789;
    /// <summary>
    /// Oblique form, descending 5th, white.
    /// </summary>
    public const int MensuralObliqueDesc5thWhite = 59791;
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta (9/8).
    /// </summary>
    public const int MensuralProlation1 = 59664;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 4.
    /// </summary>
    public const int MensuralProlation10 = 59673;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 5.
    /// </summary>
    public const int MensuralProlation11 = 59674;
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta (3/4).
    /// </summary>
    public const int MensuralProlation2 = 59665;
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta diminution 1 (3/8).
    /// </summary>
    public const int MensuralProlation3 = 59666;
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta diminution 2 (9/16).
    /// </summary>
    public const int MensuralProlation4 = 59667;
    /// <summary>
    /// Tempus imperfectum cum prolatione perfecta (6/8).
    /// </summary>
    public const int MensuralProlation5 = 59668;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta (2/4).
    /// </summary>
    public const int MensuralProlation6 = 59669;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2).
    /// </summary>
    public const int MensuralProlation7 = 59670;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 2 (6/16).
    /// </summary>
    public const int MensuralProlation8 = 59671;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2).
    /// </summary>
    public const int MensuralProlation9 = 59672;
    /// <summary>
    /// Combining dot.
    /// </summary>
    public const int MensuralProlationCombiningDot = 59680;
    /// <summary>
    /// Combining void dot.
    /// </summary>
    public const int MensuralProlationCombiningDotVoid = 59684;
    /// <summary>
    /// Combining vertical stroke.
    /// </summary>
    public const int MensuralProlationCombiningStroke = 59685;
    /// <summary>
    /// Combining three dots horizontal.
    /// </summary>
    public const int MensuralProlationCombiningThreeDots = 59682;
    /// <summary>
    /// Combining three dots triangular.
    /// </summary>
    public const int MensuralProlationCombiningThreeDotsTri = 59683;
    /// <summary>
    /// Combining two dots.
    /// </summary>
    public const int MensuralProlationCombiningTwoDots = 59681;
    /// <summary>
    /// Mensural proportion 1.
    /// </summary>
    public const int MensuralProportion1 = 59686;
    /// <summary>
    /// Mensural proportion 2.
    /// </summary>
    public const int MensuralProportion2 = 59687;
    /// <summary>
    /// Mensural proportion 3.
    /// </summary>
    public const int MensuralProportion3 = 59688;
    /// <summary>
    /// Mensural proportion 4.
    /// </summary>
    public const int MensuralProportion4 = 59689;
    /// <summary>
    /// Mensural proportion 5.
    /// </summary>
    public const int MensuralProportion5 = 61072;
    /// <summary>
    /// Mensural proportion 6.
    /// </summary>
    public const int MensuralProportion6 = 61073;
    /// <summary>
    /// Mensural proportion 7.
    /// </summary>
    public const int MensuralProportion7 = 61074;
    /// <summary>
    /// Mensural proportion 8.
    /// </summary>
    public const int MensuralProportion8 = 61075;
    /// <summary>
    /// Mensural proportion 9.
    /// </summary>
    public const int MensuralProportion9 = 61076;
    /// <summary>
    /// Mensural proportion major.
    /// </summary>
    public const int MensuralProportionMajor = 59691;
    /// <summary>
    /// Mensural proportion minor.
    /// </summary>
    public const int MensuralProportionMinor = 59690;
    /// <summary>
    /// Proportio dupla 1.
    /// </summary>
    public const int MensuralProportionProportioDupla1 = 59676;
    /// <summary>
    /// Proportio dupla 2.
    /// </summary>
    public const int MensuralProportionProportioDupla2 = 59677;
    /// <summary>
    /// Proportio quadrupla.
    /// </summary>
    public const int MensuralProportionProportioQuadrupla = 59679;
    /// <summary>
    /// Proportio tripla.
    /// </summary>
    public const int MensuralProportionProportioTripla = 59678;
    /// <summary>
    /// Tempus perfectum.
    /// </summary>
    public const int MensuralProportionTempusPerfectum = 59675;
    /// <summary>
    /// Brevis rest.
    /// </summary>
    public const int MensuralRestBrevis = 59891;
    /// <summary>
    /// Fusa rest.
    /// </summary>
    public const int MensuralRestFusa = 59895;
    /// <summary>
    /// Longa imperfecta rest.
    /// </summary>
    public const int MensuralRestLongaImperfecta = 59890;
    /// <summary>
    /// Longa perfecta rest.
    /// </summary>
    public const int MensuralRestLongaPerfecta = 59889;
    /// <summary>
    /// Maxima rest.
    /// </summary>
    public const int MensuralRestMaxima = 59888;
    /// <summary>
    /// Minima rest.
    /// </summary>
    public const int MensuralRestMinima = 59893;
    /// <summary>
    /// Semibrevis rest.
    /// </summary>
    public const int MensuralRestSemibrevis = 59892;
    /// <summary>
    /// Semifusa rest.
    /// </summary>
    public const int MensuralRestSemifusa = 59896;
    /// <summary>
    /// Semiminima rest.
    /// </summary>
    public const int MensuralRestSemiminima = 59894;
    /// <summary>
    /// Signum congruentiae down.
    /// </summary>
    public const int MensuralSignumDown = 59905;
    /// <summary>
    /// Signum congruentiae up.
    /// </summary>
    public const int MensuralSignumUp = 59904;
    /// <summary>
    /// Tempus imperfectum, horizontal.
    /// </summary>
    public const int MensuralTempusImperfectumHoriz = 59695;
    /// <summary>
    /// Tempus perfectum, horizontal.
    /// </summary>
    public const int MensuralTempusPerfectumHoriz = 59694;
    /// <summary>
    /// White mensural brevis.
    /// </summary>
    public const int MensuralWhiteBrevis = 59742;
    /// <summary>
    /// White mensural fusa.
    /// </summary>
    public const int MensuralWhiteFusa = 59745;
    /// <summary>
    /// White mensural longa.
    /// </summary>
    public const int MensuralWhiteLonga = 59741;
    /// <summary>
    /// White mensural maxima.
    /// </summary>
    public const int MensuralWhiteMaxima = 59740;
    /// <summary>
    /// White mensural minima.
    /// </summary>
    public const int MensuralWhiteMinima = 59743;
    /// <summary>
    /// White mensural semibrevis.
    /// </summary>
    public const int MensuralWhiteSemibrevis = 59746;
    /// <summary>
    /// White mensural semiminima.
    /// </summary>
    public const int MensuralWhiteSemiminima = 59744;
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const int MetAugmentationDot = 60599;
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const int MetNote1024thDown = 60598;
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const int MetNote1024thUp = 60597;
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem down.
    /// </summary>
    public const int MetNote128thDown = 60592;
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    public const int MetNote128thUp = 60591;
    /// <summary>
    /// 16th note (semiquaver) stem down.
    /// </summary>
    public const int MetNote16thDown = 60586;
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    public const int MetNote16thUp = 60585;
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem down.
    /// </summary>
    public const int MetNote256thDown = 60594;
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem up.
    /// </summary>
    public const int MetNote256thUp = 60593;
    /// <summary>
    /// 32nd note (demisemiquaver) stem down.
    /// </summary>
    public const int MetNote32ndDown = 60588;
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    public const int MetNote32ndUp = 60587;
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const int MetNote512thDown = 60596;
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const int MetNote512thUp = 60595;
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem down.
    /// </summary>
    public const int MetNote64thDown = 60590;
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    public const int MetNote64thUp = 60589;
    /// <summary>
    /// Eighth note (quaver) stem down.
    /// </summary>
    public const int MetNote8thDown = 60584;
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    public const int MetNote8thUp = 60583;
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    public const int MetNoteDoubleWhole = 60576;
    /// <summary>
    /// Double whole note (square).
    /// </summary>
    public const int MetNoteDoubleWholeSquare = 60577;
    /// <summary>
    /// Half note (minim) stem down.
    /// </summary>
    public const int MetNoteHalfDown = 60580;
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    public const int MetNoteHalfUp = 60579;
    /// <summary>
    /// Quarter note (crotchet) stem down.
    /// </summary>
    public const int MetNoteQuarterDown = 60582;
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    public const int MetNoteQuarterUp = 60581;
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    public const int MetNoteWhole = 60578;
    /// <summary>
    /// Left-pointing arrow for metric modulation.
    /// </summary>
    public const int MetricModulationArrowLeft = 60515;
    /// <summary>
    /// Right-pointing arrow for metric modulation.
    /// </summary>
    public const int MetricModulationArrowRight = 60516;
    /// <summary>
    /// Do not copy.
    /// </summary>
    public const int MiscDoNotCopy = 60513;
    /// <summary>
    /// Do not photocopy.
    /// </summary>
    public const int MiscDoNotPhotocopy = 60512;
    /// <summary>
    /// Eyeglasses.
    /// </summary>
    public const int MiscEyeglasses = 60514;
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const int Note1024thDown = 57830;
    /// <summary>
    /// 1024th note (semihemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const int Note1024thUp = 57829;
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem down.
    /// </summary>
    public const int Note128thDown = 57824;
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    public const int Note128thUp = 57823;
    /// <summary>
    /// 16th note (semiquaver) stem down.
    /// </summary>
    public const int Note16thDown = 57818;
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    public const int Note16thUp = 57817;
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem down.
    /// </summary>
    public const int Note256thDown = 57826;
    /// <summary>
    /// 256th note (demisemihemidemisemiquaver) stem up.
    /// </summary>
    public const int Note256thUp = 57825;
    /// <summary>
    /// 32nd note (demisemiquaver) stem down.
    /// </summary>
    public const int Note32ndDown = 57820;
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    public const int Note32ndUp = 57819;
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem down.
    /// </summary>
    public const int Note512thDown = 57828;
    /// <summary>
    /// 512th note (hemidemisemihemidemisemiquaver) stem up.
    /// </summary>
    public const int Note512thUp = 57827;
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem down.
    /// </summary>
    public const int Note64thDown = 57822;
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    public const int Note64thUp = 57821;
    /// <summary>
    /// Eighth note (quaver) stem down.
    /// </summary>
    public const int Note8thDown = 57816;
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    public const int Note8thUp = 57815;
    /// <summary>
    /// A (black note).
    /// </summary>
    public const int NoteABlack = 57751;
    /// <summary>
    /// A flat (black note).
    /// </summary>
    public const int NoteAFlatBlack = 57750;
    /// <summary>
    /// A flat (half note).
    /// </summary>
    public const int NoteAFlatHalf = 57727;
    /// <summary>
    /// A flat (whole note).
    /// </summary>
    public const int NoteAFlatWhole = 57704;
    /// <summary>
    /// A (half note).
    /// </summary>
    public const int NoteAHalf = 57728;
    /// <summary>
    /// A sharp (black note).
    /// </summary>
    public const int NoteASharpBlack = 57752;
    /// <summary>
    /// A sharp (half note).
    /// </summary>
    public const int NoteASharpHalf = 57729;
    /// <summary>
    /// A sharp (whole note).
    /// </summary>
    public const int NoteASharpWhole = 57706;
    /// <summary>
    /// A (whole note).
    /// </summary>
    public const int NoteAWhole = 57705;
    /// <summary>
    /// B (black note).
    /// </summary>
    public const int NoteBBlack = 57754;
    /// <summary>
    /// B flat (black note).
    /// </summary>
    public const int NoteBFlatBlack = 57753;
    /// <summary>
    /// B flat (half note).
    /// </summary>
    public const int NoteBFlatHalf = 57730;
    /// <summary>
    /// B flat (whole note).
    /// </summary>
    public const int NoteBFlatWhole = 57707;
    /// <summary>
    /// B (half note).
    /// </summary>
    public const int NoteBHalf = 57731;
    /// <summary>
    /// B sharp (black note).
    /// </summary>
    public const int NoteBSharpBlack = 57755;
    /// <summary>
    /// B sharp (half note).
    /// </summary>
    public const int NoteBSharpHalf = 57732;
    /// <summary>
    /// B sharp (whole note).
    /// </summary>
    public const int NoteBSharpWhole = 57709;
    /// <summary>
    /// B (whole note).
    /// </summary>
    public const int NoteBWhole = 57708;
    /// <summary>
    /// C (black note).
    /// </summary>
    public const int NoteCBlack = 57757;
    /// <summary>
    /// C flat (black note).
    /// </summary>
    public const int NoteCFlatBlack = 57756;
    /// <summary>
    /// C flat (half note).
    /// </summary>
    public const int NoteCFlatHalf = 57733;
    /// <summary>
    /// C flat (whole note).
    /// </summary>
    public const int NoteCFlatWhole = 57710;
    /// <summary>
    /// C (half note).
    /// </summary>
    public const int NoteCHalf = 57734;
    /// <summary>
    /// C sharp (black note).
    /// </summary>
    public const int NoteCSharpBlack = 57758;
    /// <summary>
    /// C sharp (half note).
    /// </summary>
    public const int NoteCSharpHalf = 57735;
    /// <summary>
    /// C sharp (whole note).
    /// </summary>
    public const int NoteCSharpWhole = 57712;
    /// <summary>
    /// C (whole note).
    /// </summary>
    public const int NoteCWhole = 57711;
    /// <summary>
    /// D (black note).
    /// </summary>
    public const int NoteDBlack = 57760;
    /// <summary>
    /// D flat (black note).
    /// </summary>
    public const int NoteDFlatBlack = 57759;
    /// <summary>
    /// D flat (half note).
    /// </summary>
    public const int NoteDFlatHalf = 57736;
    /// <summary>
    /// D flat (whole note).
    /// </summary>
    public const int NoteDFlatWhole = 57713;
    /// <summary>
    /// D (half note).
    /// </summary>
    public const int NoteDHalf = 57737;
    /// <summary>
    /// D sharp (black note).
    /// </summary>
    public const int NoteDSharpBlack = 57761;
    /// <summary>
    /// D sharp (half note).
    /// </summary>
    public const int NoteDSharpHalf = 57738;
    /// <summary>
    /// D sharp (whole note).
    /// </summary>
    public const int NoteDSharpWhole = 57715;
    /// <summary>
    /// D (whole note).
    /// </summary>
    public const int NoteDWhole = 57714;
    /// <summary>
    /// Di (black note).
    /// </summary>
    public const int NoteDiBlack = 61170;
    /// <summary>
    /// Di (half note).
    /// </summary>
    public const int NoteDiHalf = 61161;
    /// <summary>
    /// Di (whole note).
    /// </summary>
    public const int NoteDiWhole = 61152;
    /// <summary>
    /// Do (black note).
    /// </summary>
    public const int NoteDoBlack = 57696;
    /// <summary>
    /// Do (half note).
    /// </summary>
    public const int NoteDoHalf = 57688;
    /// <summary>
    /// Do (whole note).
    /// </summary>
    public const int NoteDoWhole = 57680;
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    public const int NoteDoubleWhole = 57808;
    /// <summary>
    /// Double whole note (square).
    /// </summary>
    public const int NoteDoubleWholeSquare = 57809;
    /// <summary>
    /// E (black note).
    /// </summary>
    public const int NoteEBlack = 57763;
    /// <summary>
    /// E flat (black note).
    /// </summary>
    public const int NoteEFlatBlack = 57762;
    /// <summary>
    /// E flat (half note).
    /// </summary>
    public const int NoteEFlatHalf = 57739;
    /// <summary>
    /// E flat (whole note).
    /// </summary>
    public const int NoteEFlatWhole = 57716;
    /// <summary>
    /// E (half note).
    /// </summary>
    public const int NoteEHalf = 57740;
    /// <summary>
    /// E sharp (black note).
    /// </summary>
    public const int NoteESharpBlack = 57764;
    /// <summary>
    /// E sharp (half note).
    /// </summary>
    public const int NoteESharpHalf = 57741;
    /// <summary>
    /// E sharp (whole note).
    /// </summary>
    public const int NoteESharpWhole = 57718;
    /// <summary>
    /// E (whole note).
    /// </summary>
    public const int NoteEWhole = 57717;
    /// <summary>
    /// Empty black note.
    /// </summary>
    public const int NoteEmptyBlack = 57775;
    /// <summary>
    /// Empty half note.
    /// </summary>
    public const int NoteEmptyHalf = 57774;
    /// <summary>
    /// Empty whole note.
    /// </summary>
    public const int NoteEmptyWhole = 57773;
    /// <summary>
    /// F (black note).
    /// </summary>
    public const int NoteFBlack = 57766;
    /// <summary>
    /// F flat (black note).
    /// </summary>
    public const int NoteFFlatBlack = 57765;
    /// <summary>
    /// F flat (half note).
    /// </summary>
    public const int NoteFFlatHalf = 57742;
    /// <summary>
    /// F flat (whole note).
    /// </summary>
    public const int NoteFFlatWhole = 57719;
    /// <summary>
    /// F (half note).
    /// </summary>
    public const int NoteFHalf = 57743;
    /// <summary>
    /// F sharp (black note).
    /// </summary>
    public const int NoteFSharpBlack = 57767;
    /// <summary>
    /// F sharp (half note).
    /// </summary>
    public const int NoteFSharpHalf = 57744;
    /// <summary>
    /// F sharp (whole note).
    /// </summary>
    public const int NoteFSharpWhole = 57721;
    /// <summary>
    /// F (whole note).
    /// </summary>
    public const int NoteFWhole = 57720;
    /// <summary>
    /// Fa (black note).
    /// </summary>
    public const int NoteFaBlack = 57699;
    /// <summary>
    /// Fa (half note).
    /// </summary>
    public const int NoteFaHalf = 57691;
    /// <summary>
    /// Fa (whole note).
    /// </summary>
    public const int NoteFaWhole = 57683;
    /// <summary>
    /// Fi (black note).
    /// </summary>
    public const int NoteFiBlack = 61174;
    /// <summary>
    /// Fi (half note).
    /// </summary>
    public const int NoteFiHalf = 61165;
    /// <summary>
    /// Fi (whole note).
    /// </summary>
    public const int NoteFiWhole = 61156;
    /// <summary>
    /// G (black note).
    /// </summary>
    public const int NoteGBlack = 57769;
    /// <summary>
    /// G flat (black note).
    /// </summary>
    public const int NoteGFlatBlack = 57768;
    /// <summary>
    /// G flat (half note).
    /// </summary>
    public const int NoteGFlatHalf = 57745;
    /// <summary>
    /// G flat (whole note).
    /// </summary>
    public const int NoteGFlatWhole = 57722;
    /// <summary>
    /// G (half note).
    /// </summary>
    public const int NoteGHalf = 57746;
    /// <summary>
    /// G sharp (black note).
    /// </summary>
    public const int NoteGSharpBlack = 57770;
    /// <summary>
    /// G sharp (half note).
    /// </summary>
    public const int NoteGSharpHalf = 57747;
    /// <summary>
    /// G sharp (whole note).
    /// </summary>
    public const int NoteGSharpWhole = 57724;
    /// <summary>
    /// G (whole note).
    /// </summary>
    public const int NoteGWhole = 57723;
    /// <summary>
    /// H (black note).
    /// </summary>
    public const int NoteHBlack = 57771;
    /// <summary>
    /// H (half note).
    /// </summary>
    public const int NoteHHalf = 57748;
    /// <summary>
    /// H sharp (black note).
    /// </summary>
    public const int NoteHSharpBlack = 57772;
    /// <summary>
    /// H sharp (half note).
    /// </summary>
    public const int NoteHSharpHalf = 57749;
    /// <summary>
    /// H sharp (whole note).
    /// </summary>
    public const int NoteHSharpWhole = 57726;
    /// <summary>
    /// H (whole note).
    /// </summary>
    public const int NoteHWhole = 57725;
    /// <summary>
    /// Half note (minim) stem down.
    /// </summary>
    public const int NoteHalfDown = 57812;
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    public const int NoteHalfUp = 57811;
    /// <summary>
    /// La (black note).
    /// </summary>
    public const int NoteLaBlack = 57701;
    /// <summary>
    /// La (half note).
    /// </summary>
    public const int NoteLaHalf = 57693;
    /// <summary>
    /// La (whole note).
    /// </summary>
    public const int NoteLaWhole = 57685;
    /// <summary>
    /// Le (black note).
    /// </summary>
    public const int NoteLeBlack = 61177;
    /// <summary>
    /// Le (half note).
    /// </summary>
    public const int NoteLeHalf = 61168;
    /// <summary>
    /// Le (whole note).
    /// </summary>
    public const int NoteLeWhole = 61159;
    /// <summary>
    /// Li (black note).
    /// </summary>
    public const int NoteLiBlack = 61176;
    /// <summary>
    /// Li (half note).
    /// </summary>
    public const int NoteLiHalf = 61167;
    /// <summary>
    /// Li (whole note).
    /// </summary>
    public const int NoteLiWhole = 61158;
    /// <summary>
    /// Me (black note).
    /// </summary>
    public const int NoteMeBlack = 61173;
    /// <summary>
    /// Me (half note).
    /// </summary>
    public const int NoteMeHalf = 61164;
    /// <summary>
    /// Me (whole note).
    /// </summary>
    public const int NoteMeWhole = 61155;
    /// <summary>
    /// Mi (black note).
    /// </summary>
    public const int NoteMiBlack = 57698;
    /// <summary>
    /// Mi (half note).
    /// </summary>
    public const int NoteMiHalf = 57690;
    /// <summary>
    /// Mi (whole note).
    /// </summary>
    public const int NoteMiWhole = 57682;
    /// <summary>
    /// Quarter note (crotchet) stem down.
    /// </summary>
    public const int NoteQuarterDown = 57814;
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    public const int NoteQuarterUp = 57813;
    /// <summary>
    /// Ra (black note).
    /// </summary>
    public const int NoteRaBlack = 61172;
    /// <summary>
    /// Ra (half note).
    /// </summary>
    public const int NoteRaHalf = 61163;
    /// <summary>
    /// Ra (whole note).
    /// </summary>
    public const int NoteRaWhole = 61154;
    /// <summary>
    /// Re (black note).
    /// </summary>
    public const int NoteReBlack = 57697;
    /// <summary>
    /// Re (half note).
    /// </summary>
    public const int NoteReHalf = 57689;
    /// <summary>
    /// Re (whole note).
    /// </summary>
    public const int NoteReWhole = 57681;
    /// <summary>
    /// Ri (black note).
    /// </summary>
    public const int NoteRiBlack = 61171;
    /// <summary>
    /// Ri (half note).
    /// </summary>
    public const int NoteRiHalf = 61162;
    /// <summary>
    /// Ri (whole note).
    /// </summary>
    public const int NoteRiWhole = 61153;
    /// <summary>
    /// Se (black note).
    /// </summary>
    public const int NoteSeBlack = 61175;
    /// <summary>
    /// Se (half note).
    /// </summary>
    public const int NoteSeHalf = 61166;
    /// <summary>
    /// Se (whole note).
    /// </summary>
    public const int NoteSeWhole = 61157;
    /// <summary>
    /// Arrowhead left black (Funk 7-shape re).
    /// </summary>
    public const int NoteShapeArrowheadLeftBlack = 57801;
    /// <summary>
    /// Arrowhead left double whole (Funk 7-shape re).
    /// </summary>
    public const int NoteShapeArrowheadLeftDoubleWhole = 60636;
    /// <summary>
    /// Arrowhead left white (Funk 7-shape re).
    /// </summary>
    public const int NoteShapeArrowheadLeftWhite = 57800;
    /// <summary>
    /// Diamond black (4-shape mi; 7-shape mi).
    /// </summary>
    public const int NoteShapeDiamondBlack = 57785;
    /// <summary>
    /// Diamond double whole (4-shape mi; 7-shape mi).
    /// </summary>
    public const int NoteShapeDiamondDoubleWhole = 60628;
    /// <summary>
    /// Diamond white (4-shape mi; 7-shape mi).
    /// </summary>
    public const int NoteShapeDiamondWhite = 57784;
    /// <summary>
    /// Isosceles triangle black (Walker 7-shape ti).
    /// </summary>
    public const int NoteShapeIsoscelesTriangleBlack = 57797;
    /// <summary>
    /// Isosceles triangle double whole (Walker 7-shape ti).
    /// </summary>
    public const int NoteShapeIsoscelesTriangleDoubleWhole = 60634;
    /// <summary>
    /// Isosceles triangle white (Walker 7-shape ti).
    /// </summary>
    public const int NoteShapeIsoscelesTriangleWhite = 57796;
    /// <summary>
    /// Inverted keystone black (Walker 7-shape do).
    /// </summary>
    public const int NoteShapeKeystoneBlack = 57793;
    /// <summary>
    /// Inverted keystone double whole (Walker 7-shape do).
    /// </summary>
    public const int NoteShapeKeystoneDoubleWhole = 60632;
    /// <summary>
    /// Inverted keystone white (Walker 7-shape do).
    /// </summary>
    public const int NoteShapeKeystoneWhite = 57792;
    /// <summary>
    /// Moon black (Aikin 7-shape re).
    /// </summary>
    public const int NoteShapeMoonBlack = 57789;
    /// <summary>
    /// Moon double whole (Aikin 7-shape re).
    /// </summary>
    public const int NoteShapeMoonDoubleWhole = 60630;
    /// <summary>
    /// Moon left black (Funk 7-shape do).
    /// </summary>
    public const int NoteShapeMoonLeftBlack = 57799;
    /// <summary>
    /// Moon left double whole (Funk 7-shape do).
    /// </summary>
    public const int NoteShapeMoonLeftDoubleWhole = 60635;
    /// <summary>
    /// Moon left white (Funk 7-shape do).
    /// </summary>
    public const int NoteShapeMoonLeftWhite = 57798;
    /// <summary>
    /// Moon white (Aikin 7-shape re).
    /// </summary>
    public const int NoteShapeMoonWhite = 57788;
    /// <summary>
    /// Quarter moon black (Walker 7-shape re).
    /// </summary>
    public const int NoteShapeQuarterMoonBlack = 57795;
    /// <summary>
    /// Quarter moon double whole (Walker 7-shape re).
    /// </summary>
    public const int NoteShapeQuarterMoonDoubleWhole = 60633;
    /// <summary>
    /// Quarter moon white (Walker 7-shape re).
    /// </summary>
    public const int NoteShapeQuarterMoonWhite = 57794;
    /// <summary>
    /// Round black (4-shape sol; 7-shape so).
    /// </summary>
    public const int NoteShapeRoundBlack = 57777;
    /// <summary>
    /// Round double whole (4-shape sol; 7-shape so).
    /// </summary>
    public const int NoteShapeRoundDoubleWhole = 60624;
    /// <summary>
    /// Round white (4-shape sol; 7-shape so).
    /// </summary>
    public const int NoteShapeRoundWhite = 57776;
    /// <summary>
    /// Square black (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const int NoteShapeSquareBlack = 57779;
    /// <summary>
    /// Square double whole (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const int NoteShapeSquareDoubleWhole = 60625;
    /// <summary>
    /// Square white (4-shape la; Aikin 7-shape la).
    /// </summary>
    public const int NoteShapeSquareWhite = 57778;
    /// <summary>
    /// Triangle left black (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const int NoteShapeTriangleLeftBlack = 57783;
    /// <summary>
    /// Triangle left double whole (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const int NoteShapeTriangleLeftDoubleWhole = 60627;
    /// <summary>
    /// Triangle left white (stem up; 4-shape fa; 7-shape fa).
    /// </summary>
    public const int NoteShapeTriangleLeftWhite = 57782;
    /// <summary>
    /// Triangle right black (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const int NoteShapeTriangleRightBlack = 57781;
    /// <summary>
    /// Triangle right double whole (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const int NoteShapeTriangleRightDoubleWhole = 60626;
    /// <summary>
    /// Triangle right white (stem down; 4-shape fa; 7-shape fa).
    /// </summary>
    public const int NoteShapeTriangleRightWhite = 57780;
    /// <summary>
    /// Triangle-round black (Aikin 7-shape ti).
    /// </summary>
    public const int NoteShapeTriangleRoundBlack = 57791;
    /// <summary>
    /// Triangle-round white (Aikin 7-shape ti).
    /// </summary>
    public const int NoteShapeTriangleRoundDoubleWhole = 60631;
    /// <summary>
    /// Triangle-round left black (Funk 7-shape ti).
    /// </summary>
    public const int NoteShapeTriangleRoundLeftBlack = 57803;
    /// <summary>
    /// Triangle-round left double whole (Funk 7-shape ti).
    /// </summary>
    public const int NoteShapeTriangleRoundLeftDoubleWhole = 60637;
    /// <summary>
    /// Triangle-round left white (Funk 7-shape ti).
    /// </summary>
    public const int NoteShapeTriangleRoundLeftWhite = 57802;
    /// <summary>
    /// Triangle-round white (Aikin 7-shape ti).
    /// </summary>
    public const int NoteShapeTriangleRoundWhite = 57790;
    /// <summary>
    /// Triangle up black (Aikin 7-shape do).
    /// </summary>
    public const int NoteShapeTriangleUpBlack = 57787;
    /// <summary>
    /// Triangle up double whole (Aikin 7-shape do).
    /// </summary>
    public const int NoteShapeTriangleUpDoubleWhole = 60629;
    /// <summary>
    /// Triangle up white (Aikin 7-shape do).
    /// </summary>
    public const int NoteShapeTriangleUpWhite = 57786;
    /// <summary>
    /// Si (black note).
    /// </summary>
    public const int NoteSiBlack = 57703;
    /// <summary>
    /// Si (half note).
    /// </summary>
    public const int NoteSiHalf = 57695;
    /// <summary>
    /// Si (whole note).
    /// </summary>
    public const int NoteSiWhole = 57687;
    /// <summary>
    /// So (black note).
    /// </summary>
    public const int NoteSoBlack = 57700;
    /// <summary>
    /// So (half note).
    /// </summary>
    public const int NoteSoHalf = 57692;
    /// <summary>
    /// So (whole note).
    /// </summary>
    public const int NoteSoWhole = 57684;
    /// <summary>
    /// Te (black note).
    /// </summary>
    public const int NoteTeBlack = 61178;
    /// <summary>
    /// Te (half note).
    /// </summary>
    public const int NoteTeHalf = 61169;
    /// <summary>
    /// Te (whole note).
    /// </summary>
    public const int NoteTeWhole = 61160;
    /// <summary>
    /// Ti (black note).
    /// </summary>
    public const int NoteTiBlack = 57702;
    /// <summary>
    /// Ti (half note).
    /// </summary>
    public const int NoteTiHalf = 57694;
    /// <summary>
    /// Ti (whole note).
    /// </summary>
    public const int NoteTiWhole = 57686;
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    public const int NoteWhole = 57810;
    /// <summary>
    /// Black notehead.
    /// </summary>
    public const int NoteheadBlack = 57508;
    /// <summary>
    /// Circle slash notehead.
    /// </summary>
    public const int NoteheadCircleSlash = 57591;
    /// <summary>
    /// Circle X notehead.
    /// </summary>
    public const int NoteheadCircleX = 57523;
    /// <summary>
    /// Circle X double whole.
    /// </summary>
    public const int NoteheadCircleXDoubleWhole = 57520;
    /// <summary>
    /// Circle X half.
    /// </summary>
    public const int NoteheadCircleXHalf = 57522;
    /// <summary>
    /// Circle X whole.
    /// </summary>
    public const int NoteheadCircleXWhole = 57521;
    /// <summary>
    /// Circled black notehead.
    /// </summary>
    public const int NoteheadCircledBlack = 57572;
    /// <summary>
    /// Black notehead in large circle.
    /// </summary>
    public const int NoteheadCircledBlackLarge = 57576;
    /// <summary>
    /// Circled double whole notehead.
    /// </summary>
    public const int NoteheadCircledDoubleWhole = 57575;
    /// <summary>
    /// Double whole notehead in large circle.
    /// </summary>
    public const int NoteheadCircledDoubleWholeLarge = 57579;
    /// <summary>
    /// Circled half notehead.
    /// </summary>
    public const int NoteheadCircledHalf = 57573;
    /// <summary>
    /// Half notehead in large circle.
    /// </summary>
    public const int NoteheadCircledHalfLarge = 57577;
    /// <summary>
    /// Circled whole notehead.
    /// </summary>
    public const int NoteheadCircledWhole = 57574;
    /// <summary>
    /// Whole notehead in large circle.
    /// </summary>
    public const int NoteheadCircledWholeLarge = 57578;
    /// <summary>
    /// Cross notehead in large circle.
    /// </summary>
    public const int NoteheadCircledXLarge = 57580;
    /// <summary>
    /// Double whole note cluster, 2nd.
    /// </summary>
    public const int NoteheadClusterDoubleWhole2nd = 57636;
    /// <summary>
    /// Double whole note cluster, 3rd.
    /// </summary>
    public const int NoteheadClusterDoubleWhole3rd = 57640;
    /// <summary>
    /// Combining double whole note cluster, bottom.
    /// </summary>
    public const int NoteheadClusterDoubleWholeBottom = 57646;
    /// <summary>
    /// Combining double whole note cluster, middle.
    /// </summary>
    public const int NoteheadClusterDoubleWholeMiddle = 57645;
    /// <summary>
    /// Combining double whole note cluster, top.
    /// </summary>
    public const int NoteheadClusterDoubleWholeTop = 57644;
    /// <summary>
    /// Half note cluster, 2nd.
    /// </summary>
    public const int NoteheadClusterHalf2nd = 57638;
    /// <summary>
    /// Half note cluster, 3rd.
    /// </summary>
    public const int NoteheadClusterHalf3rd = 57642;
    /// <summary>
    /// Combining half note cluster, bottom.
    /// </summary>
    public const int NoteheadClusterHalfBottom = 57652;
    /// <summary>
    /// Combining half note cluster, middle.
    /// </summary>
    public const int NoteheadClusterHalfMiddle = 57651;
    /// <summary>
    /// Combining half note cluster, top.
    /// </summary>
    public const int NoteheadClusterHalfTop = 57650;
    /// <summary>
    /// Quarter note cluster, 2nd.
    /// </summary>
    public const int NoteheadClusterQuarter2nd = 57639;
    /// <summary>
    /// Quarter note cluster, 3rd.
    /// </summary>
    public const int NoteheadClusterQuarter3rd = 57643;
    /// <summary>
    /// Combining quarter note cluster, bottom.
    /// </summary>
    public const int NoteheadClusterQuarterBottom = 57655;
    /// <summary>
    /// Combining quarter note cluster, middle.
    /// </summary>
    public const int NoteheadClusterQuarterMiddle = 57654;
    /// <summary>
    /// Combining quarter note cluster, top.
    /// </summary>
    public const int NoteheadClusterQuarterTop = 57653;
    /// <summary>
    /// Cluster notehead black (round).
    /// </summary>
    public const int NoteheadClusterRoundBlack = 57635;
    /// <summary>
    /// Cluster notehead white (round).
    /// </summary>
    public const int NoteheadClusterRoundWhite = 57634;
    /// <summary>
    /// Cluster notehead black (square).
    /// </summary>
    public const int NoteheadClusterSquareBlack = 57633;
    /// <summary>
    /// Cluster notehead white (square).
    /// </summary>
    public const int NoteheadClusterSquareWhite = 57632;
    /// <summary>
    /// Whole note cluster, 2nd.
    /// </summary>
    public const int NoteheadClusterWhole2nd = 57637;
    /// <summary>
    /// Whole note cluster, 3rd.
    /// </summary>
    public const int NoteheadClusterWhole3rd = 57641;
    /// <summary>
    /// Combining whole note cluster, bottom.
    /// </summary>
    public const int NoteheadClusterWholeBottom = 57649;
    /// <summary>
    /// Combining whole note cluster, middle.
    /// </summary>
    public const int NoteheadClusterWholeMiddle = 57648;
    /// <summary>
    /// Combining whole note cluster, top.
    /// </summary>
    public const int NoteheadClusterWholeTop = 57647;
    /// <summary>
    /// 4/11 note (eleventh note series, Cowell).
    /// </summary>
    public const int NoteheadCowellEleventhNoteSeriesHalf = 61102;
    /// <summary>
    /// 8/11 note (eleventh note series, Cowell).
    /// </summary>
    public const int NoteheadCowellEleventhNoteSeriesWhole = 61101;
    /// <summary>
    /// 2/11 note (eleventh note series, Cowell).
    /// </summary>
    public const int NoteheadCowellEleventhSeriesBlack = 61103;
    /// <summary>
    /// 2/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellFifteenthNoteSeriesBlack = 61109;
    /// <summary>
    /// 4/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellFifteenthNoteSeriesHalf = 61108;
    /// <summary>
    /// 8/15 note (fifteenth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellFifteenthNoteSeriesWhole = 61107;
    /// <summary>
    /// 1/5 note (fifth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellFifthNoteSeriesBlack = 61094;
    /// <summary>
    /// 2/5 note (fifth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellFifthNoteSeriesHalf = 61093;
    /// <summary>
    /// 4/5 note (fifth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellFifthNoteSeriesWhole = 61092;
    /// <summary>
    /// 2/9 note (ninth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellNinthNoteSeriesBlack = 61100;
    /// <summary>
    /// 4/9 note (ninth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellNinthNoteSeriesHalf = 61099;
    /// <summary>
    /// 8/9 note (ninth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellNinthNoteSeriesWhole = 61098;
    /// <summary>
    /// 1/7 note (seventh note series, Cowell).
    /// </summary>
    public const int NoteheadCowellSeventhNoteSeriesBlack = 61097;
    /// <summary>
    /// 2/7 note (seventh note series, Cowell).
    /// </summary>
    public const int NoteheadCowellSeventhNoteSeriesHalf = 61096;
    /// <summary>
    /// 4/7 note (seventh note series, Cowell).
    /// </summary>
    public const int NoteheadCowellSeventhNoteSeriesWhole = 61095;
    /// <summary>
    /// 1/6 note (third note series, Cowell).
    /// </summary>
    public const int NoteheadCowellThirdNoteSeriesBlack = 61091;
    /// <summary>
    /// 1/3 note (third note series, Cowell).
    /// </summary>
    public const int NoteheadCowellThirdNoteSeriesHalf = 61090;
    /// <summary>
    /// 2/3 note (third note series, Cowell).
    /// </summary>
    public const int NoteheadCowellThirdNoteSeriesWhole = 61089;
    /// <summary>
    /// 2/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellThirteenthNoteSeriesBlack = 61106;
    /// <summary>
    /// 4/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellThirteenthNoteSeriesHalf = 61105;
    /// <summary>
    /// 8/13 note (thirteenth note series, Cowell).
    /// </summary>
    public const int NoteheadCowellThirteenthNoteSeriesWhole = 61104;
    /// <summary>
    /// Diamond black notehead.
    /// </summary>
    public const int NoteheadDiamondBlack = 57563;
    /// <summary>
    /// Diamond black notehead (old).
    /// </summary>
    public const int NoteheadDiamondBlackOld = 57570;
    /// <summary>
    /// Diamond black notehead (wide).
    /// </summary>
    public const int NoteheadDiamondBlackWide = 57564;
    /// <summary>
    /// Black diamond cluster, 2nd.
    /// </summary>
    public const int NoteheadDiamondClusterBlack2nd = 57657;
    /// <summary>
    /// Black diamond cluster, 3rd.
    /// </summary>
    public const int NoteheadDiamondClusterBlack3rd = 57659;
    /// <summary>
    /// Combining black diamond cluster, bottom.
    /// </summary>
    public const int NoteheadDiamondClusterBlackBottom = 57665;
    /// <summary>
    /// Combining black diamond cluster, middle.
    /// </summary>
    public const int NoteheadDiamondClusterBlackMiddle = 57664;
    /// <summary>
    /// Combining black diamond cluster, top.
    /// </summary>
    public const int NoteheadDiamondClusterBlackTop = 57663;
    /// <summary>
    /// White diamond cluster, 2nd.
    /// </summary>
    public const int NoteheadDiamondClusterWhite2nd = 57656;
    /// <summary>
    /// White diamond cluster, 3rd.
    /// </summary>
    public const int NoteheadDiamondClusterWhite3rd = 57658;
    /// <summary>
    /// Combining white diamond cluster, bottom.
    /// </summary>
    public const int NoteheadDiamondClusterWhiteBottom = 57662;
    /// <summary>
    /// Combining white diamond cluster, middle.
    /// </summary>
    public const int NoteheadDiamondClusterWhiteMiddle = 57661;
    /// <summary>
    /// Combining white diamond cluster, top.
    /// </summary>
    public const int NoteheadDiamondClusterWhiteTop = 57660;
    /// <summary>
    /// Diamond double whole notehead.
    /// </summary>
    public const int NoteheadDiamondDoubleWhole = 57559;
    /// <summary>
    /// Diamond double whole notehead (old).
    /// </summary>
    public const int NoteheadDiamondDoubleWholeOld = 57567;
    /// <summary>
    /// Diamond half notehead.
    /// </summary>
    public const int NoteheadDiamondHalf = 57561;
    /// <summary>
    /// Half-filled diamond notehead.
    /// </summary>
    public const int NoteheadDiamondHalfFilled = 57571;
    /// <summary>
    /// Diamond half notehead (old).
    /// </summary>
    public const int NoteheadDiamondHalfOld = 57569;
    /// <summary>
    /// Diamond half notehead (wide).
    /// </summary>
    public const int NoteheadDiamondHalfWide = 57562;
    /// <summary>
    /// Open diamond notehead.
    /// </summary>
    public const int NoteheadDiamondOpen = 57596;
    /// <summary>
    /// Diamond white notehead.
    /// </summary>
    public const int NoteheadDiamondWhite = 57565;
    /// <summary>
    /// Diamond white notehead (wide).
    /// </summary>
    public const int NoteheadDiamondWhiteWide = 57566;
    /// <summary>
    /// Diamond whole notehead.
    /// </summary>
    public const int NoteheadDiamondWhole = 57560;
    /// <summary>
    /// Diamond whole notehead (old).
    /// </summary>
    public const int NoteheadDiamondWholeOld = 57568;
    /// <summary>
    /// Double whole (breve) notehead.
    /// </summary>
    public const int NoteheadDoubleWhole = 57504;
    /// <summary>
    /// Double whole (breve) notehead (square).
    /// </summary>
    public const int NoteheadDoubleWholeSquare = 57505;
    /// <summary>
    /// Double whole notehead with X.
    /// </summary>
    public const int NoteheadDoubleWholeWithX = 57524;
    /// <summary>
    /// Half (minim) notehead.
    /// </summary>
    public const int NoteheadHalf = 57507;
    /// <summary>
    /// Filled half (minim) notehead.
    /// </summary>
    public const int NoteheadHalfFilled = 57595;
    /// <summary>
    /// Half notehead with X.
    /// </summary>
    public const int NoteheadHalfWithX = 57526;
    /// <summary>
    /// Heavy X notehead.
    /// </summary>
    public const int NoteheadHeavyX = 57592;
    /// <summary>
    /// Heavy X with hat notehead.
    /// </summary>
    public const int NoteheadHeavyXHat = 57593;
    /// <summary>
    /// Large arrow down (lowest pitch) black notehead.
    /// </summary>
    public const int NoteheadLargeArrowDownBlack = 57588;
    /// <summary>
    /// Large arrow down (lowest pitch) double whole notehead.
    /// </summary>
    public const int NoteheadLargeArrowDownDoubleWhole = 57585;
    /// <summary>
    /// Large arrow down (lowest pitch) half notehead.
    /// </summary>
    public const int NoteheadLargeArrowDownHalf = 57587;
    /// <summary>
    /// Large arrow down (lowest pitch) whole notehead.
    /// </summary>
    public const int NoteheadLargeArrowDownWhole = 57586;
    /// <summary>
    /// Large arrow up (highest pitch) black notehead.
    /// </summary>
    public const int NoteheadLargeArrowUpBlack = 57584;
    /// <summary>
    /// Large arrow up (highest pitch) double whole notehead.
    /// </summary>
    public const int NoteheadLargeArrowUpDoubleWhole = 57581;
    /// <summary>
    /// Large arrow up (highest pitch) half notehead.
    /// </summary>
    public const int NoteheadLargeArrowUpHalf = 57583;
    /// <summary>
    /// Large arrow up (highest pitch) whole notehead.
    /// </summary>
    public const int NoteheadLargeArrowUpWhole = 57582;
    /// <summary>
    /// Moon notehead black.
    /// </summary>
    public const int NoteheadMoonBlack = 57547;
    /// <summary>
    /// Moon notehead white.
    /// </summary>
    public const int NoteheadMoonWhite = 57546;
    /// <summary>
    /// Sine notehead (Nancarrow).
    /// </summary>
    public const int NoteheadNancarrowSine = 61088;
    /// <summary>
    /// Null notehead.
    /// </summary>
    public const int NoteheadNull = 57509;
    /// <summary>
    /// Parenthesis notehead.
    /// </summary>
    public const int NoteheadParenthesis = 57550;
    /// <summary>
    /// Opening parenthesis.
    /// </summary>
    public const int NoteheadParenthesisLeft = 57589;
    /// <summary>
    /// Closing parenthesis.
    /// </summary>
    public const int NoteheadParenthesisRight = 57590;
    /// <summary>
    /// Plus notehead black.
    /// </summary>
    public const int NoteheadPlusBlack = 57519;
    /// <summary>
    /// Plus notehead double whole.
    /// </summary>
    public const int NoteheadPlusDoubleWhole = 57516;
    /// <summary>
    /// Plus notehead half.
    /// </summary>
    public const int NoteheadPlusHalf = 57518;
    /// <summary>
    /// Plus notehead whole.
    /// </summary>
    public const int NoteheadPlusWhole = 57517;
    /// <summary>
    /// Combining black rectangular cluster, bottom.
    /// </summary>
    public const int NoteheadRectangularClusterBlackBottom = 57668;
    /// <summary>
    /// Combining black rectangular cluster, middle.
    /// </summary>
    public const int NoteheadRectangularClusterBlackMiddle = 57667;
    /// <summary>
    /// Combining black rectangular cluster, top.
    /// </summary>
    public const int NoteheadRectangularClusterBlackTop = 57666;
    /// <summary>
    /// Combining white rectangular cluster, bottom.
    /// </summary>
    public const int NoteheadRectangularClusterWhiteBottom = 57671;
    /// <summary>
    /// Combining white rectangular cluster, middle.
    /// </summary>
    public const int NoteheadRectangularClusterWhiteMiddle = 57670;
    /// <summary>
    /// Combining white rectangular cluster, top.
    /// </summary>
    public const int NoteheadRectangularClusterWhiteTop = 57669;
    /// <summary>
    /// Round black notehead.
    /// </summary>
    public const int NoteheadRoundBlack = 57619;
    /// <summary>
    /// Round black notehead, double slashed.
    /// </summary>
    public const int NoteheadRoundBlackDoubleSlashed = 57628;
    /// <summary>
    /// Large round black notehead.
    /// </summary>
    public const int NoteheadRoundBlackLarge = 57616;
    /// <summary>
    /// Round black notehead, slashed.
    /// </summary>
    public const int NoteheadRoundBlackSlashed = 57624;
    /// <summary>
    /// Large round black notehead, slashed.
    /// </summary>
    public const int NoteheadRoundBlackSlashedLarge = 57622;
    /// <summary>
    /// Round white notehead.
    /// </summary>
    public const int NoteheadRoundWhite = 57620;
    /// <summary>
    /// Round white notehead, double slashed.
    /// </summary>
    public const int NoteheadRoundWhiteDoubleSlashed = 57629;
    /// <summary>
    /// Large round white notehead.
    /// </summary>
    public const int NoteheadRoundWhiteLarge = 57617;
    /// <summary>
    /// Round white notehead, slashed.
    /// </summary>
    public const int NoteheadRoundWhiteSlashed = 57625;
    /// <summary>
    /// Large round white notehead, slashed.
    /// </summary>
    public const int NoteheadRoundWhiteSlashedLarge = 57623;
    /// <summary>
    /// Round white notehead with dot.
    /// </summary>
    public const int NoteheadRoundWhiteWithDot = 57621;
    /// <summary>
    /// Large round white notehead with dot.
    /// </summary>
    public const int NoteheadRoundWhiteWithDotLarge = 57618;
    /// <summary>
    /// Large white diamond.
    /// </summary>
    public const int NoteheadSlashDiamondWhite = 57604;
    /// <summary>
    /// Slash with horizontal ends.
    /// </summary>
    public const int NoteheadSlashHorizontalEnds = 57601;
    /// <summary>
    /// Muted slash with horizontal ends.
    /// </summary>
    public const int NoteheadSlashHorizontalEndsMuted = 57608;
    /// <summary>
    /// Slash with vertical ends.
    /// </summary>
    public const int NoteheadSlashVerticalEnds = 57600;
    /// <summary>
    /// Muted slash with vertical ends.
    /// </summary>
    public const int NoteheadSlashVerticalEndsMuted = 57607;
    /// <summary>
    /// Small slash with vertical ends.
    /// </summary>
    public const int NoteheadSlashVerticalEndsSmall = 57605;
    /// <summary>
    /// White slash double whole.
    /// </summary>
    public const int NoteheadSlashWhiteDoubleWhole = 57610;
    /// <summary>
    /// White slash half.
    /// </summary>
    public const int NoteheadSlashWhiteHalf = 57603;
    /// <summary>
    /// Muted white slash.
    /// </summary>
    public const int NoteheadSlashWhiteMuted = 57609;
    /// <summary>
    /// White slash whole.
    /// </summary>
    public const int NoteheadSlashWhiteWhole = 57602;
    /// <summary>
    /// Large X notehead.
    /// </summary>
    public const int NoteheadSlashX = 57606;
    /// <summary>
    /// Slashed black notehead (bottom left to top right).
    /// </summary>
    public const int NoteheadSlashedBlack1 = 57551;
    /// <summary>
    /// Slashed black notehead (top left to bottom right).
    /// </summary>
    public const int NoteheadSlashedBlack2 = 57552;
    /// <summary>
    /// Slashed double whole notehead (bottom left to top right).
    /// </summary>
    public const int NoteheadSlashedDoubleWhole1 = 57557;
    /// <summary>
    /// Slashed double whole notehead (top left to bottom right).
    /// </summary>
    public const int NoteheadSlashedDoubleWhole2 = 57558;
    /// <summary>
    /// Slashed half notehead (bottom left to top right).
    /// </summary>
    public const int NoteheadSlashedHalf1 = 57553;
    /// <summary>
    /// Slashed half notehead (top left to bottom right).
    /// </summary>
    public const int NoteheadSlashedHalf2 = 57554;
    /// <summary>
    /// Slashed whole notehead (bottom left to top right).
    /// </summary>
    public const int NoteheadSlashedWhole1 = 57555;
    /// <summary>
    /// Slashed whole notehead (top left to bottom right).
    /// </summary>
    public const int NoteheadSlashedWhole2 = 57556;
    /// <summary>
    /// Square notehead black.
    /// </summary>
    public const int NoteheadSquareBlack = 57529;
    /// <summary>
    /// Large square black notehead.
    /// </summary>
    public const int NoteheadSquareBlackLarge = 57626;
    /// <summary>
    /// Large square white notehead.
    /// </summary>
    public const int NoteheadSquareBlackWhite = 57627;
    /// <summary>
    /// Square notehead white.
    /// </summary>
    public const int NoteheadSquareWhite = 57528;
    /// <summary>
    /// Triangle notehead down black.
    /// </summary>
    public const int NoteheadTriangleDownBlack = 57543;
    /// <summary>
    /// Triangle notehead down double whole.
    /// </summary>
    public const int NoteheadTriangleDownDoubleWhole = 57539;
    /// <summary>
    /// Triangle notehead down half.
    /// </summary>
    public const int NoteheadTriangleDownHalf = 57541;
    /// <summary>
    /// Triangle notehead down white.
    /// </summary>
    public const int NoteheadTriangleDownWhite = 57542;
    /// <summary>
    /// Triangle notehead down whole.
    /// </summary>
    public const int NoteheadTriangleDownWhole = 57540;
    /// <summary>
    /// Triangle notehead left black.
    /// </summary>
    public const int NoteheadTriangleLeftBlack = 57536;
    /// <summary>
    /// Triangle notehead left white.
    /// </summary>
    public const int NoteheadTriangleLeftWhite = 57535;
    /// <summary>
    /// Triangle notehead right black.
    /// </summary>
    public const int NoteheadTriangleRightBlack = 57538;
    /// <summary>
    /// Triangle notehead right white.
    /// </summary>
    public const int NoteheadTriangleRightWhite = 57537;
    /// <summary>
    /// Triangle-round notehead down black.
    /// </summary>
    public const int NoteheadTriangleRoundDownBlack = 57549;
    /// <summary>
    /// Triangle-round notehead down white.
    /// </summary>
    public const int NoteheadTriangleRoundDownWhite = 57548;
    /// <summary>
    /// Triangle notehead up black.
    /// </summary>
    public const int NoteheadTriangleUpBlack = 57534;
    /// <summary>
    /// Triangle notehead up double whole.
    /// </summary>
    public const int NoteheadTriangleUpDoubleWhole = 57530;
    /// <summary>
    /// Triangle notehead up half.
    /// </summary>
    public const int NoteheadTriangleUpHalf = 57532;
    /// <summary>
    /// Triangle notehead up right black.
    /// </summary>
    public const int NoteheadTriangleUpRightBlack = 57545;
    /// <summary>
    /// Triangle notehead up right white.
    /// </summary>
    public const int NoteheadTriangleUpRightWhite = 57544;
    /// <summary>
    /// Triangle notehead up white.
    /// </summary>
    public const int NoteheadTriangleUpWhite = 57533;
    /// <summary>
    /// Triangle notehead up whole.
    /// </summary>
    public const int NoteheadTriangleUpWhole = 57531;
    /// <summary>
    /// Void notehead with X.
    /// </summary>
    public const int NoteheadVoidWithX = 57527;
    /// <summary>
    /// Whole (semibreve) notehead.
    /// </summary>
    public const int NoteheadWhole = 57506;
    /// <summary>
    /// Filled whole (semibreve) notehead.
    /// </summary>
    public const int NoteheadWholeFilled = 57594;
    /// <summary>
    /// Whole notehead with X.
    /// </summary>
    public const int NoteheadWholeWithX = 57525;
    /// <summary>
    /// X notehead black.
    /// </summary>
    public const int NoteheadXBlack = 57513;
    /// <summary>
    /// X notehead double whole.
    /// </summary>
    public const int NoteheadXDoubleWhole = 57510;
    /// <summary>
    /// X notehead half.
    /// </summary>
    public const int NoteheadXHalf = 57512;
    /// <summary>
    /// Ornate X notehead.
    /// </summary>
    public const int NoteheadXOrnate = 57514;
    /// <summary>
    /// Ornate X notehead in ellipse.
    /// </summary>
    public const int NoteheadXOrnateEllipse = 57515;
    /// <summary>
    /// X notehead whole.
    /// </summary>
    public const int NoteheadXWhole = 57511;
    /// <summary>
    /// a (baseline).
    /// </summary>
    public const int OctaveBaselineA = 60561;
    /// <summary>
    /// b (baseline).
    /// </summary>
    public const int OctaveBaselineB = 60563;
    /// <summary>
    /// m (baseline).
    /// </summary>
    public const int OctaveBaselineM = 60565;
    /// <summary>
    /// v (baseline).
    /// </summary>
    public const int OctaveBaselineV = 60567;
    /// <summary>
    /// Bassa.
    /// </summary>
    public const int OctaveBassa = 58655;
    /// <summary>
    /// Loco.
    /// </summary>
    public const int OctaveLoco = 60560;
    /// <summary>
    /// Left parenthesis for octave signs.
    /// </summary>
    public const int OctaveParensLeft = 58650;
    /// <summary>
    /// Right parenthesis for octave signs.
    /// </summary>
    public const int OctaveParensRight = 58651;
    /// <summary>
    /// a (superscript).
    /// </summary>
    public const int OctaveSuperscriptA = 60562;
    /// <summary>
    /// b (superscript).
    /// </summary>
    public const int OctaveSuperscriptB = 60564;
    /// <summary>
    /// m (superscript).
    /// </summary>
    public const int OctaveSuperscriptM = 60566;
    /// <summary>
    /// v (superscript).
    /// </summary>
    public const int OctaveSuperscriptV = 60568;
    /// <summary>
    /// One-handed roll (Stevens).
    /// </summary>
    public const int OneHandedRollStevens = 57907;
    /// <summary>
    /// Two Fusae.
    /// </summary>
    public const int OrganGerman2Fusae = 60974;
    /// <summary>
    /// Two Minimae.
    /// </summary>
    public const int OrganGerman2Minimae = 60972;
    /// <summary>
    /// Combining double octave line above.
    /// </summary>
    public const int OrganGerman2OctaveUp = 60953;
    /// <summary>
    /// Two Semifusae.
    /// </summary>
    public const int OrganGerman2Semifusae = 60975;
    /// <summary>
    /// Two Semiminimae.
    /// </summary>
    public const int OrganGerman2Semiminimae = 60973;
    /// <summary>
    /// Three Fusae.
    /// </summary>
    public const int OrganGerman3Fusae = 60978;
    /// <summary>
    /// Three Minimae.
    /// </summary>
    public const int OrganGerman3Minimae = 60976;
    /// <summary>
    /// Three Semifusae.
    /// </summary>
    public const int OrganGerman3Semifusae = 60979;
    /// <summary>
    /// Three Semiminimae.
    /// </summary>
    public const int OrganGerman3Semiminimae = 60977;
    /// <summary>
    /// Four Fusae.
    /// </summary>
    public const int OrganGerman4Fusae = 60982;
    /// <summary>
    /// Four Minimae.
    /// </summary>
    public const int OrganGerman4Minimae = 60980;
    /// <summary>
    /// Four Semifusae.
    /// </summary>
    public const int OrganGerman4Semifusae = 60983;
    /// <summary>
    /// Four Semiminimae.
    /// </summary>
    public const int OrganGerman4Semiminimae = 60981;
    /// <summary>
    /// Five Fusae.
    /// </summary>
    public const int OrganGerman5Fusae = 60986;
    /// <summary>
    /// Five Minimae.
    /// </summary>
    public const int OrganGerman5Minimae = 60984;
    /// <summary>
    /// Five Semifusae.
    /// </summary>
    public const int OrganGerman5Semifusae = 60987;
    /// <summary>
    /// Five Semiminimae.
    /// </summary>
    public const int OrganGerman5Semiminimae = 60985;
    /// <summary>
    /// Six Fusae.
    /// </summary>
    public const int OrganGerman6Fusae = 60990;
    /// <summary>
    /// Six Minimae.
    /// </summary>
    public const int OrganGerman6Minimae = 60988;
    /// <summary>
    /// Six Semifusae.
    /// </summary>
    public const int OrganGerman6Semifusae = 60991;
    /// <summary>
    /// Six Semiminimae.
    /// </summary>
    public const int OrganGerman6Semiminimae = 60989;
    /// <summary>
    /// German organ tablature small A.
    /// </summary>
    public const int OrganGermanALower = 60949;
    /// <summary>
    /// German organ tablature great A.
    /// </summary>
    public const int OrganGermanAUpper = 60937;
    /// <summary>
    /// Rhythm Dot.
    /// </summary>
    public const int OrganGermanAugmentationDot = 60956;
    /// <summary>
    /// German organ tablature small B.
    /// </summary>
    public const int OrganGermanBLower = 60950;
    /// <summary>
    /// German organ tablature great B.
    /// </summary>
    public const int OrganGermanBUpper = 60938;
    /// <summary>
    /// Brevis (Binary) Buxheimer Orgelbuch.
    /// </summary>
    public const int OrganGermanBuxheimerBrevis2 = 60965;
    /// <summary>
    /// Brevis (Ternary) Buxheimer Orgelbuch.
    /// </summary>
    public const int OrganGermanBuxheimerBrevis3 = 60964;
    /// <summary>
    /// Minima Rest Buxheimer Orgelbuch.
    /// </summary>
    public const int OrganGermanBuxheimerMinimaRest = 60958;
    /// <summary>
    /// Semibrevis Buxheimer Orgelbuch.
    /// </summary>
    public const int OrganGermanBuxheimerSemibrevis = 60966;
    /// <summary>
    /// Semibrevis Rest Buxheimer Orgelbuch.
    /// </summary>
    public const int OrganGermanBuxheimerSemibrevisRest = 60957;
    /// <summary>
    /// German organ tablature small C.
    /// </summary>
    public const int OrganGermanCLower = 60940;
    /// <summary>
    /// German organ tablature great C.
    /// </summary>
    public const int OrganGermanCUpper = 60928;
    /// <summary>
    /// German organ tablature small Cis.
    /// </summary>
    public const int OrganGermanCisLower = 60941;
    /// <summary>
    /// German organ tablature great Cis.
    /// </summary>
    public const int OrganGermanCisUpper = 60929;
    /// <summary>
    /// German organ tablature small D.
    /// </summary>
    public const int OrganGermanDLower = 60942;
    /// <summary>
    /// German organ tablature great D.
    /// </summary>
    public const int OrganGermanDUpper = 60930;
    /// <summary>
    /// German organ tablature small Dis.
    /// </summary>
    public const int OrganGermanDisLower = 60943;
    /// <summary>
    /// German organ tablature great Dis.
    /// </summary>
    public const int OrganGermanDisUpper = 60931;
    /// <summary>
    /// German organ tablature small E.
    /// </summary>
    public const int OrganGermanELower = 60944;
    /// <summary>
    /// German organ tablature great E.
    /// </summary>
    public const int OrganGermanEUpper = 60932;
    /// <summary>
    /// German organ tablature small F.
    /// </summary>
    public const int OrganGermanFLower = 60945;
    /// <summary>
    /// German organ tablature great F.
    /// </summary>
    public const int OrganGermanFUpper = 60933;
    /// <summary>
    /// German organ tablature small Fis.
    /// </summary>
    public const int OrganGermanFisLower = 60946;
    /// <summary>
    /// German organ tablature great Fis.
    /// </summary>
    public const int OrganGermanFisUpper = 60934;
    /// <summary>
    /// Fusa.
    /// </summary>
    public const int OrganGermanFusa = 60970;
    /// <summary>
    /// Fusa Rest.
    /// </summary>
    public const int OrganGermanFusaRest = 60962;
    /// <summary>
    /// German organ tablature small G.
    /// </summary>
    public const int OrganGermanGLower = 60947;
    /// <summary>
    /// German organ tablature great G.
    /// </summary>
    public const int OrganGermanGUpper = 60935;
    /// <summary>
    /// German organ tablature small Gis.
    /// </summary>
    public const int OrganGermanGisLower = 60948;
    /// <summary>
    /// German organ tablature great Gis.
    /// </summary>
    public const int OrganGermanGisUpper = 60936;
    /// <summary>
    /// German organ tablature small H.
    /// </summary>
    public const int OrganGermanHLower = 60951;
    /// <summary>
    /// German organ tablature great H.
    /// </summary>
    public const int OrganGermanHUpper = 60939;
    /// <summary>
    /// Minima.
    /// </summary>
    public const int OrganGermanMinima = 60968;
    /// <summary>
    /// Minima Rest.
    /// </summary>
    public const int OrganGermanMinimaRest = 60960;
    /// <summary>
    /// Combining single octave line below.
    /// </summary>
    public const int OrganGermanOctaveDown = 60954;
    /// <summary>
    /// Combining single octave line above.
    /// </summary>
    public const int OrganGermanOctaveUp = 60952;
    /// <summary>
    /// Semibrevis.
    /// </summary>
    public const int OrganGermanSemibrevis = 60967;
    /// <summary>
    /// Semibrevis Rest.
    /// </summary>
    public const int OrganGermanSemibrevisRest = 60959;
    /// <summary>
    /// Semifusa.
    /// </summary>
    public const int OrganGermanSemifusa = 60971;
    /// <summary>
    /// Semifusa Rest.
    /// </summary>
    public const int OrganGermanSemifusaRest = 60963;
    /// <summary>
    /// Semiminima.
    /// </summary>
    public const int OrganGermanSemiminima = 60969;
    /// <summary>
    /// Semiminima Rest.
    /// </summary>
    public const int OrganGermanSemiminimaRest = 60961;
    /// <summary>
    /// Tie.
    /// </summary>
    public const int OrganGermanTie = 60955;
    /// <summary>
    /// Ornament bottom left concave stroke.
    /// </summary>
    public const int OrnamentBottomLeftConcaveStroke = 58778;
    /// <summary>
    /// Ornament bottom left concave stroke, large.
    /// </summary>
    public const int OrnamentBottomLeftConcaveStrokeLarge = 58779;
    /// <summary>
    /// Ornament bottom left convex stroke.
    /// </summary>
    public const int OrnamentBottomLeftConvexStroke = 58780;
    /// <summary>
    /// Ornament bottom right concave stroke.
    /// </summary>
    public const int OrnamentBottomRightConcaveStroke = 58791;
    /// <summary>
    /// Ornament bottom right convex stroke.
    /// </summary>
    public const int OrnamentBottomRightConvexStroke = 58792;
    /// <summary>
    /// Comma.
    /// </summary>
    public const int OrnamentComma = 58753;
    /// <summary>
    /// Double oblique straight lines NW-SE.
    /// </summary>
    public const int OrnamentDoubleObliqueLinesAfterNote = 58750;
    /// <summary>
    /// Double oblique straight lines SW-NE.
    /// </summary>
    public const int OrnamentDoubleObliqueLinesBeforeNote = 58749;
    /// <summary>
    /// Curve below.
    /// </summary>
    public const int OrnamentDownCurve = 58744;
    /// <summary>
    /// Haydn ornament.
    /// </summary>
    public const int OrnamentHaydn = 58735;
    /// <summary>
    /// Ornament high left concave stroke.
    /// </summary>
    public const int OrnamentHighLeftConcaveStroke = 58770;
    /// <summary>
    /// Ornament high left convex stroke.
    /// </summary>
    public const int OrnamentHighLeftConvexStroke = 58771;
    /// <summary>
    /// Ornament high right concave stroke.
    /// </summary>
    public const int OrnamentHighRightConcaveStroke = 58786;
    /// <summary>
    /// Ornament high right convex stroke.
    /// </summary>
    public const int OrnamentHighRightConvexStroke = 58787;
    /// <summary>
    /// Hook after note.
    /// </summary>
    public const int OrnamentHookAfterNote = 58742;
    /// <summary>
    /// Hook before note.
    /// </summary>
    public const int OrnamentHookBeforeNote = 58741;
    /// <summary>
    /// Left-facing half circle.
    /// </summary>
    public const int OrnamentLeftFacingHalfCircle = 58738;
    /// <summary>
    /// Left-facing hook.
    /// </summary>
    public const int OrnamentLeftFacingHook = 58740;
    /// <summary>
    /// Ornament left +.
    /// </summary>
    public const int OrnamentLeftPlus = 58775;
    /// <summary>
    /// Ornament left shake t.
    /// </summary>
    public const int OrnamentLeftShakeT = 58774;
    /// <summary>
    /// Ornament left vertical stroke.
    /// </summary>
    public const int OrnamentLeftVerticalStroke = 58772;
    /// <summary>
    /// Ornament left vertical stroke with cross (+).
    /// </summary>
    public const int OrnamentLeftVerticalStrokeWithCross = 58773;
    /// <summary>
    /// Ornament low left concave stroke.
    /// </summary>
    public const int OrnamentLowLeftConcaveStroke = 58776;
    /// <summary>
    /// Ornament low left convex stroke.
    /// </summary>
    public const int OrnamentLowLeftConvexStroke = 58777;
    /// <summary>
    /// Ornament low right concave stroke.
    /// </summary>
    public const int OrnamentLowRightConcaveStroke = 58789;
    /// <summary>
    /// Ornament low right convex stroke.
    /// </summary>
    public const int OrnamentLowRightConvexStroke = 58790;
    /// <summary>
    /// Ornament middle vertical stroke.
    /// </summary>
    public const int OrnamentMiddleVerticalStroke = 58783;
    /// <summary>
    /// Mordent.
    /// </summary>
    public const int OrnamentMordent = 58733;
    /// <summary>
    /// Oblique straight line NW-SE.
    /// </summary>
    public const int OrnamentObliqueLineAfterNote = 58748;
    /// <summary>
    /// Oblique straight line SW-NE.
    /// </summary>
    public const int OrnamentObliqueLineBeforeNote = 58747;
    /// <summary>
    /// Oblique straight line tilted NW-SE.
    /// </summary>
    public const int OrnamentObliqueLineHorizAfterNote = 58752;
    /// <summary>
    /// Oblique straight line tilted SW-NE.
    /// </summary>
    public const int OrnamentObliqueLineHorizBeforeNote = 58751;
    /// <summary>
    /// Oriscus.
    /// </summary>
    public const int OrnamentOriscus = 59937;
    /// <summary>
    /// Pincé (Couperin).
    /// </summary>
    public const int OrnamentPinceCouperin = 58760;
    /// <summary>
    /// Port de voix.
    /// </summary>
    public const int OrnamentPortDeVoixV = 58736;
    /// <summary>
    /// Supported appoggiatura trill.
    /// </summary>
    public const int OrnamentPrecompAppoggTrill = 58802;
    /// <summary>
    /// Supported appoggiatura trill with two-note suffix.
    /// </summary>
    public const int OrnamentPrecompAppoggTrillSuffix = 58803;
    /// <summary>
    /// Cadence.
    /// </summary>
    public const int OrnamentPrecompCadence = 58814;
    /// <summary>
    /// Cadence with upper prefix.
    /// </summary>
    public const int OrnamentPrecompCadenceUpperPrefix = 58817;
    /// <summary>
    /// Cadence with upper prefix and turn.
    /// </summary>
    public const int OrnamentPrecompCadenceUpperPrefixTurn = 58818;
    /// <summary>
    /// Cadence with turn.
    /// </summary>
    public const int OrnamentPrecompCadenceWithTurn = 58815;
    /// <summary>
    /// Descending slide.
    /// </summary>
    public const int OrnamentPrecompDescendingSlide = 58801;
    /// <summary>
    /// Double cadence with lower prefix.
    /// </summary>
    public const int OrnamentPrecompDoubleCadenceLowerPrefix = 58816;
    /// <summary>
    /// Double cadence with upper prefix.
    /// </summary>
    public const int OrnamentPrecompDoubleCadenceUpperPrefix = 58819;
    /// <summary>
    /// Double cadence with upper prefix and turn.
    /// </summary>
    public const int OrnamentPrecompDoubleCadenceUpperPrefixTurn = 58820;
    /// <summary>
    /// Inverted mordent with upper prefix.
    /// </summary>
    public const int OrnamentPrecompInvertedMordentUpperPrefix = 58823;
    /// <summary>
    /// Mordent with release.
    /// </summary>
    public const int OrnamentPrecompMordentRelease = 58821;
    /// <summary>
    /// Mordent with upper prefix.
    /// </summary>
    public const int OrnamentPrecompMordentUpperPrefix = 58822;
    /// <summary>
    /// Pre-beat port de voix followed by multiple mordent (Dandrieu).
    /// </summary>
    public const int OrnamentPrecompPortDeVoixMordent = 58812;
    /// <summary>
    /// Slide.
    /// </summary>
    public const int OrnamentPrecompSlide = 58800;
    /// <summary>
    /// Slide-trill with two-note suffix (J.S. Bach).
    /// </summary>
    public const int OrnamentPrecompSlideTrillBach = 58808;
    /// <summary>
    /// Slide-trill (D'Anglebert).
    /// </summary>
    public const int OrnamentPrecompSlideTrillDAnglebert = 58805;
    /// <summary>
    /// Slide-trill with one-note suffix (Marpurg).
    /// </summary>
    public const int OrnamentPrecompSlideTrillMarpurg = 58806;
    /// <summary>
    /// Slide-trill (Muffat).
    /// </summary>
    public const int OrnamentPrecompSlideTrillMuffat = 58809;
    /// <summary>
    /// Slide-trill with two-note suffix (Muffat).
    /// </summary>
    public const int OrnamentPrecompSlideTrillSuffixMuffat = 58810;
    /// <summary>
    /// Trill with lower suffix.
    /// </summary>
    public const int OrnamentPrecompTrillLowerSuffix = 58824;
    /// <summary>
    /// Trill with two-note suffix (Dandrieu).
    /// </summary>
    public const int OrnamentPrecompTrillSuffixDandrieu = 58811;
    /// <summary>
    /// Trill with mordent.
    /// </summary>
    public const int OrnamentPrecompTrillWithMordent = 58813;
    /// <summary>
    /// Turn-trill with two-note suffix (J.S. Bach).
    /// </summary>
    public const int OrnamentPrecompTurnTrillBach = 58807;
    /// <summary>
    /// Turn-trill (D'Anglebert).
    /// </summary>
    public const int OrnamentPrecompTurnTrillDAnglebert = 58804;
    /// <summary>
    /// Quilisma.
    /// </summary>
    public const int OrnamentQuilisma = 59936;
    /// <summary>
    /// Right-facing half circle.
    /// </summary>
    public const int OrnamentRightFacingHalfCircle = 58737;
    /// <summary>
    /// Right-facing hook.
    /// </summary>
    public const int OrnamentRightFacingHook = 58739;
    /// <summary>
    /// Ornament right vertical stroke.
    /// </summary>
    public const int OrnamentRightVerticalStroke = 58788;
    /// <summary>
    /// Schleifer (long mordent).
    /// </summary>
    public const int OrnamentSchleifer = 58759;
    /// <summary>
    /// Shake.
    /// </summary>
    public const int OrnamentShake3 = 58754;
    /// <summary>
    /// Shake (Muffat).
    /// </summary>
    public const int OrnamentShakeMuffat1 = 58756;
    /// <summary>
    /// Short oblique straight line NW-SE.
    /// </summary>
    public const int OrnamentShortObliqueLineAfterNote = 58746;
    /// <summary>
    /// Short oblique straight line SW-NE.
    /// </summary>
    public const int OrnamentShortObliqueLineBeforeNote = 58745;
    /// <summary>
    /// Short trill.
    /// </summary>
    public const int OrnamentShortTrill = 58732;
    /// <summary>
    /// Ornament top left concave stroke.
    /// </summary>
    public const int OrnamentTopLeftConcaveStroke = 58768;
    /// <summary>
    /// Ornament top left convex stroke.
    /// </summary>
    public const int OrnamentTopLeftConvexStroke = 58769;
    /// <summary>
    /// Ornament top right concave stroke.
    /// </summary>
    public const int OrnamentTopRightConcaveStroke = 58784;
    /// <summary>
    /// Ornament top right convex stroke.
    /// </summary>
    public const int OrnamentTopRightConvexStroke = 58785;
    /// <summary>
    /// Tremblement.
    /// </summary>
    public const int OrnamentTremblement = 58734;
    /// <summary>
    /// Tremblement appuyé (Couperin).
    /// </summary>
    public const int OrnamentTremblementCouperin = 58761;
    /// <summary>
    /// Trill.
    /// </summary>
    public const int OrnamentTrill = 58726;
    /// <summary>
    /// Turn.
    /// </summary>
    public const int OrnamentTurn = 58727;
    /// <summary>
    /// Inverted turn.
    /// </summary>
    public const int OrnamentTurnInverted = 58728;
    /// <summary>
    /// Turn with slash.
    /// </summary>
    public const int OrnamentTurnSlash = 58729;
    /// <summary>
    /// Turn up.
    /// </summary>
    public const int OrnamentTurnUp = 58730;
    /// <summary>
    /// Inverted turn up.
    /// </summary>
    public const int OrnamentTurnUpS = 58731;
    /// <summary>
    /// Curve above.
    /// </summary>
    public const int OrnamentUpCurve = 58743;
    /// <summary>
    /// Vertical line.
    /// </summary>
    public const int OrnamentVerticalLine = 58755;
    /// <summary>
    /// Ornament zig-zag line without right-hand end.
    /// </summary>
    public const int OrnamentZigZagLineNoRightEnd = 58781;
    /// <summary>
    /// Ornament zig-zag line with right-hand end.
    /// </summary>
    public const int OrnamentZigZagLineWithRightEnd = 58782;
    /// <summary>
    /// Ottava.
    /// </summary>
    public const int Ottava = 58640;
    /// <summary>
    /// Ottava alta.
    /// </summary>
    public const int OttavaAlta = 58641;
    /// <summary>
    /// Ottava bassa.
    /// </summary>
    public const int OttavaBassa = 58642;
    /// <summary>
    /// Ottava bassa (ba).
    /// </summary>
    public const int OttavaBassaBa = 58643;
    /// <summary>
    /// Ottava bassa (8vb).
    /// </summary>
    public const int OttavaBassaVb = 58652;
    /// <summary>
    /// Penderecki unmeasured tremolo.
    /// </summary>
    public const int PendereckiTremolo = 57899;
    /// <summary>
    /// Agogo.
    /// </summary>
    public const int PictAgogo = 59159;
    /// <summary>
    /// Almglocken.
    /// </summary>
    public const int PictAlmglocken = 59154;
    /// <summary>
    /// Anvil.
    /// </summary>
    public const int PictAnvil = 59137;
    /// <summary>
    /// Bamboo tube chimes.
    /// </summary>
    public const int PictBambooChimes = 59075;
    /// <summary>
    /// Bamboo scraper.
    /// </summary>
    public const int PictBambooScraper = 59131;
    /// <summary>
    /// Bass drum.
    /// </summary>
    public const int PictBassDrum = 59092;
    /// <summary>
    /// Bass drum on side.
    /// </summary>
    public const int PictBassDrumOnSide = 59093;
    /// <summary>
    /// Bow.
    /// </summary>
    public const int PictBeaterBow = 59358;
    /// <summary>
    /// Box for percussion beater.
    /// </summary>
    public const int PictBeaterBox = 59371;
    /// <summary>
    /// Brass mallets down.
    /// </summary>
    public const int PictBeaterBrassMalletsDown = 59354;
    /// <summary>
    /// Brass mallets left.
    /// </summary>
    public const int PictBeaterBrassMalletsLeft = 59374;
    /// <summary>
    /// Brass mallets right.
    /// </summary>
    public const int PictBeaterBrassMalletsRight = 59373;
    /// <summary>
    /// Brass mallets up.
    /// </summary>
    public const int PictBeaterBrassMalletsUp = 59353;
    /// <summary>
    /// Combining dashed circle for round beaters (plated).
    /// </summary>
    public const int PictBeaterCombiningDashedCircle = 59370;
    /// <summary>
    /// Combining parentheses for round beaters (padded).
    /// </summary>
    public const int PictBeaterCombiningParentheses = 59369;
    /// <summary>
    /// Double bass drum stick down.
    /// </summary>
    public const int PictBeaterDoubleBassDrumDown = 59297;
    /// <summary>
    /// Double bass drum stick up.
    /// </summary>
    public const int PictBeaterDoubleBassDrumUp = 59296;
    /// <summary>
    /// Finger.
    /// </summary>
    public const int PictBeaterFinger = 59364;
    /// <summary>
    /// Fingernails.
    /// </summary>
    public const int PictBeaterFingernails = 59366;
    /// <summary>
    /// Fist.
    /// </summary>
    public const int PictBeaterFist = 59365;
    /// <summary>
    /// Guiro scraper.
    /// </summary>
    public const int PictBeaterGuiroScraper = 59357;
    /// <summary>
    /// Hammer.
    /// </summary>
    public const int PictBeaterHammer = 59361;
    /// <summary>
    /// Metal hammer, down.
    /// </summary>
    public const int PictBeaterHammerMetalDown = 59344;
    /// <summary>
    /// Metal hammer, up.
    /// </summary>
    public const int PictBeaterHammerMetalUp = 59343;
    /// <summary>
    /// Plastic hammer, down.
    /// </summary>
    public const int PictBeaterHammerPlasticDown = 59342;
    /// <summary>
    /// Plastic hammer, up.
    /// </summary>
    public const int PictBeaterHammerPlasticUp = 59341;
    /// <summary>
    /// Wooden hammer, down.
    /// </summary>
    public const int PictBeaterHammerWoodDown = 59340;
    /// <summary>
    /// Wooden hammer, up.
    /// </summary>
    public const int PictBeaterHammerWoodUp = 59339;
    /// <summary>
    /// Hand.
    /// </summary>
    public const int PictBeaterHand = 59363;
    /// <summary>
    /// Hard bass drum stick down.
    /// </summary>
    public const int PictBeaterHardBassDrumDown = 59293;
    /// <summary>
    /// Hard bass drum stick up.
    /// </summary>
    public const int PictBeaterHardBassDrumUp = 59292;
    /// <summary>
    /// Hard glockenspiel stick down.
    /// </summary>
    public const int PictBeaterHardGlockenspielDown = 59269;
    /// <summary>
    /// Hard glockenspiel stick left.
    /// </summary>
    public const int PictBeaterHardGlockenspielLeft = 59271;
    /// <summary>
    /// Hard glockenspiel stick right.
    /// </summary>
    public const int PictBeaterHardGlockenspielRight = 59270;
    /// <summary>
    /// Hard glockenspiel stick up.
    /// </summary>
    public const int PictBeaterHardGlockenspielUp = 59268;
    /// <summary>
    /// Hard timpani stick down.
    /// </summary>
    public const int PictBeaterHardTimpaniDown = 59281;
    /// <summary>
    /// Hard timpani stick left.
    /// </summary>
    public const int PictBeaterHardTimpaniLeft = 59283;
    /// <summary>
    /// Hard timpani stick right.
    /// </summary>
    public const int PictBeaterHardTimpaniRight = 59282;
    /// <summary>
    /// Hard timpani stick up.
    /// </summary>
    public const int PictBeaterHardTimpaniUp = 59280;
    /// <summary>
    /// Hard xylophone stick down.
    /// </summary>
    public const int PictBeaterHardXylophoneDown = 59257;
    /// <summary>
    /// Hard xylophone stick left.
    /// </summary>
    public const int PictBeaterHardXylophoneLeft = 59259;
    /// <summary>
    /// Hard xylophone stick right.
    /// </summary>
    public const int PictBeaterHardXylophoneRight = 59258;
    /// <summary>
    /// Hard xylophone stick up.
    /// </summary>
    public const int PictBeaterHardXylophoneUp = 59256;
    /// <summary>
    /// Hard yarn beater down.
    /// </summary>
    public const int PictBeaterHardYarnDown = 59307;
    /// <summary>
    /// Hard yarn beater left.
    /// </summary>
    public const int PictBeaterHardYarnLeft = 59309;
    /// <summary>
    /// Hard yarn beater right.
    /// </summary>
    public const int PictBeaterHardYarnRight = 59308;
    /// <summary>
    /// Hard yarn beater up.
    /// </summary>
    public const int PictBeaterHardYarnUp = 59306;
    /// <summary>
    /// Jazz sticks down.
    /// </summary>
    public const int PictBeaterJazzSticksDown = 59348;
    /// <summary>
    /// Jazz sticks up.
    /// </summary>
    public const int PictBeaterJazzSticksUp = 59347;
    /// <summary>
    /// Knitting needle.
    /// </summary>
    public const int PictBeaterKnittingNeedle = 59362;
    /// <summary>
    /// Chime hammer up.
    /// </summary>
    public const int PictBeaterMallet = 59359;
    /// <summary>
    /// Chime hammer down.
    /// </summary>
    public const int PictBeaterMalletDown = 59372;
    /// <summary>
    /// Medium bass drum stick down.
    /// </summary>
    public const int PictBeaterMediumBassDrumDown = 59291;
    /// <summary>
    /// Medium bass drum stick up.
    /// </summary>
    public const int PictBeaterMediumBassDrumUp = 59290;
    /// <summary>
    /// Medium timpani stick down.
    /// </summary>
    public const int PictBeaterMediumTimpaniDown = 59277;
    /// <summary>
    /// Medium timpani stick left.
    /// </summary>
    public const int PictBeaterMediumTimpaniLeft = 59279;
    /// <summary>
    /// Medium timpani stick right.
    /// </summary>
    public const int PictBeaterMediumTimpaniRight = 59278;
    /// <summary>
    /// Medium timpani stick up.
    /// </summary>
    public const int PictBeaterMediumTimpaniUp = 59276;
    /// <summary>
    /// Medium xylophone stick down.
    /// </summary>
    public const int PictBeaterMediumXylophoneDown = 59253;
    /// <summary>
    /// Medium xylophone stick left.
    /// </summary>
    public const int PictBeaterMediumXylophoneLeft = 59255;
    /// <summary>
    /// Medium xylophone stick right.
    /// </summary>
    public const int PictBeaterMediumXylophoneRight = 59254;
    /// <summary>
    /// Medium xylophone stick up.
    /// </summary>
    public const int PictBeaterMediumXylophoneUp = 59252;
    /// <summary>
    /// Medium yarn beater down.
    /// </summary>
    public const int PictBeaterMediumYarnDown = 59303;
    /// <summary>
    /// Medium yarn beater left.
    /// </summary>
    public const int PictBeaterMediumYarnLeft = 59305;
    /// <summary>
    /// Medium yarn beater right.
    /// </summary>
    public const int PictBeaterMediumYarnRight = 59304;
    /// <summary>
    /// Medium yarn beater up.
    /// </summary>
    public const int PictBeaterMediumYarnUp = 59302;
    /// <summary>
    /// Metal bass drum stick down.
    /// </summary>
    public const int PictBeaterMetalBassDrumDown = 59295;
    /// <summary>
    /// Metal bass drum stick up.
    /// </summary>
    public const int PictBeaterMetalBassDrumUp = 59294;
    /// <summary>
    /// Metal beater down.
    /// </summary>
    public const int PictBeaterMetalDown = 59336;
    /// <summary>
    /// Metal hammer.
    /// </summary>
    public const int PictBeaterMetalHammer = 59360;
    /// <summary>
    /// Metal beater, left.
    /// </summary>
    public const int PictBeaterMetalLeft = 59338;
    /// <summary>
    /// Metal beater, right.
    /// </summary>
    public const int PictBeaterMetalRight = 59337;
    /// <summary>
    /// Metal beater, up.
    /// </summary>
    public const int PictBeaterMetalUp = 59335;
    /// <summary>
    /// Snare sticks down.
    /// </summary>
    public const int PictBeaterSnareSticksDown = 59346;
    /// <summary>
    /// Snare sticks up.
    /// </summary>
    public const int PictBeaterSnareSticksUp = 59345;
    /// <summary>
    /// Soft bass drum stick down.
    /// </summary>
    public const int PictBeaterSoftBassDrumDown = 59289;
    /// <summary>
    /// Soft bass drum stick up.
    /// </summary>
    public const int PictBeaterSoftBassDrumUp = 59288;
    /// <summary>
    /// Soft glockenspiel stick down.
    /// </summary>
    public const int PictBeaterSoftGlockenspielDown = 59265;
    /// <summary>
    /// Soft glockenspiel stick left.
    /// </summary>
    public const int PictBeaterSoftGlockenspielLeft = 59267;
    /// <summary>
    /// Soft glockenspiel stick right.
    /// </summary>
    public const int PictBeaterSoftGlockenspielRight = 59266;
    /// <summary>
    /// Soft glockenspiel stick up.
    /// </summary>
    public const int PictBeaterSoftGlockenspielUp = 59264;
    /// <summary>
    /// Soft timpani stick down.
    /// </summary>
    public const int PictBeaterSoftTimpaniDown = 59273;
    /// <summary>
    /// Soft timpani stick left.
    /// </summary>
    public const int PictBeaterSoftTimpaniLeft = 59275;
    /// <summary>
    /// Soft timpani stick right.
    /// </summary>
    public const int PictBeaterSoftTimpaniRight = 59274;
    /// <summary>
    /// Soft timpani stick up.
    /// </summary>
    public const int PictBeaterSoftTimpaniUp = 59272;
    /// <summary>
    /// Soft xylophone beaters.
    /// </summary>
    public const int PictBeaterSoftXylophone = 59355;
    /// <summary>
    /// Soft xylophone stick down.
    /// </summary>
    public const int PictBeaterSoftXylophoneDown = 59249;
    /// <summary>
    /// Soft xylophone stick left.
    /// </summary>
    public const int PictBeaterSoftXylophoneLeft = 59251;
    /// <summary>
    /// Soft xylophone stick right.
    /// </summary>
    public const int PictBeaterSoftXylophoneRight = 59250;
    /// <summary>
    /// Soft xylophone stick up.
    /// </summary>
    public const int PictBeaterSoftXylophoneUp = 59248;
    /// <summary>
    /// Soft yarn beater down.
    /// </summary>
    public const int PictBeaterSoftYarnDown = 59299;
    /// <summary>
    /// Soft yarn beater left.
    /// </summary>
    public const int PictBeaterSoftYarnLeft = 59301;
    /// <summary>
    /// Soft yarn beater right.
    /// </summary>
    public const int PictBeaterSoftYarnRight = 59300;
    /// <summary>
    /// Soft yarn beater up.
    /// </summary>
    public const int PictBeaterSoftYarnUp = 59298;
    /// <summary>
    /// Spoon-shaped wooden mallet.
    /// </summary>
    public const int PictBeaterSpoonWoodenMallet = 59356;
    /// <summary>
    /// Superball beater down.
    /// </summary>
    public const int PictBeaterSuperballDown = 59311;
    /// <summary>
    /// Superball beater left.
    /// </summary>
    public const int PictBeaterSuperballLeft = 59313;
    /// <summary>
    /// Superball beater right.
    /// </summary>
    public const int PictBeaterSuperballRight = 59312;
    /// <summary>
    /// Superball beater up.
    /// </summary>
    public const int PictBeaterSuperballUp = 59310;
    /// <summary>
    /// Triangle beater down.
    /// </summary>
    public const int PictBeaterTriangleDown = 59350;
    /// <summary>
    /// Triangle beater plain.
    /// </summary>
    public const int PictBeaterTrianglePlain = 59375;
    /// <summary>
    /// Triangle beater up.
    /// </summary>
    public const int PictBeaterTriangleUp = 59349;
    /// <summary>
    /// Wire brushes down.
    /// </summary>
    public const int PictBeaterWireBrushesDown = 59352;
    /// <summary>
    /// Wire brushes up.
    /// </summary>
    public const int PictBeaterWireBrushesUp = 59351;
    /// <summary>
    /// Wood timpani stick down.
    /// </summary>
    public const int PictBeaterWoodTimpaniDown = 59285;
    /// <summary>
    /// Wood timpani stick left.
    /// </summary>
    public const int PictBeaterWoodTimpaniLeft = 59287;
    /// <summary>
    /// Wood timpani stick right.
    /// </summary>
    public const int PictBeaterWoodTimpaniRight = 59286;
    /// <summary>
    /// Wood timpani stick up.
    /// </summary>
    public const int PictBeaterWoodTimpaniUp = 59284;
    /// <summary>
    /// Wood xylophone stick down.
    /// </summary>
    public const int PictBeaterWoodXylophoneDown = 59261;
    /// <summary>
    /// Wood xylophone stick left.
    /// </summary>
    public const int PictBeaterWoodXylophoneLeft = 59263;
    /// <summary>
    /// Wood xylophone stick right.
    /// </summary>
    public const int PictBeaterWoodXylophoneRight = 59262;
    /// <summary>
    /// Wood xylophone stick up.
    /// </summary>
    public const int PictBeaterWoodXylophoneUp = 59260;
    /// <summary>
    /// Bell.
    /// </summary>
    public const int PictBell = 59156;
    /// <summary>
    /// Bell of cymbal.
    /// </summary>
    public const int PictBellOfCymbal = 59178;
    /// <summary>
    /// Bell plate.
    /// </summary>
    public const int PictBellPlate = 59155;
    /// <summary>
    /// Bell tree.
    /// </summary>
    public const int PictBellTree = 59162;
    /// <summary>
    /// Bird whistle.
    /// </summary>
    public const int PictBirdWhistle = 59217;
    /// <summary>
    /// Board clapper.
    /// </summary>
    public const int PictBoardClapper = 59127;
    /// <summary>
    /// Bongos.
    /// </summary>
    public const int PictBongos = 59101;
    /// <summary>
    /// Brake drum.
    /// </summary>
    public const int PictBrakeDrum = 59105;
    /// <summary>
    /// Cabasa.
    /// </summary>
    public const int PictCabasa = 59203;
    /// <summary>
    /// Cannon.
    /// </summary>
    public const int PictCannon = 59233;
    /// <summary>
    /// Car horn.
    /// </summary>
    public const int PictCarHorn = 59221;
    /// <summary>
    /// Castanets.
    /// </summary>
    public const int PictCastanets = 59128;
    /// <summary>
    /// Castanets with handle.
    /// </summary>
    public const int PictCastanetsWithHandle = 59129;
    /// <summary>
    /// Celesta.
    /// </summary>
    public const int PictCelesta = 59056;
    /// <summary>
    /// Cencerro.
    /// </summary>
    public const int PictCencerro = 59158;
    /// <summary>
    /// Center (Weinberg).
    /// </summary>
    public const int PictCenter1 = 59390;
    /// <summary>
    /// Center (Ghent).
    /// </summary>
    public const int PictCenter2 = 59391;
    /// <summary>
    /// Center (Caltabiano).
    /// </summary>
    public const int PictCenter3 = 59392;
    /// <summary>
    /// Chain rattle.
    /// </summary>
    public const int PictChainRattle = 59208;
    /// <summary>
    /// Chimes.
    /// </summary>
    public const int PictChimes = 59074;
    /// <summary>
    /// Chinese cymbal.
    /// </summary>
    public const int PictChineseCymbal = 59174;
    /// <summary>
    /// Choke (Weinberg).
    /// </summary>
    public const int PictChokeCymbal = 59397;
    /// <summary>
    /// Claves.
    /// </summary>
    public const int PictClaves = 59122;
    /// <summary>
    /// Coins.
    /// </summary>
    public const int PictCoins = 59367;
    /// <summary>
    /// Conga.
    /// </summary>
    public const int PictConga = 59102;
    /// <summary>
    /// Cow bell.
    /// </summary>
    public const int PictCowBell = 59153;
    /// <summary>
    /// Crash cymbals.
    /// </summary>
    public const int PictCrashCymbals = 59168;
    /// <summary>
    /// Crotales.
    /// </summary>
    public const int PictCrotales = 59054;
    /// <summary>
    /// Combining crush for stem.
    /// </summary>
    public const int PictCrushStem = 59404;
    /// <summary>
    /// Cuica.
    /// </summary>
    public const int PictCuica = 59108;
    /// <summary>
    /// Cymbal tongs.
    /// </summary>
    public const int PictCymbalTongs = 59176;
    /// <summary>
    /// Damp.
    /// </summary>
    public const int PictDamp1 = 59385;
    /// <summary>
    /// Damp 2.
    /// </summary>
    public const int PictDamp2 = 59386;
    /// <summary>
    /// Damp 3.
    /// </summary>
    public const int PictDamp3 = 59387;
    /// <summary>
    /// Damp 4.
    /// </summary>
    public const int PictDamp4 = 59388;
    /// <summary>
    /// Combining X for stem (dead note).
    /// </summary>
    public const int PictDeadNoteStem = 59405;
    /// <summary>
    /// Drum stick.
    /// </summary>
    public const int PictDrumStick = 59368;
    /// <summary>
    /// Duck call.
    /// </summary>
    public const int PictDuckCall = 59223;
    /// <summary>
    /// Edge of cymbal.
    /// </summary>
    public const int PictEdgeOfCymbal = 59177;
    /// <summary>
    /// Empty trapezoid.
    /// </summary>
    public const int PictEmptyTrap = 59049;
    /// <summary>
    /// Finger cymbals.
    /// </summary>
    public const int PictFingerCymbals = 59175;
    /// <summary>
    /// Flexatone.
    /// </summary>
    public const int PictFlexatone = 59200;
    /// <summary>
    /// Football rattle.
    /// </summary>
    public const int PictFootballRatchet = 59125;
    /// <summary>
    /// Glass harmonica.
    /// </summary>
    public const int PictGlassHarmonica = 59237;
    /// <summary>
    /// Glass harp.
    /// </summary>
    public const int PictGlassHarp = 59236;
    /// <summary>
    /// Glass plate chimes.
    /// </summary>
    public const int PictGlassPlateChimes = 59078;
    /// <summary>
    /// Glass tube chimes.
    /// </summary>
    public const int PictGlassTubeChimes = 59077;
    /// <summary>
    /// Glockenspiel.
    /// </summary>
    public const int PictGlsp = 59040;
    /// <summary>
    /// Glockenspiel (Smith Brindle).
    /// </summary>
    public const int PictGlspSmithBrindle = 59050;
    /// <summary>
    /// Goblet drum (djembe, dumbek).
    /// </summary>
    public const int PictGobletDrum = 59106;
    /// <summary>
    /// Gong.
    /// </summary>
    public const int PictGong = 59186;
    /// <summary>
    /// Gong with button (nipple).
    /// </summary>
    public const int PictGongWithButton = 59187;
    /// <summary>
    /// Guiro.
    /// </summary>
    public const int PictGuiro = 59123;
    /// <summary>
    /// Hard gum beater, down.
    /// </summary>
    public const int PictGumHardDown = 59332;
    /// <summary>
    /// Hard gum beater, left.
    /// </summary>
    public const int PictGumHardLeft = 59334;
    /// <summary>
    /// Hard gum beater, right.
    /// </summary>
    public const int PictGumHardRight = 59333;
    /// <summary>
    /// Hard gum beater, up.
    /// </summary>
    public const int PictGumHardUp = 59331;
    /// <summary>
    /// Medium gum beater, down.
    /// </summary>
    public const int PictGumMediumDown = 59328;
    /// <summary>
    /// Medium gum beater, left.
    /// </summary>
    public const int PictGumMediumLeft = 59330;
    /// <summary>
    /// Medium gum beater, right.
    /// </summary>
    public const int PictGumMediumRight = 59329;
    /// <summary>
    /// Medium gum beater, up.
    /// </summary>
    public const int PictGumMediumUp = 59327;
    /// <summary>
    /// Soft gum beater, down.
    /// </summary>
    public const int PictGumSoftDown = 59324;
    /// <summary>
    /// Soft gum beater, left.
    /// </summary>
    public const int PictGumSoftLeft = 59326;
    /// <summary>
    /// Soft gum beater, right.
    /// </summary>
    public const int PictGumSoftRight = 59325;
    /// <summary>
    /// Soft gum beater, up.
    /// </summary>
    public const int PictGumSoftUp = 59323;
    /// <summary>
    /// Half-open.
    /// </summary>
    public const int PictHalfOpen1 = 59382;
    /// <summary>
    /// Half-open 2 (Weinberg).
    /// </summary>
    public const int PictHalfOpen2 = 59383;
    /// <summary>
    /// Handbell.
    /// </summary>
    public const int PictHandbell = 59157;
    /// <summary>
    /// Hi-hat.
    /// </summary>
    public const int PictHiHat = 59170;
    /// <summary>
    /// Hi-hat cymbals on stand.
    /// </summary>
    public const int PictHiHatOnStand = 59171;
    /// <summary>
    /// Jaw harp.
    /// </summary>
    public const int PictJawHarp = 59239;
    /// <summary>
    /// Jingle bells.
    /// </summary>
    public const int PictJingleBells = 59161;
    /// <summary>
    /// Klaxon horn.
    /// </summary>
    public const int PictKlaxonHorn = 59222;
    /// <summary>
    /// Right hand (Agostini).
    /// </summary>
    public const int PictLeftHandCircle = 59399;
    /// <summary>
    /// Lion's roar.
    /// </summary>
    public const int PictLionsRoar = 59235;
    /// <summary>
    /// Lithophone.
    /// </summary>
    public const int PictLithophone = 59057;
    /// <summary>
    /// Log drum.
    /// </summary>
    public const int PictLogDrum = 59103;
    /// <summary>
    /// Lotus flute.
    /// </summary>
    public const int PictLotusFlute = 59226;
    /// <summary>
    /// Marimba.
    /// </summary>
    public const int PictMar = 59046;
    /// <summary>
    /// Marimba (Smith Brindle).
    /// </summary>
    public const int PictMarSmithBrindle = 59052;
    /// <summary>
    /// Maraca.
    /// </summary>
    public const int PictMaraca = 59201;
    /// <summary>
    /// Maracas.
    /// </summary>
    public const int PictMaracas = 59202;
    /// <summary>
    /// Megaphone.
    /// </summary>
    public const int PictMegaphone = 59225;
    /// <summary>
    /// Metal plate chimes.
    /// </summary>
    public const int PictMetalPlateChimes = 59080;
    /// <summary>
    /// Metal tube chimes.
    /// </summary>
    public const int PictMetalTubeChimes = 59079;
    /// <summary>
    /// Musical saw.
    /// </summary>
    public const int PictMusicalSaw = 59238;
    /// <summary>
    /// Normal position (Caltabiano).
    /// </summary>
    public const int PictNormalPosition = 59396;
    /// <summary>
    /// On rim.
    /// </summary>
    public const int PictOnRim = 59380;
    /// <summary>
    /// Open.
    /// </summary>
    public const int PictOpen = 59384;
    /// <summary>
    /// Closed / rim shot.
    /// </summary>
    public const int PictOpenRimShot = 59381;
    /// <summary>
    /// Pistol shot.
    /// </summary>
    public const int PictPistolShot = 59232;
    /// <summary>
    /// Police whistle.
    /// </summary>
    public const int PictPoliceWhistle = 59218;
    /// <summary>
    /// Quijada (jawbone).
    /// </summary>
    public const int PictQuijada = 59130;
    /// <summary>
    /// Rainstick.
    /// </summary>
    public const int PictRainstick = 59207;
    /// <summary>
    /// Ratchet.
    /// </summary>
    public const int PictRatchet = 59124;
    /// <summary>
    /// Reco-reco.
    /// </summary>
    public const int PictRecoReco = 59132;
    /// <summary>
    /// Left hand (Agostini).
    /// </summary>
    public const int PictRightHandSquare = 59398;
    /// <summary>
    /// Rim or edge (Weinberg).
    /// </summary>
    public const int PictRim1 = 59393;
    /// <summary>
    /// Rim (Ghent).
    /// </summary>
    public const int PictRim2 = 59394;
    /// <summary>
    /// Rim (Caltabiano).
    /// </summary>
    public const int PictRim3 = 59395;
    /// <summary>
    /// Rim shot for stem.
    /// </summary>
    public const int PictRimShotOnStem = 59389;
    /// <summary>
    /// Sandpaper blocks.
    /// </summary>
    public const int PictSandpaperBlocks = 59234;
    /// <summary>
    /// Scrape around rim (counter-clockwise).
    /// </summary>
    public const int PictScrapeAroundRim = 59379;
    /// <summary>
    /// Scrape around rim (clockwise).
    /// </summary>
    public const int PictScrapeAroundRimClockwise = 59406;
    /// <summary>
    /// Scrape from center to edge.
    /// </summary>
    public const int PictScrapeCenterToEdge = 59377;
    /// <summary>
    /// Scrape from edge to center.
    /// </summary>
    public const int PictScrapeEdgeToCenter = 59378;
    /// <summary>
    /// Shell bells.
    /// </summary>
    public const int PictShellBells = 59160;
    /// <summary>
    /// Shell chimes.
    /// </summary>
    public const int PictShellChimes = 59076;
    /// <summary>
    /// Siren.
    /// </summary>
    public const int PictSiren = 59219;
    /// <summary>
    /// Sistrum.
    /// </summary>
    public const int PictSistrum = 59206;
    /// <summary>
    /// Sizzle cymbal.
    /// </summary>
    public const int PictSizzleCymbal = 59172;
    /// <summary>
    /// Sleigh bell.
    /// </summary>
    public const int PictSleighBell = 59152;
    /// <summary>
    /// Slide brush on gong.
    /// </summary>
    public const int PictSlideBrushOnGong = 59188;
    /// <summary>
    /// Slide whistle.
    /// </summary>
    public const int PictSlideWhistle = 59216;
    /// <summary>
    /// Slit drum.
    /// </summary>
    public const int PictSlitDrum = 59104;
    /// <summary>
    /// Snare drum.
    /// </summary>
    public const int PictSnareDrum = 59089;
    /// <summary>
    /// Military snare drum.
    /// </summary>
    public const int PictSnareDrumMilitary = 59091;
    /// <summary>
    /// Snare drum, snares off.
    /// </summary>
    public const int PictSnareDrumSnaresOff = 59090;
    /// <summary>
    /// Steel drums.
    /// </summary>
    public const int PictSteelDrums = 59055;
    /// <summary>
    /// Stick shot.
    /// </summary>
    public const int PictStickShot = 59376;
    /// <summary>
    /// Superball.
    /// </summary>
    public const int PictSuperball = 59314;
    /// <summary>
    /// Suspended cymbal.
    /// </summary>
    public const int PictSuspendedCymbal = 59169;
    /// <summary>
    /// Combining swish for stem.
    /// </summary>
    public const int PictSwishStem = 59400;
    /// <summary>
    /// Indian tabla.
    /// </summary>
    public const int PictTabla = 59107;
    /// <summary>
    /// Tam-tam.
    /// </summary>
    public const int PictTamTam = 59184;
    /// <summary>
    /// Tam-tam with beater (Smith Brindle).
    /// </summary>
    public const int PictTamTamWithBeater = 59185;
    /// <summary>
    /// Tambourine.
    /// </summary>
    public const int PictTambourine = 59099;
    /// <summary>
    /// Temple blocks.
    /// </summary>
    public const int PictTempleBlocks = 59121;
    /// <summary>
    /// Tenor drum.
    /// </summary>
    public const int PictTenorDrum = 59094;
    /// <summary>
    /// Thundersheet.
    /// </summary>
    public const int PictThundersheet = 59204;
    /// <summary>
    /// Timbales.
    /// </summary>
    public const int PictTimbales = 59100;
    /// <summary>
    /// Timpani.
    /// </summary>
    public const int PictTimpani = 59088;
    /// <summary>
    /// Tom-tom.
    /// </summary>
    public const int PictTomTom = 59095;
    /// <summary>
    /// Chinese tom-tom.
    /// </summary>
    public const int PictTomTomChinese = 59096;
    /// <summary>
    /// Indo-American tom tom.
    /// </summary>
    public const int PictTomTomIndoAmerican = 59098;
    /// <summary>
    /// Japanese tom-tom.
    /// </summary>
    public const int PictTomTomJapanese = 59097;
    /// <summary>
    /// Triangle.
    /// </summary>
    public const int PictTriangle = 59136;
    /// <summary>
    /// Tubaphone.
    /// </summary>
    public const int PictTubaphone = 59058;
    /// <summary>
    /// Tubular bells.
    /// </summary>
    public const int PictTubularBells = 59072;
    /// <summary>
    /// Combining turn left for stem.
    /// </summary>
    public const int PictTurnLeftStem = 59402;
    /// <summary>
    /// Combining turn left or right for stem.
    /// </summary>
    public const int PictTurnRightLeftStem = 59403;
    /// <summary>
    /// Combining turn right for stem.
    /// </summary>
    public const int PictTurnRightStem = 59401;
    /// <summary>
    /// Vibraphone.
    /// </summary>
    public const int PictVib = 59047;
    /// <summary>
    /// Metallophone (vibraphone motor off).
    /// </summary>
    public const int PictVibMotorOff = 59048;
    /// <summary>
    /// Vibraphone (Smith Brindle).
    /// </summary>
    public const int PictVibSmithBrindle = 59053;
    /// <summary>
    /// Vibraslap.
    /// </summary>
    public const int PictVibraslap = 59205;
    /// <summary>
    /// Vietnamese hat cymbal.
    /// </summary>
    public const int PictVietnameseHat = 59173;
    /// <summary>
    /// Whip.
    /// </summary>
    public const int PictWhip = 59126;
    /// <summary>
    /// Wind chimes (glass).
    /// </summary>
    public const int PictWindChimesGlass = 59073;
    /// <summary>
    /// Wind machine.
    /// </summary>
    public const int PictWindMachine = 59220;
    /// <summary>
    /// Wind whistle (or mouth siren).
    /// </summary>
    public const int PictWindWhistle = 59224;
    /// <summary>
    /// Wood block.
    /// </summary>
    public const int PictWoodBlock = 59120;
    /// <summary>
    /// Wound beater, hard core down.
    /// </summary>
    public const int PictWoundHardDown = 59316;
    /// <summary>
    /// Wound beater, hard core left.
    /// </summary>
    public const int PictWoundHardLeft = 59318;
    /// <summary>
    /// Wound beater, hard core right.
    /// </summary>
    public const int PictWoundHardRight = 59317;
    /// <summary>
    /// Wound beater, hard core up.
    /// </summary>
    public const int PictWoundHardUp = 59315;
    /// <summary>
    /// Wound beater, soft core down.
    /// </summary>
    public const int PictWoundSoftDown = 59320;
    /// <summary>
    /// Wound beater, soft core left.
    /// </summary>
    public const int PictWoundSoftLeft = 59322;
    /// <summary>
    /// Wound beater, soft core right.
    /// </summary>
    public const int PictWoundSoftRight = 59321;
    /// <summary>
    /// Wound beater, soft core up.
    /// </summary>
    public const int PictWoundSoftUp = 59319;
    /// <summary>
    /// Xylophone.
    /// </summary>
    public const int PictXyl = 59041;
    /// <summary>
    /// Bass xylophone.
    /// </summary>
    public const int PictXylBass = 59043;
    /// <summary>
    /// Xylophone (Smith Brindle).
    /// </summary>
    public const int PictXylSmithBrindle = 59051;
    /// <summary>
    /// Tenor xylophone.
    /// </summary>
    public const int PictXylTenor = 59042;
    /// <summary>
    /// Trough tenor xylophone.
    /// </summary>
    public const int PictXylTenorTrough = 59045;
    /// <summary>
    /// Trough xylophone.
    /// </summary>
    public const int PictXylTrough = 59044;
    /// <summary>
    /// Buzz pizzicato.
    /// </summary>
    public const int PluckedBuzzPizzicato = 58930;
    /// <summary>
    /// Damp.
    /// </summary>
    public const int PluckedDamp = 58936;
    /// <summary>
    /// Damp all.
    /// </summary>
    public const int PluckedDampAll = 58937;
    /// <summary>
    /// Damp for stem.
    /// </summary>
    public const int PluckedDampOnStem = 58939;
    /// <summary>
    /// Fingernail flick.
    /// </summary>
    public const int PluckedFingernailFlick = 58935;
    /// <summary>
    /// Left-hand pizzicato.
    /// </summary>
    public const int PluckedLeftHandPizzicato = 58931;
    /// <summary>
    /// Plectrum.
    /// </summary>
    public const int PluckedPlectrum = 58938;
    /// <summary>
    /// Snap pizzicato above.
    /// </summary>
    public const int PluckedSnapPizzicatoAbove = 58929;
    /// <summary>
    /// Snap pizzicato below.
    /// </summary>
    public const int PluckedSnapPizzicatoBelow = 58928;
    /// <summary>
    /// With fingernails.
    /// </summary>
    public const int PluckedWithFingernails = 58934;
    /// <summary>
    /// Quindicesima.
    /// </summary>
    public const int Quindicesima = 58644;
    /// <summary>
    /// Quindicesima alta.
    /// </summary>
    public const int QuindicesimaAlta = 58645;
    /// <summary>
    /// Quindicesima bassa.
    /// </summary>
    public const int QuindicesimaBassa = 58646;
    /// <summary>
    /// Quindicesima bassa (mb).
    /// </summary>
    public const int QuindicesimaBassaMb = 58653;
    /// <summary>
    /// Repeat last bar.
    /// </summary>
    public const int Repeat1Bar = 58624;
    /// <summary>
    /// Repeat last two bars.
    /// </summary>
    public const int Repeat2Bars = 58625;
    /// <summary>
    /// Repeat last four bars.
    /// </summary>
    public const int Repeat4Bars = 58626;
    /// <summary>
    /// Repeat bar lower dot.
    /// </summary>
    public const int RepeatBarLowerDot = 58629;
    /// <summary>
    /// Repeat bar slash.
    /// </summary>
    public const int RepeatBarSlash = 58628;
    /// <summary>
    /// Repeat bar upper dot.
    /// </summary>
    public const int RepeatBarUpperDot = 58627;
    /// <summary>
    /// Single repeat dot.
    /// </summary>
    public const int RepeatDot = 57412;
    /// <summary>
    /// Repeat dots.
    /// </summary>
    public const int RepeatDots = 57411;
    /// <summary>
    /// Left (start) repeat sign.
    /// </summary>
    public const int RepeatLeft = 57408;
    /// <summary>
    /// Right (end) repeat sign.
    /// </summary>
    public const int RepeatRight = 57409;
    /// <summary>
    /// Right and left repeat sign.
    /// </summary>
    public const int RepeatRightLeft = 57410;
    /// <summary>
    /// 1024th rest.
    /// </summary>
    public const int Rest1024th = 58605;
    /// <summary>
    /// 128th (semihemidemisemiquaver) rest.
    /// </summary>
    public const int Rest128th = 58602;
    /// <summary>
    /// 16th (semiquaver) rest.
    /// </summary>
    public const int Rest16th = 58599;
    /// <summary>
    /// 256th rest.
    /// </summary>
    public const int Rest256th = 58603;
    /// <summary>
    /// 32nd (demisemiquaver) rest.
    /// </summary>
    public const int Rest32nd = 58600;
    /// <summary>
    /// 512th rest.
    /// </summary>
    public const int Rest512th = 58604;
    /// <summary>
    /// 64th (hemidemisemiquaver) rest.
    /// </summary>
    public const int Rest64th = 58601;
    /// <summary>
    /// Eighth (quaver) rest.
    /// </summary>
    public const int Rest8th = 58598;
    /// <summary>
    /// Double whole (breve) rest.
    /// </summary>
    public const int RestDoubleWhole = 58594;
    /// <summary>
    /// Double whole rest on leger lines.
    /// </summary>
    public const int RestDoubleWholeLegerLine = 58611;
    /// <summary>
    /// Multiple measure rest.
    /// </summary>
    public const int RestHBar = 58606;
    /// <summary>
    /// H-bar, left half.
    /// </summary>
    public const int RestHBarLeft = 58607;
    /// <summary>
    /// H-bar, middle.
    /// </summary>
    public const int RestHBarMiddle = 58608;
    /// <summary>
    /// H-bar, right half.
    /// </summary>
    public const int RestHBarRight = 58609;
    /// <summary>
    /// Half (minim) rest.
    /// </summary>
    public const int RestHalf = 58596;
    /// <summary>
    /// Half rest on leger line.
    /// </summary>
    public const int RestHalfLegerLine = 58613;
    /// <summary>
    /// Longa rest.
    /// </summary>
    public const int RestLonga = 58593;
    /// <summary>
    /// Maxima rest.
    /// </summary>
    public const int RestMaxima = 58592;
    /// <summary>
    /// Quarter (crotchet) rest.
    /// </summary>
    public const int RestQuarter = 58597;
    /// <summary>
    /// Old-style quarter (crotchet) rest.
    /// </summary>
    public const int RestQuarterOld = 58610;
    /// <summary>
    /// Z-style quarter (crotchet) rest.
    /// </summary>
    public const int RestQuarterZ = 58614;
    /// <summary>
    /// Whole (semibreve) rest.
    /// </summary>
    public const int RestWhole = 58595;
    /// <summary>
    /// Whole rest on leger line.
    /// </summary>
    public const int RestWholeLegerLine = 58612;
    /// <summary>
    /// Reversed brace.
    /// </summary>
    public const int ReversedBrace = 57345;
    /// <summary>
    /// Reversed bracket bottom.
    /// </summary>
    public const int ReversedBracketBottom = 57350;
    /// <summary>
    /// Reversed bracket top.
    /// </summary>
    public const int ReversedBracketTop = 57349;
    /// <summary>
    /// Right repeat sign within bar.
    /// </summary>
    public const int RightRepeatSmall = 57421;
    /// <summary>
    /// Scale degree 1.
    /// </summary>
    public const int ScaleDegree1 = 61184;
    /// <summary>
    /// Scale degree 2.
    /// </summary>
    public const int ScaleDegree2 = 61185;
    /// <summary>
    /// Scale degree 3.
    /// </summary>
    public const int ScaleDegree3 = 61186;
    /// <summary>
    /// Scale degree 4.
    /// </summary>
    public const int ScaleDegree4 = 61187;
    /// <summary>
    /// Scale degree 5.
    /// </summary>
    public const int ScaleDegree5 = 61188;
    /// <summary>
    /// Scale degree 6.
    /// </summary>
    public const int ScaleDegree6 = 61189;
    /// <summary>
    /// Scale degree 7.
    /// </summary>
    public const int ScaleDegree7 = 61190;
    /// <summary>
    /// Scale degree 8.
    /// </summary>
    public const int ScaleDegree8 = 61191;
    /// <summary>
    /// Scale degree 9.
    /// </summary>
    public const int ScaleDegree9 = 61192;
    /// <summary>
    /// Schäffer clef.
    /// </summary>
    public const int SchaefferClef = 57455;
    /// <summary>
    /// Schäffer F clef to G clef change.
    /// </summary>
    public const int SchaefferFClefToGClef = 57458;
    /// <summary>
    /// Schäffer G clef to F clef change.
    /// </summary>
    public const int SchaefferGClefToFClef = 57457;
    /// <summary>
    /// Schäffer previous clef.
    /// </summary>
    public const int SchaefferPreviousClef = 57456;
    /// <summary>
    /// Segno.
    /// </summary>
    public const int Segno = 57415;
    /// <summary>
    /// Segno (serpent).
    /// </summary>
    public const int SegnoSerpent1 = 57418;
    /// <summary>
    /// Segno (serpent with vertical lines).
    /// </summary>
    public const int SegnoSerpent2 = 57419;
    /// <summary>
    /// Semi-pitched percussion clef 1.
    /// </summary>
    public const int SemipitchedPercussionClef1 = 57451;
    /// <summary>
    /// Semi-pitched percussion clef 2.
    /// </summary>
    public const int SemipitchedPercussionClef2 = 57452;
    /// <summary>
    /// Flat.
    /// </summary>
    public const int SmnFlat = 60498;
    /// <summary>
    /// Flat (white).
    /// </summary>
    public const int SmnFlatWhite = 60499;
    /// <summary>
    /// Double flat history sign.
    /// </summary>
    public const int SmnHistoryDoubleFlat = 60503;
    /// <summary>
    /// Double sharp history sign.
    /// </summary>
    public const int SmnHistoryDoubleSharp = 60501;
    /// <summary>
    /// Flat history sign.
    /// </summary>
    public const int SmnHistoryFlat = 60502;
    /// <summary>
    /// Sharp history sign.
    /// </summary>
    public const int SmnHistorySharp = 60500;
    /// <summary>
    /// Natural (N).
    /// </summary>
    public const int SmnNatural = 60504;
    /// <summary>
    /// Sharp stem up.
    /// </summary>
    public const int SmnSharp = 60496;
    /// <summary>
    /// Sharp stem down.
    /// </summary>
    public const int SmnSharpDown = 60505;
    /// <summary>
    /// Sharp (white) stem up.
    /// </summary>
    public const int SmnSharpWhite = 60497;
    /// <summary>
    /// Sharp (white) stem down.
    /// </summary>
    public const int SmnSharpWhiteDown = 60506;
    /// <summary>
    /// Split bar divider (bar spans a system break).
    /// </summary>
    public const int SplitBarDivider = 57354;
    /// <summary>
    /// 1-line staff.
    /// </summary>
    public const int Staff1Line = 57360;
    /// <summary>
    /// 1-line staff (narrow).
    /// </summary>
    public const int Staff1LineNarrow = 57372;
    /// <summary>
    /// 1-line staff (wide).
    /// </summary>
    public const int Staff1LineWide = 57366;
    /// <summary>
    /// 2-line staff.
    /// </summary>
    public const int Staff2Lines = 57361;
    /// <summary>
    /// 2-line staff (narrow).
    /// </summary>
    public const int Staff2LinesNarrow = 57373;
    /// <summary>
    /// 2-line staff (wide).
    /// </summary>
    public const int Staff2LinesWide = 57367;
    /// <summary>
    /// 3-line staff.
    /// </summary>
    public const int Staff3Lines = 57362;
    /// <summary>
    /// 3-line staff (narrow).
    /// </summary>
    public const int Staff3LinesNarrow = 57374;
    /// <summary>
    /// 3-line staff (wide).
    /// </summary>
    public const int Staff3LinesWide = 57368;
    /// <summary>
    /// 4-line staff.
    /// </summary>
    public const int Staff4Lines = 57363;
    /// <summary>
    /// 4-line staff (narrow).
    /// </summary>
    public const int Staff4LinesNarrow = 57375;
    /// <summary>
    /// 4-line staff (wide).
    /// </summary>
    public const int Staff4LinesWide = 57369;
    /// <summary>
    /// 5-line staff.
    /// </summary>
    public const int Staff5Lines = 57364;
    /// <summary>
    /// 5-line staff (narrow).
    /// </summary>
    public const int Staff5LinesNarrow = 57376;
    /// <summary>
    /// 5-line staff (wide).
    /// </summary>
    public const int Staff5LinesWide = 57370;
    /// <summary>
    /// 6-line staff.
    /// </summary>
    public const int Staff6Lines = 57365;
    /// <summary>
    /// 6-line staff (narrow).
    /// </summary>
    public const int Staff6LinesNarrow = 57377;
    /// <summary>
    /// 6-line staff (wide).
    /// </summary>
    public const int Staff6LinesWide = 57371;
    /// <summary>
    /// Staff divide arrow down.
    /// </summary>
    public const int StaffDivideArrowDown = 57355;
    /// <summary>
    /// Staff divide arrow up.
    /// </summary>
    public const int StaffDivideArrowUp = 57356;
    /// <summary>
    /// Staff divide arrows.
    /// </summary>
    public const int StaffDivideArrowUpDown = 57357;
    /// <summary>
    /// Lower 1 staff position.
    /// </summary>
    public const int StaffPosLower1 = 60312;
    /// <summary>
    /// Lower 2 staff positions.
    /// </summary>
    public const int StaffPosLower2 = 60313;
    /// <summary>
    /// Lower 3 staff positions.
    /// </summary>
    public const int StaffPosLower3 = 60314;
    /// <summary>
    /// Lower 4 staff positions.
    /// </summary>
    public const int StaffPosLower4 = 60315;
    /// <summary>
    /// Lower 5 staff positions.
    /// </summary>
    public const int StaffPosLower5 = 60316;
    /// <summary>
    /// Lower 6 staff positions.
    /// </summary>
    public const int StaffPosLower6 = 60317;
    /// <summary>
    /// Lower 7 staff positions.
    /// </summary>
    public const int StaffPosLower7 = 60318;
    /// <summary>
    /// Lower 8 staff positions.
    /// </summary>
    public const int StaffPosLower8 = 60319;
    /// <summary>
    /// Raise 1 staff position.
    /// </summary>
    public const int StaffPosRaise1 = 60304;
    /// <summary>
    /// Raise 2 staff positions.
    /// </summary>
    public const int StaffPosRaise2 = 60305;
    /// <summary>
    /// Raise 3 staff positions.
    /// </summary>
    public const int StaffPosRaise3 = 60306;
    /// <summary>
    /// Raise 4 staff positions.
    /// </summary>
    public const int StaffPosRaise4 = 60307;
    /// <summary>
    /// Raise 5 staff positions.
    /// </summary>
    public const int StaffPosRaise5 = 60308;
    /// <summary>
    /// Raise 6 staff positions.
    /// </summary>
    public const int StaffPosRaise6 = 60309;
    /// <summary>
    /// Raise 7 staff positions.
    /// </summary>
    public const int StaffPosRaise7 = 60310;
    /// <summary>
    /// Raise 8 staff positions.
    /// </summary>
    public const int StaffPosRaise8 = 60311;
    /// <summary>
    /// Combining stem.
    /// </summary>
    public const int Stem = 57872;
    /// <summary>
    /// Combining bow on bridge stem.
    /// </summary>
    public const int StemBowOnBridge = 57877;
    /// <summary>
    /// Combining bow on tailpiece stem.
    /// </summary>
    public const int StemBowOnTailpiece = 57878;
    /// <summary>
    /// Combining buzz roll stem.
    /// </summary>
    public const int StemBuzzRoll = 57879;
    /// <summary>
    /// Combining damp stem.
    /// </summary>
    public const int StemDamp = 57880;
    /// <summary>
    /// Combining harp string noise stem.
    /// </summary>
    public const int StemHarpStringNoise = 57887;
    /// <summary>
    /// Combining multiphonics (black) stem.
    /// </summary>
    public const int StemMultiphonicsBlack = 57882;
    /// <summary>
    /// Combining multiphonics (black and white) stem.
    /// </summary>
    public const int StemMultiphonicsBlackWhite = 57884;
    /// <summary>
    /// Combining multiphonics (white) stem.
    /// </summary>
    public const int StemMultiphonicsWhite = 57883;
    /// <summary>
    /// Combining Penderecki unmeasured tremolo stem.
    /// </summary>
    public const int StemPendereckiTremolo = 57875;
    /// <summary>
    /// Combining rim shot stem.
    /// </summary>
    public const int StemRimShot = 57886;
    /// <summary>
    /// Combining sprechgesang stem.
    /// </summary>
    public const int StemSprechgesang = 57873;
    /// <summary>
    /// Combining sul ponticello (bow behind bridge) stem.
    /// </summary>
    public const int StemSulPonticello = 57876;
    /// <summary>
    /// Combining sussurando stem.
    /// </summary>
    public const int StemSussurando = 57885;
    /// <summary>
    /// Combining swished stem.
    /// </summary>
    public const int StemSwished = 57874;
    /// <summary>
    /// Combining vibrato pulse accent (Saunders) stem.
    /// </summary>
    public const int StemVibratoPulse = 57881;
    /// <summary>
    /// Stockhausen irregular tremolo ("Morsen", like Morse code).
    /// </summary>
    public const int StockhausenTremolo = 57906;
    /// <summary>
    /// Bow behind bridge (sul ponticello).
    /// </summary>
    public const int StringsBowBehindBridge = 58904;
    /// <summary>
    /// Bow behind bridge on four strings.
    /// </summary>
    public const int StringsBowBehindBridgeFourStrings = 58922;
    /// <summary>
    /// Bow behind bridge on one string.
    /// </summary>
    public const int StringsBowBehindBridgeOneString = 58919;
    /// <summary>
    /// Bow behind bridge on three strings.
    /// </summary>
    public const int StringsBowBehindBridgeThreeStrings = 58921;
    /// <summary>
    /// Bow behind bridge on two strings.
    /// </summary>
    public const int StringsBowBehindBridgeTwoStrings = 58920;
    /// <summary>
    /// Bow on top of bridge.
    /// </summary>
    public const int StringsBowOnBridge = 58905;
    /// <summary>
    /// Bow on tailpiece.
    /// </summary>
    public const int StringsBowOnTailpiece = 58906;
    /// <summary>
    /// Change bow direction, indeterminate.
    /// </summary>
    public const int StringsChangeBowDirection = 58918;
    /// <summary>
    /// Down bow.
    /// </summary>
    public const int StringsDownBow = 58896;
    /// <summary>
    /// Down bow, away from body.
    /// </summary>
    public const int StringsDownBowAwayFromBody = 61058;
    /// <summary>
    /// Down bow, beyond bridge.
    /// </summary>
    public const int StringsDownBowBeyondBridge = 61060;
    /// <summary>
    /// Down bow, towards body.
    /// </summary>
    public const int StringsDownBowTowardsBody = 61056;
    /// <summary>
    /// Turned down bow.
    /// </summary>
    public const int StringsDownBowTurned = 58897;
    /// <summary>
    /// Fouetté.
    /// </summary>
    public const int StringsFouette = 58914;
    /// <summary>
    /// Half-harmonic.
    /// </summary>
    public const int StringsHalfHarmonic = 58901;
    /// <summary>
    /// Harmonic.
    /// </summary>
    public const int StringsHarmonic = 58900;
    /// <summary>
    /// Jeté (gettato) above.
    /// </summary>
    public const int StringsJeteAbove = 58912;
    /// <summary>
    /// Jeté (gettato) below.
    /// </summary>
    public const int StringsJeteBelow = 58913;
    /// <summary>
    /// Mute off.
    /// </summary>
    public const int StringsMuteOff = 58903;
    /// <summary>
    /// Mute on.
    /// </summary>
    public const int StringsMuteOn = 58902;
    /// <summary>
    /// Overpressure, down bow.
    /// </summary>
    public const int StringsOverpressureDownBow = 58907;
    /// <summary>
    /// Overpressure, no bow direction.
    /// </summary>
    public const int StringsOverpressureNoDirection = 58911;
    /// <summary>
    /// Overpressure possibile, down bow.
    /// </summary>
    public const int StringsOverpressurePossibileDownBow = 58909;
    /// <summary>
    /// Overpressure possibile, up bow.
    /// </summary>
    public const int StringsOverpressurePossibileUpBow = 58910;
    /// <summary>
    /// Overpressure, up bow.
    /// </summary>
    public const int StringsOverpressureUpBow = 58908;
    /// <summary>
    /// Scrape, circular clockwise.
    /// </summary>
    public const int StringsScrapeCircularClockwise = 61064;
    /// <summary>
    /// Scrape, circular counter-clockwise.
    /// </summary>
    public const int StringsScrapeCircularCounterclockwise = 61065;
    /// <summary>
    /// Scrape, parallel inward.
    /// </summary>
    public const int StringsScrapeParallelInward = 61062;
    /// <summary>
    /// Scrape, parallel outward.
    /// </summary>
    public const int StringsScrapeParallelOutward = 61063;
    /// <summary>
    /// Thumb position.
    /// </summary>
    public const int StringsThumbPosition = 58916;
    /// <summary>
    /// Turned thumb position.
    /// </summary>
    public const int StringsThumbPositionTurned = 58917;
    /// <summary>
    /// Triple chop, inward.
    /// </summary>
    public const int StringsTripleChopInward = 61066;
    /// <summary>
    /// Triple chop, outward.
    /// </summary>
    public const int StringsTripleChopOutward = 61067;
    /// <summary>
    /// Up bow.
    /// </summary>
    public const int StringsUpBow = 58898;
    /// <summary>
    /// Up bow, away from body.
    /// </summary>
    public const int StringsUpBowAwayFromBody = 61059;
    /// <summary>
    /// Up bow, beyond bridge.
    /// </summary>
    public const int StringsUpBowBeyondBridge = 61061;
    /// <summary>
    /// Up bow, towards body.
    /// </summary>
    public const int StringsUpBowTowardsBody = 61057;
    /// <summary>
    /// Turned up bow.
    /// </summary>
    public const int StringsUpBowTurned = 58899;
    /// <summary>
    /// Vibrato pulse accent (Saunders) for stem.
    /// </summary>
    public const int StringsVibratoPulse = 58915;
    /// <summary>
    /// Swiss rudiments doublé black notehead.
    /// </summary>
    public const int SwissRudimentsNoteheadBlackDouble = 61042;
    /// <summary>
    /// Swiss rudiments flam black notehead.
    /// </summary>
    public const int SwissRudimentsNoteheadBlackFlam = 61040;
    /// <summary>
    /// Swiss rudiments doublé half (minim) notehead.
    /// </summary>
    public const int SwissRudimentsNoteheadHalfDouble = 61043;
    /// <summary>
    /// Swiss rudiments flam half (minim) notehead.
    /// </summary>
    public const int SwissRudimentsNoteheadHalfFlam = 61041;
    /// <summary>
    /// System divider.
    /// </summary>
    public const int SystemDivider = 57351;
    /// <summary>
    /// Extra long system divider.
    /// </summary>
    public const int SystemDividerExtraLong = 57353;
    /// <summary>
    /// Long system divider.
    /// </summary>
    public const int SystemDividerLong = 57352;
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const int TextAugmentationDot = 57852;
    /// <summary>
    /// Black note, fractional 16th beam, long stem.
    /// </summary>
    public const int TextBlackNoteFrac16thLongStem = 57845;
    /// <summary>
    /// Black note, fractional 16th beam, short stem.
    /// </summary>
    public const int TextBlackNoteFrac16thShortStem = 57844;
    /// <summary>
    /// Black note, fractional 32nd beam, long stem.
    /// </summary>
    public const int TextBlackNoteFrac32ndLongStem = 57846;
    /// <summary>
    /// Black note, fractional 8th beam, long stem.
    /// </summary>
    public const int TextBlackNoteFrac8thLongStem = 57843;
    /// <summary>
    /// Black note, fractional 8th beam, short stem.
    /// </summary>
    public const int TextBlackNoteFrac8thShortStem = 57842;
    /// <summary>
    /// Black note, long stem.
    /// </summary>
    public const int TextBlackNoteLongStem = 57841;
    /// <summary>
    /// Black note, short stem.
    /// </summary>
    public const int TextBlackNoteShortStem = 57840;
    /// <summary>
    /// Continuing 16th beam for long stem.
    /// </summary>
    public const int TextCont16thBeamLongStem = 57850;
    /// <summary>
    /// Continuing 16th beam for short stem.
    /// </summary>
    public const int TextCont16thBeamShortStem = 57849;
    /// <summary>
    /// Continuing 32nd beam for long stem.
    /// </summary>
    public const int TextCont32ndBeamLongStem = 57851;
    /// <summary>
    /// Continuing 8th beam for long stem.
    /// </summary>
    public const int TextCont8thBeamLongStem = 57848;
    /// <summary>
    /// Continuing 8th beam for short stem.
    /// </summary>
    public const int TextCont8thBeamShortStem = 57847;
    /// <summary>
    /// Headless black note, fractional 16th beam, long stem.
    /// </summary>
    public const int TextHeadlessBlackNoteFrac16thLongStem = 57865;
    /// <summary>
    /// Headless black note, fractional 16th beam, short stem.
    /// </summary>
    public const int TextHeadlessBlackNoteFrac16thShortStem = 57864;
    /// <summary>
    /// Headless black note, fractional 32nd beam, long stem.
    /// </summary>
    public const int TextHeadlessBlackNoteFrac32ndLongStem = 57866;
    /// <summary>
    /// Headless black note, fractional 8th beam, long stem.
    /// </summary>
    public const int TextHeadlessBlackNoteFrac8thLongStem = 57863;
    /// <summary>
    /// Headless black note, fractional 8th beam, short stem.
    /// </summary>
    public const int TextHeadlessBlackNoteFrac8thShortStem = 57862;
    /// <summary>
    /// Headless black note, long stem.
    /// </summary>
    public const int TextHeadlessBlackNoteLongStem = 57861;
    /// <summary>
    /// Headless black note, short stem.
    /// </summary>
    public const int TextHeadlessBlackNoteShortStem = 57860;
    /// <summary>
    /// Tie.
    /// </summary>
    public const int TextTie = 57853;
    /// <summary>
    /// Tuplet number 3 for long stem.
    /// </summary>
    public const int TextTuplet3LongStem = 57858;
    /// <summary>
    /// Tuplet number 3 for short stem.
    /// </summary>
    public const int TextTuplet3ShortStem = 57855;
    /// <summary>
    /// Tuplet bracket end for long stem.
    /// </summary>
    public const int TextTupletBracketEndLongStem = 57859;
    /// <summary>
    /// Tuplet bracket end for short stem.
    /// </summary>
    public const int TextTupletBracketEndShortStem = 57856;
    /// <summary>
    /// Tuplet bracket start for long stem.
    /// </summary>
    public const int TextTupletBracketStartLongStem = 57857;
    /// <summary>
    /// Tuplet bracket start for short stem.
    /// </summary>
    public const int TextTupletBracketStartShortStem = 57854;
    /// <summary>
    /// Time signature 0.
    /// </summary>
    public const int TimeSig0 = 57472;
    /// <summary>
    /// Reversed time signature 0.
    /// </summary>
    public const int TimeSig0Reversed = 60656;
    /// <summary>
    /// Turned time signature 0.
    /// </summary>
    public const int TimeSig0Turned = 60640;
    /// <summary>
    /// Time signature 1.
    /// </summary>
    public const int TimeSig1 = 57473;
    /// <summary>
    /// Reversed time signature 1.
    /// </summary>
    public const int TimeSig1Reversed = 60657;
    /// <summary>
    /// Turned time signature 1.
    /// </summary>
    public const int TimeSig1Turned = 60641;
    /// <summary>
    /// Time signature 2.
    /// </summary>
    public const int TimeSig2 = 57474;
    /// <summary>
    /// Reversed time signature 2.
    /// </summary>
    public const int TimeSig2Reversed = 60658;
    /// <summary>
    /// Turned time signature 2.
    /// </summary>
    public const int TimeSig2Turned = 60642;
    /// <summary>
    /// Time signature 3.
    /// </summary>
    public const int TimeSig3 = 57475;
    /// <summary>
    /// Reversed time signature 3.
    /// </summary>
    public const int TimeSig3Reversed = 60659;
    /// <summary>
    /// Turned time signature 3.
    /// </summary>
    public const int TimeSig3Turned = 60643;
    /// <summary>
    /// Time signature 4.
    /// </summary>
    public const int TimeSig4 = 57476;
    /// <summary>
    /// Reversed time signature 4.
    /// </summary>
    public const int TimeSig4Reversed = 60660;
    /// <summary>
    /// Turned time signature 4.
    /// </summary>
    public const int TimeSig4Turned = 60644;
    /// <summary>
    /// Time signature 5.
    /// </summary>
    public const int TimeSig5 = 57477;
    /// <summary>
    /// Reversed time signature 5.
    /// </summary>
    public const int TimeSig5Reversed = 60661;
    /// <summary>
    /// Turned time signature 5.
    /// </summary>
    public const int TimeSig5Turned = 60645;
    /// <summary>
    /// Time signature 6.
    /// </summary>
    public const int TimeSig6 = 57478;
    /// <summary>
    /// Reversed time signature 6.
    /// </summary>
    public const int TimeSig6Reversed = 60662;
    /// <summary>
    /// Turned time signature 6.
    /// </summary>
    public const int TimeSig6Turned = 60646;
    /// <summary>
    /// Time signature 7.
    /// </summary>
    public const int TimeSig7 = 57479;
    /// <summary>
    /// Reversed time signature 7.
    /// </summary>
    public const int TimeSig7Reversed = 60663;
    /// <summary>
    /// Turned time signature 7.
    /// </summary>
    public const int TimeSig7Turned = 60647;
    /// <summary>
    /// Time signature 8.
    /// </summary>
    public const int TimeSig8 = 57480;
    /// <summary>
    /// Reversed time signature 8.
    /// </summary>
    public const int TimeSig8Reversed = 60664;
    /// <summary>
    /// Turned time signature 8.
    /// </summary>
    public const int TimeSig8Turned = 60648;
    /// <summary>
    /// Time signature 9.
    /// </summary>
    public const int TimeSig9 = 57481;
    /// <summary>
    /// Reversed time signature 9.
    /// </summary>
    public const int TimeSig9Reversed = 60665;
    /// <summary>
    /// Turned time signature 9.
    /// </summary>
    public const int TimeSig9Turned = 60649;
    /// <summary>
    /// Left bracket for whole time signature.
    /// </summary>
    public const int TimeSigBracketLeft = 60544;
    /// <summary>
    /// Left bracket for numerator only.
    /// </summary>
    public const int TimeSigBracketLeftSmall = 60546;
    /// <summary>
    /// Right bracket for whole time signature.
    /// </summary>
    public const int TimeSigBracketRight = 60545;
    /// <summary>
    /// Right bracket for numerator only.
    /// </summary>
    public const int TimeSigBracketRightSmall = 60547;
    /// <summary>
    /// Control character for denominator digit.
    /// </summary>
    public const int TimeSigCombDenominator = 57503;
    /// <summary>
    /// Control character for numerator digit.
    /// </summary>
    public const int TimeSigCombNumerator = 57502;
    /// <summary>
    /// Time signature comma.
    /// </summary>
    public const int TimeSigComma = 57494;
    /// <summary>
    /// Common time.
    /// </summary>
    public const int TimeSigCommon = 57482;
    /// <summary>
    /// Reversed common time.
    /// </summary>
    public const int TimeSigCommonReversed = 60666;
    /// <summary>
    /// Turned common time.
    /// </summary>
    public const int TimeSigCommonTurned = 60650;
    /// <summary>
    /// Cut time (Bach).
    /// </summary>
    public const int TimeSigCut2 = 60549;
    /// <summary>
    /// Cut triple time (9/8).
    /// </summary>
    public const int TimeSigCut3 = 60550;
    /// <summary>
    /// Cut time.
    /// </summary>
    public const int TimeSigCutCommon = 57483;
    /// <summary>
    /// Reversed cut time.
    /// </summary>
    public const int TimeSigCutCommonReversed = 60667;
    /// <summary>
    /// Turned cut time.
    /// </summary>
    public const int TimeSigCutCommonTurned = 60651;
    /// <summary>
    /// Time signature equals.
    /// </summary>
    public const int TimeSigEquals = 57487;
    /// <summary>
    /// Time signature fraction ½.
    /// </summary>
    public const int TimeSigFractionHalf = 57496;
    /// <summary>
    /// Time signature fraction ⅓.
    /// </summary>
    public const int TimeSigFractionOneThird = 57498;
    /// <summary>
    /// Time signature fraction ¼.
    /// </summary>
    public const int TimeSigFractionQuarter = 57495;
    /// <summary>
    /// Time signature fraction ¾.
    /// </summary>
    public const int TimeSigFractionThreeQuarters = 57497;
    /// <summary>
    /// Time signature fraction ⅔.
    /// </summary>
    public const int TimeSigFractionTwoThirds = 57499;
    /// <summary>
    /// Time signature fraction slash.
    /// </summary>
    public const int TimeSigFractionalSlash = 57486;
    /// <summary>
    /// Time signature minus.
    /// </summary>
    public const int TimeSigMinus = 57488;
    /// <summary>
    /// Time signature multiply.
    /// </summary>
    public const int TimeSigMultiply = 57489;
    /// <summary>
    /// Open time signature (Penderecki).
    /// </summary>
    public const int TimeSigOpenPenderecki = 57501;
    /// <summary>
    /// Left parenthesis for whole time signature.
    /// </summary>
    public const int TimeSigParensLeft = 57492;
    /// <summary>
    /// Left parenthesis for numerator only.
    /// </summary>
    public const int TimeSigParensLeftSmall = 57490;
    /// <summary>
    /// Right parenthesis for whole time signature.
    /// </summary>
    public const int TimeSigParensRight = 57493;
    /// <summary>
    /// Right parenthesis for numerator only.
    /// </summary>
    public const int TimeSigParensRightSmall = 57491;
    /// <summary>
    /// Time signature +.
    /// </summary>
    public const int TimeSigPlus = 57484;
    /// <summary>
    /// Time signature + (for numerators).
    /// </summary>
    public const int TimeSigPlusSmall = 57485;
    /// <summary>
    /// Time signature slash separator.
    /// </summary>
    public const int TimeSigSlash = 60548;
    /// <summary>
    /// Open time signature.
    /// </summary>
    public const int TimeSigX = 57500;
    /// <summary>
    /// Combining tremolo 1.
    /// </summary>
    public const int Tremolo1 = 57888;
    /// <summary>
    /// Combining tremolo 2.
    /// </summary>
    public const int Tremolo2 = 57889;
    /// <summary>
    /// Combining tremolo 3.
    /// </summary>
    public const int Tremolo3 = 57890;
    /// <summary>
    /// Combining tremolo 4.
    /// </summary>
    public const int Tremolo4 = 57891;
    /// <summary>
    /// Combining tremolo 5.
    /// </summary>
    public const int Tremolo5 = 57892;
    /// <summary>
    /// Divide measured tremolo by 2.
    /// </summary>
    public const int TremoloDivisiDots2 = 57902;
    /// <summary>
    /// Divide measured tremolo by 3.
    /// </summary>
    public const int TremoloDivisiDots3 = 57903;
    /// <summary>
    /// Divide measured tremolo by 4.
    /// </summary>
    public const int TremoloDivisiDots4 = 57904;
    /// <summary>
    /// Divide measured tremolo by 6.
    /// </summary>
    public const int TremoloDivisiDots6 = 57905;
    /// <summary>
    /// Fingered tremolo 1.
    /// </summary>
    public const int TremoloFingered1 = 57893;
    /// <summary>
    /// Fingered tremolo 2.
    /// </summary>
    public const int TremoloFingered2 = 57894;
    /// <summary>
    /// Fingered tremolo 3.
    /// </summary>
    public const int TremoloFingered3 = 57895;
    /// <summary>
    /// Fingered tremolo 4.
    /// </summary>
    public const int TremoloFingered4 = 57896;
    /// <summary>
    /// Fingered tremolo 5.
    /// </summary>
    public const int TremoloFingered5 = 57897;
    /// <summary>
    /// Triple-tongue above.
    /// </summary>
    public const int TripleTongueAbove = 58866;
    /// <summary>
    /// Triple-tongue below.
    /// </summary>
    public const int TripleTongueBelow = 58867;
    /// <summary>
    /// Tuplet 0.
    /// </summary>
    public const int Tuplet0 = 59520;
    /// <summary>
    /// Tuplet 1.
    /// </summary>
    public const int Tuplet1 = 59521;
    /// <summary>
    /// Tuplet 2.
    /// </summary>
    public const int Tuplet2 = 59522;
    /// <summary>
    /// Tuplet 3.
    /// </summary>
    public const int Tuplet3 = 59523;
    /// <summary>
    /// Tuplet 4.
    /// </summary>
    public const int Tuplet4 = 59524;
    /// <summary>
    /// Tuplet 5.
    /// </summary>
    public const int Tuplet5 = 59525;
    /// <summary>
    /// Tuplet 6.
    /// </summary>
    public const int Tuplet6 = 59526;
    /// <summary>
    /// Tuplet 7.
    /// </summary>
    public const int Tuplet7 = 59527;
    /// <summary>
    /// Tuplet 8.
    /// </summary>
    public const int Tuplet8 = 59528;
    /// <summary>
    /// Tuplet 9.
    /// </summary>
    public const int Tuplet9 = 59529;
    /// <summary>
    /// Tuplet colon.
    /// </summary>
    public const int TupletColon = 59530;
    /// <summary>
    /// Wieniawski unmeasured tremolo.
    /// </summary>
    public const int UnmeasuredTremolo = 57900;
    /// <summary>
    /// Wieniawski unmeasured tremolo (simpler).
    /// </summary>
    public const int UnmeasuredTremoloSimple = 57901;
    /// <summary>
    /// Unpitched percussion clef 1.
    /// </summary>
    public const int UnpitchedPercussionClef1 = 57449;
    /// <summary>
    /// Unpitched percussion clef 2.
    /// </summary>
    public const int UnpitchedPercussionClef2 = 57450;
    /// <summary>
    /// Ventiduesima.
    /// </summary>
    public const int Ventiduesima = 58647;
    /// <summary>
    /// Ventiduesima alta.
    /// </summary>
    public const int VentiduesimaAlta = 58648;
    /// <summary>
    /// Ventiduesima bassa.
    /// </summary>
    public const int VentiduesimaBassa = 58649;
    /// <summary>
    /// Ventiduesima bassa (mb).
    /// </summary>
    public const int VentiduesimaBassaMb = 58654;
    /// <summary>
    /// Finger click (Stockhausen).
    /// </summary>
    public const int VocalFingerClickStockhausen = 58953;
    /// <summary>
    /// Halb gesungen (semi-sprechgesang).
    /// </summary>
    public const int VocalHalbGesungen = 58955;
    /// <summary>
    /// Mouth closed.
    /// </summary>
    public const int VocalMouthClosed = 58944;
    /// <summary>
    /// Mouth open.
    /// </summary>
    public const int VocalMouthOpen = 58946;
    /// <summary>
    /// Mouth pursed.
    /// </summary>
    public const int VocalMouthPursed = 58948;
    /// <summary>
    /// Mouth slightly open.
    /// </summary>
    public const int VocalMouthSlightlyOpen = 58945;
    /// <summary>
    /// Mouth wide open.
    /// </summary>
    public const int VocalMouthWideOpen = 58947;
    /// <summary>
    /// Nasal voice.
    /// </summary>
    public const int VocalNasalVoice = 58951;
    /// <summary>
    /// Sprechgesang.
    /// </summary>
    public const int VocalSprechgesang = 58949;
    /// <summary>
    /// Tongue click (Stockhausen).
    /// </summary>
    public const int VocalTongueClickStockhausen = 58952;
    /// <summary>
    /// Tongue and finger click (Stockhausen).
    /// </summary>
    public const int VocalTongueFingerClickStockhausen = 58954;
    /// <summary>
    /// Combining sussurando for stem.
    /// </summary>
    public const int VocalsSussurando = 58950;
    /// <summary>
    /// Arpeggiato wiggle segment, downwards.
    /// </summary>
    public const int WiggleArpeggiatoDown = 60074;
    /// <summary>
    /// Arpeggiato arrowhead down.
    /// </summary>
    public const int WiggleArpeggiatoDownArrow = 60078;
    /// <summary>
    /// Arpeggiato downward swash.
    /// </summary>
    public const int WiggleArpeggiatoDownSwash = 60076;
    /// <summary>
    /// Arpeggiato wiggle segment, upwards.
    /// </summary>
    public const int WiggleArpeggiatoUp = 60073;
    /// <summary>
    /// Arpeggiato arrowhead up.
    /// </summary>
    public const int WiggleArpeggiatoUpArrow = 60077;
    /// <summary>
    /// Arpeggiato upward swash.
    /// </summary>
    public const int WiggleArpeggiatoUpSwash = 60075;
    /// <summary>
    /// Circular motion segment.
    /// </summary>
    public const int WiggleCircular = 60105;
    /// <summary>
    /// Constant circular motion segment.
    /// </summary>
    public const int WiggleCircularConstant = 60096;
    /// <summary>
    /// Constant circular motion segment (flipped).
    /// </summary>
    public const int WiggleCircularConstantFlipped = 60097;
    /// <summary>
    /// Constant circular motion segment (flipped, large).
    /// </summary>
    public const int WiggleCircularConstantFlippedLarge = 60099;
    /// <summary>
    /// Constant circular motion segment (large).
    /// </summary>
    public const int WiggleCircularConstantLarge = 60098;
    /// <summary>
    /// Circular motion end.
    /// </summary>
    public const int WiggleCircularEnd = 60107;
    /// <summary>
    /// Circular motion segment, large.
    /// </summary>
    public const int WiggleCircularLarge = 60104;
    /// <summary>
    /// Circular motion segment, larger.
    /// </summary>
    public const int WiggleCircularLarger = 60103;
    /// <summary>
    /// Circular motion segment, larger still.
    /// </summary>
    public const int WiggleCircularLargerStill = 60102;
    /// <summary>
    /// Circular motion segment, largest.
    /// </summary>
    public const int WiggleCircularLargest = 60101;
    /// <summary>
    /// Circular motion segment, small.
    /// </summary>
    public const int WiggleCircularSmall = 60106;
    /// <summary>
    /// Circular motion start.
    /// </summary>
    public const int WiggleCircularStart = 60100;
    /// <summary>
    /// Glissando wiggle segment.
    /// </summary>
    public const int WiggleGlissando = 60079;
    /// <summary>
    /// Group glissando 1.
    /// </summary>
    public const int WiggleGlissandoGroup1 = 60093;
    /// <summary>
    /// Group glissando 2.
    /// </summary>
    public const int WiggleGlissandoGroup2 = 60094;
    /// <summary>
    /// Group glissando 3.
    /// </summary>
    public const int WiggleGlissandoGroup3 = 60095;
    /// <summary>
    /// Quasi-random squiggle 1.
    /// </summary>
    public const int WiggleRandom1 = 60144;
    /// <summary>
    /// Quasi-random squiggle 2.
    /// </summary>
    public const int WiggleRandom2 = 60145;
    /// <summary>
    /// Quasi-random squiggle 3.
    /// </summary>
    public const int WiggleRandom3 = 60146;
    /// <summary>
    /// Quasi-random squiggle 4.
    /// </summary>
    public const int WiggleRandom4 = 60147;
    /// <summary>
    /// Sawtooth line segment.
    /// </summary>
    public const int WiggleSawtooth = 60091;
    /// <summary>
    /// Narrow sawtooth line segment.
    /// </summary>
    public const int WiggleSawtoothNarrow = 60090;
    /// <summary>
    /// Wide sawtooth line segment.
    /// </summary>
    public const int WiggleSawtoothWide = 60092;
    /// <summary>
    /// Square wave line segment.
    /// </summary>
    public const int WiggleSquareWave = 60088;
    /// <summary>
    /// Narrow square wave line segment.
    /// </summary>
    public const int WiggleSquareWaveNarrow = 60087;
    /// <summary>
    /// Wide square wave line segment.
    /// </summary>
    public const int WiggleSquareWaveWide = 60089;
    /// <summary>
    /// Trill wiggle segment.
    /// </summary>
    public const int WiggleTrill = 60068;
    /// <summary>
    /// Trill wiggle segment, fast.
    /// </summary>
    public const int WiggleTrillFast = 60067;
    /// <summary>
    /// Trill wiggle segment, faster.
    /// </summary>
    public const int WiggleTrillFaster = 60066;
    /// <summary>
    /// Trill wiggle segment, faster still.
    /// </summary>
    public const int WiggleTrillFasterStill = 60065;
    /// <summary>
    /// Trill wiggle segment, fastest.
    /// </summary>
    public const int WiggleTrillFastest = 60064;
    /// <summary>
    /// Trill wiggle segment, slow.
    /// </summary>
    public const int WiggleTrillSlow = 60069;
    /// <summary>
    /// Trill wiggle segment, slower.
    /// </summary>
    public const int WiggleTrillSlower = 60070;
    /// <summary>
    /// Trill wiggle segment, slower still.
    /// </summary>
    public const int WiggleTrillSlowerStill = 60071;
    /// <summary>
    /// Trill wiggle segment, slowest.
    /// </summary>
    public const int WiggleTrillSlowest = 60072;
    /// <summary>
    /// Vibrato largest, slower.
    /// </summary>
    public const int WiggleVIbratoLargestSlower = 60142;
    /// <summary>
    /// Vibrato medium, slower.
    /// </summary>
    public const int WiggleVIbratoMediumSlower = 60128;
    /// <summary>
    /// Vibrato / shake wiggle segment.
    /// </summary>
    public const int WiggleVibrato = 60080;
    /// <summary>
    /// Vibrato large, fast.
    /// </summary>
    public const int WiggleVibratoLargeFast = 60133;
    /// <summary>
    /// Vibrato large, faster.
    /// </summary>
    public const int WiggleVibratoLargeFaster = 60132;
    /// <summary>
    /// Vibrato large, faster still.
    /// </summary>
    public const int WiggleVibratoLargeFasterStill = 60131;
    /// <summary>
    /// Vibrato large, fastest.
    /// </summary>
    public const int WiggleVibratoLargeFastest = 60130;
    /// <summary>
    /// Vibrato large, slow.
    /// </summary>
    public const int WiggleVibratoLargeSlow = 60134;
    /// <summary>
    /// Vibrato large, slower.
    /// </summary>
    public const int WiggleVibratoLargeSlower = 60135;
    /// <summary>
    /// Vibrato large, slowest.
    /// </summary>
    public const int WiggleVibratoLargeSlowest = 60136;
    /// <summary>
    /// Vibrato largest, fast.
    /// </summary>
    public const int WiggleVibratoLargestFast = 60140;
    /// <summary>
    /// Vibrato largest, faster.
    /// </summary>
    public const int WiggleVibratoLargestFaster = 60139;
    /// <summary>
    /// Vibrato largest, faster still.
    /// </summary>
    public const int WiggleVibratoLargestFasterStill = 60138;
    /// <summary>
    /// Vibrato largest, fastest.
    /// </summary>
    public const int WiggleVibratoLargestFastest = 60137;
    /// <summary>
    /// Vibrato largest, slow.
    /// </summary>
    public const int WiggleVibratoLargestSlow = 60141;
    /// <summary>
    /// Vibrato largest, slowest.
    /// </summary>
    public const int WiggleVibratoLargestSlowest = 60143;
    /// <summary>
    /// Vibrato medium, fast.
    /// </summary>
    public const int WiggleVibratoMediumFast = 60126;
    /// <summary>
    /// Vibrato medium, faster.
    /// </summary>
    public const int WiggleVibratoMediumFaster = 60125;
    /// <summary>
    /// Vibrato medium, faster still.
    /// </summary>
    public const int WiggleVibratoMediumFasterStill = 60124;
    /// <summary>
    /// Vibrato medium, fastest.
    /// </summary>
    public const int WiggleVibratoMediumFastest = 60123;
    /// <summary>
    /// Vibrato medium, slow.
    /// </summary>
    public const int WiggleVibratoMediumSlow = 60127;
    /// <summary>
    /// Vibrato medium, slowest.
    /// </summary>
    public const int WiggleVibratoMediumSlowest = 60129;
    /// <summary>
    /// Vibrato small, fast.
    /// </summary>
    public const int WiggleVibratoSmallFast = 60119;
    /// <summary>
    /// Vibrato small, faster.
    /// </summary>
    public const int WiggleVibratoSmallFaster = 60118;
    /// <summary>
    /// Vibrato small, faster still.
    /// </summary>
    public const int WiggleVibratoSmallFasterStill = 60117;
    /// <summary>
    /// Vibrato small, fastest.
    /// </summary>
    public const int WiggleVibratoSmallFastest = 60116;
    /// <summary>
    /// Vibrato small, slow.
    /// </summary>
    public const int WiggleVibratoSmallSlow = 60120;
    /// <summary>
    /// Vibrato small, slower.
    /// </summary>
    public const int WiggleVibratoSmallSlower = 60121;
    /// <summary>
    /// Vibrato small, slowest.
    /// </summary>
    public const int WiggleVibratoSmallSlowest = 60122;
    /// <summary>
    /// Vibrato smallest, fast.
    /// </summary>
    public const int WiggleVibratoSmallestFast = 60112;
    /// <summary>
    /// Vibrato smallest, faster.
    /// </summary>
    public const int WiggleVibratoSmallestFaster = 60111;
    /// <summary>
    /// Vibrato smallest, faster still.
    /// </summary>
    public const int WiggleVibratoSmallestFasterStill = 60110;
    /// <summary>
    /// Vibrato smallest, fastest.
    /// </summary>
    public const int WiggleVibratoSmallestFastest = 60109;
    /// <summary>
    /// Vibrato smallest, slow.
    /// </summary>
    public const int WiggleVibratoSmallestSlow = 60113;
    /// <summary>
    /// Vibrato smallest, slower.
    /// </summary>
    public const int WiggleVibratoSmallestSlower = 60114;
    /// <summary>
    /// Vibrato smallest, slowest.
    /// </summary>
    public const int WiggleVibratoSmallestSlowest = 60115;
    /// <summary>
    /// Vibrato start.
    /// </summary>
    public const int WiggleVibratoStart = 60108;
    /// <summary>
    /// Wide vibrato / shake wiggle segment.
    /// </summary>
    public const int WiggleVibratoWide = 60081;
    /// <summary>
    /// Wavy line segment.
    /// </summary>
    public const int WiggleWavy = 60085;
    /// <summary>
    /// Narrow wavy line segment.
    /// </summary>
    public const int WiggleWavyNarrow = 60084;
    /// <summary>
    /// Wide wavy line segment.
    /// </summary>
    public const int WiggleWavyWide = 60086;
    /// <summary>
    /// Closed hole.
    /// </summary>
    public const int WindClosedHole = 58868;
    /// <summary>
    /// Flatter embouchure.
    /// </summary>
    public const int WindFlatEmbouchure = 58875;
    /// <summary>
    /// Half-closed hole.
    /// </summary>
    public const int WindHalfClosedHole1 = 58870;
    /// <summary>
    /// Half-closed hole 2.
    /// </summary>
    public const int WindHalfClosedHole2 = 58871;
    /// <summary>
    /// Half-open hole.
    /// </summary>
    public const int WindHalfClosedHole3 = 58872;
    /// <summary>
    /// Somewhat relaxed embouchure.
    /// </summary>
    public const int WindLessRelaxedEmbouchure = 58878;
    /// <summary>
    /// Somewhat tight embouchure.
    /// </summary>
    public const int WindLessTightEmbouchure = 58880;
    /// <summary>
    /// Mouthpiece or hand pop.
    /// </summary>
    public const int WindMouthpiecePop = 58890;
    /// <summary>
    /// Combining multiphonics (black) for stem.
    /// </summary>
    public const int WindMultiphonicsBlackStem = 58887;
    /// <summary>
    /// Combining multiphonics (black and white) for stem.
    /// </summary>
    public const int WindMultiphonicsBlackWhiteStem = 58889;
    /// <summary>
    /// Combining multiphonics (white) for stem.
    /// </summary>
    public const int WindMultiphonicsWhiteStem = 58888;
    /// <summary>
    /// Open hole.
    /// </summary>
    public const int WindOpenHole = 58873;
    /// <summary>
    /// Much more reed (push inwards).
    /// </summary>
    public const int WindReedPositionIn = 58886;
    /// <summary>
    /// Normal reed position.
    /// </summary>
    public const int WindReedPositionNormal = 58884;
    /// <summary>
    /// Very little reed (pull outwards).
    /// </summary>
    public const int WindReedPositionOut = 58885;
    /// <summary>
    /// Relaxed embouchure.
    /// </summary>
    public const int WindRelaxedEmbouchure = 58877;
    /// <summary>
    /// Rim only.
    /// </summary>
    public const int WindRimOnly = 58891;
    /// <summary>
    /// Sharper embouchure.
    /// </summary>
    public const int WindSharpEmbouchure = 58876;
    /// <summary>
    /// Very tight embouchure / strong air pressure.
    /// </summary>
    public const int WindStrongAirPressure = 58883;
    /// <summary>
    /// Three-quarters closed hole.
    /// </summary>
    public const int WindThreeQuartersClosedHole = 58869;
    /// <summary>
    /// Tight embouchure.
    /// </summary>
    public const int WindTightEmbouchure = 58879;
    /// <summary>
    /// Trill key.
    /// </summary>
    public const int WindTrillKey = 58874;
    /// <summary>
    /// Very tight embouchure.
    /// </summary>
    public const int WindVeryTightEmbouchure = 58881;
    /// <summary>
    /// Very relaxed embouchure / weak air-pressure.
    /// </summary>
    public const int WindWeakAirPressure = 58882;
}

/// <summary>
/// All glyph name alternate code points.
/// </summary>
public static class GlyphNameAlternateCodePoints
{
    /// <summary>
    /// Double flat.
    /// </summary>
    public const int AccidentalDoubleFlat = 119083;
    /// <summary>
    /// Double sharp.
    /// </summary>
    public const int AccidentalDoubleSharp = 119082;
    /// <summary>
    /// Flat.
    /// </summary>
    public const int AccidentalFlat = 9837;
    /// <summary>
    /// Natural.
    /// </summary>
    public const int AccidentalNatural = 9838;
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const int AccidentalQuarterToneFlat4 = 119091;
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const int AccidentalQuarterToneFlatArrowUp = 119084;
    /// <summary>
    /// Quarter-tone flat.
    /// </summary>
    public const int AccidentalQuarterToneFlatNaturalArrowDown = 119087;
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const int AccidentalQuarterToneSharp4 = 119090;
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const int AccidentalQuarterToneSharpArrowDown = 119089;
    /// <summary>
    /// Quarter-tone sharp.
    /// </summary>
    public const int AccidentalQuarterToneSharpNaturalArrowUp = 119086;
    /// <summary>
    /// Sharp.
    /// </summary>
    public const int AccidentalSharp = 9839;
    /// <summary>
    /// Three-quarter-tones flat.
    /// </summary>
    public const int AccidentalThreeQuarterTonesFlatArrowDown = 119085;
    /// <summary>
    /// Three-quarter-tones sharp.
    /// </summary>
    public const int AccidentalThreeQuarterTonesSharpArrowUp = 119088;
    /// <summary>
    /// End of stimme.
    /// </summary>
    public const int AnalyticsEndStimme = 119208;
    /// <summary>
    /// Hauptstimme.
    /// </summary>
    public const int AnalyticsHauptstimme = 119206;
    /// <summary>
    /// Nebenstimme.
    /// </summary>
    public const int AnalyticsNebenstimme = 119207;
    /// <summary>
    /// Arpeggiato down.
    /// </summary>
    public const int ArpeggiatoDown = 119172;
    /// <summary>
    /// Arpeggiato up.
    /// </summary>
    public const int ArpeggiatoUp = 119171;
    /// <summary>
    /// Accent above.
    /// </summary>
    public const int ArticAccentAbove = 119163;
    /// <summary>
    /// Accent-staccato above.
    /// </summary>
    public const int ArticAccentStaccatoAbove = 119169;
    /// <summary>
    /// Marcato above.
    /// </summary>
    public const int ArticMarcatoAbove = 119167;
    /// <summary>
    /// Marcato-staccato above.
    /// </summary>
    public const int ArticMarcatoStaccatoAbove = 119168;
    /// <summary>
    /// Staccatissimo above.
    /// </summary>
    public const int ArticStaccatissimoAbove = 119166;
    /// <summary>
    /// Staccato above.
    /// </summary>
    public const int ArticStaccatoAbove = 119164;
    /// <summary>
    /// Tenuto above.
    /// </summary>
    public const int ArticTenutoAbove = 119165;
    /// <summary>
    /// Louré (tenuto-staccato) above.
    /// </summary>
    public const int ArticTenutoStaccatoAbove = 119170;
    /// <summary>
    /// Augmentation dot.
    /// </summary>
    public const int AugmentationDot = 119149;
    /// <summary>
    /// Dashed barline.
    /// </summary>
    public const int BarlineDashed = 119044;
    /// <summary>
    /// Double barline.
    /// </summary>
    public const int BarlineDouble = 119041;
    /// <summary>
    /// Final barline.
    /// </summary>
    public const int BarlineFinal = 119042;
    /// <summary>
    /// Reverse final barline.
    /// </summary>
    public const int BarlineReverseFinal = 119043;
    /// <summary>
    /// Short barline.
    /// </summary>
    public const int BarlineShort = 119045;
    /// <summary>
    /// Single barline.
    /// </summary>
    public const int BarlineSingle = 119040;
    /// <summary>
    /// Brace.
    /// </summary>
    public const int Brace = 119060;
    /// <summary>
    /// Bracket.
    /// </summary>
    public const int Bracket = 119061;
    /// <summary>
    /// Bend.
    /// </summary>
    public const int BrassBend = 119177;
    /// <summary>
    /// Doit, short.
    /// </summary>
    public const int BrassDoitShort = 119173;
    /// <summary>
    /// Lip fall, short.
    /// </summary>
    public const int BrassFallLipShort = 119174;
    /// <summary>
    /// Flip.
    /// </summary>
    public const int BrassFlip = 119175;
    /// <summary>
    /// Smear.
    /// </summary>
    public const int BrassSmear = 119176;
    /// <summary>
    /// Breath mark (comma).
    /// </summary>
    public const int BreathMarkComma = 119058;
    /// <summary>
    /// C clef.
    /// </summary>
    public const int CClef = 119073;
    /// <summary>
    /// Caesura.
    /// </summary>
    public const int Caesura = 119059;
    /// <summary>
    /// Plainchant C clef.
    /// </summary>
    public const int ChantCclef = 119248;
    /// <summary>
    /// Plainchant F clef.
    /// </summary>
    public const int ChantFclef = 119249;
    /// <summary>
    /// Podatus, upper.
    /// </summary>
    public const int ChantPodatusUpper = 119252;
    /// <summary>
    /// Punctum virga.
    /// </summary>
    public const int ChantPunctumVirga = 119251;
    /// <summary>
    /// Coda.
    /// </summary>
    public const int Coda = 119052;
    /// <summary>
    /// Begin beam.
    /// </summary>
    public const int ControlBeginBeam = 119155;
    /// <summary>
    /// Begin phrase.
    /// </summary>
    public const int ControlBeginPhrase = 119161;
    /// <summary>
    /// Begin slur.
    /// </summary>
    public const int ControlBeginSlur = 119159;
    /// <summary>
    /// Begin tie.
    /// </summary>
    public const int ControlBeginTie = 119157;
    /// <summary>
    /// End beam.
    /// </summary>
    public const int ControlEndBeam = 119156;
    /// <summary>
    /// End phrase.
    /// </summary>
    public const int ControlEndPhrase = 119162;
    /// <summary>
    /// End slur.
    /// </summary>
    public const int ControlEndSlur = 119160;
    /// <summary>
    /// End tie.
    /// </summary>
    public const int ControlEndTie = 119158;
    /// <summary>
    /// Diminished.
    /// </summary>
    public const int CsymDiminished = 119209;
    /// <summary>
    /// Da capo.
    /// </summary>
    public const int DaCapo = 119050;
    /// <summary>
    /// Dal segno.
    /// </summary>
    public const int DalSegno = 119049;
    /// <summary>
    /// Double-tongue above.
    /// </summary>
    public const int DoubleTongueAbove = 119178;
    /// <summary>
    /// Crescendo.
    /// </summary>
    public const int DynamicCrescendoHairpin = 119186;
    /// <summary>
    /// Diminuendo.
    /// </summary>
    public const int DynamicDiminuendoHairpin = 119187;
    /// <summary>
    /// Forte.
    /// </summary>
    public const int DynamicForte = 119185;
    /// <summary>
    /// Mezzo.
    /// </summary>
    public const int DynamicMezzo = 119184;
    /// <summary>
    /// Piano.
    /// </summary>
    public const int DynamicPiano = 119183;
    /// <summary>
    /// Rinforzando.
    /// </summary>
    public const int DynamicRinforzando = 119180;
    /// <summary>
    /// Sforzando.
    /// </summary>
    public const int DynamicSforzando = 119181;
    /// <summary>
    /// Z.
    /// </summary>
    public const int DynamicZ = 119182;
    /// <summary>
    /// F clef.
    /// </summary>
    public const int FClef = 119074;
    /// <summary>
    /// F clef ottava alta.
    /// </summary>
    public const int FClef8va = 119075;
    /// <summary>
    /// F clef ottava bassa.
    /// </summary>
    public const int FClef8vb = 119076;
    /// <summary>
    /// Fermata above.
    /// </summary>
    public const int FermataAbove = 119056;
    /// <summary>
    /// Fermata below.
    /// </summary>
    public const int FermataBelow = 119057;
    /// <summary>
    /// Combining flag 5 (128th) above.
    /// </summary>
    public const int Flag128thUp = 119154;
    /// <summary>
    /// Combining flag 2 (16th) above.
    /// </summary>
    public const int Flag16thUp = 119151;
    /// <summary>
    /// Combining flag 3 (32nd) above.
    /// </summary>
    public const int Flag32ndUp = 119152;
    /// <summary>
    /// Combining flag 4 (64th) above.
    /// </summary>
    public const int Flag64thUp = 119153;
    /// <summary>
    /// Combining flag 1 (8th) above.
    /// </summary>
    public const int Flag8thUp = 119150;
    /// <summary>
    /// 4-string fretboard.
    /// </summary>
    public const int Fretboard4String = 119069;
    /// <summary>
    /// 6-string fretboard.
    /// </summary>
    public const int Fretboard6String = 119068;
    /// <summary>
    /// G clef.
    /// </summary>
    public const int GClef = 119070;
    /// <summary>
    /// G clef ottava alta.
    /// </summary>
    public const int GClef8va = 119071;
    /// <summary>
    /// G clef ottava bassa.
    /// </summary>
    public const int GClef8vb = 119072;
    /// <summary>
    /// Glissando down.
    /// </summary>
    public const int GlissandoDown = 119218;
    /// <summary>
    /// Glissando up.
    /// </summary>
    public const int GlissandoUp = 119217;
    /// <summary>
    /// Slashed grace note stem up.
    /// </summary>
    public const int GraceNoteAcciaccaturaStemUp = 119188;
    /// <summary>
    /// Grace note stem up.
    /// </summary>
    public const int GraceNoteAppoggiaturaStemUp = 119189;
    /// <summary>
    /// Half-pedal mark.
    /// </summary>
    public const int KeyboardPedalHalf = 119216;
    /// <summary>
    /// Pedal mark.
    /// </summary>
    public const int KeyboardPedalPed = 119214;
    /// <summary>
    /// Pedal up mark.
    /// </summary>
    public const int KeyboardPedalUp = 119215;
    /// <summary>
    /// Kievan flat.
    /// </summary>
    public const int KievanAccidentalFlat = 119272;
    /// <summary>
    /// Kievan C clef (tse-fa-ut).
    /// </summary>
    public const int KievanCClef = 119262;
    /// <summary>
    /// Kievan ending symbol.
    /// </summary>
    public const int KievanEndingSymbol = 119263;
    /// <summary>
    /// Kievan eighth note, stem down.
    /// </summary>
    public const int KievanNote8thStemDown = 119270;
    /// <summary>
    /// Kievan eighth note, stem up.
    /// </summary>
    public const int KievanNote8thStemUp = 119271;
    /// <summary>
    /// Kievan half note (on staff line).
    /// </summary>
    public const int KievanNoteHalfStaffLine = 119267;
    /// <summary>
    /// Kievan quarter note, stem down.
    /// </summary>
    public const int KievanNoteQuarterStemDown = 119268;
    /// <summary>
    /// Kievan quarter note, stem up.
    /// </summary>
    public const int KievanNoteQuarterStemUp = 119269;
    /// <summary>
    /// Kievan reciting note.
    /// </summary>
    public const int KievanNoteReciting = 119265;
    /// <summary>
    /// Kievan whole note.
    /// </summary>
    public const int KievanNoteWhole = 119266;
    /// <summary>
    /// Kievan final whole note.
    /// </summary>
    public const int KievanNoteWholeFinal = 119264;
    /// <summary>
    /// Flat, soft b (fa).
    /// </summary>
    public const int MedRenFlatSoftB = 119250;
    /// <summary>
    /// Croix.
    /// </summary>
    public const int MedRenSharpCroix = 119247;
    /// <summary>
    /// Black mensural minima.
    /// </summary>
    public const int MensuralBlackMinima = 119228;
    /// <summary>
    /// Black mensural void minima.
    /// </summary>
    public const int MensuralBlackMinimaVoid = 119227;
    /// <summary>
    /// Black mensural semibrevis.
    /// </summary>
    public const int MensuralBlackSemibrevis = 119226;
    /// <summary>
    /// Black mensural void semibrevis.
    /// </summary>
    public const int MensuralBlackSemibrevisVoid = 119225;
    /// <summary>
    /// Tempus perfectum cum prolatione perfecta (9/8).
    /// </summary>
    public const int MensuralProlation1 = 119239;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 4.
    /// </summary>
    public const int MensuralProlation10 = 119246;
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta (3/4).
    /// </summary>
    public const int MensuralProlation2 = 119240;
    /// <summary>
    /// Tempus perfectum cum prolatione imperfecta diminution 1 (3/8).
    /// </summary>
    public const int MensuralProlation3 = 119241;
    /// <summary>
    /// Tempus imperfectum cum prolatione perfecta (6/8).
    /// </summary>
    public const int MensuralProlation5 = 119242;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta (2/4).
    /// </summary>
    public const int MensuralProlation6 = 119243;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2).
    /// </summary>
    public const int MensuralProlation7 = 119244;
    /// <summary>
    /// Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2).
    /// </summary>
    public const int MensuralProlation9 = 119245;
    /// <summary>
    /// Brevis rest.
    /// </summary>
    public const int MensuralRestBrevis = 119235;
    /// <summary>
    /// Longa imperfecta rest.
    /// </summary>
    public const int MensuralRestLongaImperfecta = 119234;
    /// <summary>
    /// Longa perfecta rest.
    /// </summary>
    public const int MensuralRestLongaPerfecta = 119233;
    /// <summary>
    /// Minima rest.
    /// </summary>
    public const int MensuralRestMinima = 119237;
    /// <summary>
    /// Semibrevis rest.
    /// </summary>
    public const int MensuralRestSemibrevis = 119236;
    /// <summary>
    /// Semiminima rest.
    /// </summary>
    public const int MensuralRestSemiminima = 119238;
    /// <summary>
    /// White mensural brevis.
    /// </summary>
    public const int MensuralWhiteBrevis = 119224;
    /// <summary>
    /// White mensural fusa.
    /// </summary>
    public const int MensuralWhiteFusa = 119230;
    /// <summary>
    /// White mensural longa.
    /// </summary>
    public const int MensuralWhiteLonga = 119223;
    /// <summary>
    /// White mensural maxima.
    /// </summary>
    public const int MensuralWhiteMaxima = 119222;
    /// <summary>
    /// White mensural semibrevis.
    /// </summary>
    public const int MensuralWhiteSemibrevis = 119225;
    /// <summary>
    /// 128th note (semihemidemisemiquaver) stem up.
    /// </summary>
    public const int Note128thUp = 119140;
    /// <summary>
    /// 16th note (semiquaver) stem up.
    /// </summary>
    public const int Note16thUp = 119137;
    /// <summary>
    /// 32nd note (demisemiquaver) stem up.
    /// </summary>
    public const int Note32ndUp = 119138;
    /// <summary>
    /// 64th note (hemidemisemiquaver) stem up.
    /// </summary>
    public const int Note64thUp = 119139;
    /// <summary>
    /// Eighth note (quaver) stem up.
    /// </summary>
    public const int Note8thUp = 119136;
    /// <summary>
    /// Double whole note (breve).
    /// </summary>
    public const int NoteDoubleWhole = 119132;
    /// <summary>
    /// Half note (minim) stem up.
    /// </summary>
    public const int NoteHalfUp = 119134;
    /// <summary>
    /// Quarter note (crotchet) stem up.
    /// </summary>
    public const int NoteQuarterUp = 119135;
    /// <summary>
    /// Whole note (semibreve).
    /// </summary>
    public const int NoteWhole = 119133;
    /// <summary>
    /// Black notehead.
    /// </summary>
    public const int NoteheadBlack = 119128;
    /// <summary>
    /// Circle X notehead.
    /// </summary>
    public const int NoteheadCircleX = 119109;
    /// <summary>
    /// Cluster notehead black (square).
    /// </summary>
    public const int NoteheadClusterSquareBlack = 119131;
    /// <summary>
    /// Cluster notehead white (square).
    /// </summary>
    public const int NoteheadClusterSquareWhite = 119130;
    /// <summary>
    /// Half (minim) notehead.
    /// </summary>
    public const int NoteheadHalf = 119127;
    /// <summary>
    /// Moon notehead black.
    /// </summary>
    public const int NoteheadMoonBlack = 119123;
    /// <summary>
    /// Moon notehead white.
    /// </summary>
    public const int NoteheadMoonWhite = 119122;
    /// <summary>
    /// Null notehead.
    /// </summary>
    public const int NoteheadNull = 119129;
    /// <summary>
    /// Parenthesis notehead.
    /// </summary>
    public const int NoteheadParenthesis = 119126;
    /// <summary>
    /// Plus notehead black.
    /// </summary>
    public const int NoteheadPlusBlack = 119108;
    /// <summary>
    /// Slash with horizontal ends.
    /// </summary>
    public const int NoteheadSlashHorizontalEnds = 119053;
    /// <summary>
    /// Square notehead black.
    /// </summary>
    public const int NoteheadSquareBlack = 119111;
    /// <summary>
    /// Square notehead white.
    /// </summary>
    public const int NoteheadSquareWhite = 119110;
    /// <summary>
    /// Triangle notehead down black.
    /// </summary>
    public const int NoteheadTriangleDownBlack = 119119;
    /// <summary>
    /// Triangle notehead down white.
    /// </summary>
    public const int NoteheadTriangleDownWhite = 119118;
    /// <summary>
    /// Triangle notehead left black.
    /// </summary>
    public const int NoteheadTriangleLeftBlack = 119115;
    /// <summary>
    /// Triangle notehead left white.
    /// </summary>
    public const int NoteheadTriangleLeftWhite = 119114;
    /// <summary>
    /// Triangle notehead right black.
    /// </summary>
    public const int NoteheadTriangleRightBlack = 119117;
    /// <summary>
    /// Triangle notehead right white.
    /// </summary>
    public const int NoteheadTriangleRightWhite = 119116;
    /// <summary>
    /// Triangle-round notehead down black.
    /// </summary>
    public const int NoteheadTriangleRoundDownBlack = 119125;
    /// <summary>
    /// Triangle-round notehead down white.
    /// </summary>
    public const int NoteheadTriangleRoundDownWhite = 119124;
    /// <summary>
    /// Triangle notehead up black.
    /// </summary>
    public const int NoteheadTriangleUpBlack = 119113;
    /// <summary>
    /// Triangle notehead up right black.
    /// </summary>
    public const int NoteheadTriangleUpRightBlack = 119121;
    /// <summary>
    /// Triangle notehead up right white.
    /// </summary>
    public const int NoteheadTriangleUpRightWhite = 119120;
    /// <summary>
    /// Triangle notehead up white.
    /// </summary>
    public const int NoteheadTriangleUpWhite = 119112;
    /// <summary>
    /// X notehead black.
    /// </summary>
    public const int NoteheadXBlack = 119107;
    /// <summary>
    /// Ornament bottom left concave stroke, large.
    /// </summary>
    public const int OrnamentBottomLeftConcaveStrokeLarge = 119201;
    /// <summary>
    /// Ornament bottom right concave stroke.
    /// </summary>
    public const int OrnamentBottomRightConcaveStroke = 119199;
    /// <summary>
    /// Ornament high left convex stroke.
    /// </summary>
    public const int OrnamentHighLeftConvexStroke = 119202;
    /// <summary>
    /// Ornament left vertical stroke.
    /// </summary>
    public const int OrnamentLeftVerticalStroke = 119195;
    /// <summary>
    /// Ornament low left convex stroke.
    /// </summary>
    public const int OrnamentLowLeftConvexStroke = 119204;
    /// <summary>
    /// Ornament low right concave stroke.
    /// </summary>
    public const int OrnamentLowRightConcaveStroke = 119203;
    /// <summary>
    /// Ornament middle vertical stroke.
    /// </summary>
    public const int OrnamentMiddleVerticalStroke = 119200;
    /// <summary>
    /// Ornament top left convex stroke.
    /// </summary>
    public const int OrnamentTopLeftConvexStroke = 119205;
    /// <summary>
    /// Ornament top right convex stroke.
    /// </summary>
    public const int OrnamentTopRightConvexStroke = 119198;
    /// <summary>
    /// Trill.
    /// </summary>
    public const int OrnamentTrill = 119190;
    /// <summary>
    /// Turn.
    /// </summary>
    public const int OrnamentTurn = 119191;
    /// <summary>
    /// Inverted turn.
    /// </summary>
    public const int OrnamentTurnInverted = 119192;
    /// <summary>
    /// Turn with slash.
    /// </summary>
    public const int OrnamentTurnSlash = 119193;
    /// <summary>
    /// Turn up.
    /// </summary>
    public const int OrnamentTurnUp = 119194;
    /// <summary>
    /// Ornament zig-zag line without right-hand end.
    /// </summary>
    public const int OrnamentZigZagLineNoRightEnd = 119196;
    /// <summary>
    /// Ornament zig-zag line with right-hand end.
    /// </summary>
    public const int OrnamentZigZagLineWithRightEnd = 119197;
    /// <summary>
    /// Ottava alta.
    /// </summary>
    public const int OttavaAlta = 119094;
    /// <summary>
    /// Ottava bassa.
    /// </summary>
    public const int OttavaBassa = 119095;
    /// <summary>
    /// Damp.
    /// </summary>
    public const int PluckedDamp = 119220;
    /// <summary>
    /// Damp all.
    /// </summary>
    public const int PluckedDampAll = 119221;
    /// <summary>
    /// Snap pizzicato below.
    /// </summary>
    public const int PluckedSnapPizzicatoBelow = 119213;
    /// <summary>
    /// With fingernails.
    /// </summary>
    public const int PluckedWithFingernails = 119219;
    /// <summary>
    /// Quindicesima bassa.
    /// </summary>
    public const int QuindicesimaBassa = 119097;
    /// <summary>
    /// Repeat last bar.
    /// </summary>
    public const int Repeat1Bar = 119054;
    /// <summary>
    /// Repeat last two bars.
    /// </summary>
    public const int Repeat2Bars = 119055;
    /// <summary>
    /// Repeat dots.
    /// </summary>
    public const int RepeatDots = 119048;
    /// <summary>
    /// Left (start) repeat sign.
    /// </summary>
    public const int RepeatLeft = 119046;
    /// <summary>
    /// Right (end) repeat sign.
    /// </summary>
    public const int RepeatRight = 119047;
    /// <summary>
    /// 128th (semihemidemisemiquaver) rest.
    /// </summary>
    public const int Rest128th = 119106;
    /// <summary>
    /// 16th (semiquaver) rest.
    /// </summary>
    public const int Rest16th = 119103;
    /// <summary>
    /// 32nd (demisemiquaver) rest.
    /// </summary>
    public const int Rest32nd = 119104;
    /// <summary>
    /// 64th (hemidemisemiquaver) rest.
    /// </summary>
    public const int Rest64th = 119105;
    /// <summary>
    /// Eighth (quaver) rest.
    /// </summary>
    public const int Rest8th = 119102;
    /// <summary>
    /// Double whole (breve) rest.
    /// </summary>
    public const int RestDoubleWhole = 119098;
    /// <summary>
    /// Multiple measure rest.
    /// </summary>
    public const int RestHBar = 119081;
    /// <summary>
    /// Half (minim) rest.
    /// </summary>
    public const int RestHalf = 119100;
    /// <summary>
    /// Quarter (crotchet) rest.
    /// </summary>
    public const int RestQuarter = 119101;
    /// <summary>
    /// Whole (semibreve) rest.
    /// </summary>
    public const int RestWhole = 119099;
    /// <summary>
    /// Segno.
    /// </summary>
    public const int Segno = 119051;
    /// <summary>
    /// 1-line staff.
    /// </summary>
    public const int Staff1Line = 119062;
    /// <summary>
    /// 2-line staff.
    /// </summary>
    public const int Staff2Lines = 119063;
    /// <summary>
    /// 3-line staff.
    /// </summary>
    public const int Staff3Lines = 119064;
    /// <summary>
    /// 4-line staff.
    /// </summary>
    public const int Staff4Lines = 119065;
    /// <summary>
    /// 5-line staff.
    /// </summary>
    public const int Staff5Lines = 119066;
    /// <summary>
    /// 6-line staff.
    /// </summary>
    public const int Staff6Lines = 119067;
    /// <summary>
    /// Combining stem.
    /// </summary>
    public const int Stem = 119141;
    /// <summary>
    /// Combining sprechgesang stem.
    /// </summary>
    public const int StemSprechgesang = 119142;
    /// <summary>
    /// Down bow.
    /// </summary>
    public const int StringsDownBow = 119210;
    /// <summary>
    /// Harmonic.
    /// </summary>
    public const int StringsHarmonic = 119212;
    /// <summary>
    /// Up bow.
    /// </summary>
    public const int StringsUpBow = 119211;
    /// <summary>
    /// Common time.
    /// </summary>
    public const int TimeSigCommon = 119092;
    /// <summary>
    /// Cut time.
    /// </summary>
    public const int TimeSigCutCommon = 119093;
    /// <summary>
    /// Combining tremolo 1.
    /// </summary>
    public const int Tremolo1 = 119143;
    /// <summary>
    /// Combining tremolo 2.
    /// </summary>
    public const int Tremolo2 = 119144;
    /// <summary>
    /// Combining tremolo 3.
    /// </summary>
    public const int Tremolo3 = 119145;
    /// <summary>
    /// Fingered tremolo 1.
    /// </summary>
    public const int TremoloFingered1 = 119146;
    /// <summary>
    /// Fingered tremolo 2.
    /// </summary>
    public const int TremoloFingered2 = 119147;
    /// <summary>
    /// Fingered tremolo 3.
    /// </summary>
    public const int TremoloFingered3 = 119148;
    /// <summary>
    /// Triple-tongue above.
    /// </summary>
    public const int TripleTongueAbove = 119179;
    /// <summary>
    /// Unpitched percussion clef 1.
    /// </summary>
    public const int UnpitchedPercussionClef1 = 119077;
    /// <summary>
    /// Unpitched percussion clef 2.
    /// </summary>
    public const int UnpitchedPercussionClef2 = 119078;
}

/// <summary>
/// Provides glyph name mappings.
/// </summary>
public static class GlyphNameMappings
{
    /// <summary>
    /// Glyph name enums to string mappings.
    /// </summary>
    public static IReadOnlyDictionary<GlyphName, string> GlyphName2StringMap { get; } = new Dictionary<GlyphName, string> {
        [GlyphName.FourStringTabClef] = GlyphNames.FourStringTabClef,
        [GlyphName.SixStringTabClef] = GlyphNames.SixStringTabClef,
        [GlyphName.AccSagittal11LargeDiesisDown] = GlyphNames.AccSagittal11LargeDiesisDown,
        [GlyphName.AccSagittal11LargeDiesisUp] = GlyphNames.AccSagittal11LargeDiesisUp,
        [GlyphName.AccSagittal11MediumDiesisDown] = GlyphNames.AccSagittal11MediumDiesisDown,
        [GlyphName.AccSagittal11MediumDiesisUp] = GlyphNames.AccSagittal11MediumDiesisUp,
        [GlyphName.AccSagittal11v19LargeDiesisDown] = GlyphNames.AccSagittal11v19LargeDiesisDown,
        [GlyphName.AccSagittal11v19LargeDiesisUp] = GlyphNames.AccSagittal11v19LargeDiesisUp,
        [GlyphName.AccSagittal11v19MediumDiesisDown] = GlyphNames.AccSagittal11v19MediumDiesisDown,
        [GlyphName.AccSagittal11v19MediumDiesisUp] = GlyphNames.AccSagittal11v19MediumDiesisUp,
        [GlyphName.AccSagittal11v49CommaDown] = GlyphNames.AccSagittal11v49CommaDown,
        [GlyphName.AccSagittal11v49CommaUp] = GlyphNames.AccSagittal11v49CommaUp,
        [GlyphName.AccSagittal143CommaDown] = GlyphNames.AccSagittal143CommaDown,
        [GlyphName.AccSagittal143CommaUp] = GlyphNames.AccSagittal143CommaUp,
        [GlyphName.AccSagittal17CommaDown] = GlyphNames.AccSagittal17CommaDown,
        [GlyphName.AccSagittal17CommaUp] = GlyphNames.AccSagittal17CommaUp,
        [GlyphName.AccSagittal17KleismaDown] = GlyphNames.AccSagittal17KleismaDown,
        [GlyphName.AccSagittal17KleismaUp] = GlyphNames.AccSagittal17KleismaUp,
        [GlyphName.AccSagittal19CommaDown] = GlyphNames.AccSagittal19CommaDown,
        [GlyphName.AccSagittal19CommaUp] = GlyphNames.AccSagittal19CommaUp,
        [GlyphName.AccSagittal19SchismaDown] = GlyphNames.AccSagittal19SchismaDown,
        [GlyphName.AccSagittal19SchismaUp] = GlyphNames.AccSagittal19SchismaUp,
        [GlyphName.AccSagittal1MinaDown] = GlyphNames.AccSagittal1MinaDown,
        [GlyphName.AccSagittal1MinaUp] = GlyphNames.AccSagittal1MinaUp,
        [GlyphName.AccSagittal1TinaDown] = GlyphNames.AccSagittal1TinaDown,
        [GlyphName.AccSagittal1TinaUp] = GlyphNames.AccSagittal1TinaUp,
        [GlyphName.AccSagittal23CommaDown] = GlyphNames.AccSagittal23CommaDown,
        [GlyphName.AccSagittal23CommaUp] = GlyphNames.AccSagittal23CommaUp,
        [GlyphName.AccSagittal23SmallDiesisDown] = GlyphNames.AccSagittal23SmallDiesisDown,
        [GlyphName.AccSagittal23SmallDiesisUp] = GlyphNames.AccSagittal23SmallDiesisUp,
        [GlyphName.AccSagittal25SmallDiesisDown] = GlyphNames.AccSagittal25SmallDiesisDown,
        [GlyphName.AccSagittal25SmallDiesisUp] = GlyphNames.AccSagittal25SmallDiesisUp,
        [GlyphName.AccSagittal2MinasDown] = GlyphNames.AccSagittal2MinasDown,
        [GlyphName.AccSagittal2MinasUp] = GlyphNames.AccSagittal2MinasUp,
        [GlyphName.AccSagittal2TinasDown] = GlyphNames.AccSagittal2TinasDown,
        [GlyphName.AccSagittal2TinasUp] = GlyphNames.AccSagittal2TinasUp,
        [GlyphName.AccSagittal35LargeDiesisDown] = GlyphNames.AccSagittal35LargeDiesisDown,
        [GlyphName.AccSagittal35LargeDiesisUp] = GlyphNames.AccSagittal35LargeDiesisUp,
        [GlyphName.AccSagittal35MediumDiesisDown] = GlyphNames.AccSagittal35MediumDiesisDown,
        [GlyphName.AccSagittal35MediumDiesisUp] = GlyphNames.AccSagittal35MediumDiesisUp,
        [GlyphName.AccSagittal3TinasDown] = GlyphNames.AccSagittal3TinasDown,
        [GlyphName.AccSagittal3TinasUp] = GlyphNames.AccSagittal3TinasUp,
        [GlyphName.AccSagittal49LargeDiesisDown] = GlyphNames.AccSagittal49LargeDiesisDown,
        [GlyphName.AccSagittal49LargeDiesisUp] = GlyphNames.AccSagittal49LargeDiesisUp,
        [GlyphName.AccSagittal49MediumDiesisDown] = GlyphNames.AccSagittal49MediumDiesisDown,
        [GlyphName.AccSagittal49MediumDiesisUp] = GlyphNames.AccSagittal49MediumDiesisUp,
        [GlyphName.AccSagittal49SmallDiesisDown] = GlyphNames.AccSagittal49SmallDiesisDown,
        [GlyphName.AccSagittal49SmallDiesisUp] = GlyphNames.AccSagittal49SmallDiesisUp,
        [GlyphName.AccSagittal4TinasDown] = GlyphNames.AccSagittal4TinasDown,
        [GlyphName.AccSagittal4TinasUp] = GlyphNames.AccSagittal4TinasUp,
        [GlyphName.AccSagittal55CommaDown] = GlyphNames.AccSagittal55CommaDown,
        [GlyphName.AccSagittal55CommaUp] = GlyphNames.AccSagittal55CommaUp,
        [GlyphName.AccSagittal5CommaDown] = GlyphNames.AccSagittal5CommaDown,
        [GlyphName.AccSagittal5CommaUp] = GlyphNames.AccSagittal5CommaUp,
        [GlyphName.AccSagittal5TinasDown] = GlyphNames.AccSagittal5TinasDown,
        [GlyphName.AccSagittal5TinasUp] = GlyphNames.AccSagittal5TinasUp,
        [GlyphName.AccSagittal5v11SmallDiesisDown] = GlyphNames.AccSagittal5v11SmallDiesisDown,
        [GlyphName.AccSagittal5v11SmallDiesisUp] = GlyphNames.AccSagittal5v11SmallDiesisUp,
        [GlyphName.AccSagittal5v13LargeDiesisDown] = GlyphNames.AccSagittal5v13LargeDiesisDown,
        [GlyphName.AccSagittal5v13LargeDiesisUp] = GlyphNames.AccSagittal5v13LargeDiesisUp,
        [GlyphName.AccSagittal5v13MediumDiesisDown] = GlyphNames.AccSagittal5v13MediumDiesisDown,
        [GlyphName.AccSagittal5v13MediumDiesisUp] = GlyphNames.AccSagittal5v13MediumDiesisUp,
        [GlyphName.AccSagittal5v19CommaDown] = GlyphNames.AccSagittal5v19CommaDown,
        [GlyphName.AccSagittal5v19CommaUp] = GlyphNames.AccSagittal5v19CommaUp,
        [GlyphName.AccSagittal5v23SmallDiesisDown] = GlyphNames.AccSagittal5v23SmallDiesisDown,
        [GlyphName.AccSagittal5v23SmallDiesisUp] = GlyphNames.AccSagittal5v23SmallDiesisUp,
        [GlyphName.AccSagittal5v49MediumDiesisDown] = GlyphNames.AccSagittal5v49MediumDiesisDown,
        [GlyphName.AccSagittal5v49MediumDiesisUp] = GlyphNames.AccSagittal5v49MediumDiesisUp,
        [GlyphName.AccSagittal5v7KleismaDown] = GlyphNames.AccSagittal5v7KleismaDown,
        [GlyphName.AccSagittal5v7KleismaUp] = GlyphNames.AccSagittal5v7KleismaUp,
        [GlyphName.AccSagittal6TinasDown] = GlyphNames.AccSagittal6TinasDown,
        [GlyphName.AccSagittal6TinasUp] = GlyphNames.AccSagittal6TinasUp,
        [GlyphName.AccSagittal7CommaDown] = GlyphNames.AccSagittal7CommaDown,
        [GlyphName.AccSagittal7CommaUp] = GlyphNames.AccSagittal7CommaUp,
        [GlyphName.AccSagittal7TinasDown] = GlyphNames.AccSagittal7TinasDown,
        [GlyphName.AccSagittal7TinasUp] = GlyphNames.AccSagittal7TinasUp,
        [GlyphName.AccSagittal7v11CommaDown] = GlyphNames.AccSagittal7v11CommaDown,
        [GlyphName.AccSagittal7v11CommaUp] = GlyphNames.AccSagittal7v11CommaUp,
        [GlyphName.AccSagittal7v11KleismaDown] = GlyphNames.AccSagittal7v11KleismaDown,
        [GlyphName.AccSagittal7v11KleismaUp] = GlyphNames.AccSagittal7v11KleismaUp,
        [GlyphName.AccSagittal7v19CommaDown] = GlyphNames.AccSagittal7v19CommaDown,
        [GlyphName.AccSagittal7v19CommaUp] = GlyphNames.AccSagittal7v19CommaUp,
        [GlyphName.AccSagittal8TinasDown] = GlyphNames.AccSagittal8TinasDown,
        [GlyphName.AccSagittal8TinasUp] = GlyphNames.AccSagittal8TinasUp,
        [GlyphName.AccSagittal9TinasDown] = GlyphNames.AccSagittal9TinasDown,
        [GlyphName.AccSagittal9TinasUp] = GlyphNames.AccSagittal9TinasUp,
        [GlyphName.AccSagittalAcute] = GlyphNames.AccSagittalAcute,
        [GlyphName.AccSagittalDoubleFlat] = GlyphNames.AccSagittalDoubleFlat,
        [GlyphName.AccSagittalDoubleFlat11v49CUp] = GlyphNames.AccSagittalDoubleFlat11v49CUp,
        [GlyphName.AccSagittalDoubleFlat143CUp] = GlyphNames.AccSagittalDoubleFlat143CUp,
        [GlyphName.AccSagittalDoubleFlat17CUp] = GlyphNames.AccSagittalDoubleFlat17CUp,
        [GlyphName.AccSagittalDoubleFlat17kUp] = GlyphNames.AccSagittalDoubleFlat17kUp,
        [GlyphName.AccSagittalDoubleFlat19CUp] = GlyphNames.AccSagittalDoubleFlat19CUp,
        [GlyphName.AccSagittalDoubleFlat19sUp] = GlyphNames.AccSagittalDoubleFlat19sUp,
        [GlyphName.AccSagittalDoubleFlat23CUp] = GlyphNames.AccSagittalDoubleFlat23CUp,
        [GlyphName.AccSagittalDoubleFlat23SUp] = GlyphNames.AccSagittalDoubleFlat23SUp,
        [GlyphName.AccSagittalDoubleFlat25SUp] = GlyphNames.AccSagittalDoubleFlat25SUp,
        [GlyphName.AccSagittalDoubleFlat49SUp] = GlyphNames.AccSagittalDoubleFlat49SUp,
        [GlyphName.AccSagittalDoubleFlat55CUp] = GlyphNames.AccSagittalDoubleFlat55CUp,
        [GlyphName.AccSagittalDoubleFlat5CUp] = GlyphNames.AccSagittalDoubleFlat5CUp,
        [GlyphName.AccSagittalDoubleFlat5v11SUp] = GlyphNames.AccSagittalDoubleFlat5v11SUp,
        [GlyphName.AccSagittalDoubleFlat5v19CUp] = GlyphNames.AccSagittalDoubleFlat5v19CUp,
        [GlyphName.AccSagittalDoubleFlat5v23SUp] = GlyphNames.AccSagittalDoubleFlat5v23SUp,
        [GlyphName.AccSagittalDoubleFlat5v7kUp] = GlyphNames.AccSagittalDoubleFlat5v7kUp,
        [GlyphName.AccSagittalDoubleFlat7CUp] = GlyphNames.AccSagittalDoubleFlat7CUp,
        [GlyphName.AccSagittalDoubleFlat7v11CUp] = GlyphNames.AccSagittalDoubleFlat7v11CUp,
        [GlyphName.AccSagittalDoubleFlat7v11kUp] = GlyphNames.AccSagittalDoubleFlat7v11kUp,
        [GlyphName.AccSagittalDoubleFlat7v19CUp] = GlyphNames.AccSagittalDoubleFlat7v19CUp,
        [GlyphName.AccSagittalDoubleSharp] = GlyphNames.AccSagittalDoubleSharp,
        [GlyphName.AccSagittalDoubleSharp11v49CDown] = GlyphNames.AccSagittalDoubleSharp11v49CDown,
        [GlyphName.AccSagittalDoubleSharp143CDown] = GlyphNames.AccSagittalDoubleSharp143CDown,
        [GlyphName.AccSagittalDoubleSharp17CDown] = GlyphNames.AccSagittalDoubleSharp17CDown,
        [GlyphName.AccSagittalDoubleSharp17kDown] = GlyphNames.AccSagittalDoubleSharp17kDown,
        [GlyphName.AccSagittalDoubleSharp19CDown] = GlyphNames.AccSagittalDoubleSharp19CDown,
        [GlyphName.AccSagittalDoubleSharp19sDown] = GlyphNames.AccSagittalDoubleSharp19sDown,
        [GlyphName.AccSagittalDoubleSharp23CDown] = GlyphNames.AccSagittalDoubleSharp23CDown,
        [GlyphName.AccSagittalDoubleSharp23SDown] = GlyphNames.AccSagittalDoubleSharp23SDown,
        [GlyphName.AccSagittalDoubleSharp25SDown] = GlyphNames.AccSagittalDoubleSharp25SDown,
        [GlyphName.AccSagittalDoubleSharp49SDown] = GlyphNames.AccSagittalDoubleSharp49SDown,
        [GlyphName.AccSagittalDoubleSharp55CDown] = GlyphNames.AccSagittalDoubleSharp55CDown,
        [GlyphName.AccSagittalDoubleSharp5CDown] = GlyphNames.AccSagittalDoubleSharp5CDown,
        [GlyphName.AccSagittalDoubleSharp5v11SDown] = GlyphNames.AccSagittalDoubleSharp5v11SDown,
        [GlyphName.AccSagittalDoubleSharp5v19CDown] = GlyphNames.AccSagittalDoubleSharp5v19CDown,
        [GlyphName.AccSagittalDoubleSharp5v23SDown] = GlyphNames.AccSagittalDoubleSharp5v23SDown,
        [GlyphName.AccSagittalDoubleSharp5v7kDown] = GlyphNames.AccSagittalDoubleSharp5v7kDown,
        [GlyphName.AccSagittalDoubleSharp7CDown] = GlyphNames.AccSagittalDoubleSharp7CDown,
        [GlyphName.AccSagittalDoubleSharp7v11CDown] = GlyphNames.AccSagittalDoubleSharp7v11CDown,
        [GlyphName.AccSagittalDoubleSharp7v11kDown] = GlyphNames.AccSagittalDoubleSharp7v11kDown,
        [GlyphName.AccSagittalDoubleSharp7v19CDown] = GlyphNames.AccSagittalDoubleSharp7v19CDown,
        [GlyphName.AccSagittalFlat] = GlyphNames.AccSagittalFlat,
        [GlyphName.AccSagittalFlat11LDown] = GlyphNames.AccSagittalFlat11LDown,
        [GlyphName.AccSagittalFlat11MDown] = GlyphNames.AccSagittalFlat11MDown,
        [GlyphName.AccSagittalFlat11v19LDown] = GlyphNames.AccSagittalFlat11v19LDown,
        [GlyphName.AccSagittalFlat11v19MDown] = GlyphNames.AccSagittalFlat11v19MDown,
        [GlyphName.AccSagittalFlat11v49CDown] = GlyphNames.AccSagittalFlat11v49CDown,
        [GlyphName.AccSagittalFlat11v49CUp] = GlyphNames.AccSagittalFlat11v49CUp,
        [GlyphName.AccSagittalFlat143CDown] = GlyphNames.AccSagittalFlat143CDown,
        [GlyphName.AccSagittalFlat143CUp] = GlyphNames.AccSagittalFlat143CUp,
        [GlyphName.AccSagittalFlat17CDown] = GlyphNames.AccSagittalFlat17CDown,
        [GlyphName.AccSagittalFlat17CUp] = GlyphNames.AccSagittalFlat17CUp,
        [GlyphName.AccSagittalFlat17kDown] = GlyphNames.AccSagittalFlat17kDown,
        [GlyphName.AccSagittalFlat17kUp] = GlyphNames.AccSagittalFlat17kUp,
        [GlyphName.AccSagittalFlat19CDown] = GlyphNames.AccSagittalFlat19CDown,
        [GlyphName.AccSagittalFlat19CUp] = GlyphNames.AccSagittalFlat19CUp,
        [GlyphName.AccSagittalFlat19sDown] = GlyphNames.AccSagittalFlat19sDown,
        [GlyphName.AccSagittalFlat19sUp] = GlyphNames.AccSagittalFlat19sUp,
        [GlyphName.AccSagittalFlat23CDown] = GlyphNames.AccSagittalFlat23CDown,
        [GlyphName.AccSagittalFlat23CUp] = GlyphNames.AccSagittalFlat23CUp,
        [GlyphName.AccSagittalFlat23SDown] = GlyphNames.AccSagittalFlat23SDown,
        [GlyphName.AccSagittalFlat23SUp] = GlyphNames.AccSagittalFlat23SUp,
        [GlyphName.AccSagittalFlat25SDown] = GlyphNames.AccSagittalFlat25SDown,
        [GlyphName.AccSagittalFlat25SUp] = GlyphNames.AccSagittalFlat25SUp,
        [GlyphName.AccSagittalFlat35LDown] = GlyphNames.AccSagittalFlat35LDown,
        [GlyphName.AccSagittalFlat35MDown] = GlyphNames.AccSagittalFlat35MDown,
        [GlyphName.AccSagittalFlat49LDown] = GlyphNames.AccSagittalFlat49LDown,
        [GlyphName.AccSagittalFlat49MDown] = GlyphNames.AccSagittalFlat49MDown,
        [GlyphName.AccSagittalFlat49SDown] = GlyphNames.AccSagittalFlat49SDown,
        [GlyphName.AccSagittalFlat49SUp] = GlyphNames.AccSagittalFlat49SUp,
        [GlyphName.AccSagittalFlat55CDown] = GlyphNames.AccSagittalFlat55CDown,
        [GlyphName.AccSagittalFlat55CUp] = GlyphNames.AccSagittalFlat55CUp,
        [GlyphName.AccSagittalFlat5CDown] = GlyphNames.AccSagittalFlat5CDown,
        [GlyphName.AccSagittalFlat5CUp] = GlyphNames.AccSagittalFlat5CUp,
        [GlyphName.AccSagittalFlat5v11SDown] = GlyphNames.AccSagittalFlat5v11SDown,
        [GlyphName.AccSagittalFlat5v11SUp] = GlyphNames.AccSagittalFlat5v11SUp,
        [GlyphName.AccSagittalFlat5v13LDown] = GlyphNames.AccSagittalFlat5v13LDown,
        [GlyphName.AccSagittalFlat5v13MDown] = GlyphNames.AccSagittalFlat5v13MDown,
        [GlyphName.AccSagittalFlat5v19CDown] = GlyphNames.AccSagittalFlat5v19CDown,
        [GlyphName.AccSagittalFlat5v19CUp] = GlyphNames.AccSagittalFlat5v19CUp,
        [GlyphName.AccSagittalFlat5v23SDown] = GlyphNames.AccSagittalFlat5v23SDown,
        [GlyphName.AccSagittalFlat5v23SUp] = GlyphNames.AccSagittalFlat5v23SUp,
        [GlyphName.AccSagittalFlat5v49MDown] = GlyphNames.AccSagittalFlat5v49MDown,
        [GlyphName.AccSagittalFlat5v7kDown] = GlyphNames.AccSagittalFlat5v7kDown,
        [GlyphName.AccSagittalFlat5v7kUp] = GlyphNames.AccSagittalFlat5v7kUp,
        [GlyphName.AccSagittalFlat7CDown] = GlyphNames.AccSagittalFlat7CDown,
        [GlyphName.AccSagittalFlat7CUp] = GlyphNames.AccSagittalFlat7CUp,
        [GlyphName.AccSagittalFlat7v11CDown] = GlyphNames.AccSagittalFlat7v11CDown,
        [GlyphName.AccSagittalFlat7v11CUp] = GlyphNames.AccSagittalFlat7v11CUp,
        [GlyphName.AccSagittalFlat7v11kDown] = GlyphNames.AccSagittalFlat7v11kDown,
        [GlyphName.AccSagittalFlat7v11kUp] = GlyphNames.AccSagittalFlat7v11kUp,
        [GlyphName.AccSagittalFlat7v19CDown] = GlyphNames.AccSagittalFlat7v19CDown,
        [GlyphName.AccSagittalFlat7v19CUp] = GlyphNames.AccSagittalFlat7v19CUp,
        [GlyphName.AccSagittalFractionalTinaDown] = GlyphNames.AccSagittalFractionalTinaDown,
        [GlyphName.AccSagittalFractionalTinaUp] = GlyphNames.AccSagittalFractionalTinaUp,
        [GlyphName.AccSagittalGrave] = GlyphNames.AccSagittalGrave,
        [GlyphName.AccSagittalShaftDown] = GlyphNames.AccSagittalShaftDown,
        [GlyphName.AccSagittalShaftUp] = GlyphNames.AccSagittalShaftUp,
        [GlyphName.AccSagittalSharp] = GlyphNames.AccSagittalSharp,
        [GlyphName.AccSagittalSharp11LUp] = GlyphNames.AccSagittalSharp11LUp,
        [GlyphName.AccSagittalSharp11MUp] = GlyphNames.AccSagittalSharp11MUp,
        [GlyphName.AccSagittalSharp11v19LUp] = GlyphNames.AccSagittalSharp11v19LUp,
        [GlyphName.AccSagittalSharp11v19MUp] = GlyphNames.AccSagittalSharp11v19MUp,
        [GlyphName.AccSagittalSharp11v49CDown] = GlyphNames.AccSagittalSharp11v49CDown,
        [GlyphName.AccSagittalSharp11v49CUp] = GlyphNames.AccSagittalSharp11v49CUp,
        [GlyphName.AccSagittalSharp143CDown] = GlyphNames.AccSagittalSharp143CDown,
        [GlyphName.AccSagittalSharp143CUp] = GlyphNames.AccSagittalSharp143CUp,
        [GlyphName.AccSagittalSharp17CDown] = GlyphNames.AccSagittalSharp17CDown,
        [GlyphName.AccSagittalSharp17CUp] = GlyphNames.AccSagittalSharp17CUp,
        [GlyphName.AccSagittalSharp17kDown] = GlyphNames.AccSagittalSharp17kDown,
        [GlyphName.AccSagittalSharp17kUp] = GlyphNames.AccSagittalSharp17kUp,
        [GlyphName.AccSagittalSharp19CDown] = GlyphNames.AccSagittalSharp19CDown,
        [GlyphName.AccSagittalSharp19CUp] = GlyphNames.AccSagittalSharp19CUp,
        [GlyphName.AccSagittalSharp19sDown] = GlyphNames.AccSagittalSharp19sDown,
        [GlyphName.AccSagittalSharp19sUp] = GlyphNames.AccSagittalSharp19sUp,
        [GlyphName.AccSagittalSharp23CDown] = GlyphNames.AccSagittalSharp23CDown,
        [GlyphName.AccSagittalSharp23CUp] = GlyphNames.AccSagittalSharp23CUp,
        [GlyphName.AccSagittalSharp23SDown] = GlyphNames.AccSagittalSharp23SDown,
        [GlyphName.AccSagittalSharp23SUp] = GlyphNames.AccSagittalSharp23SUp,
        [GlyphName.AccSagittalSharp25SDown] = GlyphNames.AccSagittalSharp25SDown,
        [GlyphName.AccSagittalSharp25SUp] = GlyphNames.AccSagittalSharp25SUp,
        [GlyphName.AccSagittalSharp35LUp] = GlyphNames.AccSagittalSharp35LUp,
        [GlyphName.AccSagittalSharp35MUp] = GlyphNames.AccSagittalSharp35MUp,
        [GlyphName.AccSagittalSharp49LUp] = GlyphNames.AccSagittalSharp49LUp,
        [GlyphName.AccSagittalSharp49MUp] = GlyphNames.AccSagittalSharp49MUp,
        [GlyphName.AccSagittalSharp49SDown] = GlyphNames.AccSagittalSharp49SDown,
        [GlyphName.AccSagittalSharp49SUp] = GlyphNames.AccSagittalSharp49SUp,
        [GlyphName.AccSagittalSharp55CDown] = GlyphNames.AccSagittalSharp55CDown,
        [GlyphName.AccSagittalSharp55CUp] = GlyphNames.AccSagittalSharp55CUp,
        [GlyphName.AccSagittalSharp5CDown] = GlyphNames.AccSagittalSharp5CDown,
        [GlyphName.AccSagittalSharp5CUp] = GlyphNames.AccSagittalSharp5CUp,
        [GlyphName.AccSagittalSharp5v11SDown] = GlyphNames.AccSagittalSharp5v11SDown,
        [GlyphName.AccSagittalSharp5v11SUp] = GlyphNames.AccSagittalSharp5v11SUp,
        [GlyphName.AccSagittalSharp5v13LUp] = GlyphNames.AccSagittalSharp5v13LUp,
        [GlyphName.AccSagittalSharp5v13MUp] = GlyphNames.AccSagittalSharp5v13MUp,
        [GlyphName.AccSagittalSharp5v19CDown] = GlyphNames.AccSagittalSharp5v19CDown,
        [GlyphName.AccSagittalSharp5v19CUp] = GlyphNames.AccSagittalSharp5v19CUp,
        [GlyphName.AccSagittalSharp5v23SDown] = GlyphNames.AccSagittalSharp5v23SDown,
        [GlyphName.AccSagittalSharp5v23SUp] = GlyphNames.AccSagittalSharp5v23SUp,
        [GlyphName.AccSagittalSharp5v49MUp] = GlyphNames.AccSagittalSharp5v49MUp,
        [GlyphName.AccSagittalSharp5v7kDown] = GlyphNames.AccSagittalSharp5v7kDown,
        [GlyphName.AccSagittalSharp5v7kUp] = GlyphNames.AccSagittalSharp5v7kUp,
        [GlyphName.AccSagittalSharp7CDown] = GlyphNames.AccSagittalSharp7CDown,
        [GlyphName.AccSagittalSharp7CUp] = GlyphNames.AccSagittalSharp7CUp,
        [GlyphName.AccSagittalSharp7v11CDown] = GlyphNames.AccSagittalSharp7v11CDown,
        [GlyphName.AccSagittalSharp7v11CUp] = GlyphNames.AccSagittalSharp7v11CUp,
        [GlyphName.AccSagittalSharp7v11kDown] = GlyphNames.AccSagittalSharp7v11kDown,
        [GlyphName.AccSagittalSharp7v11kUp] = GlyphNames.AccSagittalSharp7v11kUp,
        [GlyphName.AccSagittalSharp7v19CDown] = GlyphNames.AccSagittalSharp7v19CDown,
        [GlyphName.AccSagittalSharp7v19CUp] = GlyphNames.AccSagittalSharp7v19CUp,
        [GlyphName.AccSagittalUnused1] = GlyphNames.AccSagittalUnused1,
        [GlyphName.AccSagittalUnused2] = GlyphNames.AccSagittalUnused2,
        [GlyphName.AccSagittalUnused3] = GlyphNames.AccSagittalUnused3,
        [GlyphName.AccSagittalUnused4] = GlyphNames.AccSagittalUnused4,
        [GlyphName.AccdnCombDot] = GlyphNames.AccdnCombDot,
        [GlyphName.AccdnCombLH2RanksEmpty] = GlyphNames.AccdnCombLH2RanksEmpty,
        [GlyphName.AccdnCombLH3RanksEmptySquare] = GlyphNames.AccdnCombLH3RanksEmptySquare,
        [GlyphName.AccdnCombRH3RanksEmpty] = GlyphNames.AccdnCombRH3RanksEmpty,
        [GlyphName.AccdnCombRH4RanksEmpty] = GlyphNames.AccdnCombRH4RanksEmpty,
        [GlyphName.AccdnDiatonicClef] = GlyphNames.AccdnDiatonicClef,
        [GlyphName.AccdnLH2Ranks16Round] = GlyphNames.AccdnLH2Ranks16Round,
        [GlyphName.AccdnLH2Ranks8Plus16Round] = GlyphNames.AccdnLH2Ranks8Plus16Round,
        [GlyphName.AccdnLH2Ranks8Round] = GlyphNames.AccdnLH2Ranks8Round,
        [GlyphName.AccdnLH2RanksFullMasterRound] = GlyphNames.AccdnLH2RanksFullMasterRound,
        [GlyphName.AccdnLH2RanksMasterPlus16Round] = GlyphNames.AccdnLH2RanksMasterPlus16Round,
        [GlyphName.AccdnLH2RanksMasterRound] = GlyphNames.AccdnLH2RanksMasterRound,
        [GlyphName.AccdnLH3Ranks2Plus8Square] = GlyphNames.AccdnLH3Ranks2Plus8Square,
        [GlyphName.AccdnLH3Ranks2Square] = GlyphNames.AccdnLH3Ranks2Square,
        [GlyphName.AccdnLH3Ranks8Square] = GlyphNames.AccdnLH3Ranks8Square,
        [GlyphName.AccdnLH3RanksDouble8Square] = GlyphNames.AccdnLH3RanksDouble8Square,
        [GlyphName.AccdnLH3RanksTuttiSquare] = GlyphNames.AccdnLH3RanksTuttiSquare,
        [GlyphName.AccdnPull] = GlyphNames.AccdnPull,
        [GlyphName.AccdnPush] = GlyphNames.AccdnPush,
        [GlyphName.AccdnRH3RanksAccordion] = GlyphNames.AccdnRH3RanksAccordion,
        [GlyphName.AccdnRH3RanksAuthenticMusette] = GlyphNames.AccdnRH3RanksAuthenticMusette,
        [GlyphName.AccdnRH3RanksBandoneon] = GlyphNames.AccdnRH3RanksBandoneon,
        [GlyphName.AccdnRH3RanksBassoon] = GlyphNames.AccdnRH3RanksBassoon,
        [GlyphName.AccdnRH3RanksClarinet] = GlyphNames.AccdnRH3RanksClarinet,
        [GlyphName.AccdnRH3RanksDoubleTremoloLower8ve] = GlyphNames.AccdnRH3RanksDoubleTremoloLower8ve,
        [GlyphName.AccdnRH3RanksDoubleTremoloUpper8ve] = GlyphNames.AccdnRH3RanksDoubleTremoloUpper8ve,
        [GlyphName.AccdnRH3RanksFullFactory] = GlyphNames.AccdnRH3RanksFullFactory,
        [GlyphName.AccdnRH3RanksHarmonium] = GlyphNames.AccdnRH3RanksHarmonium,
        [GlyphName.AccdnRH3RanksImitationMusette] = GlyphNames.AccdnRH3RanksImitationMusette,
        [GlyphName.AccdnRH3RanksLowerTremolo8] = GlyphNames.AccdnRH3RanksLowerTremolo8,
        [GlyphName.AccdnRH3RanksMaster] = GlyphNames.AccdnRH3RanksMaster,
        [GlyphName.AccdnRH3RanksOboe] = GlyphNames.AccdnRH3RanksOboe,
        [GlyphName.AccdnRH3RanksOrgan] = GlyphNames.AccdnRH3RanksOrgan,
        [GlyphName.AccdnRH3RanksPiccolo] = GlyphNames.AccdnRH3RanksPiccolo,
        [GlyphName.AccdnRH3RanksTremoloLower8ve] = GlyphNames.AccdnRH3RanksTremoloLower8ve,
        [GlyphName.AccdnRH3RanksTremoloUpper8ve] = GlyphNames.AccdnRH3RanksTremoloUpper8ve,
        [GlyphName.AccdnRH3RanksTwoChoirs] = GlyphNames.AccdnRH3RanksTwoChoirs,
        [GlyphName.AccdnRH3RanksUpperTremolo8] = GlyphNames.AccdnRH3RanksUpperTremolo8,
        [GlyphName.AccdnRH3RanksViolin] = GlyphNames.AccdnRH3RanksViolin,
        [GlyphName.AccdnRH4RanksAlto] = GlyphNames.AccdnRH4RanksAlto,
        [GlyphName.AccdnRH4RanksBassAlto] = GlyphNames.AccdnRH4RanksBassAlto,
        [GlyphName.AccdnRH4RanksMaster] = GlyphNames.AccdnRH4RanksMaster,
        [GlyphName.AccdnRH4RanksSoftBass] = GlyphNames.AccdnRH4RanksSoftBass,
        [GlyphName.AccdnRH4RanksSoftTenor] = GlyphNames.AccdnRH4RanksSoftTenor,
        [GlyphName.AccdnRH4RanksSoprano] = GlyphNames.AccdnRH4RanksSoprano,
        [GlyphName.AccdnRH4RanksTenor] = GlyphNames.AccdnRH4RanksTenor,
        [GlyphName.AccdnRicochet2] = GlyphNames.AccdnRicochet2,
        [GlyphName.AccdnRicochet3] = GlyphNames.AccdnRicochet3,
        [GlyphName.AccdnRicochet4] = GlyphNames.AccdnRicochet4,
        [GlyphName.AccdnRicochet5] = GlyphNames.AccdnRicochet5,
        [GlyphName.AccdnRicochet6] = GlyphNames.AccdnRicochet6,
        [GlyphName.AccdnRicochetStem2] = GlyphNames.AccdnRicochetStem2,
        [GlyphName.AccdnRicochetStem3] = GlyphNames.AccdnRicochetStem3,
        [GlyphName.AccdnRicochetStem4] = GlyphNames.AccdnRicochetStem4,
        [GlyphName.AccdnRicochetStem5] = GlyphNames.AccdnRicochetStem5,
        [GlyphName.AccdnRicochetStem6] = GlyphNames.AccdnRicochetStem6,
        [GlyphName.Accidental1CommaFlat] = GlyphNames.Accidental1CommaFlat,
        [GlyphName.Accidental1CommaSharp] = GlyphNames.Accidental1CommaSharp,
        [GlyphName.Accidental2CommaFlat] = GlyphNames.Accidental2CommaFlat,
        [GlyphName.Accidental2CommaSharp] = GlyphNames.Accidental2CommaSharp,
        [GlyphName.Accidental3CommaFlat] = GlyphNames.Accidental3CommaFlat,
        [GlyphName.Accidental3CommaSharp] = GlyphNames.Accidental3CommaSharp,
        [GlyphName.Accidental4CommaFlat] = GlyphNames.Accidental4CommaFlat,
        [GlyphName.Accidental5CommaSharp] = GlyphNames.Accidental5CommaSharp,
        [GlyphName.AccidentalArrowDown] = GlyphNames.AccidentalArrowDown,
        [GlyphName.AccidentalArrowUp] = GlyphNames.AccidentalArrowUp,
        [GlyphName.AccidentalBakiyeFlat] = GlyphNames.AccidentalBakiyeFlat,
        [GlyphName.AccidentalBakiyeSharp] = GlyphNames.AccidentalBakiyeSharp,
        [GlyphName.AccidentalBracketLeft] = GlyphNames.AccidentalBracketLeft,
        [GlyphName.AccidentalBracketRight] = GlyphNames.AccidentalBracketRight,
        [GlyphName.AccidentalBuyukMucennebFlat] = GlyphNames.AccidentalBuyukMucennebFlat,
        [GlyphName.AccidentalBuyukMucennebSharp] = GlyphNames.AccidentalBuyukMucennebSharp,
        [GlyphName.AccidentalCombiningCloseCurlyBrace] = GlyphNames.AccidentalCombiningCloseCurlyBrace,
        [GlyphName.AccidentalCombiningLower17Schisma] = GlyphNames.AccidentalCombiningLower17Schisma,
        [GlyphName.AccidentalCombiningLower19Schisma] = GlyphNames.AccidentalCombiningLower19Schisma,
        [GlyphName.AccidentalCombiningLower23Limit29LimitComma] = GlyphNames.AccidentalCombiningLower23Limit29LimitComma,
        [GlyphName.AccidentalCombiningLower29LimitComma] = GlyphNames.AccidentalCombiningLower29LimitComma,
        [GlyphName.AccidentalCombiningLower31Schisma] = GlyphNames.AccidentalCombiningLower31Schisma,
        [GlyphName.AccidentalCombiningLower37Quartertone] = GlyphNames.AccidentalCombiningLower37Quartertone,
        [GlyphName.AccidentalCombiningLower41Comma] = GlyphNames.AccidentalCombiningLower41Comma,
        [GlyphName.AccidentalCombiningLower43Comma] = GlyphNames.AccidentalCombiningLower43Comma,
        [GlyphName.AccidentalCombiningLower47Quartertone] = GlyphNames.AccidentalCombiningLower47Quartertone,
        [GlyphName.AccidentalCombiningLower53LimitComma] = GlyphNames.AccidentalCombiningLower53LimitComma,
        [GlyphName.AccidentalCombiningOpenCurlyBrace] = GlyphNames.AccidentalCombiningOpenCurlyBrace,
        [GlyphName.AccidentalCombiningRaise17Schisma] = GlyphNames.AccidentalCombiningRaise17Schisma,
        [GlyphName.AccidentalCombiningRaise19Schisma] = GlyphNames.AccidentalCombiningRaise19Schisma,
        [GlyphName.AccidentalCombiningRaise23Limit29LimitComma] = GlyphNames.AccidentalCombiningRaise23Limit29LimitComma,
        [GlyphName.AccidentalCombiningRaise29LimitComma] = GlyphNames.AccidentalCombiningRaise29LimitComma,
        [GlyphName.AccidentalCombiningRaise31Schisma] = GlyphNames.AccidentalCombiningRaise31Schisma,
        [GlyphName.AccidentalCombiningRaise37Quartertone] = GlyphNames.AccidentalCombiningRaise37Quartertone,
        [GlyphName.AccidentalCombiningRaise41Comma] = GlyphNames.AccidentalCombiningRaise41Comma,
        [GlyphName.AccidentalCombiningRaise43Comma] = GlyphNames.AccidentalCombiningRaise43Comma,
        [GlyphName.AccidentalCombiningRaise47Quartertone] = GlyphNames.AccidentalCombiningRaise47Quartertone,
        [GlyphName.AccidentalCombiningRaise53LimitComma] = GlyphNames.AccidentalCombiningRaise53LimitComma,
        [GlyphName.AccidentalCommaSlashDown] = GlyphNames.AccidentalCommaSlashDown,
        [GlyphName.AccidentalCommaSlashUp] = GlyphNames.AccidentalCommaSlashUp,
        [GlyphName.AccidentalDoubleFlat] = GlyphNames.AccidentalDoubleFlat,
        [GlyphName.AccidentalDoubleFlatArabic] = GlyphNames.AccidentalDoubleFlatArabic,
        [GlyphName.AccidentalDoubleFlatEqualTempered] = GlyphNames.AccidentalDoubleFlatEqualTempered,
        [GlyphName.AccidentalDoubleFlatOneArrowDown] = GlyphNames.AccidentalDoubleFlatOneArrowDown,
        [GlyphName.AccidentalDoubleFlatOneArrowUp] = GlyphNames.AccidentalDoubleFlatOneArrowUp,
        [GlyphName.AccidentalDoubleFlatReversed] = GlyphNames.AccidentalDoubleFlatReversed,
        [GlyphName.AccidentalDoubleFlatThreeArrowsDown] = GlyphNames.AccidentalDoubleFlatThreeArrowsDown,
        [GlyphName.AccidentalDoubleFlatThreeArrowsUp] = GlyphNames.AccidentalDoubleFlatThreeArrowsUp,
        [GlyphName.AccidentalDoubleFlatTurned] = GlyphNames.AccidentalDoubleFlatTurned,
        [GlyphName.AccidentalDoubleFlatTwoArrowsDown] = GlyphNames.AccidentalDoubleFlatTwoArrowsDown,
        [GlyphName.AccidentalDoubleFlatTwoArrowsUp] = GlyphNames.AccidentalDoubleFlatTwoArrowsUp,
        [GlyphName.AccidentalDoubleSharp] = GlyphNames.AccidentalDoubleSharp,
        [GlyphName.AccidentalDoubleSharpArabic] = GlyphNames.AccidentalDoubleSharpArabic,
        [GlyphName.AccidentalDoubleSharpEqualTempered] = GlyphNames.AccidentalDoubleSharpEqualTempered,
        [GlyphName.AccidentalDoubleSharpOneArrowDown] = GlyphNames.AccidentalDoubleSharpOneArrowDown,
        [GlyphName.AccidentalDoubleSharpOneArrowUp] = GlyphNames.AccidentalDoubleSharpOneArrowUp,
        [GlyphName.AccidentalDoubleSharpThreeArrowsDown] = GlyphNames.AccidentalDoubleSharpThreeArrowsDown,
        [GlyphName.AccidentalDoubleSharpThreeArrowsUp] = GlyphNames.AccidentalDoubleSharpThreeArrowsUp,
        [GlyphName.AccidentalDoubleSharpTwoArrowsDown] = GlyphNames.AccidentalDoubleSharpTwoArrowsDown,
        [GlyphName.AccidentalDoubleSharpTwoArrowsUp] = GlyphNames.AccidentalDoubleSharpTwoArrowsUp,
        [GlyphName.AccidentalEnharmonicAlmostEqualTo] = GlyphNames.AccidentalEnharmonicAlmostEqualTo,
        [GlyphName.AccidentalEnharmonicEquals] = GlyphNames.AccidentalEnharmonicEquals,
        [GlyphName.AccidentalEnharmonicTilde] = GlyphNames.AccidentalEnharmonicTilde,
        [GlyphName.AccidentalFilledReversedFlatAndFlat] = GlyphNames.AccidentalFilledReversedFlatAndFlat,
        [GlyphName.AccidentalFilledReversedFlatAndFlatArrowDown] = GlyphNames.AccidentalFilledReversedFlatAndFlatArrowDown,
        [GlyphName.AccidentalFilledReversedFlatAndFlatArrowUp] = GlyphNames.AccidentalFilledReversedFlatAndFlatArrowUp,
        [GlyphName.AccidentalFilledReversedFlatArrowDown] = GlyphNames.AccidentalFilledReversedFlatArrowDown,
        [GlyphName.AccidentalFilledReversedFlatArrowUp] = GlyphNames.AccidentalFilledReversedFlatArrowUp,
        [GlyphName.AccidentalFiveQuarterTonesFlatArrowDown] = GlyphNames.AccidentalFiveQuarterTonesFlatArrowDown,
        [GlyphName.AccidentalFiveQuarterTonesSharpArrowUp] = GlyphNames.AccidentalFiveQuarterTonesSharpArrowUp,
        [GlyphName.AccidentalFlat] = GlyphNames.AccidentalFlat,
        [GlyphName.AccidentalFlatArabic] = GlyphNames.AccidentalFlatArabic,
        [GlyphName.AccidentalFlatEqualTempered] = GlyphNames.AccidentalFlatEqualTempered,
        [GlyphName.AccidentalFlatLoweredStockhausen] = GlyphNames.AccidentalFlatLoweredStockhausen,
        [GlyphName.AccidentalFlatOneArrowDown] = GlyphNames.AccidentalFlatOneArrowDown,
        [GlyphName.AccidentalFlatOneArrowUp] = GlyphNames.AccidentalFlatOneArrowUp,
        [GlyphName.AccidentalFlatRaisedStockhausen] = GlyphNames.AccidentalFlatRaisedStockhausen,
        [GlyphName.AccidentalFlatRepeatedLineStockhausen] = GlyphNames.AccidentalFlatRepeatedLineStockhausen,
        [GlyphName.AccidentalFlatRepeatedSpaceStockhausen] = GlyphNames.AccidentalFlatRepeatedSpaceStockhausen,
        [GlyphName.AccidentalFlatThreeArrowsDown] = GlyphNames.AccidentalFlatThreeArrowsDown,
        [GlyphName.AccidentalFlatThreeArrowsUp] = GlyphNames.AccidentalFlatThreeArrowsUp,
        [GlyphName.AccidentalFlatTurned] = GlyphNames.AccidentalFlatTurned,
        [GlyphName.AccidentalFlatTwoArrowsDown] = GlyphNames.AccidentalFlatTwoArrowsDown,
        [GlyphName.AccidentalFlatTwoArrowsUp] = GlyphNames.AccidentalFlatTwoArrowsUp,
        [GlyphName.AccidentalHabaFlatQuarterToneHigher] = GlyphNames.AccidentalHabaFlatQuarterToneHigher,
        [GlyphName.AccidentalHabaFlatThreeQuarterTonesLower] = GlyphNames.AccidentalHabaFlatThreeQuarterTonesLower,
        [GlyphName.AccidentalHabaQuarterToneHigher] = GlyphNames.AccidentalHabaQuarterToneHigher,
        [GlyphName.AccidentalHabaQuarterToneLower] = GlyphNames.AccidentalHabaQuarterToneLower,
        [GlyphName.AccidentalHabaSharpQuarterToneLower] = GlyphNames.AccidentalHabaSharpQuarterToneLower,
        [GlyphName.AccidentalHabaSharpThreeQuarterTonesHigher] = GlyphNames.AccidentalHabaSharpThreeQuarterTonesHigher,
        [GlyphName.AccidentalHalfSharpArrowDown] = GlyphNames.AccidentalHalfSharpArrowDown,
        [GlyphName.AccidentalHalfSharpArrowUp] = GlyphNames.AccidentalHalfSharpArrowUp,
        [GlyphName.AccidentalJohnston13] = GlyphNames.AccidentalJohnston13,
        [GlyphName.AccidentalJohnston31] = GlyphNames.AccidentalJohnston31,
        [GlyphName.AccidentalJohnstonDown] = GlyphNames.AccidentalJohnstonDown,
        [GlyphName.AccidentalJohnstonEl] = GlyphNames.AccidentalJohnstonEl,
        [GlyphName.AccidentalJohnstonMinus] = GlyphNames.AccidentalJohnstonMinus,
        [GlyphName.AccidentalJohnstonPlus] = GlyphNames.AccidentalJohnstonPlus,
        [GlyphName.AccidentalJohnstonSeven] = GlyphNames.AccidentalJohnstonSeven,
        [GlyphName.AccidentalJohnstonUp] = GlyphNames.AccidentalJohnstonUp,
        [GlyphName.AccidentalKomaFlat] = GlyphNames.AccidentalKomaFlat,
        [GlyphName.AccidentalKomaSharp] = GlyphNames.AccidentalKomaSharp,
        [GlyphName.AccidentalKoron] = GlyphNames.AccidentalKoron,
        [GlyphName.AccidentalKucukMucennebFlat] = GlyphNames.AccidentalKucukMucennebFlat,
        [GlyphName.AccidentalKucukMucennebSharp] = GlyphNames.AccidentalKucukMucennebSharp,
        [GlyphName.AccidentalLargeDoubleSharp] = GlyphNames.AccidentalLargeDoubleSharp,
        [GlyphName.AccidentalLowerOneSeptimalComma] = GlyphNames.AccidentalLowerOneSeptimalComma,
        [GlyphName.AccidentalLowerOneTridecimalQuartertone] = GlyphNames.AccidentalLowerOneTridecimalQuartertone,
        [GlyphName.AccidentalLowerOneUndecimalQuartertone] = GlyphNames.AccidentalLowerOneUndecimalQuartertone,
        [GlyphName.AccidentalLowerTwoSeptimalCommas] = GlyphNames.AccidentalLowerTwoSeptimalCommas,
        [GlyphName.AccidentalLoweredStockhausen] = GlyphNames.AccidentalLoweredStockhausen,
        [GlyphName.AccidentalNarrowReversedFlat] = GlyphNames.AccidentalNarrowReversedFlat,
        [GlyphName.AccidentalNarrowReversedFlatAndFlat] = GlyphNames.AccidentalNarrowReversedFlatAndFlat,
        [GlyphName.AccidentalNatural] = GlyphNames.AccidentalNatural,
        [GlyphName.AccidentalNaturalArabic] = GlyphNames.AccidentalNaturalArabic,
        [GlyphName.AccidentalNaturalEqualTempered] = GlyphNames.AccidentalNaturalEqualTempered,
        [GlyphName.AccidentalNaturalFlat] = GlyphNames.AccidentalNaturalFlat,
        [GlyphName.AccidentalNaturalLoweredStockhausen] = GlyphNames.AccidentalNaturalLoweredStockhausen,
        [GlyphName.AccidentalNaturalOneArrowDown] = GlyphNames.AccidentalNaturalOneArrowDown,
        [GlyphName.AccidentalNaturalOneArrowUp] = GlyphNames.AccidentalNaturalOneArrowUp,
        [GlyphName.AccidentalNaturalRaisedStockhausen] = GlyphNames.AccidentalNaturalRaisedStockhausen,
        [GlyphName.AccidentalNaturalReversed] = GlyphNames.AccidentalNaturalReversed,
        [GlyphName.AccidentalNaturalSharp] = GlyphNames.AccidentalNaturalSharp,
        [GlyphName.AccidentalNaturalThreeArrowsDown] = GlyphNames.AccidentalNaturalThreeArrowsDown,
        [GlyphName.AccidentalNaturalThreeArrowsUp] = GlyphNames.AccidentalNaturalThreeArrowsUp,
        [GlyphName.AccidentalNaturalTwoArrowsDown] = GlyphNames.AccidentalNaturalTwoArrowsDown,
        [GlyphName.AccidentalNaturalTwoArrowsUp] = GlyphNames.AccidentalNaturalTwoArrowsUp,
        [GlyphName.AccidentalOneAndAHalfSharpsArrowDown] = GlyphNames.AccidentalOneAndAHalfSharpsArrowDown,
        [GlyphName.AccidentalOneAndAHalfSharpsArrowUp] = GlyphNames.AccidentalOneAndAHalfSharpsArrowUp,
        [GlyphName.AccidentalOneQuarterToneFlatFerneyhough] = GlyphNames.AccidentalOneQuarterToneFlatFerneyhough,
        [GlyphName.AccidentalOneQuarterToneFlatStockhausen] = GlyphNames.AccidentalOneQuarterToneFlatStockhausen,
        [GlyphName.AccidentalOneQuarterToneSharpFerneyhough] = GlyphNames.AccidentalOneQuarterToneSharpFerneyhough,
        [GlyphName.AccidentalOneQuarterToneSharpStockhausen] = GlyphNames.AccidentalOneQuarterToneSharpStockhausen,
        [GlyphName.AccidentalOneThirdToneFlatFerneyhough] = GlyphNames.AccidentalOneThirdToneFlatFerneyhough,
        [GlyphName.AccidentalOneThirdToneSharpFerneyhough] = GlyphNames.AccidentalOneThirdToneSharpFerneyhough,
        [GlyphName.AccidentalParensLeft] = GlyphNames.AccidentalParensLeft,
        [GlyphName.AccidentalParensRight] = GlyphNames.AccidentalParensRight,
        [GlyphName.AccidentalQuarterFlatEqualTempered] = GlyphNames.AccidentalQuarterFlatEqualTempered,
        [GlyphName.AccidentalQuarterSharpEqualTempered] = GlyphNames.AccidentalQuarterSharpEqualTempered,
        [GlyphName.AccidentalQuarterToneFlat4] = GlyphNames.AccidentalQuarterToneFlat4,
        [GlyphName.AccidentalQuarterToneFlatArabic] = GlyphNames.AccidentalQuarterToneFlatArabic,
        [GlyphName.AccidentalQuarterToneFlatArrowUp] = GlyphNames.AccidentalQuarterToneFlatArrowUp,
        [GlyphName.AccidentalQuarterToneFlatFilledReversed] = GlyphNames.AccidentalQuarterToneFlatFilledReversed,
        [GlyphName.AccidentalQuarterToneFlatNaturalArrowDown] = GlyphNames.AccidentalQuarterToneFlatNaturalArrowDown,
        [GlyphName.AccidentalQuarterToneFlatPenderecki] = GlyphNames.AccidentalQuarterToneFlatPenderecki,
        [GlyphName.AccidentalQuarterToneFlatStein] = GlyphNames.AccidentalQuarterToneFlatStein,
        [GlyphName.AccidentalQuarterToneFlatVanBlankenburg] = GlyphNames.AccidentalQuarterToneFlatVanBlankenburg,
        [GlyphName.AccidentalQuarterToneSharp4] = GlyphNames.AccidentalQuarterToneSharp4,
        [GlyphName.AccidentalQuarterToneSharpArabic] = GlyphNames.AccidentalQuarterToneSharpArabic,
        [GlyphName.AccidentalQuarterToneSharpArrowDown] = GlyphNames.AccidentalQuarterToneSharpArrowDown,
        [GlyphName.AccidentalQuarterToneSharpBusotti] = GlyphNames.AccidentalQuarterToneSharpBusotti,
        [GlyphName.AccidentalQuarterToneSharpNaturalArrowUp] = GlyphNames.AccidentalQuarterToneSharpNaturalArrowUp,
        [GlyphName.AccidentalQuarterToneSharpStein] = GlyphNames.AccidentalQuarterToneSharpStein,
        [GlyphName.AccidentalQuarterToneSharpWiggle] = GlyphNames.AccidentalQuarterToneSharpWiggle,
        [GlyphName.AccidentalRaiseOneSeptimalComma] = GlyphNames.AccidentalRaiseOneSeptimalComma,
        [GlyphName.AccidentalRaiseOneTridecimalQuartertone] = GlyphNames.AccidentalRaiseOneTridecimalQuartertone,
        [GlyphName.AccidentalRaiseOneUndecimalQuartertone] = GlyphNames.AccidentalRaiseOneUndecimalQuartertone,
        [GlyphName.AccidentalRaiseTwoSeptimalCommas] = GlyphNames.AccidentalRaiseTwoSeptimalCommas,
        [GlyphName.AccidentalRaisedStockhausen] = GlyphNames.AccidentalRaisedStockhausen,
        [GlyphName.AccidentalReversedFlatAndFlatArrowDown] = GlyphNames.AccidentalReversedFlatAndFlatArrowDown,
        [GlyphName.AccidentalReversedFlatAndFlatArrowUp] = GlyphNames.AccidentalReversedFlatAndFlatArrowUp,
        [GlyphName.AccidentalReversedFlatArrowDown] = GlyphNames.AccidentalReversedFlatArrowDown,
        [GlyphName.AccidentalReversedFlatArrowUp] = GlyphNames.AccidentalReversedFlatArrowUp,
        [GlyphName.AccidentalSharp] = GlyphNames.AccidentalSharp,
        [GlyphName.AccidentalSharpArabic] = GlyphNames.AccidentalSharpArabic,
        [GlyphName.AccidentalSharpEqualTempered] = GlyphNames.AccidentalSharpEqualTempered,
        [GlyphName.AccidentalSharpLoweredStockhausen] = GlyphNames.AccidentalSharpLoweredStockhausen,
        [GlyphName.AccidentalSharpOneArrowDown] = GlyphNames.AccidentalSharpOneArrowDown,
        [GlyphName.AccidentalSharpOneArrowUp] = GlyphNames.AccidentalSharpOneArrowUp,
        [GlyphName.AccidentalSharpOneHorizontalStroke] = GlyphNames.AccidentalSharpOneHorizontalStroke,
        [GlyphName.AccidentalSharpRaisedStockhausen] = GlyphNames.AccidentalSharpRaisedStockhausen,
        [GlyphName.AccidentalSharpRepeatedLineStockhausen] = GlyphNames.AccidentalSharpRepeatedLineStockhausen,
        [GlyphName.AccidentalSharpRepeatedSpaceStockhausen] = GlyphNames.AccidentalSharpRepeatedSpaceStockhausen,
        [GlyphName.AccidentalSharpReversed] = GlyphNames.AccidentalSharpReversed,
        [GlyphName.AccidentalSharpSharp] = GlyphNames.AccidentalSharpSharp,
        [GlyphName.AccidentalSharpThreeArrowsDown] = GlyphNames.AccidentalSharpThreeArrowsDown,
        [GlyphName.AccidentalSharpThreeArrowsUp] = GlyphNames.AccidentalSharpThreeArrowsUp,
        [GlyphName.AccidentalSharpTwoArrowsDown] = GlyphNames.AccidentalSharpTwoArrowsDown,
        [GlyphName.AccidentalSharpTwoArrowsUp] = GlyphNames.AccidentalSharpTwoArrowsUp,
        [GlyphName.AccidentalSims12Down] = GlyphNames.AccidentalSims12Down,
        [GlyphName.AccidentalSims12Up] = GlyphNames.AccidentalSims12Up,
        [GlyphName.AccidentalSims4Down] = GlyphNames.AccidentalSims4Down,
        [GlyphName.AccidentalSims4Up] = GlyphNames.AccidentalSims4Up,
        [GlyphName.AccidentalSims6Down] = GlyphNames.AccidentalSims6Down,
        [GlyphName.AccidentalSims6Up] = GlyphNames.AccidentalSims6Up,
        [GlyphName.AccidentalSori] = GlyphNames.AccidentalSori,
        [GlyphName.AccidentalTavenerFlat] = GlyphNames.AccidentalTavenerFlat,
        [GlyphName.AccidentalTavenerSharp] = GlyphNames.AccidentalTavenerSharp,
        [GlyphName.AccidentalThreeQuarterTonesFlatArabic] = GlyphNames.AccidentalThreeQuarterTonesFlatArabic,
        [GlyphName.AccidentalThreeQuarterTonesFlatArrowDown] = GlyphNames.AccidentalThreeQuarterTonesFlatArrowDown,
        [GlyphName.AccidentalThreeQuarterTonesFlatArrowUp] = GlyphNames.AccidentalThreeQuarterTonesFlatArrowUp,
        [GlyphName.AccidentalThreeQuarterTonesFlatCouper] = GlyphNames.AccidentalThreeQuarterTonesFlatCouper,
        [GlyphName.AccidentalThreeQuarterTonesFlatGrisey] = GlyphNames.AccidentalThreeQuarterTonesFlatGrisey,
        [GlyphName.AccidentalThreeQuarterTonesFlatTartini] = GlyphNames.AccidentalThreeQuarterTonesFlatTartini,
        [GlyphName.AccidentalThreeQuarterTonesFlatZimmermann] = GlyphNames.AccidentalThreeQuarterTonesFlatZimmermann,
        [GlyphName.AccidentalThreeQuarterTonesSharpArabic] = GlyphNames.AccidentalThreeQuarterTonesSharpArabic,
        [GlyphName.AccidentalThreeQuarterTonesSharpArrowDown] = GlyphNames.AccidentalThreeQuarterTonesSharpArrowDown,
        [GlyphName.AccidentalThreeQuarterTonesSharpArrowUp] = GlyphNames.AccidentalThreeQuarterTonesSharpArrowUp,
        [GlyphName.AccidentalThreeQuarterTonesSharpBusotti] = GlyphNames.AccidentalThreeQuarterTonesSharpBusotti,
        [GlyphName.AccidentalThreeQuarterTonesSharpStein] = GlyphNames.AccidentalThreeQuarterTonesSharpStein,
        [GlyphName.AccidentalThreeQuarterTonesSharpStockhausen] = GlyphNames.AccidentalThreeQuarterTonesSharpStockhausen,
        [GlyphName.AccidentalTripleFlat] = GlyphNames.AccidentalTripleFlat,
        [GlyphName.AccidentalTripleSharp] = GlyphNames.AccidentalTripleSharp,
        [GlyphName.AccidentalTwoThirdTonesFlatFerneyhough] = GlyphNames.AccidentalTwoThirdTonesFlatFerneyhough,
        [GlyphName.AccidentalTwoThirdTonesSharpFerneyhough] = GlyphNames.AccidentalTwoThirdTonesSharpFerneyhough,
        [GlyphName.AccidentalUpsAndDownsDown] = GlyphNames.AccidentalUpsAndDownsDown,
        [GlyphName.AccidentalUpsAndDownsLess] = GlyphNames.AccidentalUpsAndDownsLess,
        [GlyphName.AccidentalUpsAndDownsMore] = GlyphNames.AccidentalUpsAndDownsMore,
        [GlyphName.AccidentalUpsAndDownsUp] = GlyphNames.AccidentalUpsAndDownsUp,
        [GlyphName.AccidentalWilsonMinus] = GlyphNames.AccidentalWilsonMinus,
        [GlyphName.AccidentalWilsonPlus] = GlyphNames.AccidentalWilsonPlus,
        [GlyphName.AccidentalWyschnegradsky10TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky10TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky10TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky10TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky11TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky11TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky11TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky11TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky1TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky1TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky1TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky1TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky2TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky2TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky2TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky2TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky3TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky3TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky3TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky3TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky4TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky4TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky4TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky4TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky5TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky5TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky5TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky5TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky6TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky6TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky6TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky6TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky7TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky7TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky7TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky7TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky8TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky8TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky8TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky8TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky9TwelfthsFlat] = GlyphNames.AccidentalWyschnegradsky9TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky9TwelfthsSharp] = GlyphNames.AccidentalWyschnegradsky9TwelfthsSharp,
        [GlyphName.AccidentalXenakisOneThirdToneSharp] = GlyphNames.AccidentalXenakisOneThirdToneSharp,
        [GlyphName.AccidentalXenakisTwoThirdTonesSharp] = GlyphNames.AccidentalXenakisTwoThirdTonesSharp,
        [GlyphName.AnalyticsChoralmelodie] = GlyphNames.AnalyticsChoralmelodie,
        [GlyphName.AnalyticsEndStimme] = GlyphNames.AnalyticsEndStimme,
        [GlyphName.AnalyticsHauptrhythmus] = GlyphNames.AnalyticsHauptrhythmus,
        [GlyphName.AnalyticsHauptstimme] = GlyphNames.AnalyticsHauptstimme,
        [GlyphName.AnalyticsInversion1] = GlyphNames.AnalyticsInversion1,
        [GlyphName.AnalyticsNebenstimme] = GlyphNames.AnalyticsNebenstimme,
        [GlyphName.AnalyticsStartStimme] = GlyphNames.AnalyticsStartStimme,
        [GlyphName.AnalyticsTheme] = GlyphNames.AnalyticsTheme,
        [GlyphName.AnalyticsTheme1] = GlyphNames.AnalyticsTheme1,
        [GlyphName.AnalyticsThemeInversion] = GlyphNames.AnalyticsThemeInversion,
        [GlyphName.AnalyticsThemeRetrograde] = GlyphNames.AnalyticsThemeRetrograde,
        [GlyphName.AnalyticsThemeRetrogradeInversion] = GlyphNames.AnalyticsThemeRetrogradeInversion,
        [GlyphName.Arpeggiato] = GlyphNames.Arpeggiato,
        [GlyphName.ArpeggiatoDown] = GlyphNames.ArpeggiatoDown,
        [GlyphName.ArpeggiatoUp] = GlyphNames.ArpeggiatoUp,
        [GlyphName.ArrowBlackDown] = GlyphNames.ArrowBlackDown,
        [GlyphName.ArrowBlackDownLeft] = GlyphNames.ArrowBlackDownLeft,
        [GlyphName.ArrowBlackDownRight] = GlyphNames.ArrowBlackDownRight,
        [GlyphName.ArrowBlackLeft] = GlyphNames.ArrowBlackLeft,
        [GlyphName.ArrowBlackRight] = GlyphNames.ArrowBlackRight,
        [GlyphName.ArrowBlackUp] = GlyphNames.ArrowBlackUp,
        [GlyphName.ArrowBlackUpLeft] = GlyphNames.ArrowBlackUpLeft,
        [GlyphName.ArrowBlackUpRight] = GlyphNames.ArrowBlackUpRight,
        [GlyphName.ArrowOpenDown] = GlyphNames.ArrowOpenDown,
        [GlyphName.ArrowOpenDownLeft] = GlyphNames.ArrowOpenDownLeft,
        [GlyphName.ArrowOpenDownRight] = GlyphNames.ArrowOpenDownRight,
        [GlyphName.ArrowOpenLeft] = GlyphNames.ArrowOpenLeft,
        [GlyphName.ArrowOpenRight] = GlyphNames.ArrowOpenRight,
        [GlyphName.ArrowOpenUp] = GlyphNames.ArrowOpenUp,
        [GlyphName.ArrowOpenUpLeft] = GlyphNames.ArrowOpenUpLeft,
        [GlyphName.ArrowOpenUpRight] = GlyphNames.ArrowOpenUpRight,
        [GlyphName.ArrowWhiteDown] = GlyphNames.ArrowWhiteDown,
        [GlyphName.ArrowWhiteDownLeft] = GlyphNames.ArrowWhiteDownLeft,
        [GlyphName.ArrowWhiteDownRight] = GlyphNames.ArrowWhiteDownRight,
        [GlyphName.ArrowWhiteLeft] = GlyphNames.ArrowWhiteLeft,
        [GlyphName.ArrowWhiteRight] = GlyphNames.ArrowWhiteRight,
        [GlyphName.ArrowWhiteUp] = GlyphNames.ArrowWhiteUp,
        [GlyphName.ArrowWhiteUpLeft] = GlyphNames.ArrowWhiteUpLeft,
        [GlyphName.ArrowWhiteUpRight] = GlyphNames.ArrowWhiteUpRight,
        [GlyphName.ArrowheadBlackDown] = GlyphNames.ArrowheadBlackDown,
        [GlyphName.ArrowheadBlackDownLeft] = GlyphNames.ArrowheadBlackDownLeft,
        [GlyphName.ArrowheadBlackDownRight] = GlyphNames.ArrowheadBlackDownRight,
        [GlyphName.ArrowheadBlackLeft] = GlyphNames.ArrowheadBlackLeft,
        [GlyphName.ArrowheadBlackRight] = GlyphNames.ArrowheadBlackRight,
        [GlyphName.ArrowheadBlackUp] = GlyphNames.ArrowheadBlackUp,
        [GlyphName.ArrowheadBlackUpLeft] = GlyphNames.ArrowheadBlackUpLeft,
        [GlyphName.ArrowheadBlackUpRight] = GlyphNames.ArrowheadBlackUpRight,
        [GlyphName.ArrowheadOpenDown] = GlyphNames.ArrowheadOpenDown,
        [GlyphName.ArrowheadOpenDownLeft] = GlyphNames.ArrowheadOpenDownLeft,
        [GlyphName.ArrowheadOpenDownRight] = GlyphNames.ArrowheadOpenDownRight,
        [GlyphName.ArrowheadOpenLeft] = GlyphNames.ArrowheadOpenLeft,
        [GlyphName.ArrowheadOpenRight] = GlyphNames.ArrowheadOpenRight,
        [GlyphName.ArrowheadOpenUp] = GlyphNames.ArrowheadOpenUp,
        [GlyphName.ArrowheadOpenUpLeft] = GlyphNames.ArrowheadOpenUpLeft,
        [GlyphName.ArrowheadOpenUpRight] = GlyphNames.ArrowheadOpenUpRight,
        [GlyphName.ArrowheadWhiteDown] = GlyphNames.ArrowheadWhiteDown,
        [GlyphName.ArrowheadWhiteDownLeft] = GlyphNames.ArrowheadWhiteDownLeft,
        [GlyphName.ArrowheadWhiteDownRight] = GlyphNames.ArrowheadWhiteDownRight,
        [GlyphName.ArrowheadWhiteLeft] = GlyphNames.ArrowheadWhiteLeft,
        [GlyphName.ArrowheadWhiteRight] = GlyphNames.ArrowheadWhiteRight,
        [GlyphName.ArrowheadWhiteUp] = GlyphNames.ArrowheadWhiteUp,
        [GlyphName.ArrowheadWhiteUpLeft] = GlyphNames.ArrowheadWhiteUpLeft,
        [GlyphName.ArrowheadWhiteUpRight] = GlyphNames.ArrowheadWhiteUpRight,
        [GlyphName.ArticAccentAbove] = GlyphNames.ArticAccentAbove,
        [GlyphName.ArticAccentBelow] = GlyphNames.ArticAccentBelow,
        [GlyphName.ArticAccentStaccatoAbove] = GlyphNames.ArticAccentStaccatoAbove,
        [GlyphName.ArticAccentStaccatoBelow] = GlyphNames.ArticAccentStaccatoBelow,
        [GlyphName.ArticLaissezVibrerAbove] = GlyphNames.ArticLaissezVibrerAbove,
        [GlyphName.ArticLaissezVibrerBelow] = GlyphNames.ArticLaissezVibrerBelow,
        [GlyphName.ArticMarcatoAbove] = GlyphNames.ArticMarcatoAbove,
        [GlyphName.ArticMarcatoBelow] = GlyphNames.ArticMarcatoBelow,
        [GlyphName.ArticMarcatoStaccatoAbove] = GlyphNames.ArticMarcatoStaccatoAbove,
        [GlyphName.ArticMarcatoStaccatoBelow] = GlyphNames.ArticMarcatoStaccatoBelow,
        [GlyphName.ArticMarcatoTenutoAbove] = GlyphNames.ArticMarcatoTenutoAbove,
        [GlyphName.ArticMarcatoTenutoBelow] = GlyphNames.ArticMarcatoTenutoBelow,
        [GlyphName.ArticSoftAccentAbove] = GlyphNames.ArticSoftAccentAbove,
        [GlyphName.ArticSoftAccentBelow] = GlyphNames.ArticSoftAccentBelow,
        [GlyphName.ArticSoftAccentStaccatoAbove] = GlyphNames.ArticSoftAccentStaccatoAbove,
        [GlyphName.ArticSoftAccentStaccatoBelow] = GlyphNames.ArticSoftAccentStaccatoBelow,
        [GlyphName.ArticSoftAccentTenutoAbove] = GlyphNames.ArticSoftAccentTenutoAbove,
        [GlyphName.ArticSoftAccentTenutoBelow] = GlyphNames.ArticSoftAccentTenutoBelow,
        [GlyphName.ArticSoftAccentTenutoStaccatoAbove] = GlyphNames.ArticSoftAccentTenutoStaccatoAbove,
        [GlyphName.ArticSoftAccentTenutoStaccatoBelow] = GlyphNames.ArticSoftAccentTenutoStaccatoBelow,
        [GlyphName.ArticStaccatissimoAbove] = GlyphNames.ArticStaccatissimoAbove,
        [GlyphName.ArticStaccatissimoBelow] = GlyphNames.ArticStaccatissimoBelow,
        [GlyphName.ArticStaccatissimoStrokeAbove] = GlyphNames.ArticStaccatissimoStrokeAbove,
        [GlyphName.ArticStaccatissimoStrokeBelow] = GlyphNames.ArticStaccatissimoStrokeBelow,
        [GlyphName.ArticStaccatissimoWedgeAbove] = GlyphNames.ArticStaccatissimoWedgeAbove,
        [GlyphName.ArticStaccatissimoWedgeBelow] = GlyphNames.ArticStaccatissimoWedgeBelow,
        [GlyphName.ArticStaccatoAbove] = GlyphNames.ArticStaccatoAbove,
        [GlyphName.ArticStaccatoBelow] = GlyphNames.ArticStaccatoBelow,
        [GlyphName.ArticStressAbove] = GlyphNames.ArticStressAbove,
        [GlyphName.ArticStressBelow] = GlyphNames.ArticStressBelow,
        [GlyphName.ArticTenutoAbove] = GlyphNames.ArticTenutoAbove,
        [GlyphName.ArticTenutoAccentAbove] = GlyphNames.ArticTenutoAccentAbove,
        [GlyphName.ArticTenutoAccentBelow] = GlyphNames.ArticTenutoAccentBelow,
        [GlyphName.ArticTenutoBelow] = GlyphNames.ArticTenutoBelow,
        [GlyphName.ArticTenutoStaccatoAbove] = GlyphNames.ArticTenutoStaccatoAbove,
        [GlyphName.ArticTenutoStaccatoBelow] = GlyphNames.ArticTenutoStaccatoBelow,
        [GlyphName.ArticUnstressAbove] = GlyphNames.ArticUnstressAbove,
        [GlyphName.ArticUnstressBelow] = GlyphNames.ArticUnstressBelow,
        [GlyphName.AugmentationDot] = GlyphNames.AugmentationDot,
        [GlyphName.BarlineDashed] = GlyphNames.BarlineDashed,
        [GlyphName.BarlineDotted] = GlyphNames.BarlineDotted,
        [GlyphName.BarlineDouble] = GlyphNames.BarlineDouble,
        [GlyphName.BarlineFinal] = GlyphNames.BarlineFinal,
        [GlyphName.BarlineHeavy] = GlyphNames.BarlineHeavy,
        [GlyphName.BarlineHeavyHeavy] = GlyphNames.BarlineHeavyHeavy,
        [GlyphName.BarlineReverseFinal] = GlyphNames.BarlineReverseFinal,
        [GlyphName.BarlineShort] = GlyphNames.BarlineShort,
        [GlyphName.BarlineSingle] = GlyphNames.BarlineSingle,
        [GlyphName.BarlineTick] = GlyphNames.BarlineTick,
        [GlyphName.BeamAccelRit1] = GlyphNames.BeamAccelRit1,
        [GlyphName.BeamAccelRit10] = GlyphNames.BeamAccelRit10,
        [GlyphName.BeamAccelRit11] = GlyphNames.BeamAccelRit11,
        [GlyphName.BeamAccelRit12] = GlyphNames.BeamAccelRit12,
        [GlyphName.BeamAccelRit13] = GlyphNames.BeamAccelRit13,
        [GlyphName.BeamAccelRit14] = GlyphNames.BeamAccelRit14,
        [GlyphName.BeamAccelRit15] = GlyphNames.BeamAccelRit15,
        [GlyphName.BeamAccelRit2] = GlyphNames.BeamAccelRit2,
        [GlyphName.BeamAccelRit3] = GlyphNames.BeamAccelRit3,
        [GlyphName.BeamAccelRit4] = GlyphNames.BeamAccelRit4,
        [GlyphName.BeamAccelRit5] = GlyphNames.BeamAccelRit5,
        [GlyphName.BeamAccelRit6] = GlyphNames.BeamAccelRit6,
        [GlyphName.BeamAccelRit7] = GlyphNames.BeamAccelRit7,
        [GlyphName.BeamAccelRit8] = GlyphNames.BeamAccelRit8,
        [GlyphName.BeamAccelRit9] = GlyphNames.BeamAccelRit9,
        [GlyphName.BeamAccelRitFinal] = GlyphNames.BeamAccelRitFinal,
        [GlyphName.Brace] = GlyphNames.Brace,
        [GlyphName.Bracket] = GlyphNames.Bracket,
        [GlyphName.BracketBottom] = GlyphNames.BracketBottom,
        [GlyphName.BracketTop] = GlyphNames.BracketTop,
        [GlyphName.BrassBend] = GlyphNames.BrassBend,
        [GlyphName.BrassDoitLong] = GlyphNames.BrassDoitLong,
        [GlyphName.BrassDoitMedium] = GlyphNames.BrassDoitMedium,
        [GlyphName.BrassDoitShort] = GlyphNames.BrassDoitShort,
        [GlyphName.BrassFallLipLong] = GlyphNames.BrassFallLipLong,
        [GlyphName.BrassFallLipMedium] = GlyphNames.BrassFallLipMedium,
        [GlyphName.BrassFallLipShort] = GlyphNames.BrassFallLipShort,
        [GlyphName.BrassFallRoughLong] = GlyphNames.BrassFallRoughLong,
        [GlyphName.BrassFallRoughMedium] = GlyphNames.BrassFallRoughMedium,
        [GlyphName.BrassFallRoughShort] = GlyphNames.BrassFallRoughShort,
        [GlyphName.BrassFallSmoothLong] = GlyphNames.BrassFallSmoothLong,
        [GlyphName.BrassFallSmoothMedium] = GlyphNames.BrassFallSmoothMedium,
        [GlyphName.BrassFallSmoothShort] = GlyphNames.BrassFallSmoothShort,
        [GlyphName.BrassFlip] = GlyphNames.BrassFlip,
        [GlyphName.BrassHarmonMuteClosed] = GlyphNames.BrassHarmonMuteClosed,
        [GlyphName.BrassHarmonMuteStemHalfLeft] = GlyphNames.BrassHarmonMuteStemHalfLeft,
        [GlyphName.BrassHarmonMuteStemHalfRight] = GlyphNames.BrassHarmonMuteStemHalfRight,
        [GlyphName.BrassHarmonMuteStemOpen] = GlyphNames.BrassHarmonMuteStemOpen,
        [GlyphName.BrassJazzTurn] = GlyphNames.BrassJazzTurn,
        [GlyphName.BrassLiftLong] = GlyphNames.BrassLiftLong,
        [GlyphName.BrassLiftMedium] = GlyphNames.BrassLiftMedium,
        [GlyphName.BrassLiftShort] = GlyphNames.BrassLiftShort,
        [GlyphName.BrassLiftSmoothLong] = GlyphNames.BrassLiftSmoothLong,
        [GlyphName.BrassLiftSmoothMedium] = GlyphNames.BrassLiftSmoothMedium,
        [GlyphName.BrassLiftSmoothShort] = GlyphNames.BrassLiftSmoothShort,
        [GlyphName.BrassMuteClosed] = GlyphNames.BrassMuteClosed,
        [GlyphName.BrassMuteHalfClosed] = GlyphNames.BrassMuteHalfClosed,
        [GlyphName.BrassMuteOpen] = GlyphNames.BrassMuteOpen,
        [GlyphName.BrassPlop] = GlyphNames.BrassPlop,
        [GlyphName.BrassScoop] = GlyphNames.BrassScoop,
        [GlyphName.BrassSmear] = GlyphNames.BrassSmear,
        [GlyphName.BrassValveTrill] = GlyphNames.BrassValveTrill,
        [GlyphName.BreathMarkComma] = GlyphNames.BreathMarkComma,
        [GlyphName.BreathMarkSalzedo] = GlyphNames.BreathMarkSalzedo,
        [GlyphName.BreathMarkTick] = GlyphNames.BreathMarkTick,
        [GlyphName.BreathMarkUpbow] = GlyphNames.BreathMarkUpbow,
        [GlyphName.BridgeClef] = GlyphNames.BridgeClef,
        [GlyphName.BuzzRoll] = GlyphNames.BuzzRoll,
        [GlyphName.CClef] = GlyphNames.CClef,
        [GlyphName.CClef8vb] = GlyphNames.CClef8vb,
        [GlyphName.CClefArrowDown] = GlyphNames.CClefArrowDown,
        [GlyphName.CClefArrowUp] = GlyphNames.CClefArrowUp,
        [GlyphName.CClefChange] = GlyphNames.CClefChange,
        [GlyphName.CClefCombining] = GlyphNames.CClefCombining,
        [GlyphName.CClefReversed] = GlyphNames.CClefReversed,
        [GlyphName.CClefSquare] = GlyphNames.CClefSquare,
        [GlyphName.Caesura] = GlyphNames.Caesura,
        [GlyphName.CaesuraCurved] = GlyphNames.CaesuraCurved,
        [GlyphName.CaesuraShort] = GlyphNames.CaesuraShort,
        [GlyphName.CaesuraSingleStroke] = GlyphNames.CaesuraSingleStroke,
        [GlyphName.CaesuraThick] = GlyphNames.CaesuraThick,
        [GlyphName.ChantAccentusAbove] = GlyphNames.ChantAccentusAbove,
        [GlyphName.ChantAccentusBelow] = GlyphNames.ChantAccentusBelow,
        [GlyphName.ChantAuctumAsc] = GlyphNames.ChantAuctumAsc,
        [GlyphName.ChantAuctumDesc] = GlyphNames.ChantAuctumDesc,
        [GlyphName.ChantAugmentum] = GlyphNames.ChantAugmentum,
        [GlyphName.ChantCaesura] = GlyphNames.ChantCaesura,
        [GlyphName.ChantCclef] = GlyphNames.ChantCclef,
        [GlyphName.ChantCirculusAbove] = GlyphNames.ChantCirculusAbove,
        [GlyphName.ChantCirculusBelow] = GlyphNames.ChantCirculusBelow,
        [GlyphName.ChantConnectingLineAsc2nd] = GlyphNames.ChantConnectingLineAsc2nd,
        [GlyphName.ChantConnectingLineAsc3rd] = GlyphNames.ChantConnectingLineAsc3rd,
        [GlyphName.ChantConnectingLineAsc4th] = GlyphNames.ChantConnectingLineAsc4th,
        [GlyphName.ChantConnectingLineAsc5th] = GlyphNames.ChantConnectingLineAsc5th,
        [GlyphName.ChantConnectingLineAsc6th] = GlyphNames.ChantConnectingLineAsc6th,
        [GlyphName.ChantCustosStemDownPosHigh] = GlyphNames.ChantCustosStemDownPosHigh,
        [GlyphName.ChantCustosStemDownPosHighest] = GlyphNames.ChantCustosStemDownPosHighest,
        [GlyphName.ChantCustosStemDownPosMiddle] = GlyphNames.ChantCustosStemDownPosMiddle,
        [GlyphName.ChantCustosStemUpPosLow] = GlyphNames.ChantCustosStemUpPosLow,
        [GlyphName.ChantCustosStemUpPosLowest] = GlyphNames.ChantCustosStemUpPosLowest,
        [GlyphName.ChantCustosStemUpPosMiddle] = GlyphNames.ChantCustosStemUpPosMiddle,
        [GlyphName.ChantDeminutumLower] = GlyphNames.ChantDeminutumLower,
        [GlyphName.ChantDeminutumUpper] = GlyphNames.ChantDeminutumUpper,
        [GlyphName.ChantDivisioFinalis] = GlyphNames.ChantDivisioFinalis,
        [GlyphName.ChantDivisioMaior] = GlyphNames.ChantDivisioMaior,
        [GlyphName.ChantDivisioMaxima] = GlyphNames.ChantDivisioMaxima,
        [GlyphName.ChantDivisioMinima] = GlyphNames.ChantDivisioMinima,
        [GlyphName.ChantEntryLineAsc2nd] = GlyphNames.ChantEntryLineAsc2nd,
        [GlyphName.ChantEntryLineAsc3rd] = GlyphNames.ChantEntryLineAsc3rd,
        [GlyphName.ChantEntryLineAsc4th] = GlyphNames.ChantEntryLineAsc4th,
        [GlyphName.ChantEntryLineAsc5th] = GlyphNames.ChantEntryLineAsc5th,
        [GlyphName.ChantEntryLineAsc6th] = GlyphNames.ChantEntryLineAsc6th,
        [GlyphName.ChantEpisema] = GlyphNames.ChantEpisema,
        [GlyphName.ChantFclef] = GlyphNames.ChantFclef,
        [GlyphName.ChantIctusAbove] = GlyphNames.ChantIctusAbove,
        [GlyphName.ChantIctusBelow] = GlyphNames.ChantIctusBelow,
        [GlyphName.ChantLigaturaDesc2nd] = GlyphNames.ChantLigaturaDesc2nd,
        [GlyphName.ChantLigaturaDesc3rd] = GlyphNames.ChantLigaturaDesc3rd,
        [GlyphName.ChantLigaturaDesc4th] = GlyphNames.ChantLigaturaDesc4th,
        [GlyphName.ChantLigaturaDesc5th] = GlyphNames.ChantLigaturaDesc5th,
        [GlyphName.ChantOriscusAscending] = GlyphNames.ChantOriscusAscending,
        [GlyphName.ChantOriscusDescending] = GlyphNames.ChantOriscusDescending,
        [GlyphName.ChantOriscusLiquescens] = GlyphNames.ChantOriscusLiquescens,
        [GlyphName.ChantPodatusLower] = GlyphNames.ChantPodatusLower,
        [GlyphName.ChantPodatusUpper] = GlyphNames.ChantPodatusUpper,
        [GlyphName.ChantPunctum] = GlyphNames.ChantPunctum,
        [GlyphName.ChantPunctumCavum] = GlyphNames.ChantPunctumCavum,
        [GlyphName.ChantPunctumDeminutum] = GlyphNames.ChantPunctumDeminutum,
        [GlyphName.ChantPunctumInclinatum] = GlyphNames.ChantPunctumInclinatum,
        [GlyphName.ChantPunctumInclinatumAuctum] = GlyphNames.ChantPunctumInclinatumAuctum,
        [GlyphName.ChantPunctumInclinatumDeminutum] = GlyphNames.ChantPunctumInclinatumDeminutum,
        [GlyphName.ChantPunctumLinea] = GlyphNames.ChantPunctumLinea,
        [GlyphName.ChantPunctumLineaCavum] = GlyphNames.ChantPunctumLineaCavum,
        [GlyphName.ChantPunctumVirga] = GlyphNames.ChantPunctumVirga,
        [GlyphName.ChantPunctumVirgaReversed] = GlyphNames.ChantPunctumVirgaReversed,
        [GlyphName.ChantQuilisma] = GlyphNames.ChantQuilisma,
        [GlyphName.ChantSemicirculusAbove] = GlyphNames.ChantSemicirculusAbove,
        [GlyphName.ChantSemicirculusBelow] = GlyphNames.ChantSemicirculusBelow,
        [GlyphName.ChantStaff] = GlyphNames.ChantStaff,
        [GlyphName.ChantStaffNarrow] = GlyphNames.ChantStaffNarrow,
        [GlyphName.ChantStaffWide] = GlyphNames.ChantStaffWide,
        [GlyphName.ChantStrophicus] = GlyphNames.ChantStrophicus,
        [GlyphName.ChantStrophicusAuctus] = GlyphNames.ChantStrophicusAuctus,
        [GlyphName.ChantStrophicusLiquescens2nd] = GlyphNames.ChantStrophicusLiquescens2nd,
        [GlyphName.ChantStrophicusLiquescens3rd] = GlyphNames.ChantStrophicusLiquescens3rd,
        [GlyphName.ChantStrophicusLiquescens4th] = GlyphNames.ChantStrophicusLiquescens4th,
        [GlyphName.ChantStrophicusLiquescens5th] = GlyphNames.ChantStrophicusLiquescens5th,
        [GlyphName.ChantVirgula] = GlyphNames.ChantVirgula,
        [GlyphName.Clef15] = GlyphNames.Clef15,
        [GlyphName.Clef8] = GlyphNames.Clef8,
        [GlyphName.ClefChangeCombining] = GlyphNames.ClefChangeCombining,
        [GlyphName.Coda] = GlyphNames.Coda,
        [GlyphName.CodaSquare] = GlyphNames.CodaSquare,
        [GlyphName.ConductorBeat2Compound] = GlyphNames.ConductorBeat2Compound,
        [GlyphName.ConductorBeat2Simple] = GlyphNames.ConductorBeat2Simple,
        [GlyphName.ConductorBeat3Compound] = GlyphNames.ConductorBeat3Compound,
        [GlyphName.ConductorBeat3Simple] = GlyphNames.ConductorBeat3Simple,
        [GlyphName.ConductorBeat4Compound] = GlyphNames.ConductorBeat4Compound,
        [GlyphName.ConductorBeat4Simple] = GlyphNames.ConductorBeat4Simple,
        [GlyphName.ConductorLeftBeat] = GlyphNames.ConductorLeftBeat,
        [GlyphName.ConductorRightBeat] = GlyphNames.ConductorRightBeat,
        [GlyphName.ConductorStrongBeat] = GlyphNames.ConductorStrongBeat,
        [GlyphName.ConductorUnconducted] = GlyphNames.ConductorUnconducted,
        [GlyphName.ConductorWeakBeat] = GlyphNames.ConductorWeakBeat,
        [GlyphName.ControlBeginBeam] = GlyphNames.ControlBeginBeam,
        [GlyphName.ControlBeginPhrase] = GlyphNames.ControlBeginPhrase,
        [GlyphName.ControlBeginSlur] = GlyphNames.ControlBeginSlur,
        [GlyphName.ControlBeginTie] = GlyphNames.ControlBeginTie,
        [GlyphName.ControlEndBeam] = GlyphNames.ControlEndBeam,
        [GlyphName.ControlEndPhrase] = GlyphNames.ControlEndPhrase,
        [GlyphName.ControlEndSlur] = GlyphNames.ControlEndSlur,
        [GlyphName.ControlEndTie] = GlyphNames.ControlEndTie,
        [GlyphName.CsymAccidentalDoubleFlat] = GlyphNames.CsymAccidentalDoubleFlat,
        [GlyphName.CsymAccidentalDoubleSharp] = GlyphNames.CsymAccidentalDoubleSharp,
        [GlyphName.CsymAccidentalFlat] = GlyphNames.CsymAccidentalFlat,
        [GlyphName.CsymAccidentalNatural] = GlyphNames.CsymAccidentalNatural,
        [GlyphName.CsymAccidentalSharp] = GlyphNames.CsymAccidentalSharp,
        [GlyphName.CsymAccidentalTripleFlat] = GlyphNames.CsymAccidentalTripleFlat,
        [GlyphName.CsymAccidentalTripleSharp] = GlyphNames.CsymAccidentalTripleSharp,
        [GlyphName.CsymAlteredBassSlash] = GlyphNames.CsymAlteredBassSlash,
        [GlyphName.CsymAugmented] = GlyphNames.CsymAugmented,
        [GlyphName.CsymBracketLeftTall] = GlyphNames.CsymBracketLeftTall,
        [GlyphName.CsymBracketRightTall] = GlyphNames.CsymBracketRightTall,
        [GlyphName.CsymDiagonalArrangementSlash] = GlyphNames.CsymDiagonalArrangementSlash,
        [GlyphName.CsymDiminished] = GlyphNames.CsymDiminished,
        [GlyphName.CsymHalfDiminished] = GlyphNames.CsymHalfDiminished,
        [GlyphName.CsymMajorSeventh] = GlyphNames.CsymMajorSeventh,
        [GlyphName.CsymMinor] = GlyphNames.CsymMinor,
        [GlyphName.CsymParensLeftTall] = GlyphNames.CsymParensLeftTall,
        [GlyphName.CsymParensLeftVeryTall] = GlyphNames.CsymParensLeftVeryTall,
        [GlyphName.CsymParensRightTall] = GlyphNames.CsymParensRightTall,
        [GlyphName.CsymParensRightVeryTall] = GlyphNames.CsymParensRightVeryTall,
        [GlyphName.CurlewSign] = GlyphNames.CurlewSign,
        [GlyphName.DaCapo] = GlyphNames.DaCapo,
        [GlyphName.DalSegno] = GlyphNames.DalSegno,
        [GlyphName.DaseianExcellentes1] = GlyphNames.DaseianExcellentes1,
        [GlyphName.DaseianExcellentes2] = GlyphNames.DaseianExcellentes2,
        [GlyphName.DaseianExcellentes3] = GlyphNames.DaseianExcellentes3,
        [GlyphName.DaseianExcellentes4] = GlyphNames.DaseianExcellentes4,
        [GlyphName.DaseianFinales1] = GlyphNames.DaseianFinales1,
        [GlyphName.DaseianFinales2] = GlyphNames.DaseianFinales2,
        [GlyphName.DaseianFinales3] = GlyphNames.DaseianFinales3,
        [GlyphName.DaseianFinales4] = GlyphNames.DaseianFinales4,
        [GlyphName.DaseianGraves1] = GlyphNames.DaseianGraves1,
        [GlyphName.DaseianGraves2] = GlyphNames.DaseianGraves2,
        [GlyphName.DaseianGraves3] = GlyphNames.DaseianGraves3,
        [GlyphName.DaseianGraves4] = GlyphNames.DaseianGraves4,
        [GlyphName.DaseianResidua1] = GlyphNames.DaseianResidua1,
        [GlyphName.DaseianResidua2] = GlyphNames.DaseianResidua2,
        [GlyphName.DaseianSuperiores1] = GlyphNames.DaseianSuperiores1,
        [GlyphName.DaseianSuperiores2] = GlyphNames.DaseianSuperiores2,
        [GlyphName.DaseianSuperiores3] = GlyphNames.DaseianSuperiores3,
        [GlyphName.DaseianSuperiores4] = GlyphNames.DaseianSuperiores4,
        [GlyphName.DoubleLateralRollStevens] = GlyphNames.DoubleLateralRollStevens,
        [GlyphName.DoubleTongueAbove] = GlyphNames.DoubleTongueAbove,
        [GlyphName.DoubleTongueBelow] = GlyphNames.DoubleTongueBelow,
        [GlyphName.DynamicCombinedSeparatorColon] = GlyphNames.DynamicCombinedSeparatorColon,
        [GlyphName.DynamicCombinedSeparatorHyphen] = GlyphNames.DynamicCombinedSeparatorHyphen,
        [GlyphName.DynamicCombinedSeparatorSlash] = GlyphNames.DynamicCombinedSeparatorSlash,
        [GlyphName.DynamicCombinedSeparatorSpace] = GlyphNames.DynamicCombinedSeparatorSpace,
        [GlyphName.DynamicCrescendoHairpin] = GlyphNames.DynamicCrescendoHairpin,
        [GlyphName.DynamicDiminuendoHairpin] = GlyphNames.DynamicDiminuendoHairpin,
        [GlyphName.DynamicFF] = GlyphNames.DynamicFF,
        [GlyphName.DynamicFFF] = GlyphNames.DynamicFFF,
        [GlyphName.DynamicFFFF] = GlyphNames.DynamicFFFF,
        [GlyphName.DynamicFFFFF] = GlyphNames.DynamicFFFFF,
        [GlyphName.DynamicFFFFFF] = GlyphNames.DynamicFFFFFF,
        [GlyphName.DynamicForte] = GlyphNames.DynamicForte,
        [GlyphName.DynamicFortePiano] = GlyphNames.DynamicFortePiano,
        [GlyphName.DynamicForzando] = GlyphNames.DynamicForzando,
        [GlyphName.DynamicHairpinBracketLeft] = GlyphNames.DynamicHairpinBracketLeft,
        [GlyphName.DynamicHairpinBracketRight] = GlyphNames.DynamicHairpinBracketRight,
        [GlyphName.DynamicHairpinParenthesisLeft] = GlyphNames.DynamicHairpinParenthesisLeft,
        [GlyphName.DynamicHairpinParenthesisRight] = GlyphNames.DynamicHairpinParenthesisRight,
        [GlyphName.DynamicMF] = GlyphNames.DynamicMF,
        [GlyphName.DynamicMP] = GlyphNames.DynamicMP,
        [GlyphName.DynamicMessaDiVoce] = GlyphNames.DynamicMessaDiVoce,
        [GlyphName.DynamicMezzo] = GlyphNames.DynamicMezzo,
        [GlyphName.DynamicNiente] = GlyphNames.DynamicNiente,
        [GlyphName.DynamicNienteForHairpin] = GlyphNames.DynamicNienteForHairpin,
        [GlyphName.DynamicPF] = GlyphNames.DynamicPF,
        [GlyphName.DynamicPP] = GlyphNames.DynamicPP,
        [GlyphName.DynamicPPP] = GlyphNames.DynamicPPP,
        [GlyphName.DynamicPPPP] = GlyphNames.DynamicPPPP,
        [GlyphName.DynamicPPPPP] = GlyphNames.DynamicPPPPP,
        [GlyphName.DynamicPPPPPP] = GlyphNames.DynamicPPPPPP,
        [GlyphName.DynamicPiano] = GlyphNames.DynamicPiano,
        [GlyphName.DynamicRinforzando] = GlyphNames.DynamicRinforzando,
        [GlyphName.DynamicRinforzando1] = GlyphNames.DynamicRinforzando1,
        [GlyphName.DynamicRinforzando2] = GlyphNames.DynamicRinforzando2,
        [GlyphName.DynamicSforzando] = GlyphNames.DynamicSforzando,
        [GlyphName.DynamicSforzando1] = GlyphNames.DynamicSforzando1,
        [GlyphName.DynamicSforzandoPianissimo] = GlyphNames.DynamicSforzandoPianissimo,
        [GlyphName.DynamicSforzandoPiano] = GlyphNames.DynamicSforzandoPiano,
        [GlyphName.DynamicSforzato] = GlyphNames.DynamicSforzato,
        [GlyphName.DynamicSforzatoFF] = GlyphNames.DynamicSforzatoFF,
        [GlyphName.DynamicSforzatoPiano] = GlyphNames.DynamicSforzatoPiano,
        [GlyphName.DynamicZ] = GlyphNames.DynamicZ,
        [GlyphName.ElecAudioChannelsEight] = GlyphNames.ElecAudioChannelsEight,
        [GlyphName.ElecAudioChannelsFive] = GlyphNames.ElecAudioChannelsFive,
        [GlyphName.ElecAudioChannelsFour] = GlyphNames.ElecAudioChannelsFour,
        [GlyphName.ElecAudioChannelsOne] = GlyphNames.ElecAudioChannelsOne,
        [GlyphName.ElecAudioChannelsSeven] = GlyphNames.ElecAudioChannelsSeven,
        [GlyphName.ElecAudioChannelsSix] = GlyphNames.ElecAudioChannelsSix,
        [GlyphName.ElecAudioChannelsThreeFrontal] = GlyphNames.ElecAudioChannelsThreeFrontal,
        [GlyphName.ElecAudioChannelsThreeSurround] = GlyphNames.ElecAudioChannelsThreeSurround,
        [GlyphName.ElecAudioChannelsTwo] = GlyphNames.ElecAudioChannelsTwo,
        [GlyphName.ElecAudioIn] = GlyphNames.ElecAudioIn,
        [GlyphName.ElecAudioMono] = GlyphNames.ElecAudioMono,
        [GlyphName.ElecAudioOut] = GlyphNames.ElecAudioOut,
        [GlyphName.ElecAudioStereo] = GlyphNames.ElecAudioStereo,
        [GlyphName.ElecCamera] = GlyphNames.ElecCamera,
        [GlyphName.ElecDataIn] = GlyphNames.ElecDataIn,
        [GlyphName.ElecDataOut] = GlyphNames.ElecDataOut,
        [GlyphName.ElecDisc] = GlyphNames.ElecDisc,
        [GlyphName.ElecDownload] = GlyphNames.ElecDownload,
        [GlyphName.ElecEject] = GlyphNames.ElecEject,
        [GlyphName.ElecFastForward] = GlyphNames.ElecFastForward,
        [GlyphName.ElecHeadphones] = GlyphNames.ElecHeadphones,
        [GlyphName.ElecHeadset] = GlyphNames.ElecHeadset,
        [GlyphName.ElecLineIn] = GlyphNames.ElecLineIn,
        [GlyphName.ElecLineOut] = GlyphNames.ElecLineOut,
        [GlyphName.ElecLoop] = GlyphNames.ElecLoop,
        [GlyphName.ElecLoudspeaker] = GlyphNames.ElecLoudspeaker,
        [GlyphName.ElecMIDIController0] = GlyphNames.ElecMIDIController0,
        [GlyphName.ElecMIDIController100] = GlyphNames.ElecMIDIController100,
        [GlyphName.ElecMIDIController20] = GlyphNames.ElecMIDIController20,
        [GlyphName.ElecMIDIController40] = GlyphNames.ElecMIDIController40,
        [GlyphName.ElecMIDIController60] = GlyphNames.ElecMIDIController60,
        [GlyphName.ElecMIDIController80] = GlyphNames.ElecMIDIController80,
        [GlyphName.ElecMIDIIn] = GlyphNames.ElecMIDIIn,
        [GlyphName.ElecMIDIOut] = GlyphNames.ElecMIDIOut,
        [GlyphName.ElecMicrophone] = GlyphNames.ElecMicrophone,
        [GlyphName.ElecMicrophoneMute] = GlyphNames.ElecMicrophoneMute,
        [GlyphName.ElecMicrophoneUnmute] = GlyphNames.ElecMicrophoneUnmute,
        [GlyphName.ElecMixingConsole] = GlyphNames.ElecMixingConsole,
        [GlyphName.ElecMonitor] = GlyphNames.ElecMonitor,
        [GlyphName.ElecMute] = GlyphNames.ElecMute,
        [GlyphName.ElecPause] = GlyphNames.ElecPause,
        [GlyphName.ElecPlay] = GlyphNames.ElecPlay,
        [GlyphName.ElecPowerOnOff] = GlyphNames.ElecPowerOnOff,
        [GlyphName.ElecProjector] = GlyphNames.ElecProjector,
        [GlyphName.ElecReplay] = GlyphNames.ElecReplay,
        [GlyphName.ElecRewind] = GlyphNames.ElecRewind,
        [GlyphName.ElecShuffle] = GlyphNames.ElecShuffle,
        [GlyphName.ElecSkipBackwards] = GlyphNames.ElecSkipBackwards,
        [GlyphName.ElecSkipForwards] = GlyphNames.ElecSkipForwards,
        [GlyphName.ElecStop] = GlyphNames.ElecStop,
        [GlyphName.ElecTape] = GlyphNames.ElecTape,
        [GlyphName.ElecUSB] = GlyphNames.ElecUSB,
        [GlyphName.ElecUnmute] = GlyphNames.ElecUnmute,
        [GlyphName.ElecUpload] = GlyphNames.ElecUpload,
        [GlyphName.ElecVideoCamera] = GlyphNames.ElecVideoCamera,
        [GlyphName.ElecVideoIn] = GlyphNames.ElecVideoIn,
        [GlyphName.ElecVideoOut] = GlyphNames.ElecVideoOut,
        [GlyphName.ElecVolumeFader] = GlyphNames.ElecVolumeFader,
        [GlyphName.ElecVolumeFaderThumb] = GlyphNames.ElecVolumeFaderThumb,
        [GlyphName.ElecVolumeLevel0] = GlyphNames.ElecVolumeLevel0,
        [GlyphName.ElecVolumeLevel100] = GlyphNames.ElecVolumeLevel100,
        [GlyphName.ElecVolumeLevel20] = GlyphNames.ElecVolumeLevel20,
        [GlyphName.ElecVolumeLevel40] = GlyphNames.ElecVolumeLevel40,
        [GlyphName.ElecVolumeLevel60] = GlyphNames.ElecVolumeLevel60,
        [GlyphName.ElecVolumeLevel80] = GlyphNames.ElecVolumeLevel80,
        [GlyphName.FClef] = GlyphNames.FClef,
        [GlyphName.FClef15ma] = GlyphNames.FClef15ma,
        [GlyphName.FClef15mb] = GlyphNames.FClef15mb,
        [GlyphName.FClef8va] = GlyphNames.FClef8va,
        [GlyphName.FClef8vb] = GlyphNames.FClef8vb,
        [GlyphName.FClefArrowDown] = GlyphNames.FClefArrowDown,
        [GlyphName.FClefArrowUp] = GlyphNames.FClefArrowUp,
        [GlyphName.FClefChange] = GlyphNames.FClefChange,
        [GlyphName.FClefReversed] = GlyphNames.FClefReversed,
        [GlyphName.FClefTurned] = GlyphNames.FClefTurned,
        [GlyphName.FermataAbove] = GlyphNames.FermataAbove,
        [GlyphName.FermataBelow] = GlyphNames.FermataBelow,
        [GlyphName.FermataLongAbove] = GlyphNames.FermataLongAbove,
        [GlyphName.FermataLongBelow] = GlyphNames.FermataLongBelow,
        [GlyphName.FermataLongHenzeAbove] = GlyphNames.FermataLongHenzeAbove,
        [GlyphName.FermataLongHenzeBelow] = GlyphNames.FermataLongHenzeBelow,
        [GlyphName.FermataShortAbove] = GlyphNames.FermataShortAbove,
        [GlyphName.FermataShortBelow] = GlyphNames.FermataShortBelow,
        [GlyphName.FermataShortHenzeAbove] = GlyphNames.FermataShortHenzeAbove,
        [GlyphName.FermataShortHenzeBelow] = GlyphNames.FermataShortHenzeBelow,
        [GlyphName.FermataVeryLongAbove] = GlyphNames.FermataVeryLongAbove,
        [GlyphName.FermataVeryLongBelow] = GlyphNames.FermataVeryLongBelow,
        [GlyphName.FermataVeryShortAbove] = GlyphNames.FermataVeryShortAbove,
        [GlyphName.FermataVeryShortBelow] = GlyphNames.FermataVeryShortBelow,
        [GlyphName.Figbass0] = GlyphNames.Figbass0,
        [GlyphName.Figbass1] = GlyphNames.Figbass1,
        [GlyphName.Figbass2] = GlyphNames.Figbass2,
        [GlyphName.Figbass2Raised] = GlyphNames.Figbass2Raised,
        [GlyphName.Figbass3] = GlyphNames.Figbass3,
        [GlyphName.Figbass4] = GlyphNames.Figbass4,
        [GlyphName.Figbass4Raised] = GlyphNames.Figbass4Raised,
        [GlyphName.Figbass5] = GlyphNames.Figbass5,
        [GlyphName.Figbass5Raised1] = GlyphNames.Figbass5Raised1,
        [GlyphName.Figbass5Raised2] = GlyphNames.Figbass5Raised2,
        [GlyphName.Figbass5Raised3] = GlyphNames.Figbass5Raised3,
        [GlyphName.Figbass6] = GlyphNames.Figbass6,
        [GlyphName.Figbass6Raised] = GlyphNames.Figbass6Raised,
        [GlyphName.Figbass6Raised2] = GlyphNames.Figbass6Raised2,
        [GlyphName.Figbass7] = GlyphNames.Figbass7,
        [GlyphName.Figbass7Diminished] = GlyphNames.Figbass7Diminished,
        [GlyphName.Figbass7Raised1] = GlyphNames.Figbass7Raised1,
        [GlyphName.Figbass7Raised2] = GlyphNames.Figbass7Raised2,
        [GlyphName.Figbass8] = GlyphNames.Figbass8,
        [GlyphName.Figbass9] = GlyphNames.Figbass9,
        [GlyphName.Figbass9Raised] = GlyphNames.Figbass9Raised,
        [GlyphName.FigbassBracketLeft] = GlyphNames.FigbassBracketLeft,
        [GlyphName.FigbassBracketRight] = GlyphNames.FigbassBracketRight,
        [GlyphName.FigbassCombiningLowering] = GlyphNames.FigbassCombiningLowering,
        [GlyphName.FigbassCombiningRaising] = GlyphNames.FigbassCombiningRaising,
        [GlyphName.FigbassDoubleFlat] = GlyphNames.FigbassDoubleFlat,
        [GlyphName.FigbassDoubleSharp] = GlyphNames.FigbassDoubleSharp,
        [GlyphName.FigbassFlat] = GlyphNames.FigbassFlat,
        [GlyphName.FigbassNatural] = GlyphNames.FigbassNatural,
        [GlyphName.FigbassParensLeft] = GlyphNames.FigbassParensLeft,
        [GlyphName.FigbassParensRight] = GlyphNames.FigbassParensRight,
        [GlyphName.FigbassPlus] = GlyphNames.FigbassPlus,
        [GlyphName.FigbassSharp] = GlyphNames.FigbassSharp,
        [GlyphName.FigbassTripleFlat] = GlyphNames.FigbassTripleFlat,
        [GlyphName.FigbassTripleSharp] = GlyphNames.FigbassTripleSharp,
        [GlyphName.Fingering0] = GlyphNames.Fingering0,
        [GlyphName.Fingering0Italic] = GlyphNames.Fingering0Italic,
        [GlyphName.Fingering1] = GlyphNames.Fingering1,
        [GlyphName.Fingering1Italic] = GlyphNames.Fingering1Italic,
        [GlyphName.Fingering2] = GlyphNames.Fingering2,
        [GlyphName.Fingering2Italic] = GlyphNames.Fingering2Italic,
        [GlyphName.Fingering3] = GlyphNames.Fingering3,
        [GlyphName.Fingering3Italic] = GlyphNames.Fingering3Italic,
        [GlyphName.Fingering4] = GlyphNames.Fingering4,
        [GlyphName.Fingering4Italic] = GlyphNames.Fingering4Italic,
        [GlyphName.Fingering5] = GlyphNames.Fingering5,
        [GlyphName.Fingering5Italic] = GlyphNames.Fingering5Italic,
        [GlyphName.Fingering6] = GlyphNames.Fingering6,
        [GlyphName.Fingering6Italic] = GlyphNames.Fingering6Italic,
        [GlyphName.Fingering7] = GlyphNames.Fingering7,
        [GlyphName.Fingering7Italic] = GlyphNames.Fingering7Italic,
        [GlyphName.Fingering8] = GlyphNames.Fingering8,
        [GlyphName.Fingering8Italic] = GlyphNames.Fingering8Italic,
        [GlyphName.Fingering9] = GlyphNames.Fingering9,
        [GlyphName.Fingering9Italic] = GlyphNames.Fingering9Italic,
        [GlyphName.FingeringALower] = GlyphNames.FingeringALower,
        [GlyphName.FingeringCLower] = GlyphNames.FingeringCLower,
        [GlyphName.FingeringELower] = GlyphNames.FingeringELower,
        [GlyphName.FingeringILower] = GlyphNames.FingeringILower,
        [GlyphName.FingeringLeftBracket] = GlyphNames.FingeringLeftBracket,
        [GlyphName.FingeringLeftBracketItalic] = GlyphNames.FingeringLeftBracketItalic,
        [GlyphName.FingeringLeftParenthesis] = GlyphNames.FingeringLeftParenthesis,
        [GlyphName.FingeringLeftParenthesisItalic] = GlyphNames.FingeringLeftParenthesisItalic,
        [GlyphName.FingeringMLower] = GlyphNames.FingeringMLower,
        [GlyphName.FingeringMultipleNotes] = GlyphNames.FingeringMultipleNotes,
        [GlyphName.FingeringOLower] = GlyphNames.FingeringOLower,
        [GlyphName.FingeringPLower] = GlyphNames.FingeringPLower,
        [GlyphName.FingeringQLower] = GlyphNames.FingeringQLower,
        [GlyphName.FingeringRightBracket] = GlyphNames.FingeringRightBracket,
        [GlyphName.FingeringRightBracketItalic] = GlyphNames.FingeringRightBracketItalic,
        [GlyphName.FingeringRightParenthesis] = GlyphNames.FingeringRightParenthesis,
        [GlyphName.FingeringRightParenthesisItalic] = GlyphNames.FingeringRightParenthesisItalic,
        [GlyphName.FingeringSLower] = GlyphNames.FingeringSLower,
        [GlyphName.FingeringSeparatorMiddleDot] = GlyphNames.FingeringSeparatorMiddleDot,
        [GlyphName.FingeringSeparatorMiddleDotWhite] = GlyphNames.FingeringSeparatorMiddleDotWhite,
        [GlyphName.FingeringSeparatorSlash] = GlyphNames.FingeringSeparatorSlash,
        [GlyphName.FingeringSubstitutionAbove] = GlyphNames.FingeringSubstitutionAbove,
        [GlyphName.FingeringSubstitutionBelow] = GlyphNames.FingeringSubstitutionBelow,
        [GlyphName.FingeringSubstitutionDash] = GlyphNames.FingeringSubstitutionDash,
        [GlyphName.FingeringTLower] = GlyphNames.FingeringTLower,
        [GlyphName.FingeringTUpper] = GlyphNames.FingeringTUpper,
        [GlyphName.FingeringXLower] = GlyphNames.FingeringXLower,
        [GlyphName.Flag1024thDown] = GlyphNames.Flag1024thDown,
        [GlyphName.Flag1024thUp] = GlyphNames.Flag1024thUp,
        [GlyphName.Flag128thDown] = GlyphNames.Flag128thDown,
        [GlyphName.Flag128thUp] = GlyphNames.Flag128thUp,
        [GlyphName.Flag16thDown] = GlyphNames.Flag16thDown,
        [GlyphName.Flag16thUp] = GlyphNames.Flag16thUp,
        [GlyphName.Flag256thDown] = GlyphNames.Flag256thDown,
        [GlyphName.Flag256thUp] = GlyphNames.Flag256thUp,
        [GlyphName.Flag32ndDown] = GlyphNames.Flag32ndDown,
        [GlyphName.Flag32ndUp] = GlyphNames.Flag32ndUp,
        [GlyphName.Flag512thDown] = GlyphNames.Flag512thDown,
        [GlyphName.Flag512thUp] = GlyphNames.Flag512thUp,
        [GlyphName.Flag64thDown] = GlyphNames.Flag64thDown,
        [GlyphName.Flag64thUp] = GlyphNames.Flag64thUp,
        [GlyphName.Flag8thDown] = GlyphNames.Flag8thDown,
        [GlyphName.Flag8thUp] = GlyphNames.Flag8thUp,
        [GlyphName.FlagInternalDown] = GlyphNames.FlagInternalDown,
        [GlyphName.FlagInternalUp] = GlyphNames.FlagInternalUp,
        [GlyphName.Fretboard3String] = GlyphNames.Fretboard3String,
        [GlyphName.Fretboard3StringNut] = GlyphNames.Fretboard3StringNut,
        [GlyphName.Fretboard4String] = GlyphNames.Fretboard4String,
        [GlyphName.Fretboard4StringNut] = GlyphNames.Fretboard4StringNut,
        [GlyphName.Fretboard5String] = GlyphNames.Fretboard5String,
        [GlyphName.Fretboard5StringNut] = GlyphNames.Fretboard5StringNut,
        [GlyphName.Fretboard6String] = GlyphNames.Fretboard6String,
        [GlyphName.Fretboard6StringNut] = GlyphNames.Fretboard6StringNut,
        [GlyphName.FretboardFilledCircle] = GlyphNames.FretboardFilledCircle,
        [GlyphName.FretboardO] = GlyphNames.FretboardO,
        [GlyphName.FretboardX] = GlyphNames.FretboardX,
        [GlyphName.FunctionAngleLeft] = GlyphNames.FunctionAngleLeft,
        [GlyphName.FunctionAngleRight] = GlyphNames.FunctionAngleRight,
        [GlyphName.FunctionBracketLeft] = GlyphNames.FunctionBracketLeft,
        [GlyphName.FunctionBracketRight] = GlyphNames.FunctionBracketRight,
        [GlyphName.FunctionDD] = GlyphNames.FunctionDD,
        [GlyphName.FunctionDLower] = GlyphNames.FunctionDLower,
        [GlyphName.FunctionDUpper] = GlyphNames.FunctionDUpper,
        [GlyphName.FunctionEight] = GlyphNames.FunctionEight,
        [GlyphName.FunctionFUpper] = GlyphNames.FunctionFUpper,
        [GlyphName.FunctionFive] = GlyphNames.FunctionFive,
        [GlyphName.FunctionFour] = GlyphNames.FunctionFour,
        [GlyphName.FunctionGLower] = GlyphNames.FunctionGLower,
        [GlyphName.FunctionGUpper] = GlyphNames.FunctionGUpper,
        [GlyphName.FunctionGreaterThan] = GlyphNames.FunctionGreaterThan,
        [GlyphName.FunctionILower] = GlyphNames.FunctionILower,
        [GlyphName.FunctionIUpper] = GlyphNames.FunctionIUpper,
        [GlyphName.FunctionKLower] = GlyphNames.FunctionKLower,
        [GlyphName.FunctionKUpper] = GlyphNames.FunctionKUpper,
        [GlyphName.FunctionLLower] = GlyphNames.FunctionLLower,
        [GlyphName.FunctionLUpper] = GlyphNames.FunctionLUpper,
        [GlyphName.FunctionLessThan] = GlyphNames.FunctionLessThan,
        [GlyphName.FunctionMLower] = GlyphNames.FunctionMLower,
        [GlyphName.FunctionMUpper] = GlyphNames.FunctionMUpper,
        [GlyphName.FunctionMinus] = GlyphNames.FunctionMinus,
        [GlyphName.FunctionNLower] = GlyphNames.FunctionNLower,
        [GlyphName.FunctionNUpper] = GlyphNames.FunctionNUpper,
        [GlyphName.FunctionNUpperSuperscript] = GlyphNames.FunctionNUpperSuperscript,
        [GlyphName.FunctionNine] = GlyphNames.FunctionNine,
        [GlyphName.FunctionOne] = GlyphNames.FunctionOne,
        [GlyphName.FunctionPLower] = GlyphNames.FunctionPLower,
        [GlyphName.FunctionPUpper] = GlyphNames.FunctionPUpper,
        [GlyphName.FunctionParensLeft] = GlyphNames.FunctionParensLeft,
        [GlyphName.FunctionParensRight] = GlyphNames.FunctionParensRight,
        [GlyphName.FunctionPlus] = GlyphNames.FunctionPlus,
        [GlyphName.FunctionRLower] = GlyphNames.FunctionRLower,
        [GlyphName.FunctionRepetition1] = GlyphNames.FunctionRepetition1,
        [GlyphName.FunctionRepetition2] = GlyphNames.FunctionRepetition2,
        [GlyphName.FunctionRing] = GlyphNames.FunctionRing,
        [GlyphName.FunctionSLower] = GlyphNames.FunctionSLower,
        [GlyphName.FunctionSSLower] = GlyphNames.FunctionSSLower,
        [GlyphName.FunctionSSUpper] = GlyphNames.FunctionSSUpper,
        [GlyphName.FunctionSUpper] = GlyphNames.FunctionSUpper,
        [GlyphName.FunctionSeven] = GlyphNames.FunctionSeven,
        [GlyphName.FunctionSix] = GlyphNames.FunctionSix,
        [GlyphName.FunctionSlashedDD] = GlyphNames.FunctionSlashedDD,
        [GlyphName.FunctionTLower] = GlyphNames.FunctionTLower,
        [GlyphName.FunctionTUpper] = GlyphNames.FunctionTUpper,
        [GlyphName.FunctionThree] = GlyphNames.FunctionThree,
        [GlyphName.FunctionTwo] = GlyphNames.FunctionTwo,
        [GlyphName.FunctionVLower] = GlyphNames.FunctionVLower,
        [GlyphName.FunctionVUpper] = GlyphNames.FunctionVUpper,
        [GlyphName.FunctionZero] = GlyphNames.FunctionZero,
        [GlyphName.GClef] = GlyphNames.GClef,
        [GlyphName.GClef15ma] = GlyphNames.GClef15ma,
        [GlyphName.GClef15mb] = GlyphNames.GClef15mb,
        [GlyphName.GClef8va] = GlyphNames.GClef8va,
        [GlyphName.GClef8vb] = GlyphNames.GClef8vb,
        [GlyphName.GClef8vbCClef] = GlyphNames.GClef8vbCClef,
        [GlyphName.GClef8vbOld] = GlyphNames.GClef8vbOld,
        [GlyphName.GClef8vbParens] = GlyphNames.GClef8vbParens,
        [GlyphName.GClefArrowDown] = GlyphNames.GClefArrowDown,
        [GlyphName.GClefArrowUp] = GlyphNames.GClefArrowUp,
        [GlyphName.GClefChange] = GlyphNames.GClefChange,
        [GlyphName.GClefLigatedNumberAbove] = GlyphNames.GClefLigatedNumberAbove,
        [GlyphName.GClefLigatedNumberBelow] = GlyphNames.GClefLigatedNumberBelow,
        [GlyphName.GClefReversed] = GlyphNames.GClefReversed,
        [GlyphName.GClefTurned] = GlyphNames.GClefTurned,
        [GlyphName.GlissandoDown] = GlyphNames.GlissandoDown,
        [GlyphName.GlissandoUp] = GlyphNames.GlissandoUp,
        [GlyphName.GraceNoteAcciaccaturaStemDown] = GlyphNames.GraceNoteAcciaccaturaStemDown,
        [GlyphName.GraceNoteAcciaccaturaStemUp] = GlyphNames.GraceNoteAcciaccaturaStemUp,
        [GlyphName.GraceNoteAppoggiaturaStemDown] = GlyphNames.GraceNoteAppoggiaturaStemDown,
        [GlyphName.GraceNoteAppoggiaturaStemUp] = GlyphNames.GraceNoteAppoggiaturaStemUp,
        [GlyphName.GraceNoteSlashStemDown] = GlyphNames.GraceNoteSlashStemDown,
        [GlyphName.GraceNoteSlashStemUp] = GlyphNames.GraceNoteSlashStemUp,
        [GlyphName.GuitarBarreFull] = GlyphNames.GuitarBarreFull,
        [GlyphName.GuitarBarreHalf] = GlyphNames.GuitarBarreHalf,
        [GlyphName.GuitarClosePedal] = GlyphNames.GuitarClosePedal,
        [GlyphName.GuitarFadeIn] = GlyphNames.GuitarFadeIn,
        [GlyphName.GuitarFadeOut] = GlyphNames.GuitarFadeOut,
        [GlyphName.GuitarGolpe] = GlyphNames.GuitarGolpe,
        [GlyphName.GuitarHalfOpenPedal] = GlyphNames.GuitarHalfOpenPedal,
        [GlyphName.GuitarLeftHandTapping] = GlyphNames.GuitarLeftHandTapping,
        [GlyphName.GuitarOpenPedal] = GlyphNames.GuitarOpenPedal,
        [GlyphName.GuitarRightHandTapping] = GlyphNames.GuitarRightHandTapping,
        [GlyphName.GuitarShake] = GlyphNames.GuitarShake,
        [GlyphName.GuitarString0] = GlyphNames.GuitarString0,
        [GlyphName.GuitarString1] = GlyphNames.GuitarString1,
        [GlyphName.GuitarString10] = GlyphNames.GuitarString10,
        [GlyphName.GuitarString11] = GlyphNames.GuitarString11,
        [GlyphName.GuitarString12] = GlyphNames.GuitarString12,
        [GlyphName.GuitarString13] = GlyphNames.GuitarString13,
        [GlyphName.GuitarString2] = GlyphNames.GuitarString2,
        [GlyphName.GuitarString3] = GlyphNames.GuitarString3,
        [GlyphName.GuitarString4] = GlyphNames.GuitarString4,
        [GlyphName.GuitarString5] = GlyphNames.GuitarString5,
        [GlyphName.GuitarString6] = GlyphNames.GuitarString6,
        [GlyphName.GuitarString7] = GlyphNames.GuitarString7,
        [GlyphName.GuitarString8] = GlyphNames.GuitarString8,
        [GlyphName.GuitarString9] = GlyphNames.GuitarString9,
        [GlyphName.GuitarStrumDown] = GlyphNames.GuitarStrumDown,
        [GlyphName.GuitarStrumUp] = GlyphNames.GuitarStrumUp,
        [GlyphName.GuitarVibratoBarDip] = GlyphNames.GuitarVibratoBarDip,
        [GlyphName.GuitarVibratoBarScoop] = GlyphNames.GuitarVibratoBarScoop,
        [GlyphName.GuitarVibratoStroke] = GlyphNames.GuitarVibratoStroke,
        [GlyphName.GuitarVolumeSwell] = GlyphNames.GuitarVolumeSwell,
        [GlyphName.GuitarWideVibratoStroke] = GlyphNames.GuitarWideVibratoStroke,
        [GlyphName.HandbellsBelltree] = GlyphNames.HandbellsBelltree,
        [GlyphName.HandbellsDamp3] = GlyphNames.HandbellsDamp3,
        [GlyphName.HandbellsEcho1] = GlyphNames.HandbellsEcho1,
        [GlyphName.HandbellsEcho2] = GlyphNames.HandbellsEcho2,
        [GlyphName.HandbellsGyro] = GlyphNames.HandbellsGyro,
        [GlyphName.HandbellsHandMartellato] = GlyphNames.HandbellsHandMartellato,
        [GlyphName.HandbellsMalletBellOnTable] = GlyphNames.HandbellsMalletBellOnTable,
        [GlyphName.HandbellsMalletBellSuspended] = GlyphNames.HandbellsMalletBellSuspended,
        [GlyphName.HandbellsMalletLft] = GlyphNames.HandbellsMalletLft,
        [GlyphName.HandbellsMartellato] = GlyphNames.HandbellsMartellato,
        [GlyphName.HandbellsMartellatoLift] = GlyphNames.HandbellsMartellatoLift,
        [GlyphName.HandbellsMutedMartellato] = GlyphNames.HandbellsMutedMartellato,
        [GlyphName.HandbellsPluckLift] = GlyphNames.HandbellsPluckLift,
        [GlyphName.HandbellsSwing] = GlyphNames.HandbellsSwing,
        [GlyphName.HandbellsSwingDown] = GlyphNames.HandbellsSwingDown,
        [GlyphName.HandbellsSwingUp] = GlyphNames.HandbellsSwingUp,
        [GlyphName.HandbellsTablePairBells] = GlyphNames.HandbellsTablePairBells,
        [GlyphName.HandbellsTableSingleBell] = GlyphNames.HandbellsTableSingleBell,
        [GlyphName.HarpMetalRod] = GlyphNames.HarpMetalRod,
        [GlyphName.HarpPedalCentered] = GlyphNames.HarpPedalCentered,
        [GlyphName.HarpPedalDivider] = GlyphNames.HarpPedalDivider,
        [GlyphName.HarpPedalLowered] = GlyphNames.HarpPedalLowered,
        [GlyphName.HarpPedalRaised] = GlyphNames.HarpPedalRaised,
        [GlyphName.HarpSalzedoAeolianAscending] = GlyphNames.HarpSalzedoAeolianAscending,
        [GlyphName.HarpSalzedoAeolianDescending] = GlyphNames.HarpSalzedoAeolianDescending,
        [GlyphName.HarpSalzedoDampAbove] = GlyphNames.HarpSalzedoDampAbove,
        [GlyphName.HarpSalzedoDampBelow] = GlyphNames.HarpSalzedoDampBelow,
        [GlyphName.HarpSalzedoDampBothHands] = GlyphNames.HarpSalzedoDampBothHands,
        [GlyphName.HarpSalzedoDampLowStrings] = GlyphNames.HarpSalzedoDampLowStrings,
        [GlyphName.HarpSalzedoFluidicSoundsLeft] = GlyphNames.HarpSalzedoFluidicSoundsLeft,
        [GlyphName.HarpSalzedoFluidicSoundsRight] = GlyphNames.HarpSalzedoFluidicSoundsRight,
        [GlyphName.HarpSalzedoIsolatedSounds] = GlyphNames.HarpSalzedoIsolatedSounds,
        [GlyphName.HarpSalzedoMetallicSounds] = GlyphNames.HarpSalzedoMetallicSounds,
        [GlyphName.HarpSalzedoMetallicSoundsOneString] = GlyphNames.HarpSalzedoMetallicSoundsOneString,
        [GlyphName.HarpSalzedoMuffleTotally] = GlyphNames.HarpSalzedoMuffleTotally,
        [GlyphName.HarpSalzedoOboicFlux] = GlyphNames.HarpSalzedoOboicFlux,
        [GlyphName.HarpSalzedoPlayUpperEnd] = GlyphNames.HarpSalzedoPlayUpperEnd,
        [GlyphName.HarpSalzedoSlideWithSuppleness] = GlyphNames.HarpSalzedoSlideWithSuppleness,
        [GlyphName.HarpSalzedoSnareDrum] = GlyphNames.HarpSalzedoSnareDrum,
        [GlyphName.HarpSalzedoTamTamSounds] = GlyphNames.HarpSalzedoTamTamSounds,
        [GlyphName.HarpSalzedoThunderEffect] = GlyphNames.HarpSalzedoThunderEffect,
        [GlyphName.HarpSalzedoTimpanicSounds] = GlyphNames.HarpSalzedoTimpanicSounds,
        [GlyphName.HarpSalzedoWhistlingSounds] = GlyphNames.HarpSalzedoWhistlingSounds,
        [GlyphName.HarpStringNoiseStem] = GlyphNames.HarpStringNoiseStem,
        [GlyphName.HarpTuningKey] = GlyphNames.HarpTuningKey,
        [GlyphName.HarpTuningKeyGlissando] = GlyphNames.HarpTuningKeyGlissando,
        [GlyphName.HarpTuningKeyHandle] = GlyphNames.HarpTuningKeyHandle,
        [GlyphName.HarpTuningKeyShank] = GlyphNames.HarpTuningKeyShank,
        [GlyphName.IndianDrumClef] = GlyphNames.IndianDrumClef,
        [GlyphName.KahnBackChug] = GlyphNames.KahnBackChug,
        [GlyphName.KahnBackFlap] = GlyphNames.KahnBackFlap,
        [GlyphName.KahnBackRiff] = GlyphNames.KahnBackRiff,
        [GlyphName.KahnBackRip] = GlyphNames.KahnBackRip,
        [GlyphName.KahnBallChange] = GlyphNames.KahnBallChange,
        [GlyphName.KahnBallDig] = GlyphNames.KahnBallDig,
        [GlyphName.KahnBrushBackward] = GlyphNames.KahnBrushBackward,
        [GlyphName.KahnBrushForward] = GlyphNames.KahnBrushForward,
        [GlyphName.KahnChug] = GlyphNames.KahnChug,
        [GlyphName.KahnClap] = GlyphNames.KahnClap,
        [GlyphName.KahnDoubleSnap] = GlyphNames.KahnDoubleSnap,
        [GlyphName.KahnDoubleWing] = GlyphNames.KahnDoubleWing,
        [GlyphName.KahnDrawStep] = GlyphNames.KahnDrawStep,
        [GlyphName.KahnDrawTap] = GlyphNames.KahnDrawTap,
        [GlyphName.KahnFlam] = GlyphNames.KahnFlam,
        [GlyphName.KahnFlap] = GlyphNames.KahnFlap,
        [GlyphName.KahnFlapStep] = GlyphNames.KahnFlapStep,
        [GlyphName.KahnFlat] = GlyphNames.KahnFlat,
        [GlyphName.KahnFleaHop] = GlyphNames.KahnFleaHop,
        [GlyphName.KahnFleaTap] = GlyphNames.KahnFleaTap,
        [GlyphName.KahnGraceTap] = GlyphNames.KahnGraceTap,
        [GlyphName.KahnGraceTapChange] = GlyphNames.KahnGraceTapChange,
        [GlyphName.KahnGraceTapHop] = GlyphNames.KahnGraceTapHop,
        [GlyphName.KahnGraceTapStamp] = GlyphNames.KahnGraceTapStamp,
        [GlyphName.KahnHeel] = GlyphNames.KahnHeel,
        [GlyphName.KahnHeelChange] = GlyphNames.KahnHeelChange,
        [GlyphName.KahnHeelClick] = GlyphNames.KahnHeelClick,
        [GlyphName.KahnHeelDrop] = GlyphNames.KahnHeelDrop,
        [GlyphName.KahnHeelStep] = GlyphNames.KahnHeelStep,
        [GlyphName.KahnHeelTap] = GlyphNames.KahnHeelTap,
        [GlyphName.KahnHop] = GlyphNames.KahnHop,
        [GlyphName.KahnJumpApart] = GlyphNames.KahnJumpApart,
        [GlyphName.KahnJumpTogether] = GlyphNames.KahnJumpTogether,
        [GlyphName.KahnKneeInward] = GlyphNames.KahnKneeInward,
        [GlyphName.KahnKneeOutward] = GlyphNames.KahnKneeOutward,
        [GlyphName.KahnLeap] = GlyphNames.KahnLeap,
        [GlyphName.KahnLeapFlatFoot] = GlyphNames.KahnLeapFlatFoot,
        [GlyphName.KahnLeapHeelClick] = GlyphNames.KahnLeapHeelClick,
        [GlyphName.KahnLeftCatch] = GlyphNames.KahnLeftCatch,
        [GlyphName.KahnLeftCross] = GlyphNames.KahnLeftCross,
        [GlyphName.KahnLeftFoot] = GlyphNames.KahnLeftFoot,
        [GlyphName.KahnLeftToeStrike] = GlyphNames.KahnLeftToeStrike,
        [GlyphName.KahnLeftTurn] = GlyphNames.KahnLeftTurn,
        [GlyphName.KahnOverTheTop] = GlyphNames.KahnOverTheTop,
        [GlyphName.KahnOverTheTopTap] = GlyphNames.KahnOverTheTopTap,
        [GlyphName.KahnPull] = GlyphNames.KahnPull,
        [GlyphName.KahnPush] = GlyphNames.KahnPush,
        [GlyphName.KahnRiff] = GlyphNames.KahnRiff,
        [GlyphName.KahnRiffle] = GlyphNames.KahnRiffle,
        [GlyphName.KahnRightCatch] = GlyphNames.KahnRightCatch,
        [GlyphName.KahnRightCross] = GlyphNames.KahnRightCross,
        [GlyphName.KahnRightFoot] = GlyphNames.KahnRightFoot,
        [GlyphName.KahnRightToeStrike] = GlyphNames.KahnRightToeStrike,
        [GlyphName.KahnRightTurn] = GlyphNames.KahnRightTurn,
        [GlyphName.KahnRip] = GlyphNames.KahnRip,
        [GlyphName.KahnRipple] = GlyphNames.KahnRipple,
        [GlyphName.KahnScrape] = GlyphNames.KahnScrape,
        [GlyphName.KahnScuff] = GlyphNames.KahnScuff,
        [GlyphName.KahnScuffle] = GlyphNames.KahnScuffle,
        [GlyphName.KahnShuffle] = GlyphNames.KahnShuffle,
        [GlyphName.KahnSlam] = GlyphNames.KahnSlam,
        [GlyphName.KahnSlap] = GlyphNames.KahnSlap,
        [GlyphName.KahnSlideStep] = GlyphNames.KahnSlideStep,
        [GlyphName.KahnSlideTap] = GlyphNames.KahnSlideTap,
        [GlyphName.KahnSnap] = GlyphNames.KahnSnap,
        [GlyphName.KahnStamp] = GlyphNames.KahnStamp,
        [GlyphName.KahnStampStamp] = GlyphNames.KahnStampStamp,
        [GlyphName.KahnStep] = GlyphNames.KahnStep,
        [GlyphName.KahnStepStamp] = GlyphNames.KahnStepStamp,
        [GlyphName.KahnStomp] = GlyphNames.KahnStomp,
        [GlyphName.KahnStompBrush] = GlyphNames.KahnStompBrush,
        [GlyphName.KahnTap] = GlyphNames.KahnTap,
        [GlyphName.KahnToe] = GlyphNames.KahnToe,
        [GlyphName.KahnToeClick] = GlyphNames.KahnToeClick,
        [GlyphName.KahnToeDrop] = GlyphNames.KahnToeDrop,
        [GlyphName.KahnToeStep] = GlyphNames.KahnToeStep,
        [GlyphName.KahnToeTap] = GlyphNames.KahnToeTap,
        [GlyphName.KahnTrench] = GlyphNames.KahnTrench,
        [GlyphName.KahnWing] = GlyphNames.KahnWing,
        [GlyphName.KahnWingChange] = GlyphNames.KahnWingChange,
        [GlyphName.KahnZank] = GlyphNames.KahnZank,
        [GlyphName.KahnZink] = GlyphNames.KahnZink,
        [GlyphName.KeyboardBebung2DotsAbove] = GlyphNames.KeyboardBebung2DotsAbove,
        [GlyphName.KeyboardBebung2DotsBelow] = GlyphNames.KeyboardBebung2DotsBelow,
        [GlyphName.KeyboardBebung3DotsAbove] = GlyphNames.KeyboardBebung3DotsAbove,
        [GlyphName.KeyboardBebung3DotsBelow] = GlyphNames.KeyboardBebung3DotsBelow,
        [GlyphName.KeyboardBebung4DotsAbove] = GlyphNames.KeyboardBebung4DotsAbove,
        [GlyphName.KeyboardBebung4DotsBelow] = GlyphNames.KeyboardBebung4DotsBelow,
        [GlyphName.KeyboardLeftPedalPictogram] = GlyphNames.KeyboardLeftPedalPictogram,
        [GlyphName.KeyboardMiddlePedalPictogram] = GlyphNames.KeyboardMiddlePedalPictogram,
        [GlyphName.KeyboardPedalD] = GlyphNames.KeyboardPedalD,
        [GlyphName.KeyboardPedalDot] = GlyphNames.KeyboardPedalDot,
        [GlyphName.KeyboardPedalE] = GlyphNames.KeyboardPedalE,
        [GlyphName.KeyboardPedalHalf] = GlyphNames.KeyboardPedalHalf,
        [GlyphName.KeyboardPedalHalf2] = GlyphNames.KeyboardPedalHalf2,
        [GlyphName.KeyboardPedalHalf3] = GlyphNames.KeyboardPedalHalf3,
        [GlyphName.KeyboardPedalHeel1] = GlyphNames.KeyboardPedalHeel1,
        [GlyphName.KeyboardPedalHeel2] = GlyphNames.KeyboardPedalHeel2,
        [GlyphName.KeyboardPedalHeel3] = GlyphNames.KeyboardPedalHeel3,
        [GlyphName.KeyboardPedalHeelToToe] = GlyphNames.KeyboardPedalHeelToToe,
        [GlyphName.KeyboardPedalHeelToe] = GlyphNames.KeyboardPedalHeelToe,
        [GlyphName.KeyboardPedalHookEnd] = GlyphNames.KeyboardPedalHookEnd,
        [GlyphName.KeyboardPedalHookStart] = GlyphNames.KeyboardPedalHookStart,
        [GlyphName.KeyboardPedalHyphen] = GlyphNames.KeyboardPedalHyphen,
        [GlyphName.KeyboardPedalP] = GlyphNames.KeyboardPedalP,
        [GlyphName.KeyboardPedalParensLeft] = GlyphNames.KeyboardPedalParensLeft,
        [GlyphName.KeyboardPedalParensRight] = GlyphNames.KeyboardPedalParensRight,
        [GlyphName.KeyboardPedalPed] = GlyphNames.KeyboardPedalPed,
        [GlyphName.KeyboardPedalS] = GlyphNames.KeyboardPedalS,
        [GlyphName.KeyboardPedalSost] = GlyphNames.KeyboardPedalSost,
        [GlyphName.KeyboardPedalToe1] = GlyphNames.KeyboardPedalToe1,
        [GlyphName.KeyboardPedalToe2] = GlyphNames.KeyboardPedalToe2,
        [GlyphName.KeyboardPedalToeToHeel] = GlyphNames.KeyboardPedalToeToHeel,
        [GlyphName.KeyboardPedalUp] = GlyphNames.KeyboardPedalUp,
        [GlyphName.KeyboardPedalUpNotch] = GlyphNames.KeyboardPedalUpNotch,
        [GlyphName.KeyboardPedalUpSpecial] = GlyphNames.KeyboardPedalUpSpecial,
        [GlyphName.KeyboardPlayWithLH] = GlyphNames.KeyboardPlayWithLH,
        [GlyphName.KeyboardPlayWithLHEnd] = GlyphNames.KeyboardPlayWithLHEnd,
        [GlyphName.KeyboardPlayWithRH] = GlyphNames.KeyboardPlayWithRH,
        [GlyphName.KeyboardPlayWithRHEnd] = GlyphNames.KeyboardPlayWithRHEnd,
        [GlyphName.KeyboardPluckInside] = GlyphNames.KeyboardPluckInside,
        [GlyphName.KeyboardRightPedalPictogram] = GlyphNames.KeyboardRightPedalPictogram,
        [GlyphName.KievanAccidentalFlat] = GlyphNames.KievanAccidentalFlat,
        [GlyphName.KievanAccidentalSharp] = GlyphNames.KievanAccidentalSharp,
        [GlyphName.KievanAugmentationDot] = GlyphNames.KievanAugmentationDot,
        [GlyphName.KievanCClef] = GlyphNames.KievanCClef,
        [GlyphName.KievanEndingSymbol] = GlyphNames.KievanEndingSymbol,
        [GlyphName.KievanNote8thStemDown] = GlyphNames.KievanNote8thStemDown,
        [GlyphName.KievanNote8thStemUp] = GlyphNames.KievanNote8thStemUp,
        [GlyphName.KievanNoteBeam] = GlyphNames.KievanNoteBeam,
        [GlyphName.KievanNoteHalfStaffLine] = GlyphNames.KievanNoteHalfStaffLine,
        [GlyphName.KievanNoteHalfStaffSpace] = GlyphNames.KievanNoteHalfStaffSpace,
        [GlyphName.KievanNoteQuarterStemDown] = GlyphNames.KievanNoteQuarterStemDown,
        [GlyphName.KievanNoteQuarterStemUp] = GlyphNames.KievanNoteQuarterStemUp,
        [GlyphName.KievanNoteReciting] = GlyphNames.KievanNoteReciting,
        [GlyphName.KievanNoteWhole] = GlyphNames.KievanNoteWhole,
        [GlyphName.KievanNoteWholeFinal] = GlyphNames.KievanNoteWholeFinal,
        [GlyphName.KodalyHandDo] = GlyphNames.KodalyHandDo,
        [GlyphName.KodalyHandFa] = GlyphNames.KodalyHandFa,
        [GlyphName.KodalyHandLa] = GlyphNames.KodalyHandLa,
        [GlyphName.KodalyHandMi] = GlyphNames.KodalyHandMi,
        [GlyphName.KodalyHandRe] = GlyphNames.KodalyHandRe,
        [GlyphName.KodalyHandSo] = GlyphNames.KodalyHandSo,
        [GlyphName.KodalyHandTi] = GlyphNames.KodalyHandTi,
        [GlyphName.LeftRepeatSmall] = GlyphNames.LeftRepeatSmall,
        [GlyphName.LegerLine] = GlyphNames.LegerLine,
        [GlyphName.LegerLineNarrow] = GlyphNames.LegerLineNarrow,
        [GlyphName.LegerLineWide] = GlyphNames.LegerLineWide,
        [GlyphName.LuteBarlineEndRepeat] = GlyphNames.LuteBarlineEndRepeat,
        [GlyphName.LuteBarlineFinal] = GlyphNames.LuteBarlineFinal,
        [GlyphName.LuteBarlineStartRepeat] = GlyphNames.LuteBarlineStartRepeat,
        [GlyphName.LuteDuration16th] = GlyphNames.LuteDuration16th,
        [GlyphName.LuteDuration32nd] = GlyphNames.LuteDuration32nd,
        [GlyphName.LuteDuration8th] = GlyphNames.LuteDuration8th,
        [GlyphName.LuteDurationDoubleWhole] = GlyphNames.LuteDurationDoubleWhole,
        [GlyphName.LuteDurationHalf] = GlyphNames.LuteDurationHalf,
        [GlyphName.LuteDurationQuarter] = GlyphNames.LuteDurationQuarter,
        [GlyphName.LuteDurationWhole] = GlyphNames.LuteDurationWhole,
        [GlyphName.LuteFingeringRHFirst] = GlyphNames.LuteFingeringRHFirst,
        [GlyphName.LuteFingeringRHSecond] = GlyphNames.LuteFingeringRHSecond,
        [GlyphName.LuteFingeringRHThird] = GlyphNames.LuteFingeringRHThird,
        [GlyphName.LuteFingeringRHThumb] = GlyphNames.LuteFingeringRHThumb,
        [GlyphName.LuteFrench10thCourse] = GlyphNames.LuteFrench10thCourse,
        [GlyphName.LuteFrench7thCourse] = GlyphNames.LuteFrench7thCourse,
        [GlyphName.LuteFrench8thCourse] = GlyphNames.LuteFrench8thCourse,
        [GlyphName.LuteFrench9thCourse] = GlyphNames.LuteFrench9thCourse,
        [GlyphName.LuteFrenchAppoggiaturaAbove] = GlyphNames.LuteFrenchAppoggiaturaAbove,
        [GlyphName.LuteFrenchAppoggiaturaBelow] = GlyphNames.LuteFrenchAppoggiaturaBelow,
        [GlyphName.LuteFrenchFretA] = GlyphNames.LuteFrenchFretA,
        [GlyphName.LuteFrenchFretB] = GlyphNames.LuteFrenchFretB,
        [GlyphName.LuteFrenchFretC] = GlyphNames.LuteFrenchFretC,
        [GlyphName.LuteFrenchFretD] = GlyphNames.LuteFrenchFretD,
        [GlyphName.LuteFrenchFretE] = GlyphNames.LuteFrenchFretE,
        [GlyphName.LuteFrenchFretF] = GlyphNames.LuteFrenchFretF,
        [GlyphName.LuteFrenchFretG] = GlyphNames.LuteFrenchFretG,
        [GlyphName.LuteFrenchFretH] = GlyphNames.LuteFrenchFretH,
        [GlyphName.LuteFrenchFretI] = GlyphNames.LuteFrenchFretI,
        [GlyphName.LuteFrenchFretK] = GlyphNames.LuteFrenchFretK,
        [GlyphName.LuteFrenchFretL] = GlyphNames.LuteFrenchFretL,
        [GlyphName.LuteFrenchFretM] = GlyphNames.LuteFrenchFretM,
        [GlyphName.LuteFrenchFretN] = GlyphNames.LuteFrenchFretN,
        [GlyphName.LuteFrenchMordentInverted] = GlyphNames.LuteFrenchMordentInverted,
        [GlyphName.LuteFrenchMordentLower] = GlyphNames.LuteFrenchMordentLower,
        [GlyphName.LuteFrenchMordentUpper] = GlyphNames.LuteFrenchMordentUpper,
        [GlyphName.LuteGermanALower] = GlyphNames.LuteGermanALower,
        [GlyphName.LuteGermanAUpper] = GlyphNames.LuteGermanAUpper,
        [GlyphName.LuteGermanBLower] = GlyphNames.LuteGermanBLower,
        [GlyphName.LuteGermanBUpper] = GlyphNames.LuteGermanBUpper,
        [GlyphName.LuteGermanCLower] = GlyphNames.LuteGermanCLower,
        [GlyphName.LuteGermanCUpper] = GlyphNames.LuteGermanCUpper,
        [GlyphName.LuteGermanDLower] = GlyphNames.LuteGermanDLower,
        [GlyphName.LuteGermanDUpper] = GlyphNames.LuteGermanDUpper,
        [GlyphName.LuteGermanELower] = GlyphNames.LuteGermanELower,
        [GlyphName.LuteGermanEUpper] = GlyphNames.LuteGermanEUpper,
        [GlyphName.LuteGermanFLower] = GlyphNames.LuteGermanFLower,
        [GlyphName.LuteGermanFUpper] = GlyphNames.LuteGermanFUpper,
        [GlyphName.LuteGermanGLower] = GlyphNames.LuteGermanGLower,
        [GlyphName.LuteGermanGUpper] = GlyphNames.LuteGermanGUpper,
        [GlyphName.LuteGermanHLower] = GlyphNames.LuteGermanHLower,
        [GlyphName.LuteGermanHUpper] = GlyphNames.LuteGermanHUpper,
        [GlyphName.LuteGermanILower] = GlyphNames.LuteGermanILower,
        [GlyphName.LuteGermanIUpper] = GlyphNames.LuteGermanIUpper,
        [GlyphName.LuteGermanKLower] = GlyphNames.LuteGermanKLower,
        [GlyphName.LuteGermanKUpper] = GlyphNames.LuteGermanKUpper,
        [GlyphName.LuteGermanLLower] = GlyphNames.LuteGermanLLower,
        [GlyphName.LuteGermanLUpper] = GlyphNames.LuteGermanLUpper,
        [GlyphName.LuteGermanMLower] = GlyphNames.LuteGermanMLower,
        [GlyphName.LuteGermanMUpper] = GlyphNames.LuteGermanMUpper,
        [GlyphName.LuteGermanNLower] = GlyphNames.LuteGermanNLower,
        [GlyphName.LuteGermanNUpper] = GlyphNames.LuteGermanNUpper,
        [GlyphName.LuteGermanOLower] = GlyphNames.LuteGermanOLower,
        [GlyphName.LuteGermanPLower] = GlyphNames.LuteGermanPLower,
        [GlyphName.LuteGermanQLower] = GlyphNames.LuteGermanQLower,
        [GlyphName.LuteGermanRLower] = GlyphNames.LuteGermanRLower,
        [GlyphName.LuteGermanSLower] = GlyphNames.LuteGermanSLower,
        [GlyphName.LuteGermanTLower] = GlyphNames.LuteGermanTLower,
        [GlyphName.LuteGermanVLower] = GlyphNames.LuteGermanVLower,
        [GlyphName.LuteGermanXLower] = GlyphNames.LuteGermanXLower,
        [GlyphName.LuteGermanYLower] = GlyphNames.LuteGermanYLower,
        [GlyphName.LuteGermanZLower] = GlyphNames.LuteGermanZLower,
        [GlyphName.LuteItalianClefCSolFaUt] = GlyphNames.LuteItalianClefCSolFaUt,
        [GlyphName.LuteItalianClefFFaUt] = GlyphNames.LuteItalianClefFFaUt,
        [GlyphName.LuteItalianFret0] = GlyphNames.LuteItalianFret0,
        [GlyphName.LuteItalianFret1] = GlyphNames.LuteItalianFret1,
        [GlyphName.LuteItalianFret2] = GlyphNames.LuteItalianFret2,
        [GlyphName.LuteItalianFret3] = GlyphNames.LuteItalianFret3,
        [GlyphName.LuteItalianFret4] = GlyphNames.LuteItalianFret4,
        [GlyphName.LuteItalianFret5] = GlyphNames.LuteItalianFret5,
        [GlyphName.LuteItalianFret6] = GlyphNames.LuteItalianFret6,
        [GlyphName.LuteItalianFret7] = GlyphNames.LuteItalianFret7,
        [GlyphName.LuteItalianFret8] = GlyphNames.LuteItalianFret8,
        [GlyphName.LuteItalianFret9] = GlyphNames.LuteItalianFret9,
        [GlyphName.LuteItalianHoldFinger] = GlyphNames.LuteItalianHoldFinger,
        [GlyphName.LuteItalianHoldNote] = GlyphNames.LuteItalianHoldNote,
        [GlyphName.LuteItalianReleaseFinger] = GlyphNames.LuteItalianReleaseFinger,
        [GlyphName.LuteItalianTempoFast] = GlyphNames.LuteItalianTempoFast,
        [GlyphName.LuteItalianTempoNeitherFastNorSlow] = GlyphNames.LuteItalianTempoNeitherFastNorSlow,
        [GlyphName.LuteItalianTempoSlow] = GlyphNames.LuteItalianTempoSlow,
        [GlyphName.LuteItalianTempoSomewhatFast] = GlyphNames.LuteItalianTempoSomewhatFast,
        [GlyphName.LuteItalianTempoVerySlow] = GlyphNames.LuteItalianTempoVerySlow,
        [GlyphName.LuteItalianTimeTriple] = GlyphNames.LuteItalianTimeTriple,
        [GlyphName.LuteItalianTremolo] = GlyphNames.LuteItalianTremolo,
        [GlyphName.LuteItalianVibrato] = GlyphNames.LuteItalianVibrato,
        [GlyphName.LuteStaff6Lines] = GlyphNames.LuteStaff6Lines,
        [GlyphName.LuteStaff6LinesNarrow] = GlyphNames.LuteStaff6LinesNarrow,
        [GlyphName.LuteStaff6LinesWide] = GlyphNames.LuteStaff6LinesWide,
        [GlyphName.LyricsElision] = GlyphNames.LyricsElision,
        [GlyphName.LyricsElisionNarrow] = GlyphNames.LyricsElisionNarrow,
        [GlyphName.LyricsElisionWide] = GlyphNames.LyricsElisionWide,
        [GlyphName.LyricsHyphenBaseline] = GlyphNames.LyricsHyphenBaseline,
        [GlyphName.LyricsHyphenBaselineNonBreaking] = GlyphNames.LyricsHyphenBaselineNonBreaking,
        [GlyphName.LyricsTextRepeat] = GlyphNames.LyricsTextRepeat,
        [GlyphName.MedRenFlatHardB] = GlyphNames.MedRenFlatHardB,
        [GlyphName.MedRenFlatSoftB] = GlyphNames.MedRenFlatSoftB,
        [GlyphName.MedRenFlatWithDot] = GlyphNames.MedRenFlatWithDot,
        [GlyphName.MedRenGClefCMN] = GlyphNames.MedRenGClefCMN,
        [GlyphName.MedRenLiquescenceCMN] = GlyphNames.MedRenLiquescenceCMN,
        [GlyphName.MedRenLiquescentAscCMN] = GlyphNames.MedRenLiquescentAscCMN,
        [GlyphName.MedRenLiquescentDescCMN] = GlyphNames.MedRenLiquescentDescCMN,
        [GlyphName.MedRenNatural] = GlyphNames.MedRenNatural,
        [GlyphName.MedRenNaturalWithCross] = GlyphNames.MedRenNaturalWithCross,
        [GlyphName.MedRenOriscusCMN] = GlyphNames.MedRenOriscusCMN,
        [GlyphName.MedRenPlicaCMN] = GlyphNames.MedRenPlicaCMN,
        [GlyphName.MedRenPunctumCMN] = GlyphNames.MedRenPunctumCMN,
        [GlyphName.MedRenQuilismaCMN] = GlyphNames.MedRenQuilismaCMN,
        [GlyphName.MedRenSharpCroix] = GlyphNames.MedRenSharpCroix,
        [GlyphName.MedRenStrophicusCMN] = GlyphNames.MedRenStrophicusCMN,
        [GlyphName.MensuralAlterationSign] = GlyphNames.MensuralAlterationSign,
        [GlyphName.MensuralBlackBrevis] = GlyphNames.MensuralBlackBrevis,
        [GlyphName.MensuralBlackBrevisVoid] = GlyphNames.MensuralBlackBrevisVoid,
        [GlyphName.MensuralBlackDragma] = GlyphNames.MensuralBlackDragma,
        [GlyphName.MensuralBlackLonga] = GlyphNames.MensuralBlackLonga,
        [GlyphName.MensuralBlackMaxima] = GlyphNames.MensuralBlackMaxima,
        [GlyphName.MensuralBlackMinima] = GlyphNames.MensuralBlackMinima,
        [GlyphName.MensuralBlackMinimaVoid] = GlyphNames.MensuralBlackMinimaVoid,
        [GlyphName.MensuralBlackSemibrevis] = GlyphNames.MensuralBlackSemibrevis,
        [GlyphName.MensuralBlackSemibrevisCaudata] = GlyphNames.MensuralBlackSemibrevisCaudata,
        [GlyphName.MensuralBlackSemibrevisOblique] = GlyphNames.MensuralBlackSemibrevisOblique,
        [GlyphName.MensuralBlackSemibrevisVoid] = GlyphNames.MensuralBlackSemibrevisVoid,
        [GlyphName.MensuralBlackSemiminima] = GlyphNames.MensuralBlackSemiminima,
        [GlyphName.MensuralCclef] = GlyphNames.MensuralCclef,
        [GlyphName.MensuralCclefPetrucciPosHigh] = GlyphNames.MensuralCclefPetrucciPosHigh,
        [GlyphName.MensuralCclefPetrucciPosHighest] = GlyphNames.MensuralCclefPetrucciPosHighest,
        [GlyphName.MensuralCclefPetrucciPosLow] = GlyphNames.MensuralCclefPetrucciPosLow,
        [GlyphName.MensuralCclefPetrucciPosLowest] = GlyphNames.MensuralCclefPetrucciPosLowest,
        [GlyphName.MensuralCclefPetrucciPosMiddle] = GlyphNames.MensuralCclefPetrucciPosMiddle,
        [GlyphName.MensuralColorationEndRound] = GlyphNames.MensuralColorationEndRound,
        [GlyphName.MensuralColorationEndSquare] = GlyphNames.MensuralColorationEndSquare,
        [GlyphName.MensuralColorationStartRound] = GlyphNames.MensuralColorationStartRound,
        [GlyphName.MensuralColorationStartSquare] = GlyphNames.MensuralColorationStartSquare,
        [GlyphName.MensuralCombStemDiagonal] = GlyphNames.MensuralCombStemDiagonal,
        [GlyphName.MensuralCombStemDown] = GlyphNames.MensuralCombStemDown,
        [GlyphName.MensuralCombStemDownFlagExtended] = GlyphNames.MensuralCombStemDownFlagExtended,
        [GlyphName.MensuralCombStemDownFlagFlared] = GlyphNames.MensuralCombStemDownFlagFlared,
        [GlyphName.MensuralCombStemDownFlagFusa] = GlyphNames.MensuralCombStemDownFlagFusa,
        [GlyphName.MensuralCombStemDownFlagLeft] = GlyphNames.MensuralCombStemDownFlagLeft,
        [GlyphName.MensuralCombStemDownFlagRight] = GlyphNames.MensuralCombStemDownFlagRight,
        [GlyphName.MensuralCombStemDownFlagSemiminima] = GlyphNames.MensuralCombStemDownFlagSemiminima,
        [GlyphName.MensuralCombStemUp] = GlyphNames.MensuralCombStemUp,
        [GlyphName.MensuralCombStemUpFlagExtended] = GlyphNames.MensuralCombStemUpFlagExtended,
        [GlyphName.MensuralCombStemUpFlagFlared] = GlyphNames.MensuralCombStemUpFlagFlared,
        [GlyphName.MensuralCombStemUpFlagFusa] = GlyphNames.MensuralCombStemUpFlagFusa,
        [GlyphName.MensuralCombStemUpFlagLeft] = GlyphNames.MensuralCombStemUpFlagLeft,
        [GlyphName.MensuralCombStemUpFlagRight] = GlyphNames.MensuralCombStemUpFlagRight,
        [GlyphName.MensuralCombStemUpFlagSemiminima] = GlyphNames.MensuralCombStemUpFlagSemiminima,
        [GlyphName.MensuralCustosCheckmark] = GlyphNames.MensuralCustosCheckmark,
        [GlyphName.MensuralCustosDown] = GlyphNames.MensuralCustosDown,
        [GlyphName.MensuralCustosTurn] = GlyphNames.MensuralCustosTurn,
        [GlyphName.MensuralCustosUp] = GlyphNames.MensuralCustosUp,
        [GlyphName.MensuralFclef] = GlyphNames.MensuralFclef,
        [GlyphName.MensuralFclefPetrucci] = GlyphNames.MensuralFclefPetrucci,
        [GlyphName.MensuralGclef] = GlyphNames.MensuralGclef,
        [GlyphName.MensuralGclefPetrucci] = GlyphNames.MensuralGclefPetrucci,
        [GlyphName.MensuralModusImperfectumVert] = GlyphNames.MensuralModusImperfectumVert,
        [GlyphName.MensuralModusPerfectumVert] = GlyphNames.MensuralModusPerfectumVert,
        [GlyphName.MensuralNoteheadLongaBlack] = GlyphNames.MensuralNoteheadLongaBlack,
        [GlyphName.MensuralNoteheadLongaBlackVoid] = GlyphNames.MensuralNoteheadLongaBlackVoid,
        [GlyphName.MensuralNoteheadLongaVoid] = GlyphNames.MensuralNoteheadLongaVoid,
        [GlyphName.MensuralNoteheadLongaWhite] = GlyphNames.MensuralNoteheadLongaWhite,
        [GlyphName.MensuralNoteheadMaximaBlack] = GlyphNames.MensuralNoteheadMaximaBlack,
        [GlyphName.MensuralNoteheadMaximaBlackVoid] = GlyphNames.MensuralNoteheadMaximaBlackVoid,
        [GlyphName.MensuralNoteheadMaximaVoid] = GlyphNames.MensuralNoteheadMaximaVoid,
        [GlyphName.MensuralNoteheadMaximaWhite] = GlyphNames.MensuralNoteheadMaximaWhite,
        [GlyphName.MensuralNoteheadMinimaWhite] = GlyphNames.MensuralNoteheadMinimaWhite,
        [GlyphName.MensuralNoteheadSemibrevisBlack] = GlyphNames.MensuralNoteheadSemibrevisBlack,
        [GlyphName.MensuralNoteheadSemibrevisBlackVoid] = GlyphNames.MensuralNoteheadSemibrevisBlackVoid,
        [GlyphName.MensuralNoteheadSemibrevisBlackVoidTurned] = GlyphNames.MensuralNoteheadSemibrevisBlackVoidTurned,
        [GlyphName.MensuralNoteheadSemibrevisVoid] = GlyphNames.MensuralNoteheadSemibrevisVoid,
        [GlyphName.MensuralNoteheadSemiminimaWhite] = GlyphNames.MensuralNoteheadSemiminimaWhite,
        [GlyphName.MensuralObliqueAsc2ndBlack] = GlyphNames.MensuralObliqueAsc2ndBlack,
        [GlyphName.MensuralObliqueAsc2ndBlackVoid] = GlyphNames.MensuralObliqueAsc2ndBlackVoid,
        [GlyphName.MensuralObliqueAsc2ndVoid] = GlyphNames.MensuralObliqueAsc2ndVoid,
        [GlyphName.MensuralObliqueAsc2ndWhite] = GlyphNames.MensuralObliqueAsc2ndWhite,
        [GlyphName.MensuralObliqueAsc3rdBlack] = GlyphNames.MensuralObliqueAsc3rdBlack,
        [GlyphName.MensuralObliqueAsc3rdBlackVoid] = GlyphNames.MensuralObliqueAsc3rdBlackVoid,
        [GlyphName.MensuralObliqueAsc3rdVoid] = GlyphNames.MensuralObliqueAsc3rdVoid,
        [GlyphName.MensuralObliqueAsc3rdWhite] = GlyphNames.MensuralObliqueAsc3rdWhite,
        [GlyphName.MensuralObliqueAsc4thBlack] = GlyphNames.MensuralObliqueAsc4thBlack,
        [GlyphName.MensuralObliqueAsc4thBlackVoid] = GlyphNames.MensuralObliqueAsc4thBlackVoid,
        [GlyphName.MensuralObliqueAsc4thVoid] = GlyphNames.MensuralObliqueAsc4thVoid,
        [GlyphName.MensuralObliqueAsc4thWhite] = GlyphNames.MensuralObliqueAsc4thWhite,
        [GlyphName.MensuralObliqueAsc5thBlack] = GlyphNames.MensuralObliqueAsc5thBlack,
        [GlyphName.MensuralObliqueAsc5thBlackVoid] = GlyphNames.MensuralObliqueAsc5thBlackVoid,
        [GlyphName.MensuralObliqueAsc5thVoid] = GlyphNames.MensuralObliqueAsc5thVoid,
        [GlyphName.MensuralObliqueAsc5thWhite] = GlyphNames.MensuralObliqueAsc5thWhite,
        [GlyphName.MensuralObliqueDesc2ndBlack] = GlyphNames.MensuralObliqueDesc2ndBlack,
        [GlyphName.MensuralObliqueDesc2ndBlackVoid] = GlyphNames.MensuralObliqueDesc2ndBlackVoid,
        [GlyphName.MensuralObliqueDesc2ndVoid] = GlyphNames.MensuralObliqueDesc2ndVoid,
        [GlyphName.MensuralObliqueDesc2ndWhite] = GlyphNames.MensuralObliqueDesc2ndWhite,
        [GlyphName.MensuralObliqueDesc3rdBlack] = GlyphNames.MensuralObliqueDesc3rdBlack,
        [GlyphName.MensuralObliqueDesc3rdBlackVoid] = GlyphNames.MensuralObliqueDesc3rdBlackVoid,
        [GlyphName.MensuralObliqueDesc3rdVoid] = GlyphNames.MensuralObliqueDesc3rdVoid,
        [GlyphName.MensuralObliqueDesc3rdWhite] = GlyphNames.MensuralObliqueDesc3rdWhite,
        [GlyphName.MensuralObliqueDesc4thBlack] = GlyphNames.MensuralObliqueDesc4thBlack,
        [GlyphName.MensuralObliqueDesc4thBlackVoid] = GlyphNames.MensuralObliqueDesc4thBlackVoid,
        [GlyphName.MensuralObliqueDesc4thVoid] = GlyphNames.MensuralObliqueDesc4thVoid,
        [GlyphName.MensuralObliqueDesc4thWhite] = GlyphNames.MensuralObliqueDesc4thWhite,
        [GlyphName.MensuralObliqueDesc5thBlack] = GlyphNames.MensuralObliqueDesc5thBlack,
        [GlyphName.MensuralObliqueDesc5thBlackVoid] = GlyphNames.MensuralObliqueDesc5thBlackVoid,
        [GlyphName.MensuralObliqueDesc5thVoid] = GlyphNames.MensuralObliqueDesc5thVoid,
        [GlyphName.MensuralObliqueDesc5thWhite] = GlyphNames.MensuralObliqueDesc5thWhite,
        [GlyphName.MensuralProlation1] = GlyphNames.MensuralProlation1,
        [GlyphName.MensuralProlation10] = GlyphNames.MensuralProlation10,
        [GlyphName.MensuralProlation11] = GlyphNames.MensuralProlation11,
        [GlyphName.MensuralProlation2] = GlyphNames.MensuralProlation2,
        [GlyphName.MensuralProlation3] = GlyphNames.MensuralProlation3,
        [GlyphName.MensuralProlation4] = GlyphNames.MensuralProlation4,
        [GlyphName.MensuralProlation5] = GlyphNames.MensuralProlation5,
        [GlyphName.MensuralProlation6] = GlyphNames.MensuralProlation6,
        [GlyphName.MensuralProlation7] = GlyphNames.MensuralProlation7,
        [GlyphName.MensuralProlation8] = GlyphNames.MensuralProlation8,
        [GlyphName.MensuralProlation9] = GlyphNames.MensuralProlation9,
        [GlyphName.MensuralProlationCombiningDot] = GlyphNames.MensuralProlationCombiningDot,
        [GlyphName.MensuralProlationCombiningDotVoid] = GlyphNames.MensuralProlationCombiningDotVoid,
        [GlyphName.MensuralProlationCombiningStroke] = GlyphNames.MensuralProlationCombiningStroke,
        [GlyphName.MensuralProlationCombiningThreeDots] = GlyphNames.MensuralProlationCombiningThreeDots,
        [GlyphName.MensuralProlationCombiningThreeDotsTri] = GlyphNames.MensuralProlationCombiningThreeDotsTri,
        [GlyphName.MensuralProlationCombiningTwoDots] = GlyphNames.MensuralProlationCombiningTwoDots,
        [GlyphName.MensuralProportion1] = GlyphNames.MensuralProportion1,
        [GlyphName.MensuralProportion2] = GlyphNames.MensuralProportion2,
        [GlyphName.MensuralProportion3] = GlyphNames.MensuralProportion3,
        [GlyphName.MensuralProportion4] = GlyphNames.MensuralProportion4,
        [GlyphName.MensuralProportion5] = GlyphNames.MensuralProportion5,
        [GlyphName.MensuralProportion6] = GlyphNames.MensuralProportion6,
        [GlyphName.MensuralProportion7] = GlyphNames.MensuralProportion7,
        [GlyphName.MensuralProportion8] = GlyphNames.MensuralProportion8,
        [GlyphName.MensuralProportion9] = GlyphNames.MensuralProportion9,
        [GlyphName.MensuralProportionMajor] = GlyphNames.MensuralProportionMajor,
        [GlyphName.MensuralProportionMinor] = GlyphNames.MensuralProportionMinor,
        [GlyphName.MensuralProportionProportioDupla1] = GlyphNames.MensuralProportionProportioDupla1,
        [GlyphName.MensuralProportionProportioDupla2] = GlyphNames.MensuralProportionProportioDupla2,
        [GlyphName.MensuralProportionProportioQuadrupla] = GlyphNames.MensuralProportionProportioQuadrupla,
        [GlyphName.MensuralProportionProportioTripla] = GlyphNames.MensuralProportionProportioTripla,
        [GlyphName.MensuralProportionTempusPerfectum] = GlyphNames.MensuralProportionTempusPerfectum,
        [GlyphName.MensuralRestBrevis] = GlyphNames.MensuralRestBrevis,
        [GlyphName.MensuralRestFusa] = GlyphNames.MensuralRestFusa,
        [GlyphName.MensuralRestLongaImperfecta] = GlyphNames.MensuralRestLongaImperfecta,
        [GlyphName.MensuralRestLongaPerfecta] = GlyphNames.MensuralRestLongaPerfecta,
        [GlyphName.MensuralRestMaxima] = GlyphNames.MensuralRestMaxima,
        [GlyphName.MensuralRestMinima] = GlyphNames.MensuralRestMinima,
        [GlyphName.MensuralRestSemibrevis] = GlyphNames.MensuralRestSemibrevis,
        [GlyphName.MensuralRestSemifusa] = GlyphNames.MensuralRestSemifusa,
        [GlyphName.MensuralRestSemiminima] = GlyphNames.MensuralRestSemiminima,
        [GlyphName.MensuralSignumDown] = GlyphNames.MensuralSignumDown,
        [GlyphName.MensuralSignumUp] = GlyphNames.MensuralSignumUp,
        [GlyphName.MensuralTempusImperfectumHoriz] = GlyphNames.MensuralTempusImperfectumHoriz,
        [GlyphName.MensuralTempusPerfectumHoriz] = GlyphNames.MensuralTempusPerfectumHoriz,
        [GlyphName.MensuralWhiteBrevis] = GlyphNames.MensuralWhiteBrevis,
        [GlyphName.MensuralWhiteFusa] = GlyphNames.MensuralWhiteFusa,
        [GlyphName.MensuralWhiteLonga] = GlyphNames.MensuralWhiteLonga,
        [GlyphName.MensuralWhiteMaxima] = GlyphNames.MensuralWhiteMaxima,
        [GlyphName.MensuralWhiteMinima] = GlyphNames.MensuralWhiteMinima,
        [GlyphName.MensuralWhiteSemibrevis] = GlyphNames.MensuralWhiteSemibrevis,
        [GlyphName.MensuralWhiteSemiminima] = GlyphNames.MensuralWhiteSemiminima,
        [GlyphName.MetAugmentationDot] = GlyphNames.MetAugmentationDot,
        [GlyphName.MetNote1024thDown] = GlyphNames.MetNote1024thDown,
        [GlyphName.MetNote1024thUp] = GlyphNames.MetNote1024thUp,
        [GlyphName.MetNote128thDown] = GlyphNames.MetNote128thDown,
        [GlyphName.MetNote128thUp] = GlyphNames.MetNote128thUp,
        [GlyphName.MetNote16thDown] = GlyphNames.MetNote16thDown,
        [GlyphName.MetNote16thUp] = GlyphNames.MetNote16thUp,
        [GlyphName.MetNote256thDown] = GlyphNames.MetNote256thDown,
        [GlyphName.MetNote256thUp] = GlyphNames.MetNote256thUp,
        [GlyphName.MetNote32ndDown] = GlyphNames.MetNote32ndDown,
        [GlyphName.MetNote32ndUp] = GlyphNames.MetNote32ndUp,
        [GlyphName.MetNote512thDown] = GlyphNames.MetNote512thDown,
        [GlyphName.MetNote512thUp] = GlyphNames.MetNote512thUp,
        [GlyphName.MetNote64thDown] = GlyphNames.MetNote64thDown,
        [GlyphName.MetNote64thUp] = GlyphNames.MetNote64thUp,
        [GlyphName.MetNote8thDown] = GlyphNames.MetNote8thDown,
        [GlyphName.MetNote8thUp] = GlyphNames.MetNote8thUp,
        [GlyphName.MetNoteDoubleWhole] = GlyphNames.MetNoteDoubleWhole,
        [GlyphName.MetNoteDoubleWholeSquare] = GlyphNames.MetNoteDoubleWholeSquare,
        [GlyphName.MetNoteHalfDown] = GlyphNames.MetNoteHalfDown,
        [GlyphName.MetNoteHalfUp] = GlyphNames.MetNoteHalfUp,
        [GlyphName.MetNoteQuarterDown] = GlyphNames.MetNoteQuarterDown,
        [GlyphName.MetNoteQuarterUp] = GlyphNames.MetNoteQuarterUp,
        [GlyphName.MetNoteWhole] = GlyphNames.MetNoteWhole,
        [GlyphName.MetricModulationArrowLeft] = GlyphNames.MetricModulationArrowLeft,
        [GlyphName.MetricModulationArrowRight] = GlyphNames.MetricModulationArrowRight,
        [GlyphName.MiscDoNotCopy] = GlyphNames.MiscDoNotCopy,
        [GlyphName.MiscDoNotPhotocopy] = GlyphNames.MiscDoNotPhotocopy,
        [GlyphName.MiscEyeglasses] = GlyphNames.MiscEyeglasses,
        [GlyphName.Note1024thDown] = GlyphNames.Note1024thDown,
        [GlyphName.Note1024thUp] = GlyphNames.Note1024thUp,
        [GlyphName.Note128thDown] = GlyphNames.Note128thDown,
        [GlyphName.Note128thUp] = GlyphNames.Note128thUp,
        [GlyphName.Note16thDown] = GlyphNames.Note16thDown,
        [GlyphName.Note16thUp] = GlyphNames.Note16thUp,
        [GlyphName.Note256thDown] = GlyphNames.Note256thDown,
        [GlyphName.Note256thUp] = GlyphNames.Note256thUp,
        [GlyphName.Note32ndDown] = GlyphNames.Note32ndDown,
        [GlyphName.Note32ndUp] = GlyphNames.Note32ndUp,
        [GlyphName.Note512thDown] = GlyphNames.Note512thDown,
        [GlyphName.Note512thUp] = GlyphNames.Note512thUp,
        [GlyphName.Note64thDown] = GlyphNames.Note64thDown,
        [GlyphName.Note64thUp] = GlyphNames.Note64thUp,
        [GlyphName.Note8thDown] = GlyphNames.Note8thDown,
        [GlyphName.Note8thUp] = GlyphNames.Note8thUp,
        [GlyphName.NoteABlack] = GlyphNames.NoteABlack,
        [GlyphName.NoteAFlatBlack] = GlyphNames.NoteAFlatBlack,
        [GlyphName.NoteAFlatHalf] = GlyphNames.NoteAFlatHalf,
        [GlyphName.NoteAFlatWhole] = GlyphNames.NoteAFlatWhole,
        [GlyphName.NoteAHalf] = GlyphNames.NoteAHalf,
        [GlyphName.NoteASharpBlack] = GlyphNames.NoteASharpBlack,
        [GlyphName.NoteASharpHalf] = GlyphNames.NoteASharpHalf,
        [GlyphName.NoteASharpWhole] = GlyphNames.NoteASharpWhole,
        [GlyphName.NoteAWhole] = GlyphNames.NoteAWhole,
        [GlyphName.NoteBBlack] = GlyphNames.NoteBBlack,
        [GlyphName.NoteBFlatBlack] = GlyphNames.NoteBFlatBlack,
        [GlyphName.NoteBFlatHalf] = GlyphNames.NoteBFlatHalf,
        [GlyphName.NoteBFlatWhole] = GlyphNames.NoteBFlatWhole,
        [GlyphName.NoteBHalf] = GlyphNames.NoteBHalf,
        [GlyphName.NoteBSharpBlack] = GlyphNames.NoteBSharpBlack,
        [GlyphName.NoteBSharpHalf] = GlyphNames.NoteBSharpHalf,
        [GlyphName.NoteBSharpWhole] = GlyphNames.NoteBSharpWhole,
        [GlyphName.NoteBWhole] = GlyphNames.NoteBWhole,
        [GlyphName.NoteCBlack] = GlyphNames.NoteCBlack,
        [GlyphName.NoteCFlatBlack] = GlyphNames.NoteCFlatBlack,
        [GlyphName.NoteCFlatHalf] = GlyphNames.NoteCFlatHalf,
        [GlyphName.NoteCFlatWhole] = GlyphNames.NoteCFlatWhole,
        [GlyphName.NoteCHalf] = GlyphNames.NoteCHalf,
        [GlyphName.NoteCSharpBlack] = GlyphNames.NoteCSharpBlack,
        [GlyphName.NoteCSharpHalf] = GlyphNames.NoteCSharpHalf,
        [GlyphName.NoteCSharpWhole] = GlyphNames.NoteCSharpWhole,
        [GlyphName.NoteCWhole] = GlyphNames.NoteCWhole,
        [GlyphName.NoteDBlack] = GlyphNames.NoteDBlack,
        [GlyphName.NoteDFlatBlack] = GlyphNames.NoteDFlatBlack,
        [GlyphName.NoteDFlatHalf] = GlyphNames.NoteDFlatHalf,
        [GlyphName.NoteDFlatWhole] = GlyphNames.NoteDFlatWhole,
        [GlyphName.NoteDHalf] = GlyphNames.NoteDHalf,
        [GlyphName.NoteDSharpBlack] = GlyphNames.NoteDSharpBlack,
        [GlyphName.NoteDSharpHalf] = GlyphNames.NoteDSharpHalf,
        [GlyphName.NoteDSharpWhole] = GlyphNames.NoteDSharpWhole,
        [GlyphName.NoteDWhole] = GlyphNames.NoteDWhole,
        [GlyphName.NoteDiBlack] = GlyphNames.NoteDiBlack,
        [GlyphName.NoteDiHalf] = GlyphNames.NoteDiHalf,
        [GlyphName.NoteDiWhole] = GlyphNames.NoteDiWhole,
        [GlyphName.NoteDoBlack] = GlyphNames.NoteDoBlack,
        [GlyphName.NoteDoHalf] = GlyphNames.NoteDoHalf,
        [GlyphName.NoteDoWhole] = GlyphNames.NoteDoWhole,
        [GlyphName.NoteDoubleWhole] = GlyphNames.NoteDoubleWhole,
        [GlyphName.NoteDoubleWholeSquare] = GlyphNames.NoteDoubleWholeSquare,
        [GlyphName.NoteEBlack] = GlyphNames.NoteEBlack,
        [GlyphName.NoteEFlatBlack] = GlyphNames.NoteEFlatBlack,
        [GlyphName.NoteEFlatHalf] = GlyphNames.NoteEFlatHalf,
        [GlyphName.NoteEFlatWhole] = GlyphNames.NoteEFlatWhole,
        [GlyphName.NoteEHalf] = GlyphNames.NoteEHalf,
        [GlyphName.NoteESharpBlack] = GlyphNames.NoteESharpBlack,
        [GlyphName.NoteESharpHalf] = GlyphNames.NoteESharpHalf,
        [GlyphName.NoteESharpWhole] = GlyphNames.NoteESharpWhole,
        [GlyphName.NoteEWhole] = GlyphNames.NoteEWhole,
        [GlyphName.NoteEmptyBlack] = GlyphNames.NoteEmptyBlack,
        [GlyphName.NoteEmptyHalf] = GlyphNames.NoteEmptyHalf,
        [GlyphName.NoteEmptyWhole] = GlyphNames.NoteEmptyWhole,
        [GlyphName.NoteFBlack] = GlyphNames.NoteFBlack,
        [GlyphName.NoteFFlatBlack] = GlyphNames.NoteFFlatBlack,
        [GlyphName.NoteFFlatHalf] = GlyphNames.NoteFFlatHalf,
        [GlyphName.NoteFFlatWhole] = GlyphNames.NoteFFlatWhole,
        [GlyphName.NoteFHalf] = GlyphNames.NoteFHalf,
        [GlyphName.NoteFSharpBlack] = GlyphNames.NoteFSharpBlack,
        [GlyphName.NoteFSharpHalf] = GlyphNames.NoteFSharpHalf,
        [GlyphName.NoteFSharpWhole] = GlyphNames.NoteFSharpWhole,
        [GlyphName.NoteFWhole] = GlyphNames.NoteFWhole,
        [GlyphName.NoteFaBlack] = GlyphNames.NoteFaBlack,
        [GlyphName.NoteFaHalf] = GlyphNames.NoteFaHalf,
        [GlyphName.NoteFaWhole] = GlyphNames.NoteFaWhole,
        [GlyphName.NoteFiBlack] = GlyphNames.NoteFiBlack,
        [GlyphName.NoteFiHalf] = GlyphNames.NoteFiHalf,
        [GlyphName.NoteFiWhole] = GlyphNames.NoteFiWhole,
        [GlyphName.NoteGBlack] = GlyphNames.NoteGBlack,
        [GlyphName.NoteGFlatBlack] = GlyphNames.NoteGFlatBlack,
        [GlyphName.NoteGFlatHalf] = GlyphNames.NoteGFlatHalf,
        [GlyphName.NoteGFlatWhole] = GlyphNames.NoteGFlatWhole,
        [GlyphName.NoteGHalf] = GlyphNames.NoteGHalf,
        [GlyphName.NoteGSharpBlack] = GlyphNames.NoteGSharpBlack,
        [GlyphName.NoteGSharpHalf] = GlyphNames.NoteGSharpHalf,
        [GlyphName.NoteGSharpWhole] = GlyphNames.NoteGSharpWhole,
        [GlyphName.NoteGWhole] = GlyphNames.NoteGWhole,
        [GlyphName.NoteHBlack] = GlyphNames.NoteHBlack,
        [GlyphName.NoteHHalf] = GlyphNames.NoteHHalf,
        [GlyphName.NoteHSharpBlack] = GlyphNames.NoteHSharpBlack,
        [GlyphName.NoteHSharpHalf] = GlyphNames.NoteHSharpHalf,
        [GlyphName.NoteHSharpWhole] = GlyphNames.NoteHSharpWhole,
        [GlyphName.NoteHWhole] = GlyphNames.NoteHWhole,
        [GlyphName.NoteHalfDown] = GlyphNames.NoteHalfDown,
        [GlyphName.NoteHalfUp] = GlyphNames.NoteHalfUp,
        [GlyphName.NoteLaBlack] = GlyphNames.NoteLaBlack,
        [GlyphName.NoteLaHalf] = GlyphNames.NoteLaHalf,
        [GlyphName.NoteLaWhole] = GlyphNames.NoteLaWhole,
        [GlyphName.NoteLeBlack] = GlyphNames.NoteLeBlack,
        [GlyphName.NoteLeHalf] = GlyphNames.NoteLeHalf,
        [GlyphName.NoteLeWhole] = GlyphNames.NoteLeWhole,
        [GlyphName.NoteLiBlack] = GlyphNames.NoteLiBlack,
        [GlyphName.NoteLiHalf] = GlyphNames.NoteLiHalf,
        [GlyphName.NoteLiWhole] = GlyphNames.NoteLiWhole,
        [GlyphName.NoteMeBlack] = GlyphNames.NoteMeBlack,
        [GlyphName.NoteMeHalf] = GlyphNames.NoteMeHalf,
        [GlyphName.NoteMeWhole] = GlyphNames.NoteMeWhole,
        [GlyphName.NoteMiBlack] = GlyphNames.NoteMiBlack,
        [GlyphName.NoteMiHalf] = GlyphNames.NoteMiHalf,
        [GlyphName.NoteMiWhole] = GlyphNames.NoteMiWhole,
        [GlyphName.NoteQuarterDown] = GlyphNames.NoteQuarterDown,
        [GlyphName.NoteQuarterUp] = GlyphNames.NoteQuarterUp,
        [GlyphName.NoteRaBlack] = GlyphNames.NoteRaBlack,
        [GlyphName.NoteRaHalf] = GlyphNames.NoteRaHalf,
        [GlyphName.NoteRaWhole] = GlyphNames.NoteRaWhole,
        [GlyphName.NoteReBlack] = GlyphNames.NoteReBlack,
        [GlyphName.NoteReHalf] = GlyphNames.NoteReHalf,
        [GlyphName.NoteReWhole] = GlyphNames.NoteReWhole,
        [GlyphName.NoteRiBlack] = GlyphNames.NoteRiBlack,
        [GlyphName.NoteRiHalf] = GlyphNames.NoteRiHalf,
        [GlyphName.NoteRiWhole] = GlyphNames.NoteRiWhole,
        [GlyphName.NoteSeBlack] = GlyphNames.NoteSeBlack,
        [GlyphName.NoteSeHalf] = GlyphNames.NoteSeHalf,
        [GlyphName.NoteSeWhole] = GlyphNames.NoteSeWhole,
        [GlyphName.NoteShapeArrowheadLeftBlack] = GlyphNames.NoteShapeArrowheadLeftBlack,
        [GlyphName.NoteShapeArrowheadLeftDoubleWhole] = GlyphNames.NoteShapeArrowheadLeftDoubleWhole,
        [GlyphName.NoteShapeArrowheadLeftWhite] = GlyphNames.NoteShapeArrowheadLeftWhite,
        [GlyphName.NoteShapeDiamondBlack] = GlyphNames.NoteShapeDiamondBlack,
        [GlyphName.NoteShapeDiamondDoubleWhole] = GlyphNames.NoteShapeDiamondDoubleWhole,
        [GlyphName.NoteShapeDiamondWhite] = GlyphNames.NoteShapeDiamondWhite,
        [GlyphName.NoteShapeIsoscelesTriangleBlack] = GlyphNames.NoteShapeIsoscelesTriangleBlack,
        [GlyphName.NoteShapeIsoscelesTriangleDoubleWhole] = GlyphNames.NoteShapeIsoscelesTriangleDoubleWhole,
        [GlyphName.NoteShapeIsoscelesTriangleWhite] = GlyphNames.NoteShapeIsoscelesTriangleWhite,
        [GlyphName.NoteShapeKeystoneBlack] = GlyphNames.NoteShapeKeystoneBlack,
        [GlyphName.NoteShapeKeystoneDoubleWhole] = GlyphNames.NoteShapeKeystoneDoubleWhole,
        [GlyphName.NoteShapeKeystoneWhite] = GlyphNames.NoteShapeKeystoneWhite,
        [GlyphName.NoteShapeMoonBlack] = GlyphNames.NoteShapeMoonBlack,
        [GlyphName.NoteShapeMoonDoubleWhole] = GlyphNames.NoteShapeMoonDoubleWhole,
        [GlyphName.NoteShapeMoonLeftBlack] = GlyphNames.NoteShapeMoonLeftBlack,
        [GlyphName.NoteShapeMoonLeftDoubleWhole] = GlyphNames.NoteShapeMoonLeftDoubleWhole,
        [GlyphName.NoteShapeMoonLeftWhite] = GlyphNames.NoteShapeMoonLeftWhite,
        [GlyphName.NoteShapeMoonWhite] = GlyphNames.NoteShapeMoonWhite,
        [GlyphName.NoteShapeQuarterMoonBlack] = GlyphNames.NoteShapeQuarterMoonBlack,
        [GlyphName.NoteShapeQuarterMoonDoubleWhole] = GlyphNames.NoteShapeQuarterMoonDoubleWhole,
        [GlyphName.NoteShapeQuarterMoonWhite] = GlyphNames.NoteShapeQuarterMoonWhite,
        [GlyphName.NoteShapeRoundBlack] = GlyphNames.NoteShapeRoundBlack,
        [GlyphName.NoteShapeRoundDoubleWhole] = GlyphNames.NoteShapeRoundDoubleWhole,
        [GlyphName.NoteShapeRoundWhite] = GlyphNames.NoteShapeRoundWhite,
        [GlyphName.NoteShapeSquareBlack] = GlyphNames.NoteShapeSquareBlack,
        [GlyphName.NoteShapeSquareDoubleWhole] = GlyphNames.NoteShapeSquareDoubleWhole,
        [GlyphName.NoteShapeSquareWhite] = GlyphNames.NoteShapeSquareWhite,
        [GlyphName.NoteShapeTriangleLeftBlack] = GlyphNames.NoteShapeTriangleLeftBlack,
        [GlyphName.NoteShapeTriangleLeftDoubleWhole] = GlyphNames.NoteShapeTriangleLeftDoubleWhole,
        [GlyphName.NoteShapeTriangleLeftWhite] = GlyphNames.NoteShapeTriangleLeftWhite,
        [GlyphName.NoteShapeTriangleRightBlack] = GlyphNames.NoteShapeTriangleRightBlack,
        [GlyphName.NoteShapeTriangleRightDoubleWhole] = GlyphNames.NoteShapeTriangleRightDoubleWhole,
        [GlyphName.NoteShapeTriangleRightWhite] = GlyphNames.NoteShapeTriangleRightWhite,
        [GlyphName.NoteShapeTriangleRoundBlack] = GlyphNames.NoteShapeTriangleRoundBlack,
        [GlyphName.NoteShapeTriangleRoundDoubleWhole] = GlyphNames.NoteShapeTriangleRoundDoubleWhole,
        [GlyphName.NoteShapeTriangleRoundLeftBlack] = GlyphNames.NoteShapeTriangleRoundLeftBlack,
        [GlyphName.NoteShapeTriangleRoundLeftDoubleWhole] = GlyphNames.NoteShapeTriangleRoundLeftDoubleWhole,
        [GlyphName.NoteShapeTriangleRoundLeftWhite] = GlyphNames.NoteShapeTriangleRoundLeftWhite,
        [GlyphName.NoteShapeTriangleRoundWhite] = GlyphNames.NoteShapeTriangleRoundWhite,
        [GlyphName.NoteShapeTriangleUpBlack] = GlyphNames.NoteShapeTriangleUpBlack,
        [GlyphName.NoteShapeTriangleUpDoubleWhole] = GlyphNames.NoteShapeTriangleUpDoubleWhole,
        [GlyphName.NoteShapeTriangleUpWhite] = GlyphNames.NoteShapeTriangleUpWhite,
        [GlyphName.NoteSiBlack] = GlyphNames.NoteSiBlack,
        [GlyphName.NoteSiHalf] = GlyphNames.NoteSiHalf,
        [GlyphName.NoteSiWhole] = GlyphNames.NoteSiWhole,
        [GlyphName.NoteSoBlack] = GlyphNames.NoteSoBlack,
        [GlyphName.NoteSoHalf] = GlyphNames.NoteSoHalf,
        [GlyphName.NoteSoWhole] = GlyphNames.NoteSoWhole,
        [GlyphName.NoteTeBlack] = GlyphNames.NoteTeBlack,
        [GlyphName.NoteTeHalf] = GlyphNames.NoteTeHalf,
        [GlyphName.NoteTeWhole] = GlyphNames.NoteTeWhole,
        [GlyphName.NoteTiBlack] = GlyphNames.NoteTiBlack,
        [GlyphName.NoteTiHalf] = GlyphNames.NoteTiHalf,
        [GlyphName.NoteTiWhole] = GlyphNames.NoteTiWhole,
        [GlyphName.NoteWhole] = GlyphNames.NoteWhole,
        [GlyphName.NoteheadBlack] = GlyphNames.NoteheadBlack,
        [GlyphName.NoteheadCircleSlash] = GlyphNames.NoteheadCircleSlash,
        [GlyphName.NoteheadCircleX] = GlyphNames.NoteheadCircleX,
        [GlyphName.NoteheadCircleXDoubleWhole] = GlyphNames.NoteheadCircleXDoubleWhole,
        [GlyphName.NoteheadCircleXHalf] = GlyphNames.NoteheadCircleXHalf,
        [GlyphName.NoteheadCircleXWhole] = GlyphNames.NoteheadCircleXWhole,
        [GlyphName.NoteheadCircledBlack] = GlyphNames.NoteheadCircledBlack,
        [GlyphName.NoteheadCircledBlackLarge] = GlyphNames.NoteheadCircledBlackLarge,
        [GlyphName.NoteheadCircledDoubleWhole] = GlyphNames.NoteheadCircledDoubleWhole,
        [GlyphName.NoteheadCircledDoubleWholeLarge] = GlyphNames.NoteheadCircledDoubleWholeLarge,
        [GlyphName.NoteheadCircledHalf] = GlyphNames.NoteheadCircledHalf,
        [GlyphName.NoteheadCircledHalfLarge] = GlyphNames.NoteheadCircledHalfLarge,
        [GlyphName.NoteheadCircledWhole] = GlyphNames.NoteheadCircledWhole,
        [GlyphName.NoteheadCircledWholeLarge] = GlyphNames.NoteheadCircledWholeLarge,
        [GlyphName.NoteheadCircledXLarge] = GlyphNames.NoteheadCircledXLarge,
        [GlyphName.NoteheadClusterDoubleWhole2nd] = GlyphNames.NoteheadClusterDoubleWhole2nd,
        [GlyphName.NoteheadClusterDoubleWhole3rd] = GlyphNames.NoteheadClusterDoubleWhole3rd,
        [GlyphName.NoteheadClusterDoubleWholeBottom] = GlyphNames.NoteheadClusterDoubleWholeBottom,
        [GlyphName.NoteheadClusterDoubleWholeMiddle] = GlyphNames.NoteheadClusterDoubleWholeMiddle,
        [GlyphName.NoteheadClusterDoubleWholeTop] = GlyphNames.NoteheadClusterDoubleWholeTop,
        [GlyphName.NoteheadClusterHalf2nd] = GlyphNames.NoteheadClusterHalf2nd,
        [GlyphName.NoteheadClusterHalf3rd] = GlyphNames.NoteheadClusterHalf3rd,
        [GlyphName.NoteheadClusterHalfBottom] = GlyphNames.NoteheadClusterHalfBottom,
        [GlyphName.NoteheadClusterHalfMiddle] = GlyphNames.NoteheadClusterHalfMiddle,
        [GlyphName.NoteheadClusterHalfTop] = GlyphNames.NoteheadClusterHalfTop,
        [GlyphName.NoteheadClusterQuarter2nd] = GlyphNames.NoteheadClusterQuarter2nd,
        [GlyphName.NoteheadClusterQuarter3rd] = GlyphNames.NoteheadClusterQuarter3rd,
        [GlyphName.NoteheadClusterQuarterBottom] = GlyphNames.NoteheadClusterQuarterBottom,
        [GlyphName.NoteheadClusterQuarterMiddle] = GlyphNames.NoteheadClusterQuarterMiddle,
        [GlyphName.NoteheadClusterQuarterTop] = GlyphNames.NoteheadClusterQuarterTop,
        [GlyphName.NoteheadClusterRoundBlack] = GlyphNames.NoteheadClusterRoundBlack,
        [GlyphName.NoteheadClusterRoundWhite] = GlyphNames.NoteheadClusterRoundWhite,
        [GlyphName.NoteheadClusterSquareBlack] = GlyphNames.NoteheadClusterSquareBlack,
        [GlyphName.NoteheadClusterSquareWhite] = GlyphNames.NoteheadClusterSquareWhite,
        [GlyphName.NoteheadClusterWhole2nd] = GlyphNames.NoteheadClusterWhole2nd,
        [GlyphName.NoteheadClusterWhole3rd] = GlyphNames.NoteheadClusterWhole3rd,
        [GlyphName.NoteheadClusterWholeBottom] = GlyphNames.NoteheadClusterWholeBottom,
        [GlyphName.NoteheadClusterWholeMiddle] = GlyphNames.NoteheadClusterWholeMiddle,
        [GlyphName.NoteheadClusterWholeTop] = GlyphNames.NoteheadClusterWholeTop,
        [GlyphName.NoteheadCowellEleventhNoteSeriesHalf] = GlyphNames.NoteheadCowellEleventhNoteSeriesHalf,
        [GlyphName.NoteheadCowellEleventhNoteSeriesWhole] = GlyphNames.NoteheadCowellEleventhNoteSeriesWhole,
        [GlyphName.NoteheadCowellEleventhSeriesBlack] = GlyphNames.NoteheadCowellEleventhSeriesBlack,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesBlack] = GlyphNames.NoteheadCowellFifteenthNoteSeriesBlack,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesHalf] = GlyphNames.NoteheadCowellFifteenthNoteSeriesHalf,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesWhole] = GlyphNames.NoteheadCowellFifteenthNoteSeriesWhole,
        [GlyphName.NoteheadCowellFifthNoteSeriesBlack] = GlyphNames.NoteheadCowellFifthNoteSeriesBlack,
        [GlyphName.NoteheadCowellFifthNoteSeriesHalf] = GlyphNames.NoteheadCowellFifthNoteSeriesHalf,
        [GlyphName.NoteheadCowellFifthNoteSeriesWhole] = GlyphNames.NoteheadCowellFifthNoteSeriesWhole,
        [GlyphName.NoteheadCowellNinthNoteSeriesBlack] = GlyphNames.NoteheadCowellNinthNoteSeriesBlack,
        [GlyphName.NoteheadCowellNinthNoteSeriesHalf] = GlyphNames.NoteheadCowellNinthNoteSeriesHalf,
        [GlyphName.NoteheadCowellNinthNoteSeriesWhole] = GlyphNames.NoteheadCowellNinthNoteSeriesWhole,
        [GlyphName.NoteheadCowellSeventhNoteSeriesBlack] = GlyphNames.NoteheadCowellSeventhNoteSeriesBlack,
        [GlyphName.NoteheadCowellSeventhNoteSeriesHalf] = GlyphNames.NoteheadCowellSeventhNoteSeriesHalf,
        [GlyphName.NoteheadCowellSeventhNoteSeriesWhole] = GlyphNames.NoteheadCowellSeventhNoteSeriesWhole,
        [GlyphName.NoteheadCowellThirdNoteSeriesBlack] = GlyphNames.NoteheadCowellThirdNoteSeriesBlack,
        [GlyphName.NoteheadCowellThirdNoteSeriesHalf] = GlyphNames.NoteheadCowellThirdNoteSeriesHalf,
        [GlyphName.NoteheadCowellThirdNoteSeriesWhole] = GlyphNames.NoteheadCowellThirdNoteSeriesWhole,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesBlack] = GlyphNames.NoteheadCowellThirteenthNoteSeriesBlack,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesHalf] = GlyphNames.NoteheadCowellThirteenthNoteSeriesHalf,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesWhole] = GlyphNames.NoteheadCowellThirteenthNoteSeriesWhole,
        [GlyphName.NoteheadDiamondBlack] = GlyphNames.NoteheadDiamondBlack,
        [GlyphName.NoteheadDiamondBlackOld] = GlyphNames.NoteheadDiamondBlackOld,
        [GlyphName.NoteheadDiamondBlackWide] = GlyphNames.NoteheadDiamondBlackWide,
        [GlyphName.NoteheadDiamondClusterBlack2nd] = GlyphNames.NoteheadDiamondClusterBlack2nd,
        [GlyphName.NoteheadDiamondClusterBlack3rd] = GlyphNames.NoteheadDiamondClusterBlack3rd,
        [GlyphName.NoteheadDiamondClusterBlackBottom] = GlyphNames.NoteheadDiamondClusterBlackBottom,
        [GlyphName.NoteheadDiamondClusterBlackMiddle] = GlyphNames.NoteheadDiamondClusterBlackMiddle,
        [GlyphName.NoteheadDiamondClusterBlackTop] = GlyphNames.NoteheadDiamondClusterBlackTop,
        [GlyphName.NoteheadDiamondClusterWhite2nd] = GlyphNames.NoteheadDiamondClusterWhite2nd,
        [GlyphName.NoteheadDiamondClusterWhite3rd] = GlyphNames.NoteheadDiamondClusterWhite3rd,
        [GlyphName.NoteheadDiamondClusterWhiteBottom] = GlyphNames.NoteheadDiamondClusterWhiteBottom,
        [GlyphName.NoteheadDiamondClusterWhiteMiddle] = GlyphNames.NoteheadDiamondClusterWhiteMiddle,
        [GlyphName.NoteheadDiamondClusterWhiteTop] = GlyphNames.NoteheadDiamondClusterWhiteTop,
        [GlyphName.NoteheadDiamondDoubleWhole] = GlyphNames.NoteheadDiamondDoubleWhole,
        [GlyphName.NoteheadDiamondDoubleWholeOld] = GlyphNames.NoteheadDiamondDoubleWholeOld,
        [GlyphName.NoteheadDiamondHalf] = GlyphNames.NoteheadDiamondHalf,
        [GlyphName.NoteheadDiamondHalfFilled] = GlyphNames.NoteheadDiamondHalfFilled,
        [GlyphName.NoteheadDiamondHalfOld] = GlyphNames.NoteheadDiamondHalfOld,
        [GlyphName.NoteheadDiamondHalfWide] = GlyphNames.NoteheadDiamondHalfWide,
        [GlyphName.NoteheadDiamondOpen] = GlyphNames.NoteheadDiamondOpen,
        [GlyphName.NoteheadDiamondWhite] = GlyphNames.NoteheadDiamondWhite,
        [GlyphName.NoteheadDiamondWhiteWide] = GlyphNames.NoteheadDiamondWhiteWide,
        [GlyphName.NoteheadDiamondWhole] = GlyphNames.NoteheadDiamondWhole,
        [GlyphName.NoteheadDiamondWholeOld] = GlyphNames.NoteheadDiamondWholeOld,
        [GlyphName.NoteheadDoubleWhole] = GlyphNames.NoteheadDoubleWhole,
        [GlyphName.NoteheadDoubleWholeSquare] = GlyphNames.NoteheadDoubleWholeSquare,
        [GlyphName.NoteheadDoubleWholeWithX] = GlyphNames.NoteheadDoubleWholeWithX,
        [GlyphName.NoteheadHalf] = GlyphNames.NoteheadHalf,
        [GlyphName.NoteheadHalfFilled] = GlyphNames.NoteheadHalfFilled,
        [GlyphName.NoteheadHalfWithX] = GlyphNames.NoteheadHalfWithX,
        [GlyphName.NoteheadHeavyX] = GlyphNames.NoteheadHeavyX,
        [GlyphName.NoteheadHeavyXHat] = GlyphNames.NoteheadHeavyXHat,
        [GlyphName.NoteheadLargeArrowDownBlack] = GlyphNames.NoteheadLargeArrowDownBlack,
        [GlyphName.NoteheadLargeArrowDownDoubleWhole] = GlyphNames.NoteheadLargeArrowDownDoubleWhole,
        [GlyphName.NoteheadLargeArrowDownHalf] = GlyphNames.NoteheadLargeArrowDownHalf,
        [GlyphName.NoteheadLargeArrowDownWhole] = GlyphNames.NoteheadLargeArrowDownWhole,
        [GlyphName.NoteheadLargeArrowUpBlack] = GlyphNames.NoteheadLargeArrowUpBlack,
        [GlyphName.NoteheadLargeArrowUpDoubleWhole] = GlyphNames.NoteheadLargeArrowUpDoubleWhole,
        [GlyphName.NoteheadLargeArrowUpHalf] = GlyphNames.NoteheadLargeArrowUpHalf,
        [GlyphName.NoteheadLargeArrowUpWhole] = GlyphNames.NoteheadLargeArrowUpWhole,
        [GlyphName.NoteheadMoonBlack] = GlyphNames.NoteheadMoonBlack,
        [GlyphName.NoteheadMoonWhite] = GlyphNames.NoteheadMoonWhite,
        [GlyphName.NoteheadNancarrowSine] = GlyphNames.NoteheadNancarrowSine,
        [GlyphName.NoteheadNull] = GlyphNames.NoteheadNull,
        [GlyphName.NoteheadParenthesis] = GlyphNames.NoteheadParenthesis,
        [GlyphName.NoteheadParenthesisLeft] = GlyphNames.NoteheadParenthesisLeft,
        [GlyphName.NoteheadParenthesisRight] = GlyphNames.NoteheadParenthesisRight,
        [GlyphName.NoteheadPlusBlack] = GlyphNames.NoteheadPlusBlack,
        [GlyphName.NoteheadPlusDoubleWhole] = GlyphNames.NoteheadPlusDoubleWhole,
        [GlyphName.NoteheadPlusHalf] = GlyphNames.NoteheadPlusHalf,
        [GlyphName.NoteheadPlusWhole] = GlyphNames.NoteheadPlusWhole,
        [GlyphName.NoteheadRectangularClusterBlackBottom] = GlyphNames.NoteheadRectangularClusterBlackBottom,
        [GlyphName.NoteheadRectangularClusterBlackMiddle] = GlyphNames.NoteheadRectangularClusterBlackMiddle,
        [GlyphName.NoteheadRectangularClusterBlackTop] = GlyphNames.NoteheadRectangularClusterBlackTop,
        [GlyphName.NoteheadRectangularClusterWhiteBottom] = GlyphNames.NoteheadRectangularClusterWhiteBottom,
        [GlyphName.NoteheadRectangularClusterWhiteMiddle] = GlyphNames.NoteheadRectangularClusterWhiteMiddle,
        [GlyphName.NoteheadRectangularClusterWhiteTop] = GlyphNames.NoteheadRectangularClusterWhiteTop,
        [GlyphName.NoteheadRoundBlack] = GlyphNames.NoteheadRoundBlack,
        [GlyphName.NoteheadRoundBlackDoubleSlashed] = GlyphNames.NoteheadRoundBlackDoubleSlashed,
        [GlyphName.NoteheadRoundBlackLarge] = GlyphNames.NoteheadRoundBlackLarge,
        [GlyphName.NoteheadRoundBlackSlashed] = GlyphNames.NoteheadRoundBlackSlashed,
        [GlyphName.NoteheadRoundBlackSlashedLarge] = GlyphNames.NoteheadRoundBlackSlashedLarge,
        [GlyphName.NoteheadRoundWhite] = GlyphNames.NoteheadRoundWhite,
        [GlyphName.NoteheadRoundWhiteDoubleSlashed] = GlyphNames.NoteheadRoundWhiteDoubleSlashed,
        [GlyphName.NoteheadRoundWhiteLarge] = GlyphNames.NoteheadRoundWhiteLarge,
        [GlyphName.NoteheadRoundWhiteSlashed] = GlyphNames.NoteheadRoundWhiteSlashed,
        [GlyphName.NoteheadRoundWhiteSlashedLarge] = GlyphNames.NoteheadRoundWhiteSlashedLarge,
        [GlyphName.NoteheadRoundWhiteWithDot] = GlyphNames.NoteheadRoundWhiteWithDot,
        [GlyphName.NoteheadRoundWhiteWithDotLarge] = GlyphNames.NoteheadRoundWhiteWithDotLarge,
        [GlyphName.NoteheadSlashDiamondWhite] = GlyphNames.NoteheadSlashDiamondWhite,
        [GlyphName.NoteheadSlashHorizontalEnds] = GlyphNames.NoteheadSlashHorizontalEnds,
        [GlyphName.NoteheadSlashHorizontalEndsMuted] = GlyphNames.NoteheadSlashHorizontalEndsMuted,
        [GlyphName.NoteheadSlashVerticalEnds] = GlyphNames.NoteheadSlashVerticalEnds,
        [GlyphName.NoteheadSlashVerticalEndsMuted] = GlyphNames.NoteheadSlashVerticalEndsMuted,
        [GlyphName.NoteheadSlashVerticalEndsSmall] = GlyphNames.NoteheadSlashVerticalEndsSmall,
        [GlyphName.NoteheadSlashWhiteDoubleWhole] = GlyphNames.NoteheadSlashWhiteDoubleWhole,
        [GlyphName.NoteheadSlashWhiteHalf] = GlyphNames.NoteheadSlashWhiteHalf,
        [GlyphName.NoteheadSlashWhiteMuted] = GlyphNames.NoteheadSlashWhiteMuted,
        [GlyphName.NoteheadSlashWhiteWhole] = GlyphNames.NoteheadSlashWhiteWhole,
        [GlyphName.NoteheadSlashX] = GlyphNames.NoteheadSlashX,
        [GlyphName.NoteheadSlashedBlack1] = GlyphNames.NoteheadSlashedBlack1,
        [GlyphName.NoteheadSlashedBlack2] = GlyphNames.NoteheadSlashedBlack2,
        [GlyphName.NoteheadSlashedDoubleWhole1] = GlyphNames.NoteheadSlashedDoubleWhole1,
        [GlyphName.NoteheadSlashedDoubleWhole2] = GlyphNames.NoteheadSlashedDoubleWhole2,
        [GlyphName.NoteheadSlashedHalf1] = GlyphNames.NoteheadSlashedHalf1,
        [GlyphName.NoteheadSlashedHalf2] = GlyphNames.NoteheadSlashedHalf2,
        [GlyphName.NoteheadSlashedWhole1] = GlyphNames.NoteheadSlashedWhole1,
        [GlyphName.NoteheadSlashedWhole2] = GlyphNames.NoteheadSlashedWhole2,
        [GlyphName.NoteheadSquareBlack] = GlyphNames.NoteheadSquareBlack,
        [GlyphName.NoteheadSquareBlackLarge] = GlyphNames.NoteheadSquareBlackLarge,
        [GlyphName.NoteheadSquareBlackWhite] = GlyphNames.NoteheadSquareBlackWhite,
        [GlyphName.NoteheadSquareWhite] = GlyphNames.NoteheadSquareWhite,
        [GlyphName.NoteheadTriangleDownBlack] = GlyphNames.NoteheadTriangleDownBlack,
        [GlyphName.NoteheadTriangleDownDoubleWhole] = GlyphNames.NoteheadTriangleDownDoubleWhole,
        [GlyphName.NoteheadTriangleDownHalf] = GlyphNames.NoteheadTriangleDownHalf,
        [GlyphName.NoteheadTriangleDownWhite] = GlyphNames.NoteheadTriangleDownWhite,
        [GlyphName.NoteheadTriangleDownWhole] = GlyphNames.NoteheadTriangleDownWhole,
        [GlyphName.NoteheadTriangleLeftBlack] = GlyphNames.NoteheadTriangleLeftBlack,
        [GlyphName.NoteheadTriangleLeftWhite] = GlyphNames.NoteheadTriangleLeftWhite,
        [GlyphName.NoteheadTriangleRightBlack] = GlyphNames.NoteheadTriangleRightBlack,
        [GlyphName.NoteheadTriangleRightWhite] = GlyphNames.NoteheadTriangleRightWhite,
        [GlyphName.NoteheadTriangleRoundDownBlack] = GlyphNames.NoteheadTriangleRoundDownBlack,
        [GlyphName.NoteheadTriangleRoundDownWhite] = GlyphNames.NoteheadTriangleRoundDownWhite,
        [GlyphName.NoteheadTriangleUpBlack] = GlyphNames.NoteheadTriangleUpBlack,
        [GlyphName.NoteheadTriangleUpDoubleWhole] = GlyphNames.NoteheadTriangleUpDoubleWhole,
        [GlyphName.NoteheadTriangleUpHalf] = GlyphNames.NoteheadTriangleUpHalf,
        [GlyphName.NoteheadTriangleUpRightBlack] = GlyphNames.NoteheadTriangleUpRightBlack,
        [GlyphName.NoteheadTriangleUpRightWhite] = GlyphNames.NoteheadTriangleUpRightWhite,
        [GlyphName.NoteheadTriangleUpWhite] = GlyphNames.NoteheadTriangleUpWhite,
        [GlyphName.NoteheadTriangleUpWhole] = GlyphNames.NoteheadTriangleUpWhole,
        [GlyphName.NoteheadVoidWithX] = GlyphNames.NoteheadVoidWithX,
        [GlyphName.NoteheadWhole] = GlyphNames.NoteheadWhole,
        [GlyphName.NoteheadWholeFilled] = GlyphNames.NoteheadWholeFilled,
        [GlyphName.NoteheadWholeWithX] = GlyphNames.NoteheadWholeWithX,
        [GlyphName.NoteheadXBlack] = GlyphNames.NoteheadXBlack,
        [GlyphName.NoteheadXDoubleWhole] = GlyphNames.NoteheadXDoubleWhole,
        [GlyphName.NoteheadXHalf] = GlyphNames.NoteheadXHalf,
        [GlyphName.NoteheadXOrnate] = GlyphNames.NoteheadXOrnate,
        [GlyphName.NoteheadXOrnateEllipse] = GlyphNames.NoteheadXOrnateEllipse,
        [GlyphName.NoteheadXWhole] = GlyphNames.NoteheadXWhole,
        [GlyphName.OctaveBaselineA] = GlyphNames.OctaveBaselineA,
        [GlyphName.OctaveBaselineB] = GlyphNames.OctaveBaselineB,
        [GlyphName.OctaveBaselineM] = GlyphNames.OctaveBaselineM,
        [GlyphName.OctaveBaselineV] = GlyphNames.OctaveBaselineV,
        [GlyphName.OctaveBassa] = GlyphNames.OctaveBassa,
        [GlyphName.OctaveLoco] = GlyphNames.OctaveLoco,
        [GlyphName.OctaveParensLeft] = GlyphNames.OctaveParensLeft,
        [GlyphName.OctaveParensRight] = GlyphNames.OctaveParensRight,
        [GlyphName.OctaveSuperscriptA] = GlyphNames.OctaveSuperscriptA,
        [GlyphName.OctaveSuperscriptB] = GlyphNames.OctaveSuperscriptB,
        [GlyphName.OctaveSuperscriptM] = GlyphNames.OctaveSuperscriptM,
        [GlyphName.OctaveSuperscriptV] = GlyphNames.OctaveSuperscriptV,
        [GlyphName.OneHandedRollStevens] = GlyphNames.OneHandedRollStevens,
        [GlyphName.OrganGerman2Fusae] = GlyphNames.OrganGerman2Fusae,
        [GlyphName.OrganGerman2Minimae] = GlyphNames.OrganGerman2Minimae,
        [GlyphName.OrganGerman2OctaveUp] = GlyphNames.OrganGerman2OctaveUp,
        [GlyphName.OrganGerman2Semifusae] = GlyphNames.OrganGerman2Semifusae,
        [GlyphName.OrganGerman2Semiminimae] = GlyphNames.OrganGerman2Semiminimae,
        [GlyphName.OrganGerman3Fusae] = GlyphNames.OrganGerman3Fusae,
        [GlyphName.OrganGerman3Minimae] = GlyphNames.OrganGerman3Minimae,
        [GlyphName.OrganGerman3Semifusae] = GlyphNames.OrganGerman3Semifusae,
        [GlyphName.OrganGerman3Semiminimae] = GlyphNames.OrganGerman3Semiminimae,
        [GlyphName.OrganGerman4Fusae] = GlyphNames.OrganGerman4Fusae,
        [GlyphName.OrganGerman4Minimae] = GlyphNames.OrganGerman4Minimae,
        [GlyphName.OrganGerman4Semifusae] = GlyphNames.OrganGerman4Semifusae,
        [GlyphName.OrganGerman4Semiminimae] = GlyphNames.OrganGerman4Semiminimae,
        [GlyphName.OrganGerman5Fusae] = GlyphNames.OrganGerman5Fusae,
        [GlyphName.OrganGerman5Minimae] = GlyphNames.OrganGerman5Minimae,
        [GlyphName.OrganGerman5Semifusae] = GlyphNames.OrganGerman5Semifusae,
        [GlyphName.OrganGerman5Semiminimae] = GlyphNames.OrganGerman5Semiminimae,
        [GlyphName.OrganGerman6Fusae] = GlyphNames.OrganGerman6Fusae,
        [GlyphName.OrganGerman6Minimae] = GlyphNames.OrganGerman6Minimae,
        [GlyphName.OrganGerman6Semifusae] = GlyphNames.OrganGerman6Semifusae,
        [GlyphName.OrganGerman6Semiminimae] = GlyphNames.OrganGerman6Semiminimae,
        [GlyphName.OrganGermanALower] = GlyphNames.OrganGermanALower,
        [GlyphName.OrganGermanAUpper] = GlyphNames.OrganGermanAUpper,
        [GlyphName.OrganGermanAugmentationDot] = GlyphNames.OrganGermanAugmentationDot,
        [GlyphName.OrganGermanBLower] = GlyphNames.OrganGermanBLower,
        [GlyphName.OrganGermanBUpper] = GlyphNames.OrganGermanBUpper,
        [GlyphName.OrganGermanBuxheimerBrevis2] = GlyphNames.OrganGermanBuxheimerBrevis2,
        [GlyphName.OrganGermanBuxheimerBrevis3] = GlyphNames.OrganGermanBuxheimerBrevis3,
        [GlyphName.OrganGermanBuxheimerMinimaRest] = GlyphNames.OrganGermanBuxheimerMinimaRest,
        [GlyphName.OrganGermanBuxheimerSemibrevis] = GlyphNames.OrganGermanBuxheimerSemibrevis,
        [GlyphName.OrganGermanBuxheimerSemibrevisRest] = GlyphNames.OrganGermanBuxheimerSemibrevisRest,
        [GlyphName.OrganGermanCLower] = GlyphNames.OrganGermanCLower,
        [GlyphName.OrganGermanCUpper] = GlyphNames.OrganGermanCUpper,
        [GlyphName.OrganGermanCisLower] = GlyphNames.OrganGermanCisLower,
        [GlyphName.OrganGermanCisUpper] = GlyphNames.OrganGermanCisUpper,
        [GlyphName.OrganGermanDLower] = GlyphNames.OrganGermanDLower,
        [GlyphName.OrganGermanDUpper] = GlyphNames.OrganGermanDUpper,
        [GlyphName.OrganGermanDisLower] = GlyphNames.OrganGermanDisLower,
        [GlyphName.OrganGermanDisUpper] = GlyphNames.OrganGermanDisUpper,
        [GlyphName.OrganGermanELower] = GlyphNames.OrganGermanELower,
        [GlyphName.OrganGermanEUpper] = GlyphNames.OrganGermanEUpper,
        [GlyphName.OrganGermanFLower] = GlyphNames.OrganGermanFLower,
        [GlyphName.OrganGermanFUpper] = GlyphNames.OrganGermanFUpper,
        [GlyphName.OrganGermanFisLower] = GlyphNames.OrganGermanFisLower,
        [GlyphName.OrganGermanFisUpper] = GlyphNames.OrganGermanFisUpper,
        [GlyphName.OrganGermanFusa] = GlyphNames.OrganGermanFusa,
        [GlyphName.OrganGermanFusaRest] = GlyphNames.OrganGermanFusaRest,
        [GlyphName.OrganGermanGLower] = GlyphNames.OrganGermanGLower,
        [GlyphName.OrganGermanGUpper] = GlyphNames.OrganGermanGUpper,
        [GlyphName.OrganGermanGisLower] = GlyphNames.OrganGermanGisLower,
        [GlyphName.OrganGermanGisUpper] = GlyphNames.OrganGermanGisUpper,
        [GlyphName.OrganGermanHLower] = GlyphNames.OrganGermanHLower,
        [GlyphName.OrganGermanHUpper] = GlyphNames.OrganGermanHUpper,
        [GlyphName.OrganGermanMinima] = GlyphNames.OrganGermanMinima,
        [GlyphName.OrganGermanMinimaRest] = GlyphNames.OrganGermanMinimaRest,
        [GlyphName.OrganGermanOctaveDown] = GlyphNames.OrganGermanOctaveDown,
        [GlyphName.OrganGermanOctaveUp] = GlyphNames.OrganGermanOctaveUp,
        [GlyphName.OrganGermanSemibrevis] = GlyphNames.OrganGermanSemibrevis,
        [GlyphName.OrganGermanSemibrevisRest] = GlyphNames.OrganGermanSemibrevisRest,
        [GlyphName.OrganGermanSemifusa] = GlyphNames.OrganGermanSemifusa,
        [GlyphName.OrganGermanSemifusaRest] = GlyphNames.OrganGermanSemifusaRest,
        [GlyphName.OrganGermanSemiminima] = GlyphNames.OrganGermanSemiminima,
        [GlyphName.OrganGermanSemiminimaRest] = GlyphNames.OrganGermanSemiminimaRest,
        [GlyphName.OrganGermanTie] = GlyphNames.OrganGermanTie,
        [GlyphName.OrnamentBottomLeftConcaveStroke] = GlyphNames.OrnamentBottomLeftConcaveStroke,
        [GlyphName.OrnamentBottomLeftConcaveStrokeLarge] = GlyphNames.OrnamentBottomLeftConcaveStrokeLarge,
        [GlyphName.OrnamentBottomLeftConvexStroke] = GlyphNames.OrnamentBottomLeftConvexStroke,
        [GlyphName.OrnamentBottomRightConcaveStroke] = GlyphNames.OrnamentBottomRightConcaveStroke,
        [GlyphName.OrnamentBottomRightConvexStroke] = GlyphNames.OrnamentBottomRightConvexStroke,
        [GlyphName.OrnamentComma] = GlyphNames.OrnamentComma,
        [GlyphName.OrnamentDoubleObliqueLinesAfterNote] = GlyphNames.OrnamentDoubleObliqueLinesAfterNote,
        [GlyphName.OrnamentDoubleObliqueLinesBeforeNote] = GlyphNames.OrnamentDoubleObliqueLinesBeforeNote,
        [GlyphName.OrnamentDownCurve] = GlyphNames.OrnamentDownCurve,
        [GlyphName.OrnamentHaydn] = GlyphNames.OrnamentHaydn,
        [GlyphName.OrnamentHighLeftConcaveStroke] = GlyphNames.OrnamentHighLeftConcaveStroke,
        [GlyphName.OrnamentHighLeftConvexStroke] = GlyphNames.OrnamentHighLeftConvexStroke,
        [GlyphName.OrnamentHighRightConcaveStroke] = GlyphNames.OrnamentHighRightConcaveStroke,
        [GlyphName.OrnamentHighRightConvexStroke] = GlyphNames.OrnamentHighRightConvexStroke,
        [GlyphName.OrnamentHookAfterNote] = GlyphNames.OrnamentHookAfterNote,
        [GlyphName.OrnamentHookBeforeNote] = GlyphNames.OrnamentHookBeforeNote,
        [GlyphName.OrnamentLeftFacingHalfCircle] = GlyphNames.OrnamentLeftFacingHalfCircle,
        [GlyphName.OrnamentLeftFacingHook] = GlyphNames.OrnamentLeftFacingHook,
        [GlyphName.OrnamentLeftPlus] = GlyphNames.OrnamentLeftPlus,
        [GlyphName.OrnamentLeftShakeT] = GlyphNames.OrnamentLeftShakeT,
        [GlyphName.OrnamentLeftVerticalStroke] = GlyphNames.OrnamentLeftVerticalStroke,
        [GlyphName.OrnamentLeftVerticalStrokeWithCross] = GlyphNames.OrnamentLeftVerticalStrokeWithCross,
        [GlyphName.OrnamentLowLeftConcaveStroke] = GlyphNames.OrnamentLowLeftConcaveStroke,
        [GlyphName.OrnamentLowLeftConvexStroke] = GlyphNames.OrnamentLowLeftConvexStroke,
        [GlyphName.OrnamentLowRightConcaveStroke] = GlyphNames.OrnamentLowRightConcaveStroke,
        [GlyphName.OrnamentLowRightConvexStroke] = GlyphNames.OrnamentLowRightConvexStroke,
        [GlyphName.OrnamentMiddleVerticalStroke] = GlyphNames.OrnamentMiddleVerticalStroke,
        [GlyphName.OrnamentMordent] = GlyphNames.OrnamentMordent,
        [GlyphName.OrnamentObliqueLineAfterNote] = GlyphNames.OrnamentObliqueLineAfterNote,
        [GlyphName.OrnamentObliqueLineBeforeNote] = GlyphNames.OrnamentObliqueLineBeforeNote,
        [GlyphName.OrnamentObliqueLineHorizAfterNote] = GlyphNames.OrnamentObliqueLineHorizAfterNote,
        [GlyphName.OrnamentObliqueLineHorizBeforeNote] = GlyphNames.OrnamentObliqueLineHorizBeforeNote,
        [GlyphName.OrnamentOriscus] = GlyphNames.OrnamentOriscus,
        [GlyphName.OrnamentPinceCouperin] = GlyphNames.OrnamentPinceCouperin,
        [GlyphName.OrnamentPortDeVoixV] = GlyphNames.OrnamentPortDeVoixV,
        [GlyphName.OrnamentPrecompAppoggTrill] = GlyphNames.OrnamentPrecompAppoggTrill,
        [GlyphName.OrnamentPrecompAppoggTrillSuffix] = GlyphNames.OrnamentPrecompAppoggTrillSuffix,
        [GlyphName.OrnamentPrecompCadence] = GlyphNames.OrnamentPrecompCadence,
        [GlyphName.OrnamentPrecompCadenceUpperPrefix] = GlyphNames.OrnamentPrecompCadenceUpperPrefix,
        [GlyphName.OrnamentPrecompCadenceUpperPrefixTurn] = GlyphNames.OrnamentPrecompCadenceUpperPrefixTurn,
        [GlyphName.OrnamentPrecompCadenceWithTurn] = GlyphNames.OrnamentPrecompCadenceWithTurn,
        [GlyphName.OrnamentPrecompDescendingSlide] = GlyphNames.OrnamentPrecompDescendingSlide,
        [GlyphName.OrnamentPrecompDoubleCadenceLowerPrefix] = GlyphNames.OrnamentPrecompDoubleCadenceLowerPrefix,
        [GlyphName.OrnamentPrecompDoubleCadenceUpperPrefix] = GlyphNames.OrnamentPrecompDoubleCadenceUpperPrefix,
        [GlyphName.OrnamentPrecompDoubleCadenceUpperPrefixTurn] = GlyphNames.OrnamentPrecompDoubleCadenceUpperPrefixTurn,
        [GlyphName.OrnamentPrecompInvertedMordentUpperPrefix] = GlyphNames.OrnamentPrecompInvertedMordentUpperPrefix,
        [GlyphName.OrnamentPrecompMordentRelease] = GlyphNames.OrnamentPrecompMordentRelease,
        [GlyphName.OrnamentPrecompMordentUpperPrefix] = GlyphNames.OrnamentPrecompMordentUpperPrefix,
        [GlyphName.OrnamentPrecompPortDeVoixMordent] = GlyphNames.OrnamentPrecompPortDeVoixMordent,
        [GlyphName.OrnamentPrecompSlide] = GlyphNames.OrnamentPrecompSlide,
        [GlyphName.OrnamentPrecompSlideTrillBach] = GlyphNames.OrnamentPrecompSlideTrillBach,
        [GlyphName.OrnamentPrecompSlideTrillDAnglebert] = GlyphNames.OrnamentPrecompSlideTrillDAnglebert,
        [GlyphName.OrnamentPrecompSlideTrillMarpurg] = GlyphNames.OrnamentPrecompSlideTrillMarpurg,
        [GlyphName.OrnamentPrecompSlideTrillMuffat] = GlyphNames.OrnamentPrecompSlideTrillMuffat,
        [GlyphName.OrnamentPrecompSlideTrillSuffixMuffat] = GlyphNames.OrnamentPrecompSlideTrillSuffixMuffat,
        [GlyphName.OrnamentPrecompTrillLowerSuffix] = GlyphNames.OrnamentPrecompTrillLowerSuffix,
        [GlyphName.OrnamentPrecompTrillSuffixDandrieu] = GlyphNames.OrnamentPrecompTrillSuffixDandrieu,
        [GlyphName.OrnamentPrecompTrillWithMordent] = GlyphNames.OrnamentPrecompTrillWithMordent,
        [GlyphName.OrnamentPrecompTurnTrillBach] = GlyphNames.OrnamentPrecompTurnTrillBach,
        [GlyphName.OrnamentPrecompTurnTrillDAnglebert] = GlyphNames.OrnamentPrecompTurnTrillDAnglebert,
        [GlyphName.OrnamentQuilisma] = GlyphNames.OrnamentQuilisma,
        [GlyphName.OrnamentRightFacingHalfCircle] = GlyphNames.OrnamentRightFacingHalfCircle,
        [GlyphName.OrnamentRightFacingHook] = GlyphNames.OrnamentRightFacingHook,
        [GlyphName.OrnamentRightVerticalStroke] = GlyphNames.OrnamentRightVerticalStroke,
        [GlyphName.OrnamentSchleifer] = GlyphNames.OrnamentSchleifer,
        [GlyphName.OrnamentShake3] = GlyphNames.OrnamentShake3,
        [GlyphName.OrnamentShakeMuffat1] = GlyphNames.OrnamentShakeMuffat1,
        [GlyphName.OrnamentShortObliqueLineAfterNote] = GlyphNames.OrnamentShortObliqueLineAfterNote,
        [GlyphName.OrnamentShortObliqueLineBeforeNote] = GlyphNames.OrnamentShortObliqueLineBeforeNote,
        [GlyphName.OrnamentShortTrill] = GlyphNames.OrnamentShortTrill,
        [GlyphName.OrnamentTopLeftConcaveStroke] = GlyphNames.OrnamentTopLeftConcaveStroke,
        [GlyphName.OrnamentTopLeftConvexStroke] = GlyphNames.OrnamentTopLeftConvexStroke,
        [GlyphName.OrnamentTopRightConcaveStroke] = GlyphNames.OrnamentTopRightConcaveStroke,
        [GlyphName.OrnamentTopRightConvexStroke] = GlyphNames.OrnamentTopRightConvexStroke,
        [GlyphName.OrnamentTremblement] = GlyphNames.OrnamentTremblement,
        [GlyphName.OrnamentTremblementCouperin] = GlyphNames.OrnamentTremblementCouperin,
        [GlyphName.OrnamentTrill] = GlyphNames.OrnamentTrill,
        [GlyphName.OrnamentTurn] = GlyphNames.OrnamentTurn,
        [GlyphName.OrnamentTurnInverted] = GlyphNames.OrnamentTurnInverted,
        [GlyphName.OrnamentTurnSlash] = GlyphNames.OrnamentTurnSlash,
        [GlyphName.OrnamentTurnUp] = GlyphNames.OrnamentTurnUp,
        [GlyphName.OrnamentTurnUpS] = GlyphNames.OrnamentTurnUpS,
        [GlyphName.OrnamentUpCurve] = GlyphNames.OrnamentUpCurve,
        [GlyphName.OrnamentVerticalLine] = GlyphNames.OrnamentVerticalLine,
        [GlyphName.OrnamentZigZagLineNoRightEnd] = GlyphNames.OrnamentZigZagLineNoRightEnd,
        [GlyphName.OrnamentZigZagLineWithRightEnd] = GlyphNames.OrnamentZigZagLineWithRightEnd,
        [GlyphName.Ottava] = GlyphNames.Ottava,
        [GlyphName.OttavaAlta] = GlyphNames.OttavaAlta,
        [GlyphName.OttavaBassa] = GlyphNames.OttavaBassa,
        [GlyphName.OttavaBassaBa] = GlyphNames.OttavaBassaBa,
        [GlyphName.OttavaBassaVb] = GlyphNames.OttavaBassaVb,
        [GlyphName.PendereckiTremolo] = GlyphNames.PendereckiTremolo,
        [GlyphName.PictAgogo] = GlyphNames.PictAgogo,
        [GlyphName.PictAlmglocken] = GlyphNames.PictAlmglocken,
        [GlyphName.PictAnvil] = GlyphNames.PictAnvil,
        [GlyphName.PictBambooChimes] = GlyphNames.PictBambooChimes,
        [GlyphName.PictBambooScraper] = GlyphNames.PictBambooScraper,
        [GlyphName.PictBassDrum] = GlyphNames.PictBassDrum,
        [GlyphName.PictBassDrumOnSide] = GlyphNames.PictBassDrumOnSide,
        [GlyphName.PictBeaterBow] = GlyphNames.PictBeaterBow,
        [GlyphName.PictBeaterBox] = GlyphNames.PictBeaterBox,
        [GlyphName.PictBeaterBrassMalletsDown] = GlyphNames.PictBeaterBrassMalletsDown,
        [GlyphName.PictBeaterBrassMalletsLeft] = GlyphNames.PictBeaterBrassMalletsLeft,
        [GlyphName.PictBeaterBrassMalletsRight] = GlyphNames.PictBeaterBrassMalletsRight,
        [GlyphName.PictBeaterBrassMalletsUp] = GlyphNames.PictBeaterBrassMalletsUp,
        [GlyphName.PictBeaterCombiningDashedCircle] = GlyphNames.PictBeaterCombiningDashedCircle,
        [GlyphName.PictBeaterCombiningParentheses] = GlyphNames.PictBeaterCombiningParentheses,
        [GlyphName.PictBeaterDoubleBassDrumDown] = GlyphNames.PictBeaterDoubleBassDrumDown,
        [GlyphName.PictBeaterDoubleBassDrumUp] = GlyphNames.PictBeaterDoubleBassDrumUp,
        [GlyphName.PictBeaterFinger] = GlyphNames.PictBeaterFinger,
        [GlyphName.PictBeaterFingernails] = GlyphNames.PictBeaterFingernails,
        [GlyphName.PictBeaterFist] = GlyphNames.PictBeaterFist,
        [GlyphName.PictBeaterGuiroScraper] = GlyphNames.PictBeaterGuiroScraper,
        [GlyphName.PictBeaterHammer] = GlyphNames.PictBeaterHammer,
        [GlyphName.PictBeaterHammerMetalDown] = GlyphNames.PictBeaterHammerMetalDown,
        [GlyphName.PictBeaterHammerMetalUp] = GlyphNames.PictBeaterHammerMetalUp,
        [GlyphName.PictBeaterHammerPlasticDown] = GlyphNames.PictBeaterHammerPlasticDown,
        [GlyphName.PictBeaterHammerPlasticUp] = GlyphNames.PictBeaterHammerPlasticUp,
        [GlyphName.PictBeaterHammerWoodDown] = GlyphNames.PictBeaterHammerWoodDown,
        [GlyphName.PictBeaterHammerWoodUp] = GlyphNames.PictBeaterHammerWoodUp,
        [GlyphName.PictBeaterHand] = GlyphNames.PictBeaterHand,
        [GlyphName.PictBeaterHardBassDrumDown] = GlyphNames.PictBeaterHardBassDrumDown,
        [GlyphName.PictBeaterHardBassDrumUp] = GlyphNames.PictBeaterHardBassDrumUp,
        [GlyphName.PictBeaterHardGlockenspielDown] = GlyphNames.PictBeaterHardGlockenspielDown,
        [GlyphName.PictBeaterHardGlockenspielLeft] = GlyphNames.PictBeaterHardGlockenspielLeft,
        [GlyphName.PictBeaterHardGlockenspielRight] = GlyphNames.PictBeaterHardGlockenspielRight,
        [GlyphName.PictBeaterHardGlockenspielUp] = GlyphNames.PictBeaterHardGlockenspielUp,
        [GlyphName.PictBeaterHardTimpaniDown] = GlyphNames.PictBeaterHardTimpaniDown,
        [GlyphName.PictBeaterHardTimpaniLeft] = GlyphNames.PictBeaterHardTimpaniLeft,
        [GlyphName.PictBeaterHardTimpaniRight] = GlyphNames.PictBeaterHardTimpaniRight,
        [GlyphName.PictBeaterHardTimpaniUp] = GlyphNames.PictBeaterHardTimpaniUp,
        [GlyphName.PictBeaterHardXylophoneDown] = GlyphNames.PictBeaterHardXylophoneDown,
        [GlyphName.PictBeaterHardXylophoneLeft] = GlyphNames.PictBeaterHardXylophoneLeft,
        [GlyphName.PictBeaterHardXylophoneRight] = GlyphNames.PictBeaterHardXylophoneRight,
        [GlyphName.PictBeaterHardXylophoneUp] = GlyphNames.PictBeaterHardXylophoneUp,
        [GlyphName.PictBeaterHardYarnDown] = GlyphNames.PictBeaterHardYarnDown,
        [GlyphName.PictBeaterHardYarnLeft] = GlyphNames.PictBeaterHardYarnLeft,
        [GlyphName.PictBeaterHardYarnRight] = GlyphNames.PictBeaterHardYarnRight,
        [GlyphName.PictBeaterHardYarnUp] = GlyphNames.PictBeaterHardYarnUp,
        [GlyphName.PictBeaterJazzSticksDown] = GlyphNames.PictBeaterJazzSticksDown,
        [GlyphName.PictBeaterJazzSticksUp] = GlyphNames.PictBeaterJazzSticksUp,
        [GlyphName.PictBeaterKnittingNeedle] = GlyphNames.PictBeaterKnittingNeedle,
        [GlyphName.PictBeaterMallet] = GlyphNames.PictBeaterMallet,
        [GlyphName.PictBeaterMalletDown] = GlyphNames.PictBeaterMalletDown,
        [GlyphName.PictBeaterMediumBassDrumDown] = GlyphNames.PictBeaterMediumBassDrumDown,
        [GlyphName.PictBeaterMediumBassDrumUp] = GlyphNames.PictBeaterMediumBassDrumUp,
        [GlyphName.PictBeaterMediumTimpaniDown] = GlyphNames.PictBeaterMediumTimpaniDown,
        [GlyphName.PictBeaterMediumTimpaniLeft] = GlyphNames.PictBeaterMediumTimpaniLeft,
        [GlyphName.PictBeaterMediumTimpaniRight] = GlyphNames.PictBeaterMediumTimpaniRight,
        [GlyphName.PictBeaterMediumTimpaniUp] = GlyphNames.PictBeaterMediumTimpaniUp,
        [GlyphName.PictBeaterMediumXylophoneDown] = GlyphNames.PictBeaterMediumXylophoneDown,
        [GlyphName.PictBeaterMediumXylophoneLeft] = GlyphNames.PictBeaterMediumXylophoneLeft,
        [GlyphName.PictBeaterMediumXylophoneRight] = GlyphNames.PictBeaterMediumXylophoneRight,
        [GlyphName.PictBeaterMediumXylophoneUp] = GlyphNames.PictBeaterMediumXylophoneUp,
        [GlyphName.PictBeaterMediumYarnDown] = GlyphNames.PictBeaterMediumYarnDown,
        [GlyphName.PictBeaterMediumYarnLeft] = GlyphNames.PictBeaterMediumYarnLeft,
        [GlyphName.PictBeaterMediumYarnRight] = GlyphNames.PictBeaterMediumYarnRight,
        [GlyphName.PictBeaterMediumYarnUp] = GlyphNames.PictBeaterMediumYarnUp,
        [GlyphName.PictBeaterMetalBassDrumDown] = GlyphNames.PictBeaterMetalBassDrumDown,
        [GlyphName.PictBeaterMetalBassDrumUp] = GlyphNames.PictBeaterMetalBassDrumUp,
        [GlyphName.PictBeaterMetalDown] = GlyphNames.PictBeaterMetalDown,
        [GlyphName.PictBeaterMetalHammer] = GlyphNames.PictBeaterMetalHammer,
        [GlyphName.PictBeaterMetalLeft] = GlyphNames.PictBeaterMetalLeft,
        [GlyphName.PictBeaterMetalRight] = GlyphNames.PictBeaterMetalRight,
        [GlyphName.PictBeaterMetalUp] = GlyphNames.PictBeaterMetalUp,
        [GlyphName.PictBeaterSnareSticksDown] = GlyphNames.PictBeaterSnareSticksDown,
        [GlyphName.PictBeaterSnareSticksUp] = GlyphNames.PictBeaterSnareSticksUp,
        [GlyphName.PictBeaterSoftBassDrumDown] = GlyphNames.PictBeaterSoftBassDrumDown,
        [GlyphName.PictBeaterSoftBassDrumUp] = GlyphNames.PictBeaterSoftBassDrumUp,
        [GlyphName.PictBeaterSoftGlockenspielDown] = GlyphNames.PictBeaterSoftGlockenspielDown,
        [GlyphName.PictBeaterSoftGlockenspielLeft] = GlyphNames.PictBeaterSoftGlockenspielLeft,
        [GlyphName.PictBeaterSoftGlockenspielRight] = GlyphNames.PictBeaterSoftGlockenspielRight,
        [GlyphName.PictBeaterSoftGlockenspielUp] = GlyphNames.PictBeaterSoftGlockenspielUp,
        [GlyphName.PictBeaterSoftTimpaniDown] = GlyphNames.PictBeaterSoftTimpaniDown,
        [GlyphName.PictBeaterSoftTimpaniLeft] = GlyphNames.PictBeaterSoftTimpaniLeft,
        [GlyphName.PictBeaterSoftTimpaniRight] = GlyphNames.PictBeaterSoftTimpaniRight,
        [GlyphName.PictBeaterSoftTimpaniUp] = GlyphNames.PictBeaterSoftTimpaniUp,
        [GlyphName.PictBeaterSoftXylophone] = GlyphNames.PictBeaterSoftXylophone,
        [GlyphName.PictBeaterSoftXylophoneDown] = GlyphNames.PictBeaterSoftXylophoneDown,
        [GlyphName.PictBeaterSoftXylophoneLeft] = GlyphNames.PictBeaterSoftXylophoneLeft,
        [GlyphName.PictBeaterSoftXylophoneRight] = GlyphNames.PictBeaterSoftXylophoneRight,
        [GlyphName.PictBeaterSoftXylophoneUp] = GlyphNames.PictBeaterSoftXylophoneUp,
        [GlyphName.PictBeaterSoftYarnDown] = GlyphNames.PictBeaterSoftYarnDown,
        [GlyphName.PictBeaterSoftYarnLeft] = GlyphNames.PictBeaterSoftYarnLeft,
        [GlyphName.PictBeaterSoftYarnRight] = GlyphNames.PictBeaterSoftYarnRight,
        [GlyphName.PictBeaterSoftYarnUp] = GlyphNames.PictBeaterSoftYarnUp,
        [GlyphName.PictBeaterSpoonWoodenMallet] = GlyphNames.PictBeaterSpoonWoodenMallet,
        [GlyphName.PictBeaterSuperballDown] = GlyphNames.PictBeaterSuperballDown,
        [GlyphName.PictBeaterSuperballLeft] = GlyphNames.PictBeaterSuperballLeft,
        [GlyphName.PictBeaterSuperballRight] = GlyphNames.PictBeaterSuperballRight,
        [GlyphName.PictBeaterSuperballUp] = GlyphNames.PictBeaterSuperballUp,
        [GlyphName.PictBeaterTriangleDown] = GlyphNames.PictBeaterTriangleDown,
        [GlyphName.PictBeaterTrianglePlain] = GlyphNames.PictBeaterTrianglePlain,
        [GlyphName.PictBeaterTriangleUp] = GlyphNames.PictBeaterTriangleUp,
        [GlyphName.PictBeaterWireBrushesDown] = GlyphNames.PictBeaterWireBrushesDown,
        [GlyphName.PictBeaterWireBrushesUp] = GlyphNames.PictBeaterWireBrushesUp,
        [GlyphName.PictBeaterWoodTimpaniDown] = GlyphNames.PictBeaterWoodTimpaniDown,
        [GlyphName.PictBeaterWoodTimpaniLeft] = GlyphNames.PictBeaterWoodTimpaniLeft,
        [GlyphName.PictBeaterWoodTimpaniRight] = GlyphNames.PictBeaterWoodTimpaniRight,
        [GlyphName.PictBeaterWoodTimpaniUp] = GlyphNames.PictBeaterWoodTimpaniUp,
        [GlyphName.PictBeaterWoodXylophoneDown] = GlyphNames.PictBeaterWoodXylophoneDown,
        [GlyphName.PictBeaterWoodXylophoneLeft] = GlyphNames.PictBeaterWoodXylophoneLeft,
        [GlyphName.PictBeaterWoodXylophoneRight] = GlyphNames.PictBeaterWoodXylophoneRight,
        [GlyphName.PictBeaterWoodXylophoneUp] = GlyphNames.PictBeaterWoodXylophoneUp,
        [GlyphName.PictBell] = GlyphNames.PictBell,
        [GlyphName.PictBellOfCymbal] = GlyphNames.PictBellOfCymbal,
        [GlyphName.PictBellPlate] = GlyphNames.PictBellPlate,
        [GlyphName.PictBellTree] = GlyphNames.PictBellTree,
        [GlyphName.PictBirdWhistle] = GlyphNames.PictBirdWhistle,
        [GlyphName.PictBoardClapper] = GlyphNames.PictBoardClapper,
        [GlyphName.PictBongos] = GlyphNames.PictBongos,
        [GlyphName.PictBrakeDrum] = GlyphNames.PictBrakeDrum,
        [GlyphName.PictCabasa] = GlyphNames.PictCabasa,
        [GlyphName.PictCannon] = GlyphNames.PictCannon,
        [GlyphName.PictCarHorn] = GlyphNames.PictCarHorn,
        [GlyphName.PictCastanets] = GlyphNames.PictCastanets,
        [GlyphName.PictCastanetsWithHandle] = GlyphNames.PictCastanetsWithHandle,
        [GlyphName.PictCelesta] = GlyphNames.PictCelesta,
        [GlyphName.PictCencerro] = GlyphNames.PictCencerro,
        [GlyphName.PictCenter1] = GlyphNames.PictCenter1,
        [GlyphName.PictCenter2] = GlyphNames.PictCenter2,
        [GlyphName.PictCenter3] = GlyphNames.PictCenter3,
        [GlyphName.PictChainRattle] = GlyphNames.PictChainRattle,
        [GlyphName.PictChimes] = GlyphNames.PictChimes,
        [GlyphName.PictChineseCymbal] = GlyphNames.PictChineseCymbal,
        [GlyphName.PictChokeCymbal] = GlyphNames.PictChokeCymbal,
        [GlyphName.PictClaves] = GlyphNames.PictClaves,
        [GlyphName.PictCoins] = GlyphNames.PictCoins,
        [GlyphName.PictConga] = GlyphNames.PictConga,
        [GlyphName.PictCowBell] = GlyphNames.PictCowBell,
        [GlyphName.PictCrashCymbals] = GlyphNames.PictCrashCymbals,
        [GlyphName.PictCrotales] = GlyphNames.PictCrotales,
        [GlyphName.PictCrushStem] = GlyphNames.PictCrushStem,
        [GlyphName.PictCuica] = GlyphNames.PictCuica,
        [GlyphName.PictCymbalTongs] = GlyphNames.PictCymbalTongs,
        [GlyphName.PictDamp1] = GlyphNames.PictDamp1,
        [GlyphName.PictDamp2] = GlyphNames.PictDamp2,
        [GlyphName.PictDamp3] = GlyphNames.PictDamp3,
        [GlyphName.PictDamp4] = GlyphNames.PictDamp4,
        [GlyphName.PictDeadNoteStem] = GlyphNames.PictDeadNoteStem,
        [GlyphName.PictDrumStick] = GlyphNames.PictDrumStick,
        [GlyphName.PictDuckCall] = GlyphNames.PictDuckCall,
        [GlyphName.PictEdgeOfCymbal] = GlyphNames.PictEdgeOfCymbal,
        [GlyphName.PictEmptyTrap] = GlyphNames.PictEmptyTrap,
        [GlyphName.PictFingerCymbals] = GlyphNames.PictFingerCymbals,
        [GlyphName.PictFlexatone] = GlyphNames.PictFlexatone,
        [GlyphName.PictFootballRatchet] = GlyphNames.PictFootballRatchet,
        [GlyphName.PictGlassHarmonica] = GlyphNames.PictGlassHarmonica,
        [GlyphName.PictGlassHarp] = GlyphNames.PictGlassHarp,
        [GlyphName.PictGlassPlateChimes] = GlyphNames.PictGlassPlateChimes,
        [GlyphName.PictGlassTubeChimes] = GlyphNames.PictGlassTubeChimes,
        [GlyphName.PictGlsp] = GlyphNames.PictGlsp,
        [GlyphName.PictGlspSmithBrindle] = GlyphNames.PictGlspSmithBrindle,
        [GlyphName.PictGobletDrum] = GlyphNames.PictGobletDrum,
        [GlyphName.PictGong] = GlyphNames.PictGong,
        [GlyphName.PictGongWithButton] = GlyphNames.PictGongWithButton,
        [GlyphName.PictGuiro] = GlyphNames.PictGuiro,
        [GlyphName.PictGumHardDown] = GlyphNames.PictGumHardDown,
        [GlyphName.PictGumHardLeft] = GlyphNames.PictGumHardLeft,
        [GlyphName.PictGumHardRight] = GlyphNames.PictGumHardRight,
        [GlyphName.PictGumHardUp] = GlyphNames.PictGumHardUp,
        [GlyphName.PictGumMediumDown] = GlyphNames.PictGumMediumDown,
        [GlyphName.PictGumMediumLeft] = GlyphNames.PictGumMediumLeft,
        [GlyphName.PictGumMediumRight] = GlyphNames.PictGumMediumRight,
        [GlyphName.PictGumMediumUp] = GlyphNames.PictGumMediumUp,
        [GlyphName.PictGumSoftDown] = GlyphNames.PictGumSoftDown,
        [GlyphName.PictGumSoftLeft] = GlyphNames.PictGumSoftLeft,
        [GlyphName.PictGumSoftRight] = GlyphNames.PictGumSoftRight,
        [GlyphName.PictGumSoftUp] = GlyphNames.PictGumSoftUp,
        [GlyphName.PictHalfOpen1] = GlyphNames.PictHalfOpen1,
        [GlyphName.PictHalfOpen2] = GlyphNames.PictHalfOpen2,
        [GlyphName.PictHandbell] = GlyphNames.PictHandbell,
        [GlyphName.PictHiHat] = GlyphNames.PictHiHat,
        [GlyphName.PictHiHatOnStand] = GlyphNames.PictHiHatOnStand,
        [GlyphName.PictJawHarp] = GlyphNames.PictJawHarp,
        [GlyphName.PictJingleBells] = GlyphNames.PictJingleBells,
        [GlyphName.PictKlaxonHorn] = GlyphNames.PictKlaxonHorn,
        [GlyphName.PictLeftHandCircle] = GlyphNames.PictLeftHandCircle,
        [GlyphName.PictLionsRoar] = GlyphNames.PictLionsRoar,
        [GlyphName.PictLithophone] = GlyphNames.PictLithophone,
        [GlyphName.PictLogDrum] = GlyphNames.PictLogDrum,
        [GlyphName.PictLotusFlute] = GlyphNames.PictLotusFlute,
        [GlyphName.PictMar] = GlyphNames.PictMar,
        [GlyphName.PictMarSmithBrindle] = GlyphNames.PictMarSmithBrindle,
        [GlyphName.PictMaraca] = GlyphNames.PictMaraca,
        [GlyphName.PictMaracas] = GlyphNames.PictMaracas,
        [GlyphName.PictMegaphone] = GlyphNames.PictMegaphone,
        [GlyphName.PictMetalPlateChimes] = GlyphNames.PictMetalPlateChimes,
        [GlyphName.PictMetalTubeChimes] = GlyphNames.PictMetalTubeChimes,
        [GlyphName.PictMusicalSaw] = GlyphNames.PictMusicalSaw,
        [GlyphName.PictNormalPosition] = GlyphNames.PictNormalPosition,
        [GlyphName.PictOnRim] = GlyphNames.PictOnRim,
        [GlyphName.PictOpen] = GlyphNames.PictOpen,
        [GlyphName.PictOpenRimShot] = GlyphNames.PictOpenRimShot,
        [GlyphName.PictPistolShot] = GlyphNames.PictPistolShot,
        [GlyphName.PictPoliceWhistle] = GlyphNames.PictPoliceWhistle,
        [GlyphName.PictQuijada] = GlyphNames.PictQuijada,
        [GlyphName.PictRainstick] = GlyphNames.PictRainstick,
        [GlyphName.PictRatchet] = GlyphNames.PictRatchet,
        [GlyphName.PictRecoReco] = GlyphNames.PictRecoReco,
        [GlyphName.PictRightHandSquare] = GlyphNames.PictRightHandSquare,
        [GlyphName.PictRim1] = GlyphNames.PictRim1,
        [GlyphName.PictRim2] = GlyphNames.PictRim2,
        [GlyphName.PictRim3] = GlyphNames.PictRim3,
        [GlyphName.PictRimShotOnStem] = GlyphNames.PictRimShotOnStem,
        [GlyphName.PictSandpaperBlocks] = GlyphNames.PictSandpaperBlocks,
        [GlyphName.PictScrapeAroundRim] = GlyphNames.PictScrapeAroundRim,
        [GlyphName.PictScrapeAroundRimClockwise] = GlyphNames.PictScrapeAroundRimClockwise,
        [GlyphName.PictScrapeCenterToEdge] = GlyphNames.PictScrapeCenterToEdge,
        [GlyphName.PictScrapeEdgeToCenter] = GlyphNames.PictScrapeEdgeToCenter,
        [GlyphName.PictShellBells] = GlyphNames.PictShellBells,
        [GlyphName.PictShellChimes] = GlyphNames.PictShellChimes,
        [GlyphName.PictSiren] = GlyphNames.PictSiren,
        [GlyphName.PictSistrum] = GlyphNames.PictSistrum,
        [GlyphName.PictSizzleCymbal] = GlyphNames.PictSizzleCymbal,
        [GlyphName.PictSleighBell] = GlyphNames.PictSleighBell,
        [GlyphName.PictSlideBrushOnGong] = GlyphNames.PictSlideBrushOnGong,
        [GlyphName.PictSlideWhistle] = GlyphNames.PictSlideWhistle,
        [GlyphName.PictSlitDrum] = GlyphNames.PictSlitDrum,
        [GlyphName.PictSnareDrum] = GlyphNames.PictSnareDrum,
        [GlyphName.PictSnareDrumMilitary] = GlyphNames.PictSnareDrumMilitary,
        [GlyphName.PictSnareDrumSnaresOff] = GlyphNames.PictSnareDrumSnaresOff,
        [GlyphName.PictSteelDrums] = GlyphNames.PictSteelDrums,
        [GlyphName.PictStickShot] = GlyphNames.PictStickShot,
        [GlyphName.PictSuperball] = GlyphNames.PictSuperball,
        [GlyphName.PictSuspendedCymbal] = GlyphNames.PictSuspendedCymbal,
        [GlyphName.PictSwishStem] = GlyphNames.PictSwishStem,
        [GlyphName.PictTabla] = GlyphNames.PictTabla,
        [GlyphName.PictTamTam] = GlyphNames.PictTamTam,
        [GlyphName.PictTamTamWithBeater] = GlyphNames.PictTamTamWithBeater,
        [GlyphName.PictTambourine] = GlyphNames.PictTambourine,
        [GlyphName.PictTempleBlocks] = GlyphNames.PictTempleBlocks,
        [GlyphName.PictTenorDrum] = GlyphNames.PictTenorDrum,
        [GlyphName.PictThundersheet] = GlyphNames.PictThundersheet,
        [GlyphName.PictTimbales] = GlyphNames.PictTimbales,
        [GlyphName.PictTimpani] = GlyphNames.PictTimpani,
        [GlyphName.PictTomTom] = GlyphNames.PictTomTom,
        [GlyphName.PictTomTomChinese] = GlyphNames.PictTomTomChinese,
        [GlyphName.PictTomTomIndoAmerican] = GlyphNames.PictTomTomIndoAmerican,
        [GlyphName.PictTomTomJapanese] = GlyphNames.PictTomTomJapanese,
        [GlyphName.PictTriangle] = GlyphNames.PictTriangle,
        [GlyphName.PictTubaphone] = GlyphNames.PictTubaphone,
        [GlyphName.PictTubularBells] = GlyphNames.PictTubularBells,
        [GlyphName.PictTurnLeftStem] = GlyphNames.PictTurnLeftStem,
        [GlyphName.PictTurnRightLeftStem] = GlyphNames.PictTurnRightLeftStem,
        [GlyphName.PictTurnRightStem] = GlyphNames.PictTurnRightStem,
        [GlyphName.PictVib] = GlyphNames.PictVib,
        [GlyphName.PictVibMotorOff] = GlyphNames.PictVibMotorOff,
        [GlyphName.PictVibSmithBrindle] = GlyphNames.PictVibSmithBrindle,
        [GlyphName.PictVibraslap] = GlyphNames.PictVibraslap,
        [GlyphName.PictVietnameseHat] = GlyphNames.PictVietnameseHat,
        [GlyphName.PictWhip] = GlyphNames.PictWhip,
        [GlyphName.PictWindChimesGlass] = GlyphNames.PictWindChimesGlass,
        [GlyphName.PictWindMachine] = GlyphNames.PictWindMachine,
        [GlyphName.PictWindWhistle] = GlyphNames.PictWindWhistle,
        [GlyphName.PictWoodBlock] = GlyphNames.PictWoodBlock,
        [GlyphName.PictWoundHardDown] = GlyphNames.PictWoundHardDown,
        [GlyphName.PictWoundHardLeft] = GlyphNames.PictWoundHardLeft,
        [GlyphName.PictWoundHardRight] = GlyphNames.PictWoundHardRight,
        [GlyphName.PictWoundHardUp] = GlyphNames.PictWoundHardUp,
        [GlyphName.PictWoundSoftDown] = GlyphNames.PictWoundSoftDown,
        [GlyphName.PictWoundSoftLeft] = GlyphNames.PictWoundSoftLeft,
        [GlyphName.PictWoundSoftRight] = GlyphNames.PictWoundSoftRight,
        [GlyphName.PictWoundSoftUp] = GlyphNames.PictWoundSoftUp,
        [GlyphName.PictXyl] = GlyphNames.PictXyl,
        [GlyphName.PictXylBass] = GlyphNames.PictXylBass,
        [GlyphName.PictXylSmithBrindle] = GlyphNames.PictXylSmithBrindle,
        [GlyphName.PictXylTenor] = GlyphNames.PictXylTenor,
        [GlyphName.PictXylTenorTrough] = GlyphNames.PictXylTenorTrough,
        [GlyphName.PictXylTrough] = GlyphNames.PictXylTrough,
        [GlyphName.PluckedBuzzPizzicato] = GlyphNames.PluckedBuzzPizzicato,
        [GlyphName.PluckedDamp] = GlyphNames.PluckedDamp,
        [GlyphName.PluckedDampAll] = GlyphNames.PluckedDampAll,
        [GlyphName.PluckedDampOnStem] = GlyphNames.PluckedDampOnStem,
        [GlyphName.PluckedFingernailFlick] = GlyphNames.PluckedFingernailFlick,
        [GlyphName.PluckedLeftHandPizzicato] = GlyphNames.PluckedLeftHandPizzicato,
        [GlyphName.PluckedPlectrum] = GlyphNames.PluckedPlectrum,
        [GlyphName.PluckedSnapPizzicatoAbove] = GlyphNames.PluckedSnapPizzicatoAbove,
        [GlyphName.PluckedSnapPizzicatoBelow] = GlyphNames.PluckedSnapPizzicatoBelow,
        [GlyphName.PluckedWithFingernails] = GlyphNames.PluckedWithFingernails,
        [GlyphName.Quindicesima] = GlyphNames.Quindicesima,
        [GlyphName.QuindicesimaAlta] = GlyphNames.QuindicesimaAlta,
        [GlyphName.QuindicesimaBassa] = GlyphNames.QuindicesimaBassa,
        [GlyphName.QuindicesimaBassaMb] = GlyphNames.QuindicesimaBassaMb,
        [GlyphName.Repeat1Bar] = GlyphNames.Repeat1Bar,
        [GlyphName.Repeat2Bars] = GlyphNames.Repeat2Bars,
        [GlyphName.Repeat4Bars] = GlyphNames.Repeat4Bars,
        [GlyphName.RepeatBarLowerDot] = GlyphNames.RepeatBarLowerDot,
        [GlyphName.RepeatBarSlash] = GlyphNames.RepeatBarSlash,
        [GlyphName.RepeatBarUpperDot] = GlyphNames.RepeatBarUpperDot,
        [GlyphName.RepeatDot] = GlyphNames.RepeatDot,
        [GlyphName.RepeatDots] = GlyphNames.RepeatDots,
        [GlyphName.RepeatLeft] = GlyphNames.RepeatLeft,
        [GlyphName.RepeatRight] = GlyphNames.RepeatRight,
        [GlyphName.RepeatRightLeft] = GlyphNames.RepeatRightLeft,
        [GlyphName.Rest1024th] = GlyphNames.Rest1024th,
        [GlyphName.Rest128th] = GlyphNames.Rest128th,
        [GlyphName.Rest16th] = GlyphNames.Rest16th,
        [GlyphName.Rest256th] = GlyphNames.Rest256th,
        [GlyphName.Rest32nd] = GlyphNames.Rest32nd,
        [GlyphName.Rest512th] = GlyphNames.Rest512th,
        [GlyphName.Rest64th] = GlyphNames.Rest64th,
        [GlyphName.Rest8th] = GlyphNames.Rest8th,
        [GlyphName.RestDoubleWhole] = GlyphNames.RestDoubleWhole,
        [GlyphName.RestDoubleWholeLegerLine] = GlyphNames.RestDoubleWholeLegerLine,
        [GlyphName.RestHBar] = GlyphNames.RestHBar,
        [GlyphName.RestHBarLeft] = GlyphNames.RestHBarLeft,
        [GlyphName.RestHBarMiddle] = GlyphNames.RestHBarMiddle,
        [GlyphName.RestHBarRight] = GlyphNames.RestHBarRight,
        [GlyphName.RestHalf] = GlyphNames.RestHalf,
        [GlyphName.RestHalfLegerLine] = GlyphNames.RestHalfLegerLine,
        [GlyphName.RestLonga] = GlyphNames.RestLonga,
        [GlyphName.RestMaxima] = GlyphNames.RestMaxima,
        [GlyphName.RestQuarter] = GlyphNames.RestQuarter,
        [GlyphName.RestQuarterOld] = GlyphNames.RestQuarterOld,
        [GlyphName.RestQuarterZ] = GlyphNames.RestQuarterZ,
        [GlyphName.RestWhole] = GlyphNames.RestWhole,
        [GlyphName.RestWholeLegerLine] = GlyphNames.RestWholeLegerLine,
        [GlyphName.ReversedBrace] = GlyphNames.ReversedBrace,
        [GlyphName.ReversedBracketBottom] = GlyphNames.ReversedBracketBottom,
        [GlyphName.ReversedBracketTop] = GlyphNames.ReversedBracketTop,
        [GlyphName.RightRepeatSmall] = GlyphNames.RightRepeatSmall,
        [GlyphName.ScaleDegree1] = GlyphNames.ScaleDegree1,
        [GlyphName.ScaleDegree2] = GlyphNames.ScaleDegree2,
        [GlyphName.ScaleDegree3] = GlyphNames.ScaleDegree3,
        [GlyphName.ScaleDegree4] = GlyphNames.ScaleDegree4,
        [GlyphName.ScaleDegree5] = GlyphNames.ScaleDegree5,
        [GlyphName.ScaleDegree6] = GlyphNames.ScaleDegree6,
        [GlyphName.ScaleDegree7] = GlyphNames.ScaleDegree7,
        [GlyphName.ScaleDegree8] = GlyphNames.ScaleDegree8,
        [GlyphName.ScaleDegree9] = GlyphNames.ScaleDegree9,
        [GlyphName.SchaefferClef] = GlyphNames.SchaefferClef,
        [GlyphName.SchaefferFClefToGClef] = GlyphNames.SchaefferFClefToGClef,
        [GlyphName.SchaefferGClefToFClef] = GlyphNames.SchaefferGClefToFClef,
        [GlyphName.SchaefferPreviousClef] = GlyphNames.SchaefferPreviousClef,
        [GlyphName.Segno] = GlyphNames.Segno,
        [GlyphName.SegnoSerpent1] = GlyphNames.SegnoSerpent1,
        [GlyphName.SegnoSerpent2] = GlyphNames.SegnoSerpent2,
        [GlyphName.SemipitchedPercussionClef1] = GlyphNames.SemipitchedPercussionClef1,
        [GlyphName.SemipitchedPercussionClef2] = GlyphNames.SemipitchedPercussionClef2,
        [GlyphName.SmnFlat] = GlyphNames.SmnFlat,
        [GlyphName.SmnFlatWhite] = GlyphNames.SmnFlatWhite,
        [GlyphName.SmnHistoryDoubleFlat] = GlyphNames.SmnHistoryDoubleFlat,
        [GlyphName.SmnHistoryDoubleSharp] = GlyphNames.SmnHistoryDoubleSharp,
        [GlyphName.SmnHistoryFlat] = GlyphNames.SmnHistoryFlat,
        [GlyphName.SmnHistorySharp] = GlyphNames.SmnHistorySharp,
        [GlyphName.SmnNatural] = GlyphNames.SmnNatural,
        [GlyphName.SmnSharp] = GlyphNames.SmnSharp,
        [GlyphName.SmnSharpDown] = GlyphNames.SmnSharpDown,
        [GlyphName.SmnSharpWhite] = GlyphNames.SmnSharpWhite,
        [GlyphName.SmnSharpWhiteDown] = GlyphNames.SmnSharpWhiteDown,
        [GlyphName.SplitBarDivider] = GlyphNames.SplitBarDivider,
        [GlyphName.Staff1Line] = GlyphNames.Staff1Line,
        [GlyphName.Staff1LineNarrow] = GlyphNames.Staff1LineNarrow,
        [GlyphName.Staff1LineWide] = GlyphNames.Staff1LineWide,
        [GlyphName.Staff2Lines] = GlyphNames.Staff2Lines,
        [GlyphName.Staff2LinesNarrow] = GlyphNames.Staff2LinesNarrow,
        [GlyphName.Staff2LinesWide] = GlyphNames.Staff2LinesWide,
        [GlyphName.Staff3Lines] = GlyphNames.Staff3Lines,
        [GlyphName.Staff3LinesNarrow] = GlyphNames.Staff3LinesNarrow,
        [GlyphName.Staff3LinesWide] = GlyphNames.Staff3LinesWide,
        [GlyphName.Staff4Lines] = GlyphNames.Staff4Lines,
        [GlyphName.Staff4LinesNarrow] = GlyphNames.Staff4LinesNarrow,
        [GlyphName.Staff4LinesWide] = GlyphNames.Staff4LinesWide,
        [GlyphName.Staff5Lines] = GlyphNames.Staff5Lines,
        [GlyphName.Staff5LinesNarrow] = GlyphNames.Staff5LinesNarrow,
        [GlyphName.Staff5LinesWide] = GlyphNames.Staff5LinesWide,
        [GlyphName.Staff6Lines] = GlyphNames.Staff6Lines,
        [GlyphName.Staff6LinesNarrow] = GlyphNames.Staff6LinesNarrow,
        [GlyphName.Staff6LinesWide] = GlyphNames.Staff6LinesWide,
        [GlyphName.StaffDivideArrowDown] = GlyphNames.StaffDivideArrowDown,
        [GlyphName.StaffDivideArrowUp] = GlyphNames.StaffDivideArrowUp,
        [GlyphName.StaffDivideArrowUpDown] = GlyphNames.StaffDivideArrowUpDown,
        [GlyphName.StaffPosLower1] = GlyphNames.StaffPosLower1,
        [GlyphName.StaffPosLower2] = GlyphNames.StaffPosLower2,
        [GlyphName.StaffPosLower3] = GlyphNames.StaffPosLower3,
        [GlyphName.StaffPosLower4] = GlyphNames.StaffPosLower4,
        [GlyphName.StaffPosLower5] = GlyphNames.StaffPosLower5,
        [GlyphName.StaffPosLower6] = GlyphNames.StaffPosLower6,
        [GlyphName.StaffPosLower7] = GlyphNames.StaffPosLower7,
        [GlyphName.StaffPosLower8] = GlyphNames.StaffPosLower8,
        [GlyphName.StaffPosRaise1] = GlyphNames.StaffPosRaise1,
        [GlyphName.StaffPosRaise2] = GlyphNames.StaffPosRaise2,
        [GlyphName.StaffPosRaise3] = GlyphNames.StaffPosRaise3,
        [GlyphName.StaffPosRaise4] = GlyphNames.StaffPosRaise4,
        [GlyphName.StaffPosRaise5] = GlyphNames.StaffPosRaise5,
        [GlyphName.StaffPosRaise6] = GlyphNames.StaffPosRaise6,
        [GlyphName.StaffPosRaise7] = GlyphNames.StaffPosRaise7,
        [GlyphName.StaffPosRaise8] = GlyphNames.StaffPosRaise8,
        [GlyphName.Stem] = GlyphNames.Stem,
        [GlyphName.StemBowOnBridge] = GlyphNames.StemBowOnBridge,
        [GlyphName.StemBowOnTailpiece] = GlyphNames.StemBowOnTailpiece,
        [GlyphName.StemBuzzRoll] = GlyphNames.StemBuzzRoll,
        [GlyphName.StemDamp] = GlyphNames.StemDamp,
        [GlyphName.StemHarpStringNoise] = GlyphNames.StemHarpStringNoise,
        [GlyphName.StemMultiphonicsBlack] = GlyphNames.StemMultiphonicsBlack,
        [GlyphName.StemMultiphonicsBlackWhite] = GlyphNames.StemMultiphonicsBlackWhite,
        [GlyphName.StemMultiphonicsWhite] = GlyphNames.StemMultiphonicsWhite,
        [GlyphName.StemPendereckiTremolo] = GlyphNames.StemPendereckiTremolo,
        [GlyphName.StemRimShot] = GlyphNames.StemRimShot,
        [GlyphName.StemSprechgesang] = GlyphNames.StemSprechgesang,
        [GlyphName.StemSulPonticello] = GlyphNames.StemSulPonticello,
        [GlyphName.StemSussurando] = GlyphNames.StemSussurando,
        [GlyphName.StemSwished] = GlyphNames.StemSwished,
        [GlyphName.StemVibratoPulse] = GlyphNames.StemVibratoPulse,
        [GlyphName.StockhausenTremolo] = GlyphNames.StockhausenTremolo,
        [GlyphName.StringsBowBehindBridge] = GlyphNames.StringsBowBehindBridge,
        [GlyphName.StringsBowBehindBridgeFourStrings] = GlyphNames.StringsBowBehindBridgeFourStrings,
        [GlyphName.StringsBowBehindBridgeOneString] = GlyphNames.StringsBowBehindBridgeOneString,
        [GlyphName.StringsBowBehindBridgeThreeStrings] = GlyphNames.StringsBowBehindBridgeThreeStrings,
        [GlyphName.StringsBowBehindBridgeTwoStrings] = GlyphNames.StringsBowBehindBridgeTwoStrings,
        [GlyphName.StringsBowOnBridge] = GlyphNames.StringsBowOnBridge,
        [GlyphName.StringsBowOnTailpiece] = GlyphNames.StringsBowOnTailpiece,
        [GlyphName.StringsChangeBowDirection] = GlyphNames.StringsChangeBowDirection,
        [GlyphName.StringsDownBow] = GlyphNames.StringsDownBow,
        [GlyphName.StringsDownBowAwayFromBody] = GlyphNames.StringsDownBowAwayFromBody,
        [GlyphName.StringsDownBowBeyondBridge] = GlyphNames.StringsDownBowBeyondBridge,
        [GlyphName.StringsDownBowTowardsBody] = GlyphNames.StringsDownBowTowardsBody,
        [GlyphName.StringsDownBowTurned] = GlyphNames.StringsDownBowTurned,
        [GlyphName.StringsFouette] = GlyphNames.StringsFouette,
        [GlyphName.StringsHalfHarmonic] = GlyphNames.StringsHalfHarmonic,
        [GlyphName.StringsHarmonic] = GlyphNames.StringsHarmonic,
        [GlyphName.StringsJeteAbove] = GlyphNames.StringsJeteAbove,
        [GlyphName.StringsJeteBelow] = GlyphNames.StringsJeteBelow,
        [GlyphName.StringsMuteOff] = GlyphNames.StringsMuteOff,
        [GlyphName.StringsMuteOn] = GlyphNames.StringsMuteOn,
        [GlyphName.StringsOverpressureDownBow] = GlyphNames.StringsOverpressureDownBow,
        [GlyphName.StringsOverpressureNoDirection] = GlyphNames.StringsOverpressureNoDirection,
        [GlyphName.StringsOverpressurePossibileDownBow] = GlyphNames.StringsOverpressurePossibileDownBow,
        [GlyphName.StringsOverpressurePossibileUpBow] = GlyphNames.StringsOverpressurePossibileUpBow,
        [GlyphName.StringsOverpressureUpBow] = GlyphNames.StringsOverpressureUpBow,
        [GlyphName.StringsScrapeCircularClockwise] = GlyphNames.StringsScrapeCircularClockwise,
        [GlyphName.StringsScrapeCircularCounterclockwise] = GlyphNames.StringsScrapeCircularCounterclockwise,
        [GlyphName.StringsScrapeParallelInward] = GlyphNames.StringsScrapeParallelInward,
        [GlyphName.StringsScrapeParallelOutward] = GlyphNames.StringsScrapeParallelOutward,
        [GlyphName.StringsThumbPosition] = GlyphNames.StringsThumbPosition,
        [GlyphName.StringsThumbPositionTurned] = GlyphNames.StringsThumbPositionTurned,
        [GlyphName.StringsTripleChopInward] = GlyphNames.StringsTripleChopInward,
        [GlyphName.StringsTripleChopOutward] = GlyphNames.StringsTripleChopOutward,
        [GlyphName.StringsUpBow] = GlyphNames.StringsUpBow,
        [GlyphName.StringsUpBowAwayFromBody] = GlyphNames.StringsUpBowAwayFromBody,
        [GlyphName.StringsUpBowBeyondBridge] = GlyphNames.StringsUpBowBeyondBridge,
        [GlyphName.StringsUpBowTowardsBody] = GlyphNames.StringsUpBowTowardsBody,
        [GlyphName.StringsUpBowTurned] = GlyphNames.StringsUpBowTurned,
        [GlyphName.StringsVibratoPulse] = GlyphNames.StringsVibratoPulse,
        [GlyphName.SwissRudimentsNoteheadBlackDouble] = GlyphNames.SwissRudimentsNoteheadBlackDouble,
        [GlyphName.SwissRudimentsNoteheadBlackFlam] = GlyphNames.SwissRudimentsNoteheadBlackFlam,
        [GlyphName.SwissRudimentsNoteheadHalfDouble] = GlyphNames.SwissRudimentsNoteheadHalfDouble,
        [GlyphName.SwissRudimentsNoteheadHalfFlam] = GlyphNames.SwissRudimentsNoteheadHalfFlam,
        [GlyphName.SystemDivider] = GlyphNames.SystemDivider,
        [GlyphName.SystemDividerExtraLong] = GlyphNames.SystemDividerExtraLong,
        [GlyphName.SystemDividerLong] = GlyphNames.SystemDividerLong,
        [GlyphName.TextAugmentationDot] = GlyphNames.TextAugmentationDot,
        [GlyphName.TextBlackNoteFrac16thLongStem] = GlyphNames.TextBlackNoteFrac16thLongStem,
        [GlyphName.TextBlackNoteFrac16thShortStem] = GlyphNames.TextBlackNoteFrac16thShortStem,
        [GlyphName.TextBlackNoteFrac32ndLongStem] = GlyphNames.TextBlackNoteFrac32ndLongStem,
        [GlyphName.TextBlackNoteFrac8thLongStem] = GlyphNames.TextBlackNoteFrac8thLongStem,
        [GlyphName.TextBlackNoteFrac8thShortStem] = GlyphNames.TextBlackNoteFrac8thShortStem,
        [GlyphName.TextBlackNoteLongStem] = GlyphNames.TextBlackNoteLongStem,
        [GlyphName.TextBlackNoteShortStem] = GlyphNames.TextBlackNoteShortStem,
        [GlyphName.TextCont16thBeamLongStem] = GlyphNames.TextCont16thBeamLongStem,
        [GlyphName.TextCont16thBeamShortStem] = GlyphNames.TextCont16thBeamShortStem,
        [GlyphName.TextCont32ndBeamLongStem] = GlyphNames.TextCont32ndBeamLongStem,
        [GlyphName.TextCont8thBeamLongStem] = GlyphNames.TextCont8thBeamLongStem,
        [GlyphName.TextCont8thBeamShortStem] = GlyphNames.TextCont8thBeamShortStem,
        [GlyphName.TextHeadlessBlackNoteFrac16thLongStem] = GlyphNames.TextHeadlessBlackNoteFrac16thLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac16thShortStem] = GlyphNames.TextHeadlessBlackNoteFrac16thShortStem,
        [GlyphName.TextHeadlessBlackNoteFrac32ndLongStem] = GlyphNames.TextHeadlessBlackNoteFrac32ndLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac8thLongStem] = GlyphNames.TextHeadlessBlackNoteFrac8thLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac8thShortStem] = GlyphNames.TextHeadlessBlackNoteFrac8thShortStem,
        [GlyphName.TextHeadlessBlackNoteLongStem] = GlyphNames.TextHeadlessBlackNoteLongStem,
        [GlyphName.TextHeadlessBlackNoteShortStem] = GlyphNames.TextHeadlessBlackNoteShortStem,
        [GlyphName.TextTie] = GlyphNames.TextTie,
        [GlyphName.TextTuplet3LongStem] = GlyphNames.TextTuplet3LongStem,
        [GlyphName.TextTuplet3ShortStem] = GlyphNames.TextTuplet3ShortStem,
        [GlyphName.TextTupletBracketEndLongStem] = GlyphNames.TextTupletBracketEndLongStem,
        [GlyphName.TextTupletBracketEndShortStem] = GlyphNames.TextTupletBracketEndShortStem,
        [GlyphName.TextTupletBracketStartLongStem] = GlyphNames.TextTupletBracketStartLongStem,
        [GlyphName.TextTupletBracketStartShortStem] = GlyphNames.TextTupletBracketStartShortStem,
        [GlyphName.TimeSig0] = GlyphNames.TimeSig0,
        [GlyphName.TimeSig0Reversed] = GlyphNames.TimeSig0Reversed,
        [GlyphName.TimeSig0Turned] = GlyphNames.TimeSig0Turned,
        [GlyphName.TimeSig1] = GlyphNames.TimeSig1,
        [GlyphName.TimeSig1Reversed] = GlyphNames.TimeSig1Reversed,
        [GlyphName.TimeSig1Turned] = GlyphNames.TimeSig1Turned,
        [GlyphName.TimeSig2] = GlyphNames.TimeSig2,
        [GlyphName.TimeSig2Reversed] = GlyphNames.TimeSig2Reversed,
        [GlyphName.TimeSig2Turned] = GlyphNames.TimeSig2Turned,
        [GlyphName.TimeSig3] = GlyphNames.TimeSig3,
        [GlyphName.TimeSig3Reversed] = GlyphNames.TimeSig3Reversed,
        [GlyphName.TimeSig3Turned] = GlyphNames.TimeSig3Turned,
        [GlyphName.TimeSig4] = GlyphNames.TimeSig4,
        [GlyphName.TimeSig4Reversed] = GlyphNames.TimeSig4Reversed,
        [GlyphName.TimeSig4Turned] = GlyphNames.TimeSig4Turned,
        [GlyphName.TimeSig5] = GlyphNames.TimeSig5,
        [GlyphName.TimeSig5Reversed] = GlyphNames.TimeSig5Reversed,
        [GlyphName.TimeSig5Turned] = GlyphNames.TimeSig5Turned,
        [GlyphName.TimeSig6] = GlyphNames.TimeSig6,
        [GlyphName.TimeSig6Reversed] = GlyphNames.TimeSig6Reversed,
        [GlyphName.TimeSig6Turned] = GlyphNames.TimeSig6Turned,
        [GlyphName.TimeSig7] = GlyphNames.TimeSig7,
        [GlyphName.TimeSig7Reversed] = GlyphNames.TimeSig7Reversed,
        [GlyphName.TimeSig7Turned] = GlyphNames.TimeSig7Turned,
        [GlyphName.TimeSig8] = GlyphNames.TimeSig8,
        [GlyphName.TimeSig8Reversed] = GlyphNames.TimeSig8Reversed,
        [GlyphName.TimeSig8Turned] = GlyphNames.TimeSig8Turned,
        [GlyphName.TimeSig9] = GlyphNames.TimeSig9,
        [GlyphName.TimeSig9Reversed] = GlyphNames.TimeSig9Reversed,
        [GlyphName.TimeSig9Turned] = GlyphNames.TimeSig9Turned,
        [GlyphName.TimeSigBracketLeft] = GlyphNames.TimeSigBracketLeft,
        [GlyphName.TimeSigBracketLeftSmall] = GlyphNames.TimeSigBracketLeftSmall,
        [GlyphName.TimeSigBracketRight] = GlyphNames.TimeSigBracketRight,
        [GlyphName.TimeSigBracketRightSmall] = GlyphNames.TimeSigBracketRightSmall,
        [GlyphName.TimeSigCombDenominator] = GlyphNames.TimeSigCombDenominator,
        [GlyphName.TimeSigCombNumerator] = GlyphNames.TimeSigCombNumerator,
        [GlyphName.TimeSigComma] = GlyphNames.TimeSigComma,
        [GlyphName.TimeSigCommon] = GlyphNames.TimeSigCommon,
        [GlyphName.TimeSigCommonReversed] = GlyphNames.TimeSigCommonReversed,
        [GlyphName.TimeSigCommonTurned] = GlyphNames.TimeSigCommonTurned,
        [GlyphName.TimeSigCut2] = GlyphNames.TimeSigCut2,
        [GlyphName.TimeSigCut3] = GlyphNames.TimeSigCut3,
        [GlyphName.TimeSigCutCommon] = GlyphNames.TimeSigCutCommon,
        [GlyphName.TimeSigCutCommonReversed] = GlyphNames.TimeSigCutCommonReversed,
        [GlyphName.TimeSigCutCommonTurned] = GlyphNames.TimeSigCutCommonTurned,
        [GlyphName.TimeSigEquals] = GlyphNames.TimeSigEquals,
        [GlyphName.TimeSigFractionHalf] = GlyphNames.TimeSigFractionHalf,
        [GlyphName.TimeSigFractionOneThird] = GlyphNames.TimeSigFractionOneThird,
        [GlyphName.TimeSigFractionQuarter] = GlyphNames.TimeSigFractionQuarter,
        [GlyphName.TimeSigFractionThreeQuarters] = GlyphNames.TimeSigFractionThreeQuarters,
        [GlyphName.TimeSigFractionTwoThirds] = GlyphNames.TimeSigFractionTwoThirds,
        [GlyphName.TimeSigFractionalSlash] = GlyphNames.TimeSigFractionalSlash,
        [GlyphName.TimeSigMinus] = GlyphNames.TimeSigMinus,
        [GlyphName.TimeSigMultiply] = GlyphNames.TimeSigMultiply,
        [GlyphName.TimeSigOpenPenderecki] = GlyphNames.TimeSigOpenPenderecki,
        [GlyphName.TimeSigParensLeft] = GlyphNames.TimeSigParensLeft,
        [GlyphName.TimeSigParensLeftSmall] = GlyphNames.TimeSigParensLeftSmall,
        [GlyphName.TimeSigParensRight] = GlyphNames.TimeSigParensRight,
        [GlyphName.TimeSigParensRightSmall] = GlyphNames.TimeSigParensRightSmall,
        [GlyphName.TimeSigPlus] = GlyphNames.TimeSigPlus,
        [GlyphName.TimeSigPlusSmall] = GlyphNames.TimeSigPlusSmall,
        [GlyphName.TimeSigSlash] = GlyphNames.TimeSigSlash,
        [GlyphName.TimeSigX] = GlyphNames.TimeSigX,
        [GlyphName.Tremolo1] = GlyphNames.Tremolo1,
        [GlyphName.Tremolo2] = GlyphNames.Tremolo2,
        [GlyphName.Tremolo3] = GlyphNames.Tremolo3,
        [GlyphName.Tremolo4] = GlyphNames.Tremolo4,
        [GlyphName.Tremolo5] = GlyphNames.Tremolo5,
        [GlyphName.TremoloDivisiDots2] = GlyphNames.TremoloDivisiDots2,
        [GlyphName.TremoloDivisiDots3] = GlyphNames.TremoloDivisiDots3,
        [GlyphName.TremoloDivisiDots4] = GlyphNames.TremoloDivisiDots4,
        [GlyphName.TremoloDivisiDots6] = GlyphNames.TremoloDivisiDots6,
        [GlyphName.TremoloFingered1] = GlyphNames.TremoloFingered1,
        [GlyphName.TremoloFingered2] = GlyphNames.TremoloFingered2,
        [GlyphName.TremoloFingered3] = GlyphNames.TremoloFingered3,
        [GlyphName.TremoloFingered4] = GlyphNames.TremoloFingered4,
        [GlyphName.TremoloFingered5] = GlyphNames.TremoloFingered5,
        [GlyphName.TripleTongueAbove] = GlyphNames.TripleTongueAbove,
        [GlyphName.TripleTongueBelow] = GlyphNames.TripleTongueBelow,
        [GlyphName.Tuplet0] = GlyphNames.Tuplet0,
        [GlyphName.Tuplet1] = GlyphNames.Tuplet1,
        [GlyphName.Tuplet2] = GlyphNames.Tuplet2,
        [GlyphName.Tuplet3] = GlyphNames.Tuplet3,
        [GlyphName.Tuplet4] = GlyphNames.Tuplet4,
        [GlyphName.Tuplet5] = GlyphNames.Tuplet5,
        [GlyphName.Tuplet6] = GlyphNames.Tuplet6,
        [GlyphName.Tuplet7] = GlyphNames.Tuplet7,
        [GlyphName.Tuplet8] = GlyphNames.Tuplet8,
        [GlyphName.Tuplet9] = GlyphNames.Tuplet9,
        [GlyphName.TupletColon] = GlyphNames.TupletColon,
        [GlyphName.UnmeasuredTremolo] = GlyphNames.UnmeasuredTremolo,
        [GlyphName.UnmeasuredTremoloSimple] = GlyphNames.UnmeasuredTremoloSimple,
        [GlyphName.UnpitchedPercussionClef1] = GlyphNames.UnpitchedPercussionClef1,
        [GlyphName.UnpitchedPercussionClef2] = GlyphNames.UnpitchedPercussionClef2,
        [GlyphName.Ventiduesima] = GlyphNames.Ventiduesima,
        [GlyphName.VentiduesimaAlta] = GlyphNames.VentiduesimaAlta,
        [GlyphName.VentiduesimaBassa] = GlyphNames.VentiduesimaBassa,
        [GlyphName.VentiduesimaBassaMb] = GlyphNames.VentiduesimaBassaMb,
        [GlyphName.VocalFingerClickStockhausen] = GlyphNames.VocalFingerClickStockhausen,
        [GlyphName.VocalHalbGesungen] = GlyphNames.VocalHalbGesungen,
        [GlyphName.VocalMouthClosed] = GlyphNames.VocalMouthClosed,
        [GlyphName.VocalMouthOpen] = GlyphNames.VocalMouthOpen,
        [GlyphName.VocalMouthPursed] = GlyphNames.VocalMouthPursed,
        [GlyphName.VocalMouthSlightlyOpen] = GlyphNames.VocalMouthSlightlyOpen,
        [GlyphName.VocalMouthWideOpen] = GlyphNames.VocalMouthWideOpen,
        [GlyphName.VocalNasalVoice] = GlyphNames.VocalNasalVoice,
        [GlyphName.VocalSprechgesang] = GlyphNames.VocalSprechgesang,
        [GlyphName.VocalTongueClickStockhausen] = GlyphNames.VocalTongueClickStockhausen,
        [GlyphName.VocalTongueFingerClickStockhausen] = GlyphNames.VocalTongueFingerClickStockhausen,
        [GlyphName.VocalsSussurando] = GlyphNames.VocalsSussurando,
        [GlyphName.WiggleArpeggiatoDown] = GlyphNames.WiggleArpeggiatoDown,
        [GlyphName.WiggleArpeggiatoDownArrow] = GlyphNames.WiggleArpeggiatoDownArrow,
        [GlyphName.WiggleArpeggiatoDownSwash] = GlyphNames.WiggleArpeggiatoDownSwash,
        [GlyphName.WiggleArpeggiatoUp] = GlyphNames.WiggleArpeggiatoUp,
        [GlyphName.WiggleArpeggiatoUpArrow] = GlyphNames.WiggleArpeggiatoUpArrow,
        [GlyphName.WiggleArpeggiatoUpSwash] = GlyphNames.WiggleArpeggiatoUpSwash,
        [GlyphName.WiggleCircular] = GlyphNames.WiggleCircular,
        [GlyphName.WiggleCircularConstant] = GlyphNames.WiggleCircularConstant,
        [GlyphName.WiggleCircularConstantFlipped] = GlyphNames.WiggleCircularConstantFlipped,
        [GlyphName.WiggleCircularConstantFlippedLarge] = GlyphNames.WiggleCircularConstantFlippedLarge,
        [GlyphName.WiggleCircularConstantLarge] = GlyphNames.WiggleCircularConstantLarge,
        [GlyphName.WiggleCircularEnd] = GlyphNames.WiggleCircularEnd,
        [GlyphName.WiggleCircularLarge] = GlyphNames.WiggleCircularLarge,
        [GlyphName.WiggleCircularLarger] = GlyphNames.WiggleCircularLarger,
        [GlyphName.WiggleCircularLargerStill] = GlyphNames.WiggleCircularLargerStill,
        [GlyphName.WiggleCircularLargest] = GlyphNames.WiggleCircularLargest,
        [GlyphName.WiggleCircularSmall] = GlyphNames.WiggleCircularSmall,
        [GlyphName.WiggleCircularStart] = GlyphNames.WiggleCircularStart,
        [GlyphName.WiggleGlissando] = GlyphNames.WiggleGlissando,
        [GlyphName.WiggleGlissandoGroup1] = GlyphNames.WiggleGlissandoGroup1,
        [GlyphName.WiggleGlissandoGroup2] = GlyphNames.WiggleGlissandoGroup2,
        [GlyphName.WiggleGlissandoGroup3] = GlyphNames.WiggleGlissandoGroup3,
        [GlyphName.WiggleRandom1] = GlyphNames.WiggleRandom1,
        [GlyphName.WiggleRandom2] = GlyphNames.WiggleRandom2,
        [GlyphName.WiggleRandom3] = GlyphNames.WiggleRandom3,
        [GlyphName.WiggleRandom4] = GlyphNames.WiggleRandom4,
        [GlyphName.WiggleSawtooth] = GlyphNames.WiggleSawtooth,
        [GlyphName.WiggleSawtoothNarrow] = GlyphNames.WiggleSawtoothNarrow,
        [GlyphName.WiggleSawtoothWide] = GlyphNames.WiggleSawtoothWide,
        [GlyphName.WiggleSquareWave] = GlyphNames.WiggleSquareWave,
        [GlyphName.WiggleSquareWaveNarrow] = GlyphNames.WiggleSquareWaveNarrow,
        [GlyphName.WiggleSquareWaveWide] = GlyphNames.WiggleSquareWaveWide,
        [GlyphName.WiggleTrill] = GlyphNames.WiggleTrill,
        [GlyphName.WiggleTrillFast] = GlyphNames.WiggleTrillFast,
        [GlyphName.WiggleTrillFaster] = GlyphNames.WiggleTrillFaster,
        [GlyphName.WiggleTrillFasterStill] = GlyphNames.WiggleTrillFasterStill,
        [GlyphName.WiggleTrillFastest] = GlyphNames.WiggleTrillFastest,
        [GlyphName.WiggleTrillSlow] = GlyphNames.WiggleTrillSlow,
        [GlyphName.WiggleTrillSlower] = GlyphNames.WiggleTrillSlower,
        [GlyphName.WiggleTrillSlowerStill] = GlyphNames.WiggleTrillSlowerStill,
        [GlyphName.WiggleTrillSlowest] = GlyphNames.WiggleTrillSlowest,
        [GlyphName.WiggleVIbratoLargestSlower] = GlyphNames.WiggleVIbratoLargestSlower,
        [GlyphName.WiggleVIbratoMediumSlower] = GlyphNames.WiggleVIbratoMediumSlower,
        [GlyphName.WiggleVibrato] = GlyphNames.WiggleVibrato,
        [GlyphName.WiggleVibratoLargeFast] = GlyphNames.WiggleVibratoLargeFast,
        [GlyphName.WiggleVibratoLargeFaster] = GlyphNames.WiggleVibratoLargeFaster,
        [GlyphName.WiggleVibratoLargeFasterStill] = GlyphNames.WiggleVibratoLargeFasterStill,
        [GlyphName.WiggleVibratoLargeFastest] = GlyphNames.WiggleVibratoLargeFastest,
        [GlyphName.WiggleVibratoLargeSlow] = GlyphNames.WiggleVibratoLargeSlow,
        [GlyphName.WiggleVibratoLargeSlower] = GlyphNames.WiggleVibratoLargeSlower,
        [GlyphName.WiggleVibratoLargeSlowest] = GlyphNames.WiggleVibratoLargeSlowest,
        [GlyphName.WiggleVibratoLargestFast] = GlyphNames.WiggleVibratoLargestFast,
        [GlyphName.WiggleVibratoLargestFaster] = GlyphNames.WiggleVibratoLargestFaster,
        [GlyphName.WiggleVibratoLargestFasterStill] = GlyphNames.WiggleVibratoLargestFasterStill,
        [GlyphName.WiggleVibratoLargestFastest] = GlyphNames.WiggleVibratoLargestFastest,
        [GlyphName.WiggleVibratoLargestSlow] = GlyphNames.WiggleVibratoLargestSlow,
        [GlyphName.WiggleVibratoLargestSlowest] = GlyphNames.WiggleVibratoLargestSlowest,
        [GlyphName.WiggleVibratoMediumFast] = GlyphNames.WiggleVibratoMediumFast,
        [GlyphName.WiggleVibratoMediumFaster] = GlyphNames.WiggleVibratoMediumFaster,
        [GlyphName.WiggleVibratoMediumFasterStill] = GlyphNames.WiggleVibratoMediumFasterStill,
        [GlyphName.WiggleVibratoMediumFastest] = GlyphNames.WiggleVibratoMediumFastest,
        [GlyphName.WiggleVibratoMediumSlow] = GlyphNames.WiggleVibratoMediumSlow,
        [GlyphName.WiggleVibratoMediumSlowest] = GlyphNames.WiggleVibratoMediumSlowest,
        [GlyphName.WiggleVibratoSmallFast] = GlyphNames.WiggleVibratoSmallFast,
        [GlyphName.WiggleVibratoSmallFaster] = GlyphNames.WiggleVibratoSmallFaster,
        [GlyphName.WiggleVibratoSmallFasterStill] = GlyphNames.WiggleVibratoSmallFasterStill,
        [GlyphName.WiggleVibratoSmallFastest] = GlyphNames.WiggleVibratoSmallFastest,
        [GlyphName.WiggleVibratoSmallSlow] = GlyphNames.WiggleVibratoSmallSlow,
        [GlyphName.WiggleVibratoSmallSlower] = GlyphNames.WiggleVibratoSmallSlower,
        [GlyphName.WiggleVibratoSmallSlowest] = GlyphNames.WiggleVibratoSmallSlowest,
        [GlyphName.WiggleVibratoSmallestFast] = GlyphNames.WiggleVibratoSmallestFast,
        [GlyphName.WiggleVibratoSmallestFaster] = GlyphNames.WiggleVibratoSmallestFaster,
        [GlyphName.WiggleVibratoSmallestFasterStill] = GlyphNames.WiggleVibratoSmallestFasterStill,
        [GlyphName.WiggleVibratoSmallestFastest] = GlyphNames.WiggleVibratoSmallestFastest,
        [GlyphName.WiggleVibratoSmallestSlow] = GlyphNames.WiggleVibratoSmallestSlow,
        [GlyphName.WiggleVibratoSmallestSlower] = GlyphNames.WiggleVibratoSmallestSlower,
        [GlyphName.WiggleVibratoSmallestSlowest] = GlyphNames.WiggleVibratoSmallestSlowest,
        [GlyphName.WiggleVibratoStart] = GlyphNames.WiggleVibratoStart,
        [GlyphName.WiggleVibratoWide] = GlyphNames.WiggleVibratoWide,
        [GlyphName.WiggleWavy] = GlyphNames.WiggleWavy,
        [GlyphName.WiggleWavyNarrow] = GlyphNames.WiggleWavyNarrow,
        [GlyphName.WiggleWavyWide] = GlyphNames.WiggleWavyWide,
        [GlyphName.WindClosedHole] = GlyphNames.WindClosedHole,
        [GlyphName.WindFlatEmbouchure] = GlyphNames.WindFlatEmbouchure,
        [GlyphName.WindHalfClosedHole1] = GlyphNames.WindHalfClosedHole1,
        [GlyphName.WindHalfClosedHole2] = GlyphNames.WindHalfClosedHole2,
        [GlyphName.WindHalfClosedHole3] = GlyphNames.WindHalfClosedHole3,
        [GlyphName.WindLessRelaxedEmbouchure] = GlyphNames.WindLessRelaxedEmbouchure,
        [GlyphName.WindLessTightEmbouchure] = GlyphNames.WindLessTightEmbouchure,
        [GlyphName.WindMouthpiecePop] = GlyphNames.WindMouthpiecePop,
        [GlyphName.WindMultiphonicsBlackStem] = GlyphNames.WindMultiphonicsBlackStem,
        [GlyphName.WindMultiphonicsBlackWhiteStem] = GlyphNames.WindMultiphonicsBlackWhiteStem,
        [GlyphName.WindMultiphonicsWhiteStem] = GlyphNames.WindMultiphonicsWhiteStem,
        [GlyphName.WindOpenHole] = GlyphNames.WindOpenHole,
        [GlyphName.WindReedPositionIn] = GlyphNames.WindReedPositionIn,
        [GlyphName.WindReedPositionNormal] = GlyphNames.WindReedPositionNormal,
        [GlyphName.WindReedPositionOut] = GlyphNames.WindReedPositionOut,
        [GlyphName.WindRelaxedEmbouchure] = GlyphNames.WindRelaxedEmbouchure,
        [GlyphName.WindRimOnly] = GlyphNames.WindRimOnly,
        [GlyphName.WindSharpEmbouchure] = GlyphNames.WindSharpEmbouchure,
        [GlyphName.WindStrongAirPressure] = GlyphNames.WindStrongAirPressure,
        [GlyphName.WindThreeQuartersClosedHole] = GlyphNames.WindThreeQuartersClosedHole,
        [GlyphName.WindTightEmbouchure] = GlyphNames.WindTightEmbouchure,
        [GlyphName.WindTrillKey] = GlyphNames.WindTrillKey,
        [GlyphName.WindVeryTightEmbouchure] = GlyphNames.WindVeryTightEmbouchure,
        [GlyphName.WindWeakAirPressure] = GlyphNames.WindWeakAirPressure,
    };

    /// <summary>
    /// Maps glyph name enums to their corresponding code points.
    /// </summary>
    public static IReadOnlyDictionary<GlyphName, int> GlyphName2CodePointMap { get; } = new Dictionary<GlyphName, int> {
        [GlyphName.FourStringTabClef] = GlyphNameCodePoints.FourStringTabClef,
        [GlyphName.SixStringTabClef] = GlyphNameCodePoints.SixStringTabClef,
        [GlyphName.AccSagittal11LargeDiesisDown] = GlyphNameCodePoints.AccSagittal11LargeDiesisDown,
        [GlyphName.AccSagittal11LargeDiesisUp] = GlyphNameCodePoints.AccSagittal11LargeDiesisUp,
        [GlyphName.AccSagittal11MediumDiesisDown] = GlyphNameCodePoints.AccSagittal11MediumDiesisDown,
        [GlyphName.AccSagittal11MediumDiesisUp] = GlyphNameCodePoints.AccSagittal11MediumDiesisUp,
        [GlyphName.AccSagittal11v19LargeDiesisDown] = GlyphNameCodePoints.AccSagittal11v19LargeDiesisDown,
        [GlyphName.AccSagittal11v19LargeDiesisUp] = GlyphNameCodePoints.AccSagittal11v19LargeDiesisUp,
        [GlyphName.AccSagittal11v19MediumDiesisDown] = GlyphNameCodePoints.AccSagittal11v19MediumDiesisDown,
        [GlyphName.AccSagittal11v19MediumDiesisUp] = GlyphNameCodePoints.AccSagittal11v19MediumDiesisUp,
        [GlyphName.AccSagittal11v49CommaDown] = GlyphNameCodePoints.AccSagittal11v49CommaDown,
        [GlyphName.AccSagittal11v49CommaUp] = GlyphNameCodePoints.AccSagittal11v49CommaUp,
        [GlyphName.AccSagittal143CommaDown] = GlyphNameCodePoints.AccSagittal143CommaDown,
        [GlyphName.AccSagittal143CommaUp] = GlyphNameCodePoints.AccSagittal143CommaUp,
        [GlyphName.AccSagittal17CommaDown] = GlyphNameCodePoints.AccSagittal17CommaDown,
        [GlyphName.AccSagittal17CommaUp] = GlyphNameCodePoints.AccSagittal17CommaUp,
        [GlyphName.AccSagittal17KleismaDown] = GlyphNameCodePoints.AccSagittal17KleismaDown,
        [GlyphName.AccSagittal17KleismaUp] = GlyphNameCodePoints.AccSagittal17KleismaUp,
        [GlyphName.AccSagittal19CommaDown] = GlyphNameCodePoints.AccSagittal19CommaDown,
        [GlyphName.AccSagittal19CommaUp] = GlyphNameCodePoints.AccSagittal19CommaUp,
        [GlyphName.AccSagittal19SchismaDown] = GlyphNameCodePoints.AccSagittal19SchismaDown,
        [GlyphName.AccSagittal19SchismaUp] = GlyphNameCodePoints.AccSagittal19SchismaUp,
        [GlyphName.AccSagittal1MinaDown] = GlyphNameCodePoints.AccSagittal1MinaDown,
        [GlyphName.AccSagittal1MinaUp] = GlyphNameCodePoints.AccSagittal1MinaUp,
        [GlyphName.AccSagittal1TinaDown] = GlyphNameCodePoints.AccSagittal1TinaDown,
        [GlyphName.AccSagittal1TinaUp] = GlyphNameCodePoints.AccSagittal1TinaUp,
        [GlyphName.AccSagittal23CommaDown] = GlyphNameCodePoints.AccSagittal23CommaDown,
        [GlyphName.AccSagittal23CommaUp] = GlyphNameCodePoints.AccSagittal23CommaUp,
        [GlyphName.AccSagittal23SmallDiesisDown] = GlyphNameCodePoints.AccSagittal23SmallDiesisDown,
        [GlyphName.AccSagittal23SmallDiesisUp] = GlyphNameCodePoints.AccSagittal23SmallDiesisUp,
        [GlyphName.AccSagittal25SmallDiesisDown] = GlyphNameCodePoints.AccSagittal25SmallDiesisDown,
        [GlyphName.AccSagittal25SmallDiesisUp] = GlyphNameCodePoints.AccSagittal25SmallDiesisUp,
        [GlyphName.AccSagittal2MinasDown] = GlyphNameCodePoints.AccSagittal2MinasDown,
        [GlyphName.AccSagittal2MinasUp] = GlyphNameCodePoints.AccSagittal2MinasUp,
        [GlyphName.AccSagittal2TinasDown] = GlyphNameCodePoints.AccSagittal2TinasDown,
        [GlyphName.AccSagittal2TinasUp] = GlyphNameCodePoints.AccSagittal2TinasUp,
        [GlyphName.AccSagittal35LargeDiesisDown] = GlyphNameCodePoints.AccSagittal35LargeDiesisDown,
        [GlyphName.AccSagittal35LargeDiesisUp] = GlyphNameCodePoints.AccSagittal35LargeDiesisUp,
        [GlyphName.AccSagittal35MediumDiesisDown] = GlyphNameCodePoints.AccSagittal35MediumDiesisDown,
        [GlyphName.AccSagittal35MediumDiesisUp] = GlyphNameCodePoints.AccSagittal35MediumDiesisUp,
        [GlyphName.AccSagittal3TinasDown] = GlyphNameCodePoints.AccSagittal3TinasDown,
        [GlyphName.AccSagittal3TinasUp] = GlyphNameCodePoints.AccSagittal3TinasUp,
        [GlyphName.AccSagittal49LargeDiesisDown] = GlyphNameCodePoints.AccSagittal49LargeDiesisDown,
        [GlyphName.AccSagittal49LargeDiesisUp] = GlyphNameCodePoints.AccSagittal49LargeDiesisUp,
        [GlyphName.AccSagittal49MediumDiesisDown] = GlyphNameCodePoints.AccSagittal49MediumDiesisDown,
        [GlyphName.AccSagittal49MediumDiesisUp] = GlyphNameCodePoints.AccSagittal49MediumDiesisUp,
        [GlyphName.AccSagittal49SmallDiesisDown] = GlyphNameCodePoints.AccSagittal49SmallDiesisDown,
        [GlyphName.AccSagittal49SmallDiesisUp] = GlyphNameCodePoints.AccSagittal49SmallDiesisUp,
        [GlyphName.AccSagittal4TinasDown] = GlyphNameCodePoints.AccSagittal4TinasDown,
        [GlyphName.AccSagittal4TinasUp] = GlyphNameCodePoints.AccSagittal4TinasUp,
        [GlyphName.AccSagittal55CommaDown] = GlyphNameCodePoints.AccSagittal55CommaDown,
        [GlyphName.AccSagittal55CommaUp] = GlyphNameCodePoints.AccSagittal55CommaUp,
        [GlyphName.AccSagittal5CommaDown] = GlyphNameCodePoints.AccSagittal5CommaDown,
        [GlyphName.AccSagittal5CommaUp] = GlyphNameCodePoints.AccSagittal5CommaUp,
        [GlyphName.AccSagittal5TinasDown] = GlyphNameCodePoints.AccSagittal5TinasDown,
        [GlyphName.AccSagittal5TinasUp] = GlyphNameCodePoints.AccSagittal5TinasUp,
        [GlyphName.AccSagittal5v11SmallDiesisDown] = GlyphNameCodePoints.AccSagittal5v11SmallDiesisDown,
        [GlyphName.AccSagittal5v11SmallDiesisUp] = GlyphNameCodePoints.AccSagittal5v11SmallDiesisUp,
        [GlyphName.AccSagittal5v13LargeDiesisDown] = GlyphNameCodePoints.AccSagittal5v13LargeDiesisDown,
        [GlyphName.AccSagittal5v13LargeDiesisUp] = GlyphNameCodePoints.AccSagittal5v13LargeDiesisUp,
        [GlyphName.AccSagittal5v13MediumDiesisDown] = GlyphNameCodePoints.AccSagittal5v13MediumDiesisDown,
        [GlyphName.AccSagittal5v13MediumDiesisUp] = GlyphNameCodePoints.AccSagittal5v13MediumDiesisUp,
        [GlyphName.AccSagittal5v19CommaDown] = GlyphNameCodePoints.AccSagittal5v19CommaDown,
        [GlyphName.AccSagittal5v19CommaUp] = GlyphNameCodePoints.AccSagittal5v19CommaUp,
        [GlyphName.AccSagittal5v23SmallDiesisDown] = GlyphNameCodePoints.AccSagittal5v23SmallDiesisDown,
        [GlyphName.AccSagittal5v23SmallDiesisUp] = GlyphNameCodePoints.AccSagittal5v23SmallDiesisUp,
        [GlyphName.AccSagittal5v49MediumDiesisDown] = GlyphNameCodePoints.AccSagittal5v49MediumDiesisDown,
        [GlyphName.AccSagittal5v49MediumDiesisUp] = GlyphNameCodePoints.AccSagittal5v49MediumDiesisUp,
        [GlyphName.AccSagittal5v7KleismaDown] = GlyphNameCodePoints.AccSagittal5v7KleismaDown,
        [GlyphName.AccSagittal5v7KleismaUp] = GlyphNameCodePoints.AccSagittal5v7KleismaUp,
        [GlyphName.AccSagittal6TinasDown] = GlyphNameCodePoints.AccSagittal6TinasDown,
        [GlyphName.AccSagittal6TinasUp] = GlyphNameCodePoints.AccSagittal6TinasUp,
        [GlyphName.AccSagittal7CommaDown] = GlyphNameCodePoints.AccSagittal7CommaDown,
        [GlyphName.AccSagittal7CommaUp] = GlyphNameCodePoints.AccSagittal7CommaUp,
        [GlyphName.AccSagittal7TinasDown] = GlyphNameCodePoints.AccSagittal7TinasDown,
        [GlyphName.AccSagittal7TinasUp] = GlyphNameCodePoints.AccSagittal7TinasUp,
        [GlyphName.AccSagittal7v11CommaDown] = GlyphNameCodePoints.AccSagittal7v11CommaDown,
        [GlyphName.AccSagittal7v11CommaUp] = GlyphNameCodePoints.AccSagittal7v11CommaUp,
        [GlyphName.AccSagittal7v11KleismaDown] = GlyphNameCodePoints.AccSagittal7v11KleismaDown,
        [GlyphName.AccSagittal7v11KleismaUp] = GlyphNameCodePoints.AccSagittal7v11KleismaUp,
        [GlyphName.AccSagittal7v19CommaDown] = GlyphNameCodePoints.AccSagittal7v19CommaDown,
        [GlyphName.AccSagittal7v19CommaUp] = GlyphNameCodePoints.AccSagittal7v19CommaUp,
        [GlyphName.AccSagittal8TinasDown] = GlyphNameCodePoints.AccSagittal8TinasDown,
        [GlyphName.AccSagittal8TinasUp] = GlyphNameCodePoints.AccSagittal8TinasUp,
        [GlyphName.AccSagittal9TinasDown] = GlyphNameCodePoints.AccSagittal9TinasDown,
        [GlyphName.AccSagittal9TinasUp] = GlyphNameCodePoints.AccSagittal9TinasUp,
        [GlyphName.AccSagittalAcute] = GlyphNameCodePoints.AccSagittalAcute,
        [GlyphName.AccSagittalDoubleFlat] = GlyphNameCodePoints.AccSagittalDoubleFlat,
        [GlyphName.AccSagittalDoubleFlat11v49CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat11v49CUp,
        [GlyphName.AccSagittalDoubleFlat143CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat143CUp,
        [GlyphName.AccSagittalDoubleFlat17CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat17CUp,
        [GlyphName.AccSagittalDoubleFlat17kUp] = GlyphNameCodePoints.AccSagittalDoubleFlat17kUp,
        [GlyphName.AccSagittalDoubleFlat19CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat19CUp,
        [GlyphName.AccSagittalDoubleFlat19sUp] = GlyphNameCodePoints.AccSagittalDoubleFlat19sUp,
        [GlyphName.AccSagittalDoubleFlat23CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat23CUp,
        [GlyphName.AccSagittalDoubleFlat23SUp] = GlyphNameCodePoints.AccSagittalDoubleFlat23SUp,
        [GlyphName.AccSagittalDoubleFlat25SUp] = GlyphNameCodePoints.AccSagittalDoubleFlat25SUp,
        [GlyphName.AccSagittalDoubleFlat49SUp] = GlyphNameCodePoints.AccSagittalDoubleFlat49SUp,
        [GlyphName.AccSagittalDoubleFlat55CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat55CUp,
        [GlyphName.AccSagittalDoubleFlat5CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat5CUp,
        [GlyphName.AccSagittalDoubleFlat5v11SUp] = GlyphNameCodePoints.AccSagittalDoubleFlat5v11SUp,
        [GlyphName.AccSagittalDoubleFlat5v19CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat5v19CUp,
        [GlyphName.AccSagittalDoubleFlat5v23SUp] = GlyphNameCodePoints.AccSagittalDoubleFlat5v23SUp,
        [GlyphName.AccSagittalDoubleFlat5v7kUp] = GlyphNameCodePoints.AccSagittalDoubleFlat5v7kUp,
        [GlyphName.AccSagittalDoubleFlat7CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat7CUp,
        [GlyphName.AccSagittalDoubleFlat7v11CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat7v11CUp,
        [GlyphName.AccSagittalDoubleFlat7v11kUp] = GlyphNameCodePoints.AccSagittalDoubleFlat7v11kUp,
        [GlyphName.AccSagittalDoubleFlat7v19CUp] = GlyphNameCodePoints.AccSagittalDoubleFlat7v19CUp,
        [GlyphName.AccSagittalDoubleSharp] = GlyphNameCodePoints.AccSagittalDoubleSharp,
        [GlyphName.AccSagittalDoubleSharp11v49CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp11v49CDown,
        [GlyphName.AccSagittalDoubleSharp143CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp143CDown,
        [GlyphName.AccSagittalDoubleSharp17CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp17CDown,
        [GlyphName.AccSagittalDoubleSharp17kDown] = GlyphNameCodePoints.AccSagittalDoubleSharp17kDown,
        [GlyphName.AccSagittalDoubleSharp19CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp19CDown,
        [GlyphName.AccSagittalDoubleSharp19sDown] = GlyphNameCodePoints.AccSagittalDoubleSharp19sDown,
        [GlyphName.AccSagittalDoubleSharp23CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp23CDown,
        [GlyphName.AccSagittalDoubleSharp23SDown] = GlyphNameCodePoints.AccSagittalDoubleSharp23SDown,
        [GlyphName.AccSagittalDoubleSharp25SDown] = GlyphNameCodePoints.AccSagittalDoubleSharp25SDown,
        [GlyphName.AccSagittalDoubleSharp49SDown] = GlyphNameCodePoints.AccSagittalDoubleSharp49SDown,
        [GlyphName.AccSagittalDoubleSharp55CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp55CDown,
        [GlyphName.AccSagittalDoubleSharp5CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp5CDown,
        [GlyphName.AccSagittalDoubleSharp5v11SDown] = GlyphNameCodePoints.AccSagittalDoubleSharp5v11SDown,
        [GlyphName.AccSagittalDoubleSharp5v19CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp5v19CDown,
        [GlyphName.AccSagittalDoubleSharp5v23SDown] = GlyphNameCodePoints.AccSagittalDoubleSharp5v23SDown,
        [GlyphName.AccSagittalDoubleSharp5v7kDown] = GlyphNameCodePoints.AccSagittalDoubleSharp5v7kDown,
        [GlyphName.AccSagittalDoubleSharp7CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp7CDown,
        [GlyphName.AccSagittalDoubleSharp7v11CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp7v11CDown,
        [GlyphName.AccSagittalDoubleSharp7v11kDown] = GlyphNameCodePoints.AccSagittalDoubleSharp7v11kDown,
        [GlyphName.AccSagittalDoubleSharp7v19CDown] = GlyphNameCodePoints.AccSagittalDoubleSharp7v19CDown,
        [GlyphName.AccSagittalFlat] = GlyphNameCodePoints.AccSagittalFlat,
        [GlyphName.AccSagittalFlat11LDown] = GlyphNameCodePoints.AccSagittalFlat11LDown,
        [GlyphName.AccSagittalFlat11MDown] = GlyphNameCodePoints.AccSagittalFlat11MDown,
        [GlyphName.AccSagittalFlat11v19LDown] = GlyphNameCodePoints.AccSagittalFlat11v19LDown,
        [GlyphName.AccSagittalFlat11v19MDown] = GlyphNameCodePoints.AccSagittalFlat11v19MDown,
        [GlyphName.AccSagittalFlat11v49CDown] = GlyphNameCodePoints.AccSagittalFlat11v49CDown,
        [GlyphName.AccSagittalFlat11v49CUp] = GlyphNameCodePoints.AccSagittalFlat11v49CUp,
        [GlyphName.AccSagittalFlat143CDown] = GlyphNameCodePoints.AccSagittalFlat143CDown,
        [GlyphName.AccSagittalFlat143CUp] = GlyphNameCodePoints.AccSagittalFlat143CUp,
        [GlyphName.AccSagittalFlat17CDown] = GlyphNameCodePoints.AccSagittalFlat17CDown,
        [GlyphName.AccSagittalFlat17CUp] = GlyphNameCodePoints.AccSagittalFlat17CUp,
        [GlyphName.AccSagittalFlat17kDown] = GlyphNameCodePoints.AccSagittalFlat17kDown,
        [GlyphName.AccSagittalFlat17kUp] = GlyphNameCodePoints.AccSagittalFlat17kUp,
        [GlyphName.AccSagittalFlat19CDown] = GlyphNameCodePoints.AccSagittalFlat19CDown,
        [GlyphName.AccSagittalFlat19CUp] = GlyphNameCodePoints.AccSagittalFlat19CUp,
        [GlyphName.AccSagittalFlat19sDown] = GlyphNameCodePoints.AccSagittalFlat19sDown,
        [GlyphName.AccSagittalFlat19sUp] = GlyphNameCodePoints.AccSagittalFlat19sUp,
        [GlyphName.AccSagittalFlat23CDown] = GlyphNameCodePoints.AccSagittalFlat23CDown,
        [GlyphName.AccSagittalFlat23CUp] = GlyphNameCodePoints.AccSagittalFlat23CUp,
        [GlyphName.AccSagittalFlat23SDown] = GlyphNameCodePoints.AccSagittalFlat23SDown,
        [GlyphName.AccSagittalFlat23SUp] = GlyphNameCodePoints.AccSagittalFlat23SUp,
        [GlyphName.AccSagittalFlat25SDown] = GlyphNameCodePoints.AccSagittalFlat25SDown,
        [GlyphName.AccSagittalFlat25SUp] = GlyphNameCodePoints.AccSagittalFlat25SUp,
        [GlyphName.AccSagittalFlat35LDown] = GlyphNameCodePoints.AccSagittalFlat35LDown,
        [GlyphName.AccSagittalFlat35MDown] = GlyphNameCodePoints.AccSagittalFlat35MDown,
        [GlyphName.AccSagittalFlat49LDown] = GlyphNameCodePoints.AccSagittalFlat49LDown,
        [GlyphName.AccSagittalFlat49MDown] = GlyphNameCodePoints.AccSagittalFlat49MDown,
        [GlyphName.AccSagittalFlat49SDown] = GlyphNameCodePoints.AccSagittalFlat49SDown,
        [GlyphName.AccSagittalFlat49SUp] = GlyphNameCodePoints.AccSagittalFlat49SUp,
        [GlyphName.AccSagittalFlat55CDown] = GlyphNameCodePoints.AccSagittalFlat55CDown,
        [GlyphName.AccSagittalFlat55CUp] = GlyphNameCodePoints.AccSagittalFlat55CUp,
        [GlyphName.AccSagittalFlat5CDown] = GlyphNameCodePoints.AccSagittalFlat5CDown,
        [GlyphName.AccSagittalFlat5CUp] = GlyphNameCodePoints.AccSagittalFlat5CUp,
        [GlyphName.AccSagittalFlat5v11SDown] = GlyphNameCodePoints.AccSagittalFlat5v11SDown,
        [GlyphName.AccSagittalFlat5v11SUp] = GlyphNameCodePoints.AccSagittalFlat5v11SUp,
        [GlyphName.AccSagittalFlat5v13LDown] = GlyphNameCodePoints.AccSagittalFlat5v13LDown,
        [GlyphName.AccSagittalFlat5v13MDown] = GlyphNameCodePoints.AccSagittalFlat5v13MDown,
        [GlyphName.AccSagittalFlat5v19CDown] = GlyphNameCodePoints.AccSagittalFlat5v19CDown,
        [GlyphName.AccSagittalFlat5v19CUp] = GlyphNameCodePoints.AccSagittalFlat5v19CUp,
        [GlyphName.AccSagittalFlat5v23SDown] = GlyphNameCodePoints.AccSagittalFlat5v23SDown,
        [GlyphName.AccSagittalFlat5v23SUp] = GlyphNameCodePoints.AccSagittalFlat5v23SUp,
        [GlyphName.AccSagittalFlat5v49MDown] = GlyphNameCodePoints.AccSagittalFlat5v49MDown,
        [GlyphName.AccSagittalFlat5v7kDown] = GlyphNameCodePoints.AccSagittalFlat5v7kDown,
        [GlyphName.AccSagittalFlat5v7kUp] = GlyphNameCodePoints.AccSagittalFlat5v7kUp,
        [GlyphName.AccSagittalFlat7CDown] = GlyphNameCodePoints.AccSagittalFlat7CDown,
        [GlyphName.AccSagittalFlat7CUp] = GlyphNameCodePoints.AccSagittalFlat7CUp,
        [GlyphName.AccSagittalFlat7v11CDown] = GlyphNameCodePoints.AccSagittalFlat7v11CDown,
        [GlyphName.AccSagittalFlat7v11CUp] = GlyphNameCodePoints.AccSagittalFlat7v11CUp,
        [GlyphName.AccSagittalFlat7v11kDown] = GlyphNameCodePoints.AccSagittalFlat7v11kDown,
        [GlyphName.AccSagittalFlat7v11kUp] = GlyphNameCodePoints.AccSagittalFlat7v11kUp,
        [GlyphName.AccSagittalFlat7v19CDown] = GlyphNameCodePoints.AccSagittalFlat7v19CDown,
        [GlyphName.AccSagittalFlat7v19CUp] = GlyphNameCodePoints.AccSagittalFlat7v19CUp,
        [GlyphName.AccSagittalFractionalTinaDown] = GlyphNameCodePoints.AccSagittalFractionalTinaDown,
        [GlyphName.AccSagittalFractionalTinaUp] = GlyphNameCodePoints.AccSagittalFractionalTinaUp,
        [GlyphName.AccSagittalGrave] = GlyphNameCodePoints.AccSagittalGrave,
        [GlyphName.AccSagittalShaftDown] = GlyphNameCodePoints.AccSagittalShaftDown,
        [GlyphName.AccSagittalShaftUp] = GlyphNameCodePoints.AccSagittalShaftUp,
        [GlyphName.AccSagittalSharp] = GlyphNameCodePoints.AccSagittalSharp,
        [GlyphName.AccSagittalSharp11LUp] = GlyphNameCodePoints.AccSagittalSharp11LUp,
        [GlyphName.AccSagittalSharp11MUp] = GlyphNameCodePoints.AccSagittalSharp11MUp,
        [GlyphName.AccSagittalSharp11v19LUp] = GlyphNameCodePoints.AccSagittalSharp11v19LUp,
        [GlyphName.AccSagittalSharp11v19MUp] = GlyphNameCodePoints.AccSagittalSharp11v19MUp,
        [GlyphName.AccSagittalSharp11v49CDown] = GlyphNameCodePoints.AccSagittalSharp11v49CDown,
        [GlyphName.AccSagittalSharp11v49CUp] = GlyphNameCodePoints.AccSagittalSharp11v49CUp,
        [GlyphName.AccSagittalSharp143CDown] = GlyphNameCodePoints.AccSagittalSharp143CDown,
        [GlyphName.AccSagittalSharp143CUp] = GlyphNameCodePoints.AccSagittalSharp143CUp,
        [GlyphName.AccSagittalSharp17CDown] = GlyphNameCodePoints.AccSagittalSharp17CDown,
        [GlyphName.AccSagittalSharp17CUp] = GlyphNameCodePoints.AccSagittalSharp17CUp,
        [GlyphName.AccSagittalSharp17kDown] = GlyphNameCodePoints.AccSagittalSharp17kDown,
        [GlyphName.AccSagittalSharp17kUp] = GlyphNameCodePoints.AccSagittalSharp17kUp,
        [GlyphName.AccSagittalSharp19CDown] = GlyphNameCodePoints.AccSagittalSharp19CDown,
        [GlyphName.AccSagittalSharp19CUp] = GlyphNameCodePoints.AccSagittalSharp19CUp,
        [GlyphName.AccSagittalSharp19sDown] = GlyphNameCodePoints.AccSagittalSharp19sDown,
        [GlyphName.AccSagittalSharp19sUp] = GlyphNameCodePoints.AccSagittalSharp19sUp,
        [GlyphName.AccSagittalSharp23CDown] = GlyphNameCodePoints.AccSagittalSharp23CDown,
        [GlyphName.AccSagittalSharp23CUp] = GlyphNameCodePoints.AccSagittalSharp23CUp,
        [GlyphName.AccSagittalSharp23SDown] = GlyphNameCodePoints.AccSagittalSharp23SDown,
        [GlyphName.AccSagittalSharp23SUp] = GlyphNameCodePoints.AccSagittalSharp23SUp,
        [GlyphName.AccSagittalSharp25SDown] = GlyphNameCodePoints.AccSagittalSharp25SDown,
        [GlyphName.AccSagittalSharp25SUp] = GlyphNameCodePoints.AccSagittalSharp25SUp,
        [GlyphName.AccSagittalSharp35LUp] = GlyphNameCodePoints.AccSagittalSharp35LUp,
        [GlyphName.AccSagittalSharp35MUp] = GlyphNameCodePoints.AccSagittalSharp35MUp,
        [GlyphName.AccSagittalSharp49LUp] = GlyphNameCodePoints.AccSagittalSharp49LUp,
        [GlyphName.AccSagittalSharp49MUp] = GlyphNameCodePoints.AccSagittalSharp49MUp,
        [GlyphName.AccSagittalSharp49SDown] = GlyphNameCodePoints.AccSagittalSharp49SDown,
        [GlyphName.AccSagittalSharp49SUp] = GlyphNameCodePoints.AccSagittalSharp49SUp,
        [GlyphName.AccSagittalSharp55CDown] = GlyphNameCodePoints.AccSagittalSharp55CDown,
        [GlyphName.AccSagittalSharp55CUp] = GlyphNameCodePoints.AccSagittalSharp55CUp,
        [GlyphName.AccSagittalSharp5CDown] = GlyphNameCodePoints.AccSagittalSharp5CDown,
        [GlyphName.AccSagittalSharp5CUp] = GlyphNameCodePoints.AccSagittalSharp5CUp,
        [GlyphName.AccSagittalSharp5v11SDown] = GlyphNameCodePoints.AccSagittalSharp5v11SDown,
        [GlyphName.AccSagittalSharp5v11SUp] = GlyphNameCodePoints.AccSagittalSharp5v11SUp,
        [GlyphName.AccSagittalSharp5v13LUp] = GlyphNameCodePoints.AccSagittalSharp5v13LUp,
        [GlyphName.AccSagittalSharp5v13MUp] = GlyphNameCodePoints.AccSagittalSharp5v13MUp,
        [GlyphName.AccSagittalSharp5v19CDown] = GlyphNameCodePoints.AccSagittalSharp5v19CDown,
        [GlyphName.AccSagittalSharp5v19CUp] = GlyphNameCodePoints.AccSagittalSharp5v19CUp,
        [GlyphName.AccSagittalSharp5v23SDown] = GlyphNameCodePoints.AccSagittalSharp5v23SDown,
        [GlyphName.AccSagittalSharp5v23SUp] = GlyphNameCodePoints.AccSagittalSharp5v23SUp,
        [GlyphName.AccSagittalSharp5v49MUp] = GlyphNameCodePoints.AccSagittalSharp5v49MUp,
        [GlyphName.AccSagittalSharp5v7kDown] = GlyphNameCodePoints.AccSagittalSharp5v7kDown,
        [GlyphName.AccSagittalSharp5v7kUp] = GlyphNameCodePoints.AccSagittalSharp5v7kUp,
        [GlyphName.AccSagittalSharp7CDown] = GlyphNameCodePoints.AccSagittalSharp7CDown,
        [GlyphName.AccSagittalSharp7CUp] = GlyphNameCodePoints.AccSagittalSharp7CUp,
        [GlyphName.AccSagittalSharp7v11CDown] = GlyphNameCodePoints.AccSagittalSharp7v11CDown,
        [GlyphName.AccSagittalSharp7v11CUp] = GlyphNameCodePoints.AccSagittalSharp7v11CUp,
        [GlyphName.AccSagittalSharp7v11kDown] = GlyphNameCodePoints.AccSagittalSharp7v11kDown,
        [GlyphName.AccSagittalSharp7v11kUp] = GlyphNameCodePoints.AccSagittalSharp7v11kUp,
        [GlyphName.AccSagittalSharp7v19CDown] = GlyphNameCodePoints.AccSagittalSharp7v19CDown,
        [GlyphName.AccSagittalSharp7v19CUp] = GlyphNameCodePoints.AccSagittalSharp7v19CUp,
        [GlyphName.AccSagittalUnused1] = GlyphNameCodePoints.AccSagittalUnused1,
        [GlyphName.AccSagittalUnused2] = GlyphNameCodePoints.AccSagittalUnused2,
        [GlyphName.AccSagittalUnused3] = GlyphNameCodePoints.AccSagittalUnused3,
        [GlyphName.AccSagittalUnused4] = GlyphNameCodePoints.AccSagittalUnused4,
        [GlyphName.AccdnCombDot] = GlyphNameCodePoints.AccdnCombDot,
        [GlyphName.AccdnCombLH2RanksEmpty] = GlyphNameCodePoints.AccdnCombLH2RanksEmpty,
        [GlyphName.AccdnCombLH3RanksEmptySquare] = GlyphNameCodePoints.AccdnCombLH3RanksEmptySquare,
        [GlyphName.AccdnCombRH3RanksEmpty] = GlyphNameCodePoints.AccdnCombRH3RanksEmpty,
        [GlyphName.AccdnCombRH4RanksEmpty] = GlyphNameCodePoints.AccdnCombRH4RanksEmpty,
        [GlyphName.AccdnDiatonicClef] = GlyphNameCodePoints.AccdnDiatonicClef,
        [GlyphName.AccdnLH2Ranks16Round] = GlyphNameCodePoints.AccdnLH2Ranks16Round,
        [GlyphName.AccdnLH2Ranks8Plus16Round] = GlyphNameCodePoints.AccdnLH2Ranks8Plus16Round,
        [GlyphName.AccdnLH2Ranks8Round] = GlyphNameCodePoints.AccdnLH2Ranks8Round,
        [GlyphName.AccdnLH2RanksFullMasterRound] = GlyphNameCodePoints.AccdnLH2RanksFullMasterRound,
        [GlyphName.AccdnLH2RanksMasterPlus16Round] = GlyphNameCodePoints.AccdnLH2RanksMasterPlus16Round,
        [GlyphName.AccdnLH2RanksMasterRound] = GlyphNameCodePoints.AccdnLH2RanksMasterRound,
        [GlyphName.AccdnLH3Ranks2Plus8Square] = GlyphNameCodePoints.AccdnLH3Ranks2Plus8Square,
        [GlyphName.AccdnLH3Ranks2Square] = GlyphNameCodePoints.AccdnLH3Ranks2Square,
        [GlyphName.AccdnLH3Ranks8Square] = GlyphNameCodePoints.AccdnLH3Ranks8Square,
        [GlyphName.AccdnLH3RanksDouble8Square] = GlyphNameCodePoints.AccdnLH3RanksDouble8Square,
        [GlyphName.AccdnLH3RanksTuttiSquare] = GlyphNameCodePoints.AccdnLH3RanksTuttiSquare,
        [GlyphName.AccdnPull] = GlyphNameCodePoints.AccdnPull,
        [GlyphName.AccdnPush] = GlyphNameCodePoints.AccdnPush,
        [GlyphName.AccdnRH3RanksAccordion] = GlyphNameCodePoints.AccdnRH3RanksAccordion,
        [GlyphName.AccdnRH3RanksAuthenticMusette] = GlyphNameCodePoints.AccdnRH3RanksAuthenticMusette,
        [GlyphName.AccdnRH3RanksBandoneon] = GlyphNameCodePoints.AccdnRH3RanksBandoneon,
        [GlyphName.AccdnRH3RanksBassoon] = GlyphNameCodePoints.AccdnRH3RanksBassoon,
        [GlyphName.AccdnRH3RanksClarinet] = GlyphNameCodePoints.AccdnRH3RanksClarinet,
        [GlyphName.AccdnRH3RanksDoubleTremoloLower8ve] = GlyphNameCodePoints.AccdnRH3RanksDoubleTremoloLower8ve,
        [GlyphName.AccdnRH3RanksDoubleTremoloUpper8ve] = GlyphNameCodePoints.AccdnRH3RanksDoubleTremoloUpper8ve,
        [GlyphName.AccdnRH3RanksFullFactory] = GlyphNameCodePoints.AccdnRH3RanksFullFactory,
        [GlyphName.AccdnRH3RanksHarmonium] = GlyphNameCodePoints.AccdnRH3RanksHarmonium,
        [GlyphName.AccdnRH3RanksImitationMusette] = GlyphNameCodePoints.AccdnRH3RanksImitationMusette,
        [GlyphName.AccdnRH3RanksLowerTremolo8] = GlyphNameCodePoints.AccdnRH3RanksLowerTremolo8,
        [GlyphName.AccdnRH3RanksMaster] = GlyphNameCodePoints.AccdnRH3RanksMaster,
        [GlyphName.AccdnRH3RanksOboe] = GlyphNameCodePoints.AccdnRH3RanksOboe,
        [GlyphName.AccdnRH3RanksOrgan] = GlyphNameCodePoints.AccdnRH3RanksOrgan,
        [GlyphName.AccdnRH3RanksPiccolo] = GlyphNameCodePoints.AccdnRH3RanksPiccolo,
        [GlyphName.AccdnRH3RanksTremoloLower8ve] = GlyphNameCodePoints.AccdnRH3RanksTremoloLower8ve,
        [GlyphName.AccdnRH3RanksTremoloUpper8ve] = GlyphNameCodePoints.AccdnRH3RanksTremoloUpper8ve,
        [GlyphName.AccdnRH3RanksTwoChoirs] = GlyphNameCodePoints.AccdnRH3RanksTwoChoirs,
        [GlyphName.AccdnRH3RanksUpperTremolo8] = GlyphNameCodePoints.AccdnRH3RanksUpperTremolo8,
        [GlyphName.AccdnRH3RanksViolin] = GlyphNameCodePoints.AccdnRH3RanksViolin,
        [GlyphName.AccdnRH4RanksAlto] = GlyphNameCodePoints.AccdnRH4RanksAlto,
        [GlyphName.AccdnRH4RanksBassAlto] = GlyphNameCodePoints.AccdnRH4RanksBassAlto,
        [GlyphName.AccdnRH4RanksMaster] = GlyphNameCodePoints.AccdnRH4RanksMaster,
        [GlyphName.AccdnRH4RanksSoftBass] = GlyphNameCodePoints.AccdnRH4RanksSoftBass,
        [GlyphName.AccdnRH4RanksSoftTenor] = GlyphNameCodePoints.AccdnRH4RanksSoftTenor,
        [GlyphName.AccdnRH4RanksSoprano] = GlyphNameCodePoints.AccdnRH4RanksSoprano,
        [GlyphName.AccdnRH4RanksTenor] = GlyphNameCodePoints.AccdnRH4RanksTenor,
        [GlyphName.AccdnRicochet2] = GlyphNameCodePoints.AccdnRicochet2,
        [GlyphName.AccdnRicochet3] = GlyphNameCodePoints.AccdnRicochet3,
        [GlyphName.AccdnRicochet4] = GlyphNameCodePoints.AccdnRicochet4,
        [GlyphName.AccdnRicochet5] = GlyphNameCodePoints.AccdnRicochet5,
        [GlyphName.AccdnRicochet6] = GlyphNameCodePoints.AccdnRicochet6,
        [GlyphName.AccdnRicochetStem2] = GlyphNameCodePoints.AccdnRicochetStem2,
        [GlyphName.AccdnRicochetStem3] = GlyphNameCodePoints.AccdnRicochetStem3,
        [GlyphName.AccdnRicochetStem4] = GlyphNameCodePoints.AccdnRicochetStem4,
        [GlyphName.AccdnRicochetStem5] = GlyphNameCodePoints.AccdnRicochetStem5,
        [GlyphName.AccdnRicochetStem6] = GlyphNameCodePoints.AccdnRicochetStem6,
        [GlyphName.Accidental1CommaFlat] = GlyphNameCodePoints.Accidental1CommaFlat,
        [GlyphName.Accidental1CommaSharp] = GlyphNameCodePoints.Accidental1CommaSharp,
        [GlyphName.Accidental2CommaFlat] = GlyphNameCodePoints.Accidental2CommaFlat,
        [GlyphName.Accidental2CommaSharp] = GlyphNameCodePoints.Accidental2CommaSharp,
        [GlyphName.Accidental3CommaFlat] = GlyphNameCodePoints.Accidental3CommaFlat,
        [GlyphName.Accidental3CommaSharp] = GlyphNameCodePoints.Accidental3CommaSharp,
        [GlyphName.Accidental4CommaFlat] = GlyphNameCodePoints.Accidental4CommaFlat,
        [GlyphName.Accidental5CommaSharp] = GlyphNameCodePoints.Accidental5CommaSharp,
        [GlyphName.AccidentalArrowDown] = GlyphNameCodePoints.AccidentalArrowDown,
        [GlyphName.AccidentalArrowUp] = GlyphNameCodePoints.AccidentalArrowUp,
        [GlyphName.AccidentalBakiyeFlat] = GlyphNameCodePoints.AccidentalBakiyeFlat,
        [GlyphName.AccidentalBakiyeSharp] = GlyphNameCodePoints.AccidentalBakiyeSharp,
        [GlyphName.AccidentalBracketLeft] = GlyphNameCodePoints.AccidentalBracketLeft,
        [GlyphName.AccidentalBracketRight] = GlyphNameCodePoints.AccidentalBracketRight,
        [GlyphName.AccidentalBuyukMucennebFlat] = GlyphNameCodePoints.AccidentalBuyukMucennebFlat,
        [GlyphName.AccidentalBuyukMucennebSharp] = GlyphNameCodePoints.AccidentalBuyukMucennebSharp,
        [GlyphName.AccidentalCombiningCloseCurlyBrace] = GlyphNameCodePoints.AccidentalCombiningCloseCurlyBrace,
        [GlyphName.AccidentalCombiningLower17Schisma] = GlyphNameCodePoints.AccidentalCombiningLower17Schisma,
        [GlyphName.AccidentalCombiningLower19Schisma] = GlyphNameCodePoints.AccidentalCombiningLower19Schisma,
        [GlyphName.AccidentalCombiningLower23Limit29LimitComma] = GlyphNameCodePoints.AccidentalCombiningLower23Limit29LimitComma,
        [GlyphName.AccidentalCombiningLower29LimitComma] = GlyphNameCodePoints.AccidentalCombiningLower29LimitComma,
        [GlyphName.AccidentalCombiningLower31Schisma] = GlyphNameCodePoints.AccidentalCombiningLower31Schisma,
        [GlyphName.AccidentalCombiningLower37Quartertone] = GlyphNameCodePoints.AccidentalCombiningLower37Quartertone,
        [GlyphName.AccidentalCombiningLower41Comma] = GlyphNameCodePoints.AccidentalCombiningLower41Comma,
        [GlyphName.AccidentalCombiningLower43Comma] = GlyphNameCodePoints.AccidentalCombiningLower43Comma,
        [GlyphName.AccidentalCombiningLower47Quartertone] = GlyphNameCodePoints.AccidentalCombiningLower47Quartertone,
        [GlyphName.AccidentalCombiningLower53LimitComma] = GlyphNameCodePoints.AccidentalCombiningLower53LimitComma,
        [GlyphName.AccidentalCombiningOpenCurlyBrace] = GlyphNameCodePoints.AccidentalCombiningOpenCurlyBrace,
        [GlyphName.AccidentalCombiningRaise17Schisma] = GlyphNameCodePoints.AccidentalCombiningRaise17Schisma,
        [GlyphName.AccidentalCombiningRaise19Schisma] = GlyphNameCodePoints.AccidentalCombiningRaise19Schisma,
        [GlyphName.AccidentalCombiningRaise23Limit29LimitComma] = GlyphNameCodePoints.AccidentalCombiningRaise23Limit29LimitComma,
        [GlyphName.AccidentalCombiningRaise29LimitComma] = GlyphNameCodePoints.AccidentalCombiningRaise29LimitComma,
        [GlyphName.AccidentalCombiningRaise31Schisma] = GlyphNameCodePoints.AccidentalCombiningRaise31Schisma,
        [GlyphName.AccidentalCombiningRaise37Quartertone] = GlyphNameCodePoints.AccidentalCombiningRaise37Quartertone,
        [GlyphName.AccidentalCombiningRaise41Comma] = GlyphNameCodePoints.AccidentalCombiningRaise41Comma,
        [GlyphName.AccidentalCombiningRaise43Comma] = GlyphNameCodePoints.AccidentalCombiningRaise43Comma,
        [GlyphName.AccidentalCombiningRaise47Quartertone] = GlyphNameCodePoints.AccidentalCombiningRaise47Quartertone,
        [GlyphName.AccidentalCombiningRaise53LimitComma] = GlyphNameCodePoints.AccidentalCombiningRaise53LimitComma,
        [GlyphName.AccidentalCommaSlashDown] = GlyphNameCodePoints.AccidentalCommaSlashDown,
        [GlyphName.AccidentalCommaSlashUp] = GlyphNameCodePoints.AccidentalCommaSlashUp,
        [GlyphName.AccidentalDoubleFlat] = GlyphNameCodePoints.AccidentalDoubleFlat,
        [GlyphName.AccidentalDoubleFlatArabic] = GlyphNameCodePoints.AccidentalDoubleFlatArabic,
        [GlyphName.AccidentalDoubleFlatEqualTempered] = GlyphNameCodePoints.AccidentalDoubleFlatEqualTempered,
        [GlyphName.AccidentalDoubleFlatOneArrowDown] = GlyphNameCodePoints.AccidentalDoubleFlatOneArrowDown,
        [GlyphName.AccidentalDoubleFlatOneArrowUp] = GlyphNameCodePoints.AccidentalDoubleFlatOneArrowUp,
        [GlyphName.AccidentalDoubleFlatReversed] = GlyphNameCodePoints.AccidentalDoubleFlatReversed,
        [GlyphName.AccidentalDoubleFlatThreeArrowsDown] = GlyphNameCodePoints.AccidentalDoubleFlatThreeArrowsDown,
        [GlyphName.AccidentalDoubleFlatThreeArrowsUp] = GlyphNameCodePoints.AccidentalDoubleFlatThreeArrowsUp,
        [GlyphName.AccidentalDoubleFlatTurned] = GlyphNameCodePoints.AccidentalDoubleFlatTurned,
        [GlyphName.AccidentalDoubleFlatTwoArrowsDown] = GlyphNameCodePoints.AccidentalDoubleFlatTwoArrowsDown,
        [GlyphName.AccidentalDoubleFlatTwoArrowsUp] = GlyphNameCodePoints.AccidentalDoubleFlatTwoArrowsUp,
        [GlyphName.AccidentalDoubleSharp] = GlyphNameCodePoints.AccidentalDoubleSharp,
        [GlyphName.AccidentalDoubleSharpArabic] = GlyphNameCodePoints.AccidentalDoubleSharpArabic,
        [GlyphName.AccidentalDoubleSharpEqualTempered] = GlyphNameCodePoints.AccidentalDoubleSharpEqualTempered,
        [GlyphName.AccidentalDoubleSharpOneArrowDown] = GlyphNameCodePoints.AccidentalDoubleSharpOneArrowDown,
        [GlyphName.AccidentalDoubleSharpOneArrowUp] = GlyphNameCodePoints.AccidentalDoubleSharpOneArrowUp,
        [GlyphName.AccidentalDoubleSharpThreeArrowsDown] = GlyphNameCodePoints.AccidentalDoubleSharpThreeArrowsDown,
        [GlyphName.AccidentalDoubleSharpThreeArrowsUp] = GlyphNameCodePoints.AccidentalDoubleSharpThreeArrowsUp,
        [GlyphName.AccidentalDoubleSharpTwoArrowsDown] = GlyphNameCodePoints.AccidentalDoubleSharpTwoArrowsDown,
        [GlyphName.AccidentalDoubleSharpTwoArrowsUp] = GlyphNameCodePoints.AccidentalDoubleSharpTwoArrowsUp,
        [GlyphName.AccidentalEnharmonicAlmostEqualTo] = GlyphNameCodePoints.AccidentalEnharmonicAlmostEqualTo,
        [GlyphName.AccidentalEnharmonicEquals] = GlyphNameCodePoints.AccidentalEnharmonicEquals,
        [GlyphName.AccidentalEnharmonicTilde] = GlyphNameCodePoints.AccidentalEnharmonicTilde,
        [GlyphName.AccidentalFilledReversedFlatAndFlat] = GlyphNameCodePoints.AccidentalFilledReversedFlatAndFlat,
        [GlyphName.AccidentalFilledReversedFlatAndFlatArrowDown] = GlyphNameCodePoints.AccidentalFilledReversedFlatAndFlatArrowDown,
        [GlyphName.AccidentalFilledReversedFlatAndFlatArrowUp] = GlyphNameCodePoints.AccidentalFilledReversedFlatAndFlatArrowUp,
        [GlyphName.AccidentalFilledReversedFlatArrowDown] = GlyphNameCodePoints.AccidentalFilledReversedFlatArrowDown,
        [GlyphName.AccidentalFilledReversedFlatArrowUp] = GlyphNameCodePoints.AccidentalFilledReversedFlatArrowUp,
        [GlyphName.AccidentalFiveQuarterTonesFlatArrowDown] = GlyphNameCodePoints.AccidentalFiveQuarterTonesFlatArrowDown,
        [GlyphName.AccidentalFiveQuarterTonesSharpArrowUp] = GlyphNameCodePoints.AccidentalFiveQuarterTonesSharpArrowUp,
        [GlyphName.AccidentalFlat] = GlyphNameCodePoints.AccidentalFlat,
        [GlyphName.AccidentalFlatArabic] = GlyphNameCodePoints.AccidentalFlatArabic,
        [GlyphName.AccidentalFlatEqualTempered] = GlyphNameCodePoints.AccidentalFlatEqualTempered,
        [GlyphName.AccidentalFlatLoweredStockhausen] = GlyphNameCodePoints.AccidentalFlatLoweredStockhausen,
        [GlyphName.AccidentalFlatOneArrowDown] = GlyphNameCodePoints.AccidentalFlatOneArrowDown,
        [GlyphName.AccidentalFlatOneArrowUp] = GlyphNameCodePoints.AccidentalFlatOneArrowUp,
        [GlyphName.AccidentalFlatRaisedStockhausen] = GlyphNameCodePoints.AccidentalFlatRaisedStockhausen,
        [GlyphName.AccidentalFlatRepeatedLineStockhausen] = GlyphNameCodePoints.AccidentalFlatRepeatedLineStockhausen,
        [GlyphName.AccidentalFlatRepeatedSpaceStockhausen] = GlyphNameCodePoints.AccidentalFlatRepeatedSpaceStockhausen,
        [GlyphName.AccidentalFlatThreeArrowsDown] = GlyphNameCodePoints.AccidentalFlatThreeArrowsDown,
        [GlyphName.AccidentalFlatThreeArrowsUp] = GlyphNameCodePoints.AccidentalFlatThreeArrowsUp,
        [GlyphName.AccidentalFlatTurned] = GlyphNameCodePoints.AccidentalFlatTurned,
        [GlyphName.AccidentalFlatTwoArrowsDown] = GlyphNameCodePoints.AccidentalFlatTwoArrowsDown,
        [GlyphName.AccidentalFlatTwoArrowsUp] = GlyphNameCodePoints.AccidentalFlatTwoArrowsUp,
        [GlyphName.AccidentalHabaFlatQuarterToneHigher] = GlyphNameCodePoints.AccidentalHabaFlatQuarterToneHigher,
        [GlyphName.AccidentalHabaFlatThreeQuarterTonesLower] = GlyphNameCodePoints.AccidentalHabaFlatThreeQuarterTonesLower,
        [GlyphName.AccidentalHabaQuarterToneHigher] = GlyphNameCodePoints.AccidentalHabaQuarterToneHigher,
        [GlyphName.AccidentalHabaQuarterToneLower] = GlyphNameCodePoints.AccidentalHabaQuarterToneLower,
        [GlyphName.AccidentalHabaSharpQuarterToneLower] = GlyphNameCodePoints.AccidentalHabaSharpQuarterToneLower,
        [GlyphName.AccidentalHabaSharpThreeQuarterTonesHigher] = GlyphNameCodePoints.AccidentalHabaSharpThreeQuarterTonesHigher,
        [GlyphName.AccidentalHalfSharpArrowDown] = GlyphNameCodePoints.AccidentalHalfSharpArrowDown,
        [GlyphName.AccidentalHalfSharpArrowUp] = GlyphNameCodePoints.AccidentalHalfSharpArrowUp,
        [GlyphName.AccidentalJohnston13] = GlyphNameCodePoints.AccidentalJohnston13,
        [GlyphName.AccidentalJohnston31] = GlyphNameCodePoints.AccidentalJohnston31,
        [GlyphName.AccidentalJohnstonDown] = GlyphNameCodePoints.AccidentalJohnstonDown,
        [GlyphName.AccidentalJohnstonEl] = GlyphNameCodePoints.AccidentalJohnstonEl,
        [GlyphName.AccidentalJohnstonMinus] = GlyphNameCodePoints.AccidentalJohnstonMinus,
        [GlyphName.AccidentalJohnstonPlus] = GlyphNameCodePoints.AccidentalJohnstonPlus,
        [GlyphName.AccidentalJohnstonSeven] = GlyphNameCodePoints.AccidentalJohnstonSeven,
        [GlyphName.AccidentalJohnstonUp] = GlyphNameCodePoints.AccidentalJohnstonUp,
        [GlyphName.AccidentalKomaFlat] = GlyphNameCodePoints.AccidentalKomaFlat,
        [GlyphName.AccidentalKomaSharp] = GlyphNameCodePoints.AccidentalKomaSharp,
        [GlyphName.AccidentalKoron] = GlyphNameCodePoints.AccidentalKoron,
        [GlyphName.AccidentalKucukMucennebFlat] = GlyphNameCodePoints.AccidentalKucukMucennebFlat,
        [GlyphName.AccidentalKucukMucennebSharp] = GlyphNameCodePoints.AccidentalKucukMucennebSharp,
        [GlyphName.AccidentalLargeDoubleSharp] = GlyphNameCodePoints.AccidentalLargeDoubleSharp,
        [GlyphName.AccidentalLowerOneSeptimalComma] = GlyphNameCodePoints.AccidentalLowerOneSeptimalComma,
        [GlyphName.AccidentalLowerOneTridecimalQuartertone] = GlyphNameCodePoints.AccidentalLowerOneTridecimalQuartertone,
        [GlyphName.AccidentalLowerOneUndecimalQuartertone] = GlyphNameCodePoints.AccidentalLowerOneUndecimalQuartertone,
        [GlyphName.AccidentalLowerTwoSeptimalCommas] = GlyphNameCodePoints.AccidentalLowerTwoSeptimalCommas,
        [GlyphName.AccidentalLoweredStockhausen] = GlyphNameCodePoints.AccidentalLoweredStockhausen,
        [GlyphName.AccidentalNarrowReversedFlat] = GlyphNameCodePoints.AccidentalNarrowReversedFlat,
        [GlyphName.AccidentalNarrowReversedFlatAndFlat] = GlyphNameCodePoints.AccidentalNarrowReversedFlatAndFlat,
        [GlyphName.AccidentalNatural] = GlyphNameCodePoints.AccidentalNatural,
        [GlyphName.AccidentalNaturalArabic] = GlyphNameCodePoints.AccidentalNaturalArabic,
        [GlyphName.AccidentalNaturalEqualTempered] = GlyphNameCodePoints.AccidentalNaturalEqualTempered,
        [GlyphName.AccidentalNaturalFlat] = GlyphNameCodePoints.AccidentalNaturalFlat,
        [GlyphName.AccidentalNaturalLoweredStockhausen] = GlyphNameCodePoints.AccidentalNaturalLoweredStockhausen,
        [GlyphName.AccidentalNaturalOneArrowDown] = GlyphNameCodePoints.AccidentalNaturalOneArrowDown,
        [GlyphName.AccidentalNaturalOneArrowUp] = GlyphNameCodePoints.AccidentalNaturalOneArrowUp,
        [GlyphName.AccidentalNaturalRaisedStockhausen] = GlyphNameCodePoints.AccidentalNaturalRaisedStockhausen,
        [GlyphName.AccidentalNaturalReversed] = GlyphNameCodePoints.AccidentalNaturalReversed,
        [GlyphName.AccidentalNaturalSharp] = GlyphNameCodePoints.AccidentalNaturalSharp,
        [GlyphName.AccidentalNaturalThreeArrowsDown] = GlyphNameCodePoints.AccidentalNaturalThreeArrowsDown,
        [GlyphName.AccidentalNaturalThreeArrowsUp] = GlyphNameCodePoints.AccidentalNaturalThreeArrowsUp,
        [GlyphName.AccidentalNaturalTwoArrowsDown] = GlyphNameCodePoints.AccidentalNaturalTwoArrowsDown,
        [GlyphName.AccidentalNaturalTwoArrowsUp] = GlyphNameCodePoints.AccidentalNaturalTwoArrowsUp,
        [GlyphName.AccidentalOneAndAHalfSharpsArrowDown] = GlyphNameCodePoints.AccidentalOneAndAHalfSharpsArrowDown,
        [GlyphName.AccidentalOneAndAHalfSharpsArrowUp] = GlyphNameCodePoints.AccidentalOneAndAHalfSharpsArrowUp,
        [GlyphName.AccidentalOneQuarterToneFlatFerneyhough] = GlyphNameCodePoints.AccidentalOneQuarterToneFlatFerneyhough,
        [GlyphName.AccidentalOneQuarterToneFlatStockhausen] = GlyphNameCodePoints.AccidentalOneQuarterToneFlatStockhausen,
        [GlyphName.AccidentalOneQuarterToneSharpFerneyhough] = GlyphNameCodePoints.AccidentalOneQuarterToneSharpFerneyhough,
        [GlyphName.AccidentalOneQuarterToneSharpStockhausen] = GlyphNameCodePoints.AccidentalOneQuarterToneSharpStockhausen,
        [GlyphName.AccidentalOneThirdToneFlatFerneyhough] = GlyphNameCodePoints.AccidentalOneThirdToneFlatFerneyhough,
        [GlyphName.AccidentalOneThirdToneSharpFerneyhough] = GlyphNameCodePoints.AccidentalOneThirdToneSharpFerneyhough,
        [GlyphName.AccidentalParensLeft] = GlyphNameCodePoints.AccidentalParensLeft,
        [GlyphName.AccidentalParensRight] = GlyphNameCodePoints.AccidentalParensRight,
        [GlyphName.AccidentalQuarterFlatEqualTempered] = GlyphNameCodePoints.AccidentalQuarterFlatEqualTempered,
        [GlyphName.AccidentalQuarterSharpEqualTempered] = GlyphNameCodePoints.AccidentalQuarterSharpEqualTempered,
        [GlyphName.AccidentalQuarterToneFlat4] = GlyphNameCodePoints.AccidentalQuarterToneFlat4,
        [GlyphName.AccidentalQuarterToneFlatArabic] = GlyphNameCodePoints.AccidentalQuarterToneFlatArabic,
        [GlyphName.AccidentalQuarterToneFlatArrowUp] = GlyphNameCodePoints.AccidentalQuarterToneFlatArrowUp,
        [GlyphName.AccidentalQuarterToneFlatFilledReversed] = GlyphNameCodePoints.AccidentalQuarterToneFlatFilledReversed,
        [GlyphName.AccidentalQuarterToneFlatNaturalArrowDown] = GlyphNameCodePoints.AccidentalQuarterToneFlatNaturalArrowDown,
        [GlyphName.AccidentalQuarterToneFlatPenderecki] = GlyphNameCodePoints.AccidentalQuarterToneFlatPenderecki,
        [GlyphName.AccidentalQuarterToneFlatStein] = GlyphNameCodePoints.AccidentalQuarterToneFlatStein,
        [GlyphName.AccidentalQuarterToneFlatVanBlankenburg] = GlyphNameCodePoints.AccidentalQuarterToneFlatVanBlankenburg,
        [GlyphName.AccidentalQuarterToneSharp4] = GlyphNameCodePoints.AccidentalQuarterToneSharp4,
        [GlyphName.AccidentalQuarterToneSharpArabic] = GlyphNameCodePoints.AccidentalQuarterToneSharpArabic,
        [GlyphName.AccidentalQuarterToneSharpArrowDown] = GlyphNameCodePoints.AccidentalQuarterToneSharpArrowDown,
        [GlyphName.AccidentalQuarterToneSharpBusotti] = GlyphNameCodePoints.AccidentalQuarterToneSharpBusotti,
        [GlyphName.AccidentalQuarterToneSharpNaturalArrowUp] = GlyphNameCodePoints.AccidentalQuarterToneSharpNaturalArrowUp,
        [GlyphName.AccidentalQuarterToneSharpStein] = GlyphNameCodePoints.AccidentalQuarterToneSharpStein,
        [GlyphName.AccidentalQuarterToneSharpWiggle] = GlyphNameCodePoints.AccidentalQuarterToneSharpWiggle,
        [GlyphName.AccidentalRaiseOneSeptimalComma] = GlyphNameCodePoints.AccidentalRaiseOneSeptimalComma,
        [GlyphName.AccidentalRaiseOneTridecimalQuartertone] = GlyphNameCodePoints.AccidentalRaiseOneTridecimalQuartertone,
        [GlyphName.AccidentalRaiseOneUndecimalQuartertone] = GlyphNameCodePoints.AccidentalRaiseOneUndecimalQuartertone,
        [GlyphName.AccidentalRaiseTwoSeptimalCommas] = GlyphNameCodePoints.AccidentalRaiseTwoSeptimalCommas,
        [GlyphName.AccidentalRaisedStockhausen] = GlyphNameCodePoints.AccidentalRaisedStockhausen,
        [GlyphName.AccidentalReversedFlatAndFlatArrowDown] = GlyphNameCodePoints.AccidentalReversedFlatAndFlatArrowDown,
        [GlyphName.AccidentalReversedFlatAndFlatArrowUp] = GlyphNameCodePoints.AccidentalReversedFlatAndFlatArrowUp,
        [GlyphName.AccidentalReversedFlatArrowDown] = GlyphNameCodePoints.AccidentalReversedFlatArrowDown,
        [GlyphName.AccidentalReversedFlatArrowUp] = GlyphNameCodePoints.AccidentalReversedFlatArrowUp,
        [GlyphName.AccidentalSharp] = GlyphNameCodePoints.AccidentalSharp,
        [GlyphName.AccidentalSharpArabic] = GlyphNameCodePoints.AccidentalSharpArabic,
        [GlyphName.AccidentalSharpEqualTempered] = GlyphNameCodePoints.AccidentalSharpEqualTempered,
        [GlyphName.AccidentalSharpLoweredStockhausen] = GlyphNameCodePoints.AccidentalSharpLoweredStockhausen,
        [GlyphName.AccidentalSharpOneArrowDown] = GlyphNameCodePoints.AccidentalSharpOneArrowDown,
        [GlyphName.AccidentalSharpOneArrowUp] = GlyphNameCodePoints.AccidentalSharpOneArrowUp,
        [GlyphName.AccidentalSharpOneHorizontalStroke] = GlyphNameCodePoints.AccidentalSharpOneHorizontalStroke,
        [GlyphName.AccidentalSharpRaisedStockhausen] = GlyphNameCodePoints.AccidentalSharpRaisedStockhausen,
        [GlyphName.AccidentalSharpRepeatedLineStockhausen] = GlyphNameCodePoints.AccidentalSharpRepeatedLineStockhausen,
        [GlyphName.AccidentalSharpRepeatedSpaceStockhausen] = GlyphNameCodePoints.AccidentalSharpRepeatedSpaceStockhausen,
        [GlyphName.AccidentalSharpReversed] = GlyphNameCodePoints.AccidentalSharpReversed,
        [GlyphName.AccidentalSharpSharp] = GlyphNameCodePoints.AccidentalSharpSharp,
        [GlyphName.AccidentalSharpThreeArrowsDown] = GlyphNameCodePoints.AccidentalSharpThreeArrowsDown,
        [GlyphName.AccidentalSharpThreeArrowsUp] = GlyphNameCodePoints.AccidentalSharpThreeArrowsUp,
        [GlyphName.AccidentalSharpTwoArrowsDown] = GlyphNameCodePoints.AccidentalSharpTwoArrowsDown,
        [GlyphName.AccidentalSharpTwoArrowsUp] = GlyphNameCodePoints.AccidentalSharpTwoArrowsUp,
        [GlyphName.AccidentalSims12Down] = GlyphNameCodePoints.AccidentalSims12Down,
        [GlyphName.AccidentalSims12Up] = GlyphNameCodePoints.AccidentalSims12Up,
        [GlyphName.AccidentalSims4Down] = GlyphNameCodePoints.AccidentalSims4Down,
        [GlyphName.AccidentalSims4Up] = GlyphNameCodePoints.AccidentalSims4Up,
        [GlyphName.AccidentalSims6Down] = GlyphNameCodePoints.AccidentalSims6Down,
        [GlyphName.AccidentalSims6Up] = GlyphNameCodePoints.AccidentalSims6Up,
        [GlyphName.AccidentalSori] = GlyphNameCodePoints.AccidentalSori,
        [GlyphName.AccidentalTavenerFlat] = GlyphNameCodePoints.AccidentalTavenerFlat,
        [GlyphName.AccidentalTavenerSharp] = GlyphNameCodePoints.AccidentalTavenerSharp,
        [GlyphName.AccidentalThreeQuarterTonesFlatArabic] = GlyphNameCodePoints.AccidentalThreeQuarterTonesFlatArabic,
        [GlyphName.AccidentalThreeQuarterTonesFlatArrowDown] = GlyphNameCodePoints.AccidentalThreeQuarterTonesFlatArrowDown,
        [GlyphName.AccidentalThreeQuarterTonesFlatArrowUp] = GlyphNameCodePoints.AccidentalThreeQuarterTonesFlatArrowUp,
        [GlyphName.AccidentalThreeQuarterTonesFlatCouper] = GlyphNameCodePoints.AccidentalThreeQuarterTonesFlatCouper,
        [GlyphName.AccidentalThreeQuarterTonesFlatGrisey] = GlyphNameCodePoints.AccidentalThreeQuarterTonesFlatGrisey,
        [GlyphName.AccidentalThreeQuarterTonesFlatTartini] = GlyphNameCodePoints.AccidentalThreeQuarterTonesFlatTartini,
        [GlyphName.AccidentalThreeQuarterTonesFlatZimmermann] = GlyphNameCodePoints.AccidentalThreeQuarterTonesFlatZimmermann,
        [GlyphName.AccidentalThreeQuarterTonesSharpArabic] = GlyphNameCodePoints.AccidentalThreeQuarterTonesSharpArabic,
        [GlyphName.AccidentalThreeQuarterTonesSharpArrowDown] = GlyphNameCodePoints.AccidentalThreeQuarterTonesSharpArrowDown,
        [GlyphName.AccidentalThreeQuarterTonesSharpArrowUp] = GlyphNameCodePoints.AccidentalThreeQuarterTonesSharpArrowUp,
        [GlyphName.AccidentalThreeQuarterTonesSharpBusotti] = GlyphNameCodePoints.AccidentalThreeQuarterTonesSharpBusotti,
        [GlyphName.AccidentalThreeQuarterTonesSharpStein] = GlyphNameCodePoints.AccidentalThreeQuarterTonesSharpStein,
        [GlyphName.AccidentalThreeQuarterTonesSharpStockhausen] = GlyphNameCodePoints.AccidentalThreeQuarterTonesSharpStockhausen,
        [GlyphName.AccidentalTripleFlat] = GlyphNameCodePoints.AccidentalTripleFlat,
        [GlyphName.AccidentalTripleSharp] = GlyphNameCodePoints.AccidentalTripleSharp,
        [GlyphName.AccidentalTwoThirdTonesFlatFerneyhough] = GlyphNameCodePoints.AccidentalTwoThirdTonesFlatFerneyhough,
        [GlyphName.AccidentalTwoThirdTonesSharpFerneyhough] = GlyphNameCodePoints.AccidentalTwoThirdTonesSharpFerneyhough,
        [GlyphName.AccidentalUpsAndDownsDown] = GlyphNameCodePoints.AccidentalUpsAndDownsDown,
        [GlyphName.AccidentalUpsAndDownsLess] = GlyphNameCodePoints.AccidentalUpsAndDownsLess,
        [GlyphName.AccidentalUpsAndDownsMore] = GlyphNameCodePoints.AccidentalUpsAndDownsMore,
        [GlyphName.AccidentalUpsAndDownsUp] = GlyphNameCodePoints.AccidentalUpsAndDownsUp,
        [GlyphName.AccidentalWilsonMinus] = GlyphNameCodePoints.AccidentalWilsonMinus,
        [GlyphName.AccidentalWilsonPlus] = GlyphNameCodePoints.AccidentalWilsonPlus,
        [GlyphName.AccidentalWyschnegradsky10TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky10TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky10TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky10TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky11TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky11TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky11TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky11TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky1TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky1TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky1TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky1TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky2TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky2TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky2TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky2TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky3TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky3TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky3TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky3TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky4TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky4TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky4TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky4TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky5TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky5TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky5TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky5TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky6TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky6TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky6TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky6TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky7TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky7TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky7TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky7TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky8TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky8TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky8TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky8TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky9TwelfthsFlat] = GlyphNameCodePoints.AccidentalWyschnegradsky9TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky9TwelfthsSharp] = GlyphNameCodePoints.AccidentalWyschnegradsky9TwelfthsSharp,
        [GlyphName.AccidentalXenakisOneThirdToneSharp] = GlyphNameCodePoints.AccidentalXenakisOneThirdToneSharp,
        [GlyphName.AccidentalXenakisTwoThirdTonesSharp] = GlyphNameCodePoints.AccidentalXenakisTwoThirdTonesSharp,
        [GlyphName.AnalyticsChoralmelodie] = GlyphNameCodePoints.AnalyticsChoralmelodie,
        [GlyphName.AnalyticsEndStimme] = GlyphNameCodePoints.AnalyticsEndStimme,
        [GlyphName.AnalyticsHauptrhythmus] = GlyphNameCodePoints.AnalyticsHauptrhythmus,
        [GlyphName.AnalyticsHauptstimme] = GlyphNameCodePoints.AnalyticsHauptstimme,
        [GlyphName.AnalyticsInversion1] = GlyphNameCodePoints.AnalyticsInversion1,
        [GlyphName.AnalyticsNebenstimme] = GlyphNameCodePoints.AnalyticsNebenstimme,
        [GlyphName.AnalyticsStartStimme] = GlyphNameCodePoints.AnalyticsStartStimme,
        [GlyphName.AnalyticsTheme] = GlyphNameCodePoints.AnalyticsTheme,
        [GlyphName.AnalyticsTheme1] = GlyphNameCodePoints.AnalyticsTheme1,
        [GlyphName.AnalyticsThemeInversion] = GlyphNameCodePoints.AnalyticsThemeInversion,
        [GlyphName.AnalyticsThemeRetrograde] = GlyphNameCodePoints.AnalyticsThemeRetrograde,
        [GlyphName.AnalyticsThemeRetrogradeInversion] = GlyphNameCodePoints.AnalyticsThemeRetrogradeInversion,
        [GlyphName.Arpeggiato] = GlyphNameCodePoints.Arpeggiato,
        [GlyphName.ArpeggiatoDown] = GlyphNameCodePoints.ArpeggiatoDown,
        [GlyphName.ArpeggiatoUp] = GlyphNameCodePoints.ArpeggiatoUp,
        [GlyphName.ArrowBlackDown] = GlyphNameCodePoints.ArrowBlackDown,
        [GlyphName.ArrowBlackDownLeft] = GlyphNameCodePoints.ArrowBlackDownLeft,
        [GlyphName.ArrowBlackDownRight] = GlyphNameCodePoints.ArrowBlackDownRight,
        [GlyphName.ArrowBlackLeft] = GlyphNameCodePoints.ArrowBlackLeft,
        [GlyphName.ArrowBlackRight] = GlyphNameCodePoints.ArrowBlackRight,
        [GlyphName.ArrowBlackUp] = GlyphNameCodePoints.ArrowBlackUp,
        [GlyphName.ArrowBlackUpLeft] = GlyphNameCodePoints.ArrowBlackUpLeft,
        [GlyphName.ArrowBlackUpRight] = GlyphNameCodePoints.ArrowBlackUpRight,
        [GlyphName.ArrowOpenDown] = GlyphNameCodePoints.ArrowOpenDown,
        [GlyphName.ArrowOpenDownLeft] = GlyphNameCodePoints.ArrowOpenDownLeft,
        [GlyphName.ArrowOpenDownRight] = GlyphNameCodePoints.ArrowOpenDownRight,
        [GlyphName.ArrowOpenLeft] = GlyphNameCodePoints.ArrowOpenLeft,
        [GlyphName.ArrowOpenRight] = GlyphNameCodePoints.ArrowOpenRight,
        [GlyphName.ArrowOpenUp] = GlyphNameCodePoints.ArrowOpenUp,
        [GlyphName.ArrowOpenUpLeft] = GlyphNameCodePoints.ArrowOpenUpLeft,
        [GlyphName.ArrowOpenUpRight] = GlyphNameCodePoints.ArrowOpenUpRight,
        [GlyphName.ArrowWhiteDown] = GlyphNameCodePoints.ArrowWhiteDown,
        [GlyphName.ArrowWhiteDownLeft] = GlyphNameCodePoints.ArrowWhiteDownLeft,
        [GlyphName.ArrowWhiteDownRight] = GlyphNameCodePoints.ArrowWhiteDownRight,
        [GlyphName.ArrowWhiteLeft] = GlyphNameCodePoints.ArrowWhiteLeft,
        [GlyphName.ArrowWhiteRight] = GlyphNameCodePoints.ArrowWhiteRight,
        [GlyphName.ArrowWhiteUp] = GlyphNameCodePoints.ArrowWhiteUp,
        [GlyphName.ArrowWhiteUpLeft] = GlyphNameCodePoints.ArrowWhiteUpLeft,
        [GlyphName.ArrowWhiteUpRight] = GlyphNameCodePoints.ArrowWhiteUpRight,
        [GlyphName.ArrowheadBlackDown] = GlyphNameCodePoints.ArrowheadBlackDown,
        [GlyphName.ArrowheadBlackDownLeft] = GlyphNameCodePoints.ArrowheadBlackDownLeft,
        [GlyphName.ArrowheadBlackDownRight] = GlyphNameCodePoints.ArrowheadBlackDownRight,
        [GlyphName.ArrowheadBlackLeft] = GlyphNameCodePoints.ArrowheadBlackLeft,
        [GlyphName.ArrowheadBlackRight] = GlyphNameCodePoints.ArrowheadBlackRight,
        [GlyphName.ArrowheadBlackUp] = GlyphNameCodePoints.ArrowheadBlackUp,
        [GlyphName.ArrowheadBlackUpLeft] = GlyphNameCodePoints.ArrowheadBlackUpLeft,
        [GlyphName.ArrowheadBlackUpRight] = GlyphNameCodePoints.ArrowheadBlackUpRight,
        [GlyphName.ArrowheadOpenDown] = GlyphNameCodePoints.ArrowheadOpenDown,
        [GlyphName.ArrowheadOpenDownLeft] = GlyphNameCodePoints.ArrowheadOpenDownLeft,
        [GlyphName.ArrowheadOpenDownRight] = GlyphNameCodePoints.ArrowheadOpenDownRight,
        [GlyphName.ArrowheadOpenLeft] = GlyphNameCodePoints.ArrowheadOpenLeft,
        [GlyphName.ArrowheadOpenRight] = GlyphNameCodePoints.ArrowheadOpenRight,
        [GlyphName.ArrowheadOpenUp] = GlyphNameCodePoints.ArrowheadOpenUp,
        [GlyphName.ArrowheadOpenUpLeft] = GlyphNameCodePoints.ArrowheadOpenUpLeft,
        [GlyphName.ArrowheadOpenUpRight] = GlyphNameCodePoints.ArrowheadOpenUpRight,
        [GlyphName.ArrowheadWhiteDown] = GlyphNameCodePoints.ArrowheadWhiteDown,
        [GlyphName.ArrowheadWhiteDownLeft] = GlyphNameCodePoints.ArrowheadWhiteDownLeft,
        [GlyphName.ArrowheadWhiteDownRight] = GlyphNameCodePoints.ArrowheadWhiteDownRight,
        [GlyphName.ArrowheadWhiteLeft] = GlyphNameCodePoints.ArrowheadWhiteLeft,
        [GlyphName.ArrowheadWhiteRight] = GlyphNameCodePoints.ArrowheadWhiteRight,
        [GlyphName.ArrowheadWhiteUp] = GlyphNameCodePoints.ArrowheadWhiteUp,
        [GlyphName.ArrowheadWhiteUpLeft] = GlyphNameCodePoints.ArrowheadWhiteUpLeft,
        [GlyphName.ArrowheadWhiteUpRight] = GlyphNameCodePoints.ArrowheadWhiteUpRight,
        [GlyphName.ArticAccentAbove] = GlyphNameCodePoints.ArticAccentAbove,
        [GlyphName.ArticAccentBelow] = GlyphNameCodePoints.ArticAccentBelow,
        [GlyphName.ArticAccentStaccatoAbove] = GlyphNameCodePoints.ArticAccentStaccatoAbove,
        [GlyphName.ArticAccentStaccatoBelow] = GlyphNameCodePoints.ArticAccentStaccatoBelow,
        [GlyphName.ArticLaissezVibrerAbove] = GlyphNameCodePoints.ArticLaissezVibrerAbove,
        [GlyphName.ArticLaissezVibrerBelow] = GlyphNameCodePoints.ArticLaissezVibrerBelow,
        [GlyphName.ArticMarcatoAbove] = GlyphNameCodePoints.ArticMarcatoAbove,
        [GlyphName.ArticMarcatoBelow] = GlyphNameCodePoints.ArticMarcatoBelow,
        [GlyphName.ArticMarcatoStaccatoAbove] = GlyphNameCodePoints.ArticMarcatoStaccatoAbove,
        [GlyphName.ArticMarcatoStaccatoBelow] = GlyphNameCodePoints.ArticMarcatoStaccatoBelow,
        [GlyphName.ArticMarcatoTenutoAbove] = GlyphNameCodePoints.ArticMarcatoTenutoAbove,
        [GlyphName.ArticMarcatoTenutoBelow] = GlyphNameCodePoints.ArticMarcatoTenutoBelow,
        [GlyphName.ArticSoftAccentAbove] = GlyphNameCodePoints.ArticSoftAccentAbove,
        [GlyphName.ArticSoftAccentBelow] = GlyphNameCodePoints.ArticSoftAccentBelow,
        [GlyphName.ArticSoftAccentStaccatoAbove] = GlyphNameCodePoints.ArticSoftAccentStaccatoAbove,
        [GlyphName.ArticSoftAccentStaccatoBelow] = GlyphNameCodePoints.ArticSoftAccentStaccatoBelow,
        [GlyphName.ArticSoftAccentTenutoAbove] = GlyphNameCodePoints.ArticSoftAccentTenutoAbove,
        [GlyphName.ArticSoftAccentTenutoBelow] = GlyphNameCodePoints.ArticSoftAccentTenutoBelow,
        [GlyphName.ArticSoftAccentTenutoStaccatoAbove] = GlyphNameCodePoints.ArticSoftAccentTenutoStaccatoAbove,
        [GlyphName.ArticSoftAccentTenutoStaccatoBelow] = GlyphNameCodePoints.ArticSoftAccentTenutoStaccatoBelow,
        [GlyphName.ArticStaccatissimoAbove] = GlyphNameCodePoints.ArticStaccatissimoAbove,
        [GlyphName.ArticStaccatissimoBelow] = GlyphNameCodePoints.ArticStaccatissimoBelow,
        [GlyphName.ArticStaccatissimoStrokeAbove] = GlyphNameCodePoints.ArticStaccatissimoStrokeAbove,
        [GlyphName.ArticStaccatissimoStrokeBelow] = GlyphNameCodePoints.ArticStaccatissimoStrokeBelow,
        [GlyphName.ArticStaccatissimoWedgeAbove] = GlyphNameCodePoints.ArticStaccatissimoWedgeAbove,
        [GlyphName.ArticStaccatissimoWedgeBelow] = GlyphNameCodePoints.ArticStaccatissimoWedgeBelow,
        [GlyphName.ArticStaccatoAbove] = GlyphNameCodePoints.ArticStaccatoAbove,
        [GlyphName.ArticStaccatoBelow] = GlyphNameCodePoints.ArticStaccatoBelow,
        [GlyphName.ArticStressAbove] = GlyphNameCodePoints.ArticStressAbove,
        [GlyphName.ArticStressBelow] = GlyphNameCodePoints.ArticStressBelow,
        [GlyphName.ArticTenutoAbove] = GlyphNameCodePoints.ArticTenutoAbove,
        [GlyphName.ArticTenutoAccentAbove] = GlyphNameCodePoints.ArticTenutoAccentAbove,
        [GlyphName.ArticTenutoAccentBelow] = GlyphNameCodePoints.ArticTenutoAccentBelow,
        [GlyphName.ArticTenutoBelow] = GlyphNameCodePoints.ArticTenutoBelow,
        [GlyphName.ArticTenutoStaccatoAbove] = GlyphNameCodePoints.ArticTenutoStaccatoAbove,
        [GlyphName.ArticTenutoStaccatoBelow] = GlyphNameCodePoints.ArticTenutoStaccatoBelow,
        [GlyphName.ArticUnstressAbove] = GlyphNameCodePoints.ArticUnstressAbove,
        [GlyphName.ArticUnstressBelow] = GlyphNameCodePoints.ArticUnstressBelow,
        [GlyphName.AugmentationDot] = GlyphNameCodePoints.AugmentationDot,
        [GlyphName.BarlineDashed] = GlyphNameCodePoints.BarlineDashed,
        [GlyphName.BarlineDotted] = GlyphNameCodePoints.BarlineDotted,
        [GlyphName.BarlineDouble] = GlyphNameCodePoints.BarlineDouble,
        [GlyphName.BarlineFinal] = GlyphNameCodePoints.BarlineFinal,
        [GlyphName.BarlineHeavy] = GlyphNameCodePoints.BarlineHeavy,
        [GlyphName.BarlineHeavyHeavy] = GlyphNameCodePoints.BarlineHeavyHeavy,
        [GlyphName.BarlineReverseFinal] = GlyphNameCodePoints.BarlineReverseFinal,
        [GlyphName.BarlineShort] = GlyphNameCodePoints.BarlineShort,
        [GlyphName.BarlineSingle] = GlyphNameCodePoints.BarlineSingle,
        [GlyphName.BarlineTick] = GlyphNameCodePoints.BarlineTick,
        [GlyphName.BeamAccelRit1] = GlyphNameCodePoints.BeamAccelRit1,
        [GlyphName.BeamAccelRit10] = GlyphNameCodePoints.BeamAccelRit10,
        [GlyphName.BeamAccelRit11] = GlyphNameCodePoints.BeamAccelRit11,
        [GlyphName.BeamAccelRit12] = GlyphNameCodePoints.BeamAccelRit12,
        [GlyphName.BeamAccelRit13] = GlyphNameCodePoints.BeamAccelRit13,
        [GlyphName.BeamAccelRit14] = GlyphNameCodePoints.BeamAccelRit14,
        [GlyphName.BeamAccelRit15] = GlyphNameCodePoints.BeamAccelRit15,
        [GlyphName.BeamAccelRit2] = GlyphNameCodePoints.BeamAccelRit2,
        [GlyphName.BeamAccelRit3] = GlyphNameCodePoints.BeamAccelRit3,
        [GlyphName.BeamAccelRit4] = GlyphNameCodePoints.BeamAccelRit4,
        [GlyphName.BeamAccelRit5] = GlyphNameCodePoints.BeamAccelRit5,
        [GlyphName.BeamAccelRit6] = GlyphNameCodePoints.BeamAccelRit6,
        [GlyphName.BeamAccelRit7] = GlyphNameCodePoints.BeamAccelRit7,
        [GlyphName.BeamAccelRit8] = GlyphNameCodePoints.BeamAccelRit8,
        [GlyphName.BeamAccelRit9] = GlyphNameCodePoints.BeamAccelRit9,
        [GlyphName.BeamAccelRitFinal] = GlyphNameCodePoints.BeamAccelRitFinal,
        [GlyphName.Brace] = GlyphNameCodePoints.Brace,
        [GlyphName.Bracket] = GlyphNameCodePoints.Bracket,
        [GlyphName.BracketBottom] = GlyphNameCodePoints.BracketBottom,
        [GlyphName.BracketTop] = GlyphNameCodePoints.BracketTop,
        [GlyphName.BrassBend] = GlyphNameCodePoints.BrassBend,
        [GlyphName.BrassDoitLong] = GlyphNameCodePoints.BrassDoitLong,
        [GlyphName.BrassDoitMedium] = GlyphNameCodePoints.BrassDoitMedium,
        [GlyphName.BrassDoitShort] = GlyphNameCodePoints.BrassDoitShort,
        [GlyphName.BrassFallLipLong] = GlyphNameCodePoints.BrassFallLipLong,
        [GlyphName.BrassFallLipMedium] = GlyphNameCodePoints.BrassFallLipMedium,
        [GlyphName.BrassFallLipShort] = GlyphNameCodePoints.BrassFallLipShort,
        [GlyphName.BrassFallRoughLong] = GlyphNameCodePoints.BrassFallRoughLong,
        [GlyphName.BrassFallRoughMedium] = GlyphNameCodePoints.BrassFallRoughMedium,
        [GlyphName.BrassFallRoughShort] = GlyphNameCodePoints.BrassFallRoughShort,
        [GlyphName.BrassFallSmoothLong] = GlyphNameCodePoints.BrassFallSmoothLong,
        [GlyphName.BrassFallSmoothMedium] = GlyphNameCodePoints.BrassFallSmoothMedium,
        [GlyphName.BrassFallSmoothShort] = GlyphNameCodePoints.BrassFallSmoothShort,
        [GlyphName.BrassFlip] = GlyphNameCodePoints.BrassFlip,
        [GlyphName.BrassHarmonMuteClosed] = GlyphNameCodePoints.BrassHarmonMuteClosed,
        [GlyphName.BrassHarmonMuteStemHalfLeft] = GlyphNameCodePoints.BrassHarmonMuteStemHalfLeft,
        [GlyphName.BrassHarmonMuteStemHalfRight] = GlyphNameCodePoints.BrassHarmonMuteStemHalfRight,
        [GlyphName.BrassHarmonMuteStemOpen] = GlyphNameCodePoints.BrassHarmonMuteStemOpen,
        [GlyphName.BrassJazzTurn] = GlyphNameCodePoints.BrassJazzTurn,
        [GlyphName.BrassLiftLong] = GlyphNameCodePoints.BrassLiftLong,
        [GlyphName.BrassLiftMedium] = GlyphNameCodePoints.BrassLiftMedium,
        [GlyphName.BrassLiftShort] = GlyphNameCodePoints.BrassLiftShort,
        [GlyphName.BrassLiftSmoothLong] = GlyphNameCodePoints.BrassLiftSmoothLong,
        [GlyphName.BrassLiftSmoothMedium] = GlyphNameCodePoints.BrassLiftSmoothMedium,
        [GlyphName.BrassLiftSmoothShort] = GlyphNameCodePoints.BrassLiftSmoothShort,
        [GlyphName.BrassMuteClosed] = GlyphNameCodePoints.BrassMuteClosed,
        [GlyphName.BrassMuteHalfClosed] = GlyphNameCodePoints.BrassMuteHalfClosed,
        [GlyphName.BrassMuteOpen] = GlyphNameCodePoints.BrassMuteOpen,
        [GlyphName.BrassPlop] = GlyphNameCodePoints.BrassPlop,
        [GlyphName.BrassScoop] = GlyphNameCodePoints.BrassScoop,
        [GlyphName.BrassSmear] = GlyphNameCodePoints.BrassSmear,
        [GlyphName.BrassValveTrill] = GlyphNameCodePoints.BrassValveTrill,
        [GlyphName.BreathMarkComma] = GlyphNameCodePoints.BreathMarkComma,
        [GlyphName.BreathMarkSalzedo] = GlyphNameCodePoints.BreathMarkSalzedo,
        [GlyphName.BreathMarkTick] = GlyphNameCodePoints.BreathMarkTick,
        [GlyphName.BreathMarkUpbow] = GlyphNameCodePoints.BreathMarkUpbow,
        [GlyphName.BridgeClef] = GlyphNameCodePoints.BridgeClef,
        [GlyphName.BuzzRoll] = GlyphNameCodePoints.BuzzRoll,
        [GlyphName.CClef] = GlyphNameCodePoints.CClef,
        [GlyphName.CClef8vb] = GlyphNameCodePoints.CClef8vb,
        [GlyphName.CClefArrowDown] = GlyphNameCodePoints.CClefArrowDown,
        [GlyphName.CClefArrowUp] = GlyphNameCodePoints.CClefArrowUp,
        [GlyphName.CClefChange] = GlyphNameCodePoints.CClefChange,
        [GlyphName.CClefCombining] = GlyphNameCodePoints.CClefCombining,
        [GlyphName.CClefReversed] = GlyphNameCodePoints.CClefReversed,
        [GlyphName.CClefSquare] = GlyphNameCodePoints.CClefSquare,
        [GlyphName.Caesura] = GlyphNameCodePoints.Caesura,
        [GlyphName.CaesuraCurved] = GlyphNameCodePoints.CaesuraCurved,
        [GlyphName.CaesuraShort] = GlyphNameCodePoints.CaesuraShort,
        [GlyphName.CaesuraSingleStroke] = GlyphNameCodePoints.CaesuraSingleStroke,
        [GlyphName.CaesuraThick] = GlyphNameCodePoints.CaesuraThick,
        [GlyphName.ChantAccentusAbove] = GlyphNameCodePoints.ChantAccentusAbove,
        [GlyphName.ChantAccentusBelow] = GlyphNameCodePoints.ChantAccentusBelow,
        [GlyphName.ChantAuctumAsc] = GlyphNameCodePoints.ChantAuctumAsc,
        [GlyphName.ChantAuctumDesc] = GlyphNameCodePoints.ChantAuctumDesc,
        [GlyphName.ChantAugmentum] = GlyphNameCodePoints.ChantAugmentum,
        [GlyphName.ChantCaesura] = GlyphNameCodePoints.ChantCaesura,
        [GlyphName.ChantCclef] = GlyphNameCodePoints.ChantCclef,
        [GlyphName.ChantCirculusAbove] = GlyphNameCodePoints.ChantCirculusAbove,
        [GlyphName.ChantCirculusBelow] = GlyphNameCodePoints.ChantCirculusBelow,
        [GlyphName.ChantConnectingLineAsc2nd] = GlyphNameCodePoints.ChantConnectingLineAsc2nd,
        [GlyphName.ChantConnectingLineAsc3rd] = GlyphNameCodePoints.ChantConnectingLineAsc3rd,
        [GlyphName.ChantConnectingLineAsc4th] = GlyphNameCodePoints.ChantConnectingLineAsc4th,
        [GlyphName.ChantConnectingLineAsc5th] = GlyphNameCodePoints.ChantConnectingLineAsc5th,
        [GlyphName.ChantConnectingLineAsc6th] = GlyphNameCodePoints.ChantConnectingLineAsc6th,
        [GlyphName.ChantCustosStemDownPosHigh] = GlyphNameCodePoints.ChantCustosStemDownPosHigh,
        [GlyphName.ChantCustosStemDownPosHighest] = GlyphNameCodePoints.ChantCustosStemDownPosHighest,
        [GlyphName.ChantCustosStemDownPosMiddle] = GlyphNameCodePoints.ChantCustosStemDownPosMiddle,
        [GlyphName.ChantCustosStemUpPosLow] = GlyphNameCodePoints.ChantCustosStemUpPosLow,
        [GlyphName.ChantCustosStemUpPosLowest] = GlyphNameCodePoints.ChantCustosStemUpPosLowest,
        [GlyphName.ChantCustosStemUpPosMiddle] = GlyphNameCodePoints.ChantCustosStemUpPosMiddle,
        [GlyphName.ChantDeminutumLower] = GlyphNameCodePoints.ChantDeminutumLower,
        [GlyphName.ChantDeminutumUpper] = GlyphNameCodePoints.ChantDeminutumUpper,
        [GlyphName.ChantDivisioFinalis] = GlyphNameCodePoints.ChantDivisioFinalis,
        [GlyphName.ChantDivisioMaior] = GlyphNameCodePoints.ChantDivisioMaior,
        [GlyphName.ChantDivisioMaxima] = GlyphNameCodePoints.ChantDivisioMaxima,
        [GlyphName.ChantDivisioMinima] = GlyphNameCodePoints.ChantDivisioMinima,
        [GlyphName.ChantEntryLineAsc2nd] = GlyphNameCodePoints.ChantEntryLineAsc2nd,
        [GlyphName.ChantEntryLineAsc3rd] = GlyphNameCodePoints.ChantEntryLineAsc3rd,
        [GlyphName.ChantEntryLineAsc4th] = GlyphNameCodePoints.ChantEntryLineAsc4th,
        [GlyphName.ChantEntryLineAsc5th] = GlyphNameCodePoints.ChantEntryLineAsc5th,
        [GlyphName.ChantEntryLineAsc6th] = GlyphNameCodePoints.ChantEntryLineAsc6th,
        [GlyphName.ChantEpisema] = GlyphNameCodePoints.ChantEpisema,
        [GlyphName.ChantFclef] = GlyphNameCodePoints.ChantFclef,
        [GlyphName.ChantIctusAbove] = GlyphNameCodePoints.ChantIctusAbove,
        [GlyphName.ChantIctusBelow] = GlyphNameCodePoints.ChantIctusBelow,
        [GlyphName.ChantLigaturaDesc2nd] = GlyphNameCodePoints.ChantLigaturaDesc2nd,
        [GlyphName.ChantLigaturaDesc3rd] = GlyphNameCodePoints.ChantLigaturaDesc3rd,
        [GlyphName.ChantLigaturaDesc4th] = GlyphNameCodePoints.ChantLigaturaDesc4th,
        [GlyphName.ChantLigaturaDesc5th] = GlyphNameCodePoints.ChantLigaturaDesc5th,
        [GlyphName.ChantOriscusAscending] = GlyphNameCodePoints.ChantOriscusAscending,
        [GlyphName.ChantOriscusDescending] = GlyphNameCodePoints.ChantOriscusDescending,
        [GlyphName.ChantOriscusLiquescens] = GlyphNameCodePoints.ChantOriscusLiquescens,
        [GlyphName.ChantPodatusLower] = GlyphNameCodePoints.ChantPodatusLower,
        [GlyphName.ChantPodatusUpper] = GlyphNameCodePoints.ChantPodatusUpper,
        [GlyphName.ChantPunctum] = GlyphNameCodePoints.ChantPunctum,
        [GlyphName.ChantPunctumCavum] = GlyphNameCodePoints.ChantPunctumCavum,
        [GlyphName.ChantPunctumDeminutum] = GlyphNameCodePoints.ChantPunctumDeminutum,
        [GlyphName.ChantPunctumInclinatum] = GlyphNameCodePoints.ChantPunctumInclinatum,
        [GlyphName.ChantPunctumInclinatumAuctum] = GlyphNameCodePoints.ChantPunctumInclinatumAuctum,
        [GlyphName.ChantPunctumInclinatumDeminutum] = GlyphNameCodePoints.ChantPunctumInclinatumDeminutum,
        [GlyphName.ChantPunctumLinea] = GlyphNameCodePoints.ChantPunctumLinea,
        [GlyphName.ChantPunctumLineaCavum] = GlyphNameCodePoints.ChantPunctumLineaCavum,
        [GlyphName.ChantPunctumVirga] = GlyphNameCodePoints.ChantPunctumVirga,
        [GlyphName.ChantPunctumVirgaReversed] = GlyphNameCodePoints.ChantPunctumVirgaReversed,
        [GlyphName.ChantQuilisma] = GlyphNameCodePoints.ChantQuilisma,
        [GlyphName.ChantSemicirculusAbove] = GlyphNameCodePoints.ChantSemicirculusAbove,
        [GlyphName.ChantSemicirculusBelow] = GlyphNameCodePoints.ChantSemicirculusBelow,
        [GlyphName.ChantStaff] = GlyphNameCodePoints.ChantStaff,
        [GlyphName.ChantStaffNarrow] = GlyphNameCodePoints.ChantStaffNarrow,
        [GlyphName.ChantStaffWide] = GlyphNameCodePoints.ChantStaffWide,
        [GlyphName.ChantStrophicus] = GlyphNameCodePoints.ChantStrophicus,
        [GlyphName.ChantStrophicusAuctus] = GlyphNameCodePoints.ChantStrophicusAuctus,
        [GlyphName.ChantStrophicusLiquescens2nd] = GlyphNameCodePoints.ChantStrophicusLiquescens2nd,
        [GlyphName.ChantStrophicusLiquescens3rd] = GlyphNameCodePoints.ChantStrophicusLiquescens3rd,
        [GlyphName.ChantStrophicusLiquescens4th] = GlyphNameCodePoints.ChantStrophicusLiquescens4th,
        [GlyphName.ChantStrophicusLiquescens5th] = GlyphNameCodePoints.ChantStrophicusLiquescens5th,
        [GlyphName.ChantVirgula] = GlyphNameCodePoints.ChantVirgula,
        [GlyphName.Clef15] = GlyphNameCodePoints.Clef15,
        [GlyphName.Clef8] = GlyphNameCodePoints.Clef8,
        [GlyphName.ClefChangeCombining] = GlyphNameCodePoints.ClefChangeCombining,
        [GlyphName.Coda] = GlyphNameCodePoints.Coda,
        [GlyphName.CodaSquare] = GlyphNameCodePoints.CodaSquare,
        [GlyphName.ConductorBeat2Compound] = GlyphNameCodePoints.ConductorBeat2Compound,
        [GlyphName.ConductorBeat2Simple] = GlyphNameCodePoints.ConductorBeat2Simple,
        [GlyphName.ConductorBeat3Compound] = GlyphNameCodePoints.ConductorBeat3Compound,
        [GlyphName.ConductorBeat3Simple] = GlyphNameCodePoints.ConductorBeat3Simple,
        [GlyphName.ConductorBeat4Compound] = GlyphNameCodePoints.ConductorBeat4Compound,
        [GlyphName.ConductorBeat4Simple] = GlyphNameCodePoints.ConductorBeat4Simple,
        [GlyphName.ConductorLeftBeat] = GlyphNameCodePoints.ConductorLeftBeat,
        [GlyphName.ConductorRightBeat] = GlyphNameCodePoints.ConductorRightBeat,
        [GlyphName.ConductorStrongBeat] = GlyphNameCodePoints.ConductorStrongBeat,
        [GlyphName.ConductorUnconducted] = GlyphNameCodePoints.ConductorUnconducted,
        [GlyphName.ConductorWeakBeat] = GlyphNameCodePoints.ConductorWeakBeat,
        [GlyphName.ControlBeginBeam] = GlyphNameCodePoints.ControlBeginBeam,
        [GlyphName.ControlBeginPhrase] = GlyphNameCodePoints.ControlBeginPhrase,
        [GlyphName.ControlBeginSlur] = GlyphNameCodePoints.ControlBeginSlur,
        [GlyphName.ControlBeginTie] = GlyphNameCodePoints.ControlBeginTie,
        [GlyphName.ControlEndBeam] = GlyphNameCodePoints.ControlEndBeam,
        [GlyphName.ControlEndPhrase] = GlyphNameCodePoints.ControlEndPhrase,
        [GlyphName.ControlEndSlur] = GlyphNameCodePoints.ControlEndSlur,
        [GlyphName.ControlEndTie] = GlyphNameCodePoints.ControlEndTie,
        [GlyphName.CsymAccidentalDoubleFlat] = GlyphNameCodePoints.CsymAccidentalDoubleFlat,
        [GlyphName.CsymAccidentalDoubleSharp] = GlyphNameCodePoints.CsymAccidentalDoubleSharp,
        [GlyphName.CsymAccidentalFlat] = GlyphNameCodePoints.CsymAccidentalFlat,
        [GlyphName.CsymAccidentalNatural] = GlyphNameCodePoints.CsymAccidentalNatural,
        [GlyphName.CsymAccidentalSharp] = GlyphNameCodePoints.CsymAccidentalSharp,
        [GlyphName.CsymAccidentalTripleFlat] = GlyphNameCodePoints.CsymAccidentalTripleFlat,
        [GlyphName.CsymAccidentalTripleSharp] = GlyphNameCodePoints.CsymAccidentalTripleSharp,
        [GlyphName.CsymAlteredBassSlash] = GlyphNameCodePoints.CsymAlteredBassSlash,
        [GlyphName.CsymAugmented] = GlyphNameCodePoints.CsymAugmented,
        [GlyphName.CsymBracketLeftTall] = GlyphNameCodePoints.CsymBracketLeftTall,
        [GlyphName.CsymBracketRightTall] = GlyphNameCodePoints.CsymBracketRightTall,
        [GlyphName.CsymDiagonalArrangementSlash] = GlyphNameCodePoints.CsymDiagonalArrangementSlash,
        [GlyphName.CsymDiminished] = GlyphNameCodePoints.CsymDiminished,
        [GlyphName.CsymHalfDiminished] = GlyphNameCodePoints.CsymHalfDiminished,
        [GlyphName.CsymMajorSeventh] = GlyphNameCodePoints.CsymMajorSeventh,
        [GlyphName.CsymMinor] = GlyphNameCodePoints.CsymMinor,
        [GlyphName.CsymParensLeftTall] = GlyphNameCodePoints.CsymParensLeftTall,
        [GlyphName.CsymParensLeftVeryTall] = GlyphNameCodePoints.CsymParensLeftVeryTall,
        [GlyphName.CsymParensRightTall] = GlyphNameCodePoints.CsymParensRightTall,
        [GlyphName.CsymParensRightVeryTall] = GlyphNameCodePoints.CsymParensRightVeryTall,
        [GlyphName.CurlewSign] = GlyphNameCodePoints.CurlewSign,
        [GlyphName.DaCapo] = GlyphNameCodePoints.DaCapo,
        [GlyphName.DalSegno] = GlyphNameCodePoints.DalSegno,
        [GlyphName.DaseianExcellentes1] = GlyphNameCodePoints.DaseianExcellentes1,
        [GlyphName.DaseianExcellentes2] = GlyphNameCodePoints.DaseianExcellentes2,
        [GlyphName.DaseianExcellentes3] = GlyphNameCodePoints.DaseianExcellentes3,
        [GlyphName.DaseianExcellentes4] = GlyphNameCodePoints.DaseianExcellentes4,
        [GlyphName.DaseianFinales1] = GlyphNameCodePoints.DaseianFinales1,
        [GlyphName.DaseianFinales2] = GlyphNameCodePoints.DaseianFinales2,
        [GlyphName.DaseianFinales3] = GlyphNameCodePoints.DaseianFinales3,
        [GlyphName.DaseianFinales4] = GlyphNameCodePoints.DaseianFinales4,
        [GlyphName.DaseianGraves1] = GlyphNameCodePoints.DaseianGraves1,
        [GlyphName.DaseianGraves2] = GlyphNameCodePoints.DaseianGraves2,
        [GlyphName.DaseianGraves3] = GlyphNameCodePoints.DaseianGraves3,
        [GlyphName.DaseianGraves4] = GlyphNameCodePoints.DaseianGraves4,
        [GlyphName.DaseianResidua1] = GlyphNameCodePoints.DaseianResidua1,
        [GlyphName.DaseianResidua2] = GlyphNameCodePoints.DaseianResidua2,
        [GlyphName.DaseianSuperiores1] = GlyphNameCodePoints.DaseianSuperiores1,
        [GlyphName.DaseianSuperiores2] = GlyphNameCodePoints.DaseianSuperiores2,
        [GlyphName.DaseianSuperiores3] = GlyphNameCodePoints.DaseianSuperiores3,
        [GlyphName.DaseianSuperiores4] = GlyphNameCodePoints.DaseianSuperiores4,
        [GlyphName.DoubleLateralRollStevens] = GlyphNameCodePoints.DoubleLateralRollStevens,
        [GlyphName.DoubleTongueAbove] = GlyphNameCodePoints.DoubleTongueAbove,
        [GlyphName.DoubleTongueBelow] = GlyphNameCodePoints.DoubleTongueBelow,
        [GlyphName.DynamicCombinedSeparatorColon] = GlyphNameCodePoints.DynamicCombinedSeparatorColon,
        [GlyphName.DynamicCombinedSeparatorHyphen] = GlyphNameCodePoints.DynamicCombinedSeparatorHyphen,
        [GlyphName.DynamicCombinedSeparatorSlash] = GlyphNameCodePoints.DynamicCombinedSeparatorSlash,
        [GlyphName.DynamicCombinedSeparatorSpace] = GlyphNameCodePoints.DynamicCombinedSeparatorSpace,
        [GlyphName.DynamicCrescendoHairpin] = GlyphNameCodePoints.DynamicCrescendoHairpin,
        [GlyphName.DynamicDiminuendoHairpin] = GlyphNameCodePoints.DynamicDiminuendoHairpin,
        [GlyphName.DynamicFF] = GlyphNameCodePoints.DynamicFF,
        [GlyphName.DynamicFFF] = GlyphNameCodePoints.DynamicFFF,
        [GlyphName.DynamicFFFF] = GlyphNameCodePoints.DynamicFFFF,
        [GlyphName.DynamicFFFFF] = GlyphNameCodePoints.DynamicFFFFF,
        [GlyphName.DynamicFFFFFF] = GlyphNameCodePoints.DynamicFFFFFF,
        [GlyphName.DynamicForte] = GlyphNameCodePoints.DynamicForte,
        [GlyphName.DynamicFortePiano] = GlyphNameCodePoints.DynamicFortePiano,
        [GlyphName.DynamicForzando] = GlyphNameCodePoints.DynamicForzando,
        [GlyphName.DynamicHairpinBracketLeft] = GlyphNameCodePoints.DynamicHairpinBracketLeft,
        [GlyphName.DynamicHairpinBracketRight] = GlyphNameCodePoints.DynamicHairpinBracketRight,
        [GlyphName.DynamicHairpinParenthesisLeft] = GlyphNameCodePoints.DynamicHairpinParenthesisLeft,
        [GlyphName.DynamicHairpinParenthesisRight] = GlyphNameCodePoints.DynamicHairpinParenthesisRight,
        [GlyphName.DynamicMF] = GlyphNameCodePoints.DynamicMF,
        [GlyphName.DynamicMP] = GlyphNameCodePoints.DynamicMP,
        [GlyphName.DynamicMessaDiVoce] = GlyphNameCodePoints.DynamicMessaDiVoce,
        [GlyphName.DynamicMezzo] = GlyphNameCodePoints.DynamicMezzo,
        [GlyphName.DynamicNiente] = GlyphNameCodePoints.DynamicNiente,
        [GlyphName.DynamicNienteForHairpin] = GlyphNameCodePoints.DynamicNienteForHairpin,
        [GlyphName.DynamicPF] = GlyphNameCodePoints.DynamicPF,
        [GlyphName.DynamicPP] = GlyphNameCodePoints.DynamicPP,
        [GlyphName.DynamicPPP] = GlyphNameCodePoints.DynamicPPP,
        [GlyphName.DynamicPPPP] = GlyphNameCodePoints.DynamicPPPP,
        [GlyphName.DynamicPPPPP] = GlyphNameCodePoints.DynamicPPPPP,
        [GlyphName.DynamicPPPPPP] = GlyphNameCodePoints.DynamicPPPPPP,
        [GlyphName.DynamicPiano] = GlyphNameCodePoints.DynamicPiano,
        [GlyphName.DynamicRinforzando] = GlyphNameCodePoints.DynamicRinforzando,
        [GlyphName.DynamicRinforzando1] = GlyphNameCodePoints.DynamicRinforzando1,
        [GlyphName.DynamicRinforzando2] = GlyphNameCodePoints.DynamicRinforzando2,
        [GlyphName.DynamicSforzando] = GlyphNameCodePoints.DynamicSforzando,
        [GlyphName.DynamicSforzando1] = GlyphNameCodePoints.DynamicSforzando1,
        [GlyphName.DynamicSforzandoPianissimo] = GlyphNameCodePoints.DynamicSforzandoPianissimo,
        [GlyphName.DynamicSforzandoPiano] = GlyphNameCodePoints.DynamicSforzandoPiano,
        [GlyphName.DynamicSforzato] = GlyphNameCodePoints.DynamicSforzato,
        [GlyphName.DynamicSforzatoFF] = GlyphNameCodePoints.DynamicSforzatoFF,
        [GlyphName.DynamicSforzatoPiano] = GlyphNameCodePoints.DynamicSforzatoPiano,
        [GlyphName.DynamicZ] = GlyphNameCodePoints.DynamicZ,
        [GlyphName.ElecAudioChannelsEight] = GlyphNameCodePoints.ElecAudioChannelsEight,
        [GlyphName.ElecAudioChannelsFive] = GlyphNameCodePoints.ElecAudioChannelsFive,
        [GlyphName.ElecAudioChannelsFour] = GlyphNameCodePoints.ElecAudioChannelsFour,
        [GlyphName.ElecAudioChannelsOne] = GlyphNameCodePoints.ElecAudioChannelsOne,
        [GlyphName.ElecAudioChannelsSeven] = GlyphNameCodePoints.ElecAudioChannelsSeven,
        [GlyphName.ElecAudioChannelsSix] = GlyphNameCodePoints.ElecAudioChannelsSix,
        [GlyphName.ElecAudioChannelsThreeFrontal] = GlyphNameCodePoints.ElecAudioChannelsThreeFrontal,
        [GlyphName.ElecAudioChannelsThreeSurround] = GlyphNameCodePoints.ElecAudioChannelsThreeSurround,
        [GlyphName.ElecAudioChannelsTwo] = GlyphNameCodePoints.ElecAudioChannelsTwo,
        [GlyphName.ElecAudioIn] = GlyphNameCodePoints.ElecAudioIn,
        [GlyphName.ElecAudioMono] = GlyphNameCodePoints.ElecAudioMono,
        [GlyphName.ElecAudioOut] = GlyphNameCodePoints.ElecAudioOut,
        [GlyphName.ElecAudioStereo] = GlyphNameCodePoints.ElecAudioStereo,
        [GlyphName.ElecCamera] = GlyphNameCodePoints.ElecCamera,
        [GlyphName.ElecDataIn] = GlyphNameCodePoints.ElecDataIn,
        [GlyphName.ElecDataOut] = GlyphNameCodePoints.ElecDataOut,
        [GlyphName.ElecDisc] = GlyphNameCodePoints.ElecDisc,
        [GlyphName.ElecDownload] = GlyphNameCodePoints.ElecDownload,
        [GlyphName.ElecEject] = GlyphNameCodePoints.ElecEject,
        [GlyphName.ElecFastForward] = GlyphNameCodePoints.ElecFastForward,
        [GlyphName.ElecHeadphones] = GlyphNameCodePoints.ElecHeadphones,
        [GlyphName.ElecHeadset] = GlyphNameCodePoints.ElecHeadset,
        [GlyphName.ElecLineIn] = GlyphNameCodePoints.ElecLineIn,
        [GlyphName.ElecLineOut] = GlyphNameCodePoints.ElecLineOut,
        [GlyphName.ElecLoop] = GlyphNameCodePoints.ElecLoop,
        [GlyphName.ElecLoudspeaker] = GlyphNameCodePoints.ElecLoudspeaker,
        [GlyphName.ElecMIDIController0] = GlyphNameCodePoints.ElecMIDIController0,
        [GlyphName.ElecMIDIController100] = GlyphNameCodePoints.ElecMIDIController100,
        [GlyphName.ElecMIDIController20] = GlyphNameCodePoints.ElecMIDIController20,
        [GlyphName.ElecMIDIController40] = GlyphNameCodePoints.ElecMIDIController40,
        [GlyphName.ElecMIDIController60] = GlyphNameCodePoints.ElecMIDIController60,
        [GlyphName.ElecMIDIController80] = GlyphNameCodePoints.ElecMIDIController80,
        [GlyphName.ElecMIDIIn] = GlyphNameCodePoints.ElecMIDIIn,
        [GlyphName.ElecMIDIOut] = GlyphNameCodePoints.ElecMIDIOut,
        [GlyphName.ElecMicrophone] = GlyphNameCodePoints.ElecMicrophone,
        [GlyphName.ElecMicrophoneMute] = GlyphNameCodePoints.ElecMicrophoneMute,
        [GlyphName.ElecMicrophoneUnmute] = GlyphNameCodePoints.ElecMicrophoneUnmute,
        [GlyphName.ElecMixingConsole] = GlyphNameCodePoints.ElecMixingConsole,
        [GlyphName.ElecMonitor] = GlyphNameCodePoints.ElecMonitor,
        [GlyphName.ElecMute] = GlyphNameCodePoints.ElecMute,
        [GlyphName.ElecPause] = GlyphNameCodePoints.ElecPause,
        [GlyphName.ElecPlay] = GlyphNameCodePoints.ElecPlay,
        [GlyphName.ElecPowerOnOff] = GlyphNameCodePoints.ElecPowerOnOff,
        [GlyphName.ElecProjector] = GlyphNameCodePoints.ElecProjector,
        [GlyphName.ElecReplay] = GlyphNameCodePoints.ElecReplay,
        [GlyphName.ElecRewind] = GlyphNameCodePoints.ElecRewind,
        [GlyphName.ElecShuffle] = GlyphNameCodePoints.ElecShuffle,
        [GlyphName.ElecSkipBackwards] = GlyphNameCodePoints.ElecSkipBackwards,
        [GlyphName.ElecSkipForwards] = GlyphNameCodePoints.ElecSkipForwards,
        [GlyphName.ElecStop] = GlyphNameCodePoints.ElecStop,
        [GlyphName.ElecTape] = GlyphNameCodePoints.ElecTape,
        [GlyphName.ElecUSB] = GlyphNameCodePoints.ElecUSB,
        [GlyphName.ElecUnmute] = GlyphNameCodePoints.ElecUnmute,
        [GlyphName.ElecUpload] = GlyphNameCodePoints.ElecUpload,
        [GlyphName.ElecVideoCamera] = GlyphNameCodePoints.ElecVideoCamera,
        [GlyphName.ElecVideoIn] = GlyphNameCodePoints.ElecVideoIn,
        [GlyphName.ElecVideoOut] = GlyphNameCodePoints.ElecVideoOut,
        [GlyphName.ElecVolumeFader] = GlyphNameCodePoints.ElecVolumeFader,
        [GlyphName.ElecVolumeFaderThumb] = GlyphNameCodePoints.ElecVolumeFaderThumb,
        [GlyphName.ElecVolumeLevel0] = GlyphNameCodePoints.ElecVolumeLevel0,
        [GlyphName.ElecVolumeLevel100] = GlyphNameCodePoints.ElecVolumeLevel100,
        [GlyphName.ElecVolumeLevel20] = GlyphNameCodePoints.ElecVolumeLevel20,
        [GlyphName.ElecVolumeLevel40] = GlyphNameCodePoints.ElecVolumeLevel40,
        [GlyphName.ElecVolumeLevel60] = GlyphNameCodePoints.ElecVolumeLevel60,
        [GlyphName.ElecVolumeLevel80] = GlyphNameCodePoints.ElecVolumeLevel80,
        [GlyphName.FClef] = GlyphNameCodePoints.FClef,
        [GlyphName.FClef15ma] = GlyphNameCodePoints.FClef15ma,
        [GlyphName.FClef15mb] = GlyphNameCodePoints.FClef15mb,
        [GlyphName.FClef8va] = GlyphNameCodePoints.FClef8va,
        [GlyphName.FClef8vb] = GlyphNameCodePoints.FClef8vb,
        [GlyphName.FClefArrowDown] = GlyphNameCodePoints.FClefArrowDown,
        [GlyphName.FClefArrowUp] = GlyphNameCodePoints.FClefArrowUp,
        [GlyphName.FClefChange] = GlyphNameCodePoints.FClefChange,
        [GlyphName.FClefReversed] = GlyphNameCodePoints.FClefReversed,
        [GlyphName.FClefTurned] = GlyphNameCodePoints.FClefTurned,
        [GlyphName.FermataAbove] = GlyphNameCodePoints.FermataAbove,
        [GlyphName.FermataBelow] = GlyphNameCodePoints.FermataBelow,
        [GlyphName.FermataLongAbove] = GlyphNameCodePoints.FermataLongAbove,
        [GlyphName.FermataLongBelow] = GlyphNameCodePoints.FermataLongBelow,
        [GlyphName.FermataLongHenzeAbove] = GlyphNameCodePoints.FermataLongHenzeAbove,
        [GlyphName.FermataLongHenzeBelow] = GlyphNameCodePoints.FermataLongHenzeBelow,
        [GlyphName.FermataShortAbove] = GlyphNameCodePoints.FermataShortAbove,
        [GlyphName.FermataShortBelow] = GlyphNameCodePoints.FermataShortBelow,
        [GlyphName.FermataShortHenzeAbove] = GlyphNameCodePoints.FermataShortHenzeAbove,
        [GlyphName.FermataShortHenzeBelow] = GlyphNameCodePoints.FermataShortHenzeBelow,
        [GlyphName.FermataVeryLongAbove] = GlyphNameCodePoints.FermataVeryLongAbove,
        [GlyphName.FermataVeryLongBelow] = GlyphNameCodePoints.FermataVeryLongBelow,
        [GlyphName.FermataVeryShortAbove] = GlyphNameCodePoints.FermataVeryShortAbove,
        [GlyphName.FermataVeryShortBelow] = GlyphNameCodePoints.FermataVeryShortBelow,
        [GlyphName.Figbass0] = GlyphNameCodePoints.Figbass0,
        [GlyphName.Figbass1] = GlyphNameCodePoints.Figbass1,
        [GlyphName.Figbass2] = GlyphNameCodePoints.Figbass2,
        [GlyphName.Figbass2Raised] = GlyphNameCodePoints.Figbass2Raised,
        [GlyphName.Figbass3] = GlyphNameCodePoints.Figbass3,
        [GlyphName.Figbass4] = GlyphNameCodePoints.Figbass4,
        [GlyphName.Figbass4Raised] = GlyphNameCodePoints.Figbass4Raised,
        [GlyphName.Figbass5] = GlyphNameCodePoints.Figbass5,
        [GlyphName.Figbass5Raised1] = GlyphNameCodePoints.Figbass5Raised1,
        [GlyphName.Figbass5Raised2] = GlyphNameCodePoints.Figbass5Raised2,
        [GlyphName.Figbass5Raised3] = GlyphNameCodePoints.Figbass5Raised3,
        [GlyphName.Figbass6] = GlyphNameCodePoints.Figbass6,
        [GlyphName.Figbass6Raised] = GlyphNameCodePoints.Figbass6Raised,
        [GlyphName.Figbass6Raised2] = GlyphNameCodePoints.Figbass6Raised2,
        [GlyphName.Figbass7] = GlyphNameCodePoints.Figbass7,
        [GlyphName.Figbass7Diminished] = GlyphNameCodePoints.Figbass7Diminished,
        [GlyphName.Figbass7Raised1] = GlyphNameCodePoints.Figbass7Raised1,
        [GlyphName.Figbass7Raised2] = GlyphNameCodePoints.Figbass7Raised2,
        [GlyphName.Figbass8] = GlyphNameCodePoints.Figbass8,
        [GlyphName.Figbass9] = GlyphNameCodePoints.Figbass9,
        [GlyphName.Figbass9Raised] = GlyphNameCodePoints.Figbass9Raised,
        [GlyphName.FigbassBracketLeft] = GlyphNameCodePoints.FigbassBracketLeft,
        [GlyphName.FigbassBracketRight] = GlyphNameCodePoints.FigbassBracketRight,
        [GlyphName.FigbassCombiningLowering] = GlyphNameCodePoints.FigbassCombiningLowering,
        [GlyphName.FigbassCombiningRaising] = GlyphNameCodePoints.FigbassCombiningRaising,
        [GlyphName.FigbassDoubleFlat] = GlyphNameCodePoints.FigbassDoubleFlat,
        [GlyphName.FigbassDoubleSharp] = GlyphNameCodePoints.FigbassDoubleSharp,
        [GlyphName.FigbassFlat] = GlyphNameCodePoints.FigbassFlat,
        [GlyphName.FigbassNatural] = GlyphNameCodePoints.FigbassNatural,
        [GlyphName.FigbassParensLeft] = GlyphNameCodePoints.FigbassParensLeft,
        [GlyphName.FigbassParensRight] = GlyphNameCodePoints.FigbassParensRight,
        [GlyphName.FigbassPlus] = GlyphNameCodePoints.FigbassPlus,
        [GlyphName.FigbassSharp] = GlyphNameCodePoints.FigbassSharp,
        [GlyphName.FigbassTripleFlat] = GlyphNameCodePoints.FigbassTripleFlat,
        [GlyphName.FigbassTripleSharp] = GlyphNameCodePoints.FigbassTripleSharp,
        [GlyphName.Fingering0] = GlyphNameCodePoints.Fingering0,
        [GlyphName.Fingering0Italic] = GlyphNameCodePoints.Fingering0Italic,
        [GlyphName.Fingering1] = GlyphNameCodePoints.Fingering1,
        [GlyphName.Fingering1Italic] = GlyphNameCodePoints.Fingering1Italic,
        [GlyphName.Fingering2] = GlyphNameCodePoints.Fingering2,
        [GlyphName.Fingering2Italic] = GlyphNameCodePoints.Fingering2Italic,
        [GlyphName.Fingering3] = GlyphNameCodePoints.Fingering3,
        [GlyphName.Fingering3Italic] = GlyphNameCodePoints.Fingering3Italic,
        [GlyphName.Fingering4] = GlyphNameCodePoints.Fingering4,
        [GlyphName.Fingering4Italic] = GlyphNameCodePoints.Fingering4Italic,
        [GlyphName.Fingering5] = GlyphNameCodePoints.Fingering5,
        [GlyphName.Fingering5Italic] = GlyphNameCodePoints.Fingering5Italic,
        [GlyphName.Fingering6] = GlyphNameCodePoints.Fingering6,
        [GlyphName.Fingering6Italic] = GlyphNameCodePoints.Fingering6Italic,
        [GlyphName.Fingering7] = GlyphNameCodePoints.Fingering7,
        [GlyphName.Fingering7Italic] = GlyphNameCodePoints.Fingering7Italic,
        [GlyphName.Fingering8] = GlyphNameCodePoints.Fingering8,
        [GlyphName.Fingering8Italic] = GlyphNameCodePoints.Fingering8Italic,
        [GlyphName.Fingering9] = GlyphNameCodePoints.Fingering9,
        [GlyphName.Fingering9Italic] = GlyphNameCodePoints.Fingering9Italic,
        [GlyphName.FingeringALower] = GlyphNameCodePoints.FingeringALower,
        [GlyphName.FingeringCLower] = GlyphNameCodePoints.FingeringCLower,
        [GlyphName.FingeringELower] = GlyphNameCodePoints.FingeringELower,
        [GlyphName.FingeringILower] = GlyphNameCodePoints.FingeringILower,
        [GlyphName.FingeringLeftBracket] = GlyphNameCodePoints.FingeringLeftBracket,
        [GlyphName.FingeringLeftBracketItalic] = GlyphNameCodePoints.FingeringLeftBracketItalic,
        [GlyphName.FingeringLeftParenthesis] = GlyphNameCodePoints.FingeringLeftParenthesis,
        [GlyphName.FingeringLeftParenthesisItalic] = GlyphNameCodePoints.FingeringLeftParenthesisItalic,
        [GlyphName.FingeringMLower] = GlyphNameCodePoints.FingeringMLower,
        [GlyphName.FingeringMultipleNotes] = GlyphNameCodePoints.FingeringMultipleNotes,
        [GlyphName.FingeringOLower] = GlyphNameCodePoints.FingeringOLower,
        [GlyphName.FingeringPLower] = GlyphNameCodePoints.FingeringPLower,
        [GlyphName.FingeringQLower] = GlyphNameCodePoints.FingeringQLower,
        [GlyphName.FingeringRightBracket] = GlyphNameCodePoints.FingeringRightBracket,
        [GlyphName.FingeringRightBracketItalic] = GlyphNameCodePoints.FingeringRightBracketItalic,
        [GlyphName.FingeringRightParenthesis] = GlyphNameCodePoints.FingeringRightParenthesis,
        [GlyphName.FingeringRightParenthesisItalic] = GlyphNameCodePoints.FingeringRightParenthesisItalic,
        [GlyphName.FingeringSLower] = GlyphNameCodePoints.FingeringSLower,
        [GlyphName.FingeringSeparatorMiddleDot] = GlyphNameCodePoints.FingeringSeparatorMiddleDot,
        [GlyphName.FingeringSeparatorMiddleDotWhite] = GlyphNameCodePoints.FingeringSeparatorMiddleDotWhite,
        [GlyphName.FingeringSeparatorSlash] = GlyphNameCodePoints.FingeringSeparatorSlash,
        [GlyphName.FingeringSubstitutionAbove] = GlyphNameCodePoints.FingeringSubstitutionAbove,
        [GlyphName.FingeringSubstitutionBelow] = GlyphNameCodePoints.FingeringSubstitutionBelow,
        [GlyphName.FingeringSubstitutionDash] = GlyphNameCodePoints.FingeringSubstitutionDash,
        [GlyphName.FingeringTLower] = GlyphNameCodePoints.FingeringTLower,
        [GlyphName.FingeringTUpper] = GlyphNameCodePoints.FingeringTUpper,
        [GlyphName.FingeringXLower] = GlyphNameCodePoints.FingeringXLower,
        [GlyphName.Flag1024thDown] = GlyphNameCodePoints.Flag1024thDown,
        [GlyphName.Flag1024thUp] = GlyphNameCodePoints.Flag1024thUp,
        [GlyphName.Flag128thDown] = GlyphNameCodePoints.Flag128thDown,
        [GlyphName.Flag128thUp] = GlyphNameCodePoints.Flag128thUp,
        [GlyphName.Flag16thDown] = GlyphNameCodePoints.Flag16thDown,
        [GlyphName.Flag16thUp] = GlyphNameCodePoints.Flag16thUp,
        [GlyphName.Flag256thDown] = GlyphNameCodePoints.Flag256thDown,
        [GlyphName.Flag256thUp] = GlyphNameCodePoints.Flag256thUp,
        [GlyphName.Flag32ndDown] = GlyphNameCodePoints.Flag32ndDown,
        [GlyphName.Flag32ndUp] = GlyphNameCodePoints.Flag32ndUp,
        [GlyphName.Flag512thDown] = GlyphNameCodePoints.Flag512thDown,
        [GlyphName.Flag512thUp] = GlyphNameCodePoints.Flag512thUp,
        [GlyphName.Flag64thDown] = GlyphNameCodePoints.Flag64thDown,
        [GlyphName.Flag64thUp] = GlyphNameCodePoints.Flag64thUp,
        [GlyphName.Flag8thDown] = GlyphNameCodePoints.Flag8thDown,
        [GlyphName.Flag8thUp] = GlyphNameCodePoints.Flag8thUp,
        [GlyphName.FlagInternalDown] = GlyphNameCodePoints.FlagInternalDown,
        [GlyphName.FlagInternalUp] = GlyphNameCodePoints.FlagInternalUp,
        [GlyphName.Fretboard3String] = GlyphNameCodePoints.Fretboard3String,
        [GlyphName.Fretboard3StringNut] = GlyphNameCodePoints.Fretboard3StringNut,
        [GlyphName.Fretboard4String] = GlyphNameCodePoints.Fretboard4String,
        [GlyphName.Fretboard4StringNut] = GlyphNameCodePoints.Fretboard4StringNut,
        [GlyphName.Fretboard5String] = GlyphNameCodePoints.Fretboard5String,
        [GlyphName.Fretboard5StringNut] = GlyphNameCodePoints.Fretboard5StringNut,
        [GlyphName.Fretboard6String] = GlyphNameCodePoints.Fretboard6String,
        [GlyphName.Fretboard6StringNut] = GlyphNameCodePoints.Fretboard6StringNut,
        [GlyphName.FretboardFilledCircle] = GlyphNameCodePoints.FretboardFilledCircle,
        [GlyphName.FretboardO] = GlyphNameCodePoints.FretboardO,
        [GlyphName.FretboardX] = GlyphNameCodePoints.FretboardX,
        [GlyphName.FunctionAngleLeft] = GlyphNameCodePoints.FunctionAngleLeft,
        [GlyphName.FunctionAngleRight] = GlyphNameCodePoints.FunctionAngleRight,
        [GlyphName.FunctionBracketLeft] = GlyphNameCodePoints.FunctionBracketLeft,
        [GlyphName.FunctionBracketRight] = GlyphNameCodePoints.FunctionBracketRight,
        [GlyphName.FunctionDD] = GlyphNameCodePoints.FunctionDD,
        [GlyphName.FunctionDLower] = GlyphNameCodePoints.FunctionDLower,
        [GlyphName.FunctionDUpper] = GlyphNameCodePoints.FunctionDUpper,
        [GlyphName.FunctionEight] = GlyphNameCodePoints.FunctionEight,
        [GlyphName.FunctionFUpper] = GlyphNameCodePoints.FunctionFUpper,
        [GlyphName.FunctionFive] = GlyphNameCodePoints.FunctionFive,
        [GlyphName.FunctionFour] = GlyphNameCodePoints.FunctionFour,
        [GlyphName.FunctionGLower] = GlyphNameCodePoints.FunctionGLower,
        [GlyphName.FunctionGUpper] = GlyphNameCodePoints.FunctionGUpper,
        [GlyphName.FunctionGreaterThan] = GlyphNameCodePoints.FunctionGreaterThan,
        [GlyphName.FunctionILower] = GlyphNameCodePoints.FunctionILower,
        [GlyphName.FunctionIUpper] = GlyphNameCodePoints.FunctionIUpper,
        [GlyphName.FunctionKLower] = GlyphNameCodePoints.FunctionKLower,
        [GlyphName.FunctionKUpper] = GlyphNameCodePoints.FunctionKUpper,
        [GlyphName.FunctionLLower] = GlyphNameCodePoints.FunctionLLower,
        [GlyphName.FunctionLUpper] = GlyphNameCodePoints.FunctionLUpper,
        [GlyphName.FunctionLessThan] = GlyphNameCodePoints.FunctionLessThan,
        [GlyphName.FunctionMLower] = GlyphNameCodePoints.FunctionMLower,
        [GlyphName.FunctionMUpper] = GlyphNameCodePoints.FunctionMUpper,
        [GlyphName.FunctionMinus] = GlyphNameCodePoints.FunctionMinus,
        [GlyphName.FunctionNLower] = GlyphNameCodePoints.FunctionNLower,
        [GlyphName.FunctionNUpper] = GlyphNameCodePoints.FunctionNUpper,
        [GlyphName.FunctionNUpperSuperscript] = GlyphNameCodePoints.FunctionNUpperSuperscript,
        [GlyphName.FunctionNine] = GlyphNameCodePoints.FunctionNine,
        [GlyphName.FunctionOne] = GlyphNameCodePoints.FunctionOne,
        [GlyphName.FunctionPLower] = GlyphNameCodePoints.FunctionPLower,
        [GlyphName.FunctionPUpper] = GlyphNameCodePoints.FunctionPUpper,
        [GlyphName.FunctionParensLeft] = GlyphNameCodePoints.FunctionParensLeft,
        [GlyphName.FunctionParensRight] = GlyphNameCodePoints.FunctionParensRight,
        [GlyphName.FunctionPlus] = GlyphNameCodePoints.FunctionPlus,
        [GlyphName.FunctionRLower] = GlyphNameCodePoints.FunctionRLower,
        [GlyphName.FunctionRepetition1] = GlyphNameCodePoints.FunctionRepetition1,
        [GlyphName.FunctionRepetition2] = GlyphNameCodePoints.FunctionRepetition2,
        [GlyphName.FunctionRing] = GlyphNameCodePoints.FunctionRing,
        [GlyphName.FunctionSLower] = GlyphNameCodePoints.FunctionSLower,
        [GlyphName.FunctionSSLower] = GlyphNameCodePoints.FunctionSSLower,
        [GlyphName.FunctionSSUpper] = GlyphNameCodePoints.FunctionSSUpper,
        [GlyphName.FunctionSUpper] = GlyphNameCodePoints.FunctionSUpper,
        [GlyphName.FunctionSeven] = GlyphNameCodePoints.FunctionSeven,
        [GlyphName.FunctionSix] = GlyphNameCodePoints.FunctionSix,
        [GlyphName.FunctionSlashedDD] = GlyphNameCodePoints.FunctionSlashedDD,
        [GlyphName.FunctionTLower] = GlyphNameCodePoints.FunctionTLower,
        [GlyphName.FunctionTUpper] = GlyphNameCodePoints.FunctionTUpper,
        [GlyphName.FunctionThree] = GlyphNameCodePoints.FunctionThree,
        [GlyphName.FunctionTwo] = GlyphNameCodePoints.FunctionTwo,
        [GlyphName.FunctionVLower] = GlyphNameCodePoints.FunctionVLower,
        [GlyphName.FunctionVUpper] = GlyphNameCodePoints.FunctionVUpper,
        [GlyphName.FunctionZero] = GlyphNameCodePoints.FunctionZero,
        [GlyphName.GClef] = GlyphNameCodePoints.GClef,
        [GlyphName.GClef15ma] = GlyphNameCodePoints.GClef15ma,
        [GlyphName.GClef15mb] = GlyphNameCodePoints.GClef15mb,
        [GlyphName.GClef8va] = GlyphNameCodePoints.GClef8va,
        [GlyphName.GClef8vb] = GlyphNameCodePoints.GClef8vb,
        [GlyphName.GClef8vbCClef] = GlyphNameCodePoints.GClef8vbCClef,
        [GlyphName.GClef8vbOld] = GlyphNameCodePoints.GClef8vbOld,
        [GlyphName.GClef8vbParens] = GlyphNameCodePoints.GClef8vbParens,
        [GlyphName.GClefArrowDown] = GlyphNameCodePoints.GClefArrowDown,
        [GlyphName.GClefArrowUp] = GlyphNameCodePoints.GClefArrowUp,
        [GlyphName.GClefChange] = GlyphNameCodePoints.GClefChange,
        [GlyphName.GClefLigatedNumberAbove] = GlyphNameCodePoints.GClefLigatedNumberAbove,
        [GlyphName.GClefLigatedNumberBelow] = GlyphNameCodePoints.GClefLigatedNumberBelow,
        [GlyphName.GClefReversed] = GlyphNameCodePoints.GClefReversed,
        [GlyphName.GClefTurned] = GlyphNameCodePoints.GClefTurned,
        [GlyphName.GlissandoDown] = GlyphNameCodePoints.GlissandoDown,
        [GlyphName.GlissandoUp] = GlyphNameCodePoints.GlissandoUp,
        [GlyphName.GraceNoteAcciaccaturaStemDown] = GlyphNameCodePoints.GraceNoteAcciaccaturaStemDown,
        [GlyphName.GraceNoteAcciaccaturaStemUp] = GlyphNameCodePoints.GraceNoteAcciaccaturaStemUp,
        [GlyphName.GraceNoteAppoggiaturaStemDown] = GlyphNameCodePoints.GraceNoteAppoggiaturaStemDown,
        [GlyphName.GraceNoteAppoggiaturaStemUp] = GlyphNameCodePoints.GraceNoteAppoggiaturaStemUp,
        [GlyphName.GraceNoteSlashStemDown] = GlyphNameCodePoints.GraceNoteSlashStemDown,
        [GlyphName.GraceNoteSlashStemUp] = GlyphNameCodePoints.GraceNoteSlashStemUp,
        [GlyphName.GuitarBarreFull] = GlyphNameCodePoints.GuitarBarreFull,
        [GlyphName.GuitarBarreHalf] = GlyphNameCodePoints.GuitarBarreHalf,
        [GlyphName.GuitarClosePedal] = GlyphNameCodePoints.GuitarClosePedal,
        [GlyphName.GuitarFadeIn] = GlyphNameCodePoints.GuitarFadeIn,
        [GlyphName.GuitarFadeOut] = GlyphNameCodePoints.GuitarFadeOut,
        [GlyphName.GuitarGolpe] = GlyphNameCodePoints.GuitarGolpe,
        [GlyphName.GuitarHalfOpenPedal] = GlyphNameCodePoints.GuitarHalfOpenPedal,
        [GlyphName.GuitarLeftHandTapping] = GlyphNameCodePoints.GuitarLeftHandTapping,
        [GlyphName.GuitarOpenPedal] = GlyphNameCodePoints.GuitarOpenPedal,
        [GlyphName.GuitarRightHandTapping] = GlyphNameCodePoints.GuitarRightHandTapping,
        [GlyphName.GuitarShake] = GlyphNameCodePoints.GuitarShake,
        [GlyphName.GuitarString0] = GlyphNameCodePoints.GuitarString0,
        [GlyphName.GuitarString1] = GlyphNameCodePoints.GuitarString1,
        [GlyphName.GuitarString10] = GlyphNameCodePoints.GuitarString10,
        [GlyphName.GuitarString11] = GlyphNameCodePoints.GuitarString11,
        [GlyphName.GuitarString12] = GlyphNameCodePoints.GuitarString12,
        [GlyphName.GuitarString13] = GlyphNameCodePoints.GuitarString13,
        [GlyphName.GuitarString2] = GlyphNameCodePoints.GuitarString2,
        [GlyphName.GuitarString3] = GlyphNameCodePoints.GuitarString3,
        [GlyphName.GuitarString4] = GlyphNameCodePoints.GuitarString4,
        [GlyphName.GuitarString5] = GlyphNameCodePoints.GuitarString5,
        [GlyphName.GuitarString6] = GlyphNameCodePoints.GuitarString6,
        [GlyphName.GuitarString7] = GlyphNameCodePoints.GuitarString7,
        [GlyphName.GuitarString8] = GlyphNameCodePoints.GuitarString8,
        [GlyphName.GuitarString9] = GlyphNameCodePoints.GuitarString9,
        [GlyphName.GuitarStrumDown] = GlyphNameCodePoints.GuitarStrumDown,
        [GlyphName.GuitarStrumUp] = GlyphNameCodePoints.GuitarStrumUp,
        [GlyphName.GuitarVibratoBarDip] = GlyphNameCodePoints.GuitarVibratoBarDip,
        [GlyphName.GuitarVibratoBarScoop] = GlyphNameCodePoints.GuitarVibratoBarScoop,
        [GlyphName.GuitarVibratoStroke] = GlyphNameCodePoints.GuitarVibratoStroke,
        [GlyphName.GuitarVolumeSwell] = GlyphNameCodePoints.GuitarVolumeSwell,
        [GlyphName.GuitarWideVibratoStroke] = GlyphNameCodePoints.GuitarWideVibratoStroke,
        [GlyphName.HandbellsBelltree] = GlyphNameCodePoints.HandbellsBelltree,
        [GlyphName.HandbellsDamp3] = GlyphNameCodePoints.HandbellsDamp3,
        [GlyphName.HandbellsEcho1] = GlyphNameCodePoints.HandbellsEcho1,
        [GlyphName.HandbellsEcho2] = GlyphNameCodePoints.HandbellsEcho2,
        [GlyphName.HandbellsGyro] = GlyphNameCodePoints.HandbellsGyro,
        [GlyphName.HandbellsHandMartellato] = GlyphNameCodePoints.HandbellsHandMartellato,
        [GlyphName.HandbellsMalletBellOnTable] = GlyphNameCodePoints.HandbellsMalletBellOnTable,
        [GlyphName.HandbellsMalletBellSuspended] = GlyphNameCodePoints.HandbellsMalletBellSuspended,
        [GlyphName.HandbellsMalletLft] = GlyphNameCodePoints.HandbellsMalletLft,
        [GlyphName.HandbellsMartellato] = GlyphNameCodePoints.HandbellsMartellato,
        [GlyphName.HandbellsMartellatoLift] = GlyphNameCodePoints.HandbellsMartellatoLift,
        [GlyphName.HandbellsMutedMartellato] = GlyphNameCodePoints.HandbellsMutedMartellato,
        [GlyphName.HandbellsPluckLift] = GlyphNameCodePoints.HandbellsPluckLift,
        [GlyphName.HandbellsSwing] = GlyphNameCodePoints.HandbellsSwing,
        [GlyphName.HandbellsSwingDown] = GlyphNameCodePoints.HandbellsSwingDown,
        [GlyphName.HandbellsSwingUp] = GlyphNameCodePoints.HandbellsSwingUp,
        [GlyphName.HandbellsTablePairBells] = GlyphNameCodePoints.HandbellsTablePairBells,
        [GlyphName.HandbellsTableSingleBell] = GlyphNameCodePoints.HandbellsTableSingleBell,
        [GlyphName.HarpMetalRod] = GlyphNameCodePoints.HarpMetalRod,
        [GlyphName.HarpPedalCentered] = GlyphNameCodePoints.HarpPedalCentered,
        [GlyphName.HarpPedalDivider] = GlyphNameCodePoints.HarpPedalDivider,
        [GlyphName.HarpPedalLowered] = GlyphNameCodePoints.HarpPedalLowered,
        [GlyphName.HarpPedalRaised] = GlyphNameCodePoints.HarpPedalRaised,
        [GlyphName.HarpSalzedoAeolianAscending] = GlyphNameCodePoints.HarpSalzedoAeolianAscending,
        [GlyphName.HarpSalzedoAeolianDescending] = GlyphNameCodePoints.HarpSalzedoAeolianDescending,
        [GlyphName.HarpSalzedoDampAbove] = GlyphNameCodePoints.HarpSalzedoDampAbove,
        [GlyphName.HarpSalzedoDampBelow] = GlyphNameCodePoints.HarpSalzedoDampBelow,
        [GlyphName.HarpSalzedoDampBothHands] = GlyphNameCodePoints.HarpSalzedoDampBothHands,
        [GlyphName.HarpSalzedoDampLowStrings] = GlyphNameCodePoints.HarpSalzedoDampLowStrings,
        [GlyphName.HarpSalzedoFluidicSoundsLeft] = GlyphNameCodePoints.HarpSalzedoFluidicSoundsLeft,
        [GlyphName.HarpSalzedoFluidicSoundsRight] = GlyphNameCodePoints.HarpSalzedoFluidicSoundsRight,
        [GlyphName.HarpSalzedoIsolatedSounds] = GlyphNameCodePoints.HarpSalzedoIsolatedSounds,
        [GlyphName.HarpSalzedoMetallicSounds] = GlyphNameCodePoints.HarpSalzedoMetallicSounds,
        [GlyphName.HarpSalzedoMetallicSoundsOneString] = GlyphNameCodePoints.HarpSalzedoMetallicSoundsOneString,
        [GlyphName.HarpSalzedoMuffleTotally] = GlyphNameCodePoints.HarpSalzedoMuffleTotally,
        [GlyphName.HarpSalzedoOboicFlux] = GlyphNameCodePoints.HarpSalzedoOboicFlux,
        [GlyphName.HarpSalzedoPlayUpperEnd] = GlyphNameCodePoints.HarpSalzedoPlayUpperEnd,
        [GlyphName.HarpSalzedoSlideWithSuppleness] = GlyphNameCodePoints.HarpSalzedoSlideWithSuppleness,
        [GlyphName.HarpSalzedoSnareDrum] = GlyphNameCodePoints.HarpSalzedoSnareDrum,
        [GlyphName.HarpSalzedoTamTamSounds] = GlyphNameCodePoints.HarpSalzedoTamTamSounds,
        [GlyphName.HarpSalzedoThunderEffect] = GlyphNameCodePoints.HarpSalzedoThunderEffect,
        [GlyphName.HarpSalzedoTimpanicSounds] = GlyphNameCodePoints.HarpSalzedoTimpanicSounds,
        [GlyphName.HarpSalzedoWhistlingSounds] = GlyphNameCodePoints.HarpSalzedoWhistlingSounds,
        [GlyphName.HarpStringNoiseStem] = GlyphNameCodePoints.HarpStringNoiseStem,
        [GlyphName.HarpTuningKey] = GlyphNameCodePoints.HarpTuningKey,
        [GlyphName.HarpTuningKeyGlissando] = GlyphNameCodePoints.HarpTuningKeyGlissando,
        [GlyphName.HarpTuningKeyHandle] = GlyphNameCodePoints.HarpTuningKeyHandle,
        [GlyphName.HarpTuningKeyShank] = GlyphNameCodePoints.HarpTuningKeyShank,
        [GlyphName.IndianDrumClef] = GlyphNameCodePoints.IndianDrumClef,
        [GlyphName.KahnBackChug] = GlyphNameCodePoints.KahnBackChug,
        [GlyphName.KahnBackFlap] = GlyphNameCodePoints.KahnBackFlap,
        [GlyphName.KahnBackRiff] = GlyphNameCodePoints.KahnBackRiff,
        [GlyphName.KahnBackRip] = GlyphNameCodePoints.KahnBackRip,
        [GlyphName.KahnBallChange] = GlyphNameCodePoints.KahnBallChange,
        [GlyphName.KahnBallDig] = GlyphNameCodePoints.KahnBallDig,
        [GlyphName.KahnBrushBackward] = GlyphNameCodePoints.KahnBrushBackward,
        [GlyphName.KahnBrushForward] = GlyphNameCodePoints.KahnBrushForward,
        [GlyphName.KahnChug] = GlyphNameCodePoints.KahnChug,
        [GlyphName.KahnClap] = GlyphNameCodePoints.KahnClap,
        [GlyphName.KahnDoubleSnap] = GlyphNameCodePoints.KahnDoubleSnap,
        [GlyphName.KahnDoubleWing] = GlyphNameCodePoints.KahnDoubleWing,
        [GlyphName.KahnDrawStep] = GlyphNameCodePoints.KahnDrawStep,
        [GlyphName.KahnDrawTap] = GlyphNameCodePoints.KahnDrawTap,
        [GlyphName.KahnFlam] = GlyphNameCodePoints.KahnFlam,
        [GlyphName.KahnFlap] = GlyphNameCodePoints.KahnFlap,
        [GlyphName.KahnFlapStep] = GlyphNameCodePoints.KahnFlapStep,
        [GlyphName.KahnFlat] = GlyphNameCodePoints.KahnFlat,
        [GlyphName.KahnFleaHop] = GlyphNameCodePoints.KahnFleaHop,
        [GlyphName.KahnFleaTap] = GlyphNameCodePoints.KahnFleaTap,
        [GlyphName.KahnGraceTap] = GlyphNameCodePoints.KahnGraceTap,
        [GlyphName.KahnGraceTapChange] = GlyphNameCodePoints.KahnGraceTapChange,
        [GlyphName.KahnGraceTapHop] = GlyphNameCodePoints.KahnGraceTapHop,
        [GlyphName.KahnGraceTapStamp] = GlyphNameCodePoints.KahnGraceTapStamp,
        [GlyphName.KahnHeel] = GlyphNameCodePoints.KahnHeel,
        [GlyphName.KahnHeelChange] = GlyphNameCodePoints.KahnHeelChange,
        [GlyphName.KahnHeelClick] = GlyphNameCodePoints.KahnHeelClick,
        [GlyphName.KahnHeelDrop] = GlyphNameCodePoints.KahnHeelDrop,
        [GlyphName.KahnHeelStep] = GlyphNameCodePoints.KahnHeelStep,
        [GlyphName.KahnHeelTap] = GlyphNameCodePoints.KahnHeelTap,
        [GlyphName.KahnHop] = GlyphNameCodePoints.KahnHop,
        [GlyphName.KahnJumpApart] = GlyphNameCodePoints.KahnJumpApart,
        [GlyphName.KahnJumpTogether] = GlyphNameCodePoints.KahnJumpTogether,
        [GlyphName.KahnKneeInward] = GlyphNameCodePoints.KahnKneeInward,
        [GlyphName.KahnKneeOutward] = GlyphNameCodePoints.KahnKneeOutward,
        [GlyphName.KahnLeap] = GlyphNameCodePoints.KahnLeap,
        [GlyphName.KahnLeapFlatFoot] = GlyphNameCodePoints.KahnLeapFlatFoot,
        [GlyphName.KahnLeapHeelClick] = GlyphNameCodePoints.KahnLeapHeelClick,
        [GlyphName.KahnLeftCatch] = GlyphNameCodePoints.KahnLeftCatch,
        [GlyphName.KahnLeftCross] = GlyphNameCodePoints.KahnLeftCross,
        [GlyphName.KahnLeftFoot] = GlyphNameCodePoints.KahnLeftFoot,
        [GlyphName.KahnLeftToeStrike] = GlyphNameCodePoints.KahnLeftToeStrike,
        [GlyphName.KahnLeftTurn] = GlyphNameCodePoints.KahnLeftTurn,
        [GlyphName.KahnOverTheTop] = GlyphNameCodePoints.KahnOverTheTop,
        [GlyphName.KahnOverTheTopTap] = GlyphNameCodePoints.KahnOverTheTopTap,
        [GlyphName.KahnPull] = GlyphNameCodePoints.KahnPull,
        [GlyphName.KahnPush] = GlyphNameCodePoints.KahnPush,
        [GlyphName.KahnRiff] = GlyphNameCodePoints.KahnRiff,
        [GlyphName.KahnRiffle] = GlyphNameCodePoints.KahnRiffle,
        [GlyphName.KahnRightCatch] = GlyphNameCodePoints.KahnRightCatch,
        [GlyphName.KahnRightCross] = GlyphNameCodePoints.KahnRightCross,
        [GlyphName.KahnRightFoot] = GlyphNameCodePoints.KahnRightFoot,
        [GlyphName.KahnRightToeStrike] = GlyphNameCodePoints.KahnRightToeStrike,
        [GlyphName.KahnRightTurn] = GlyphNameCodePoints.KahnRightTurn,
        [GlyphName.KahnRip] = GlyphNameCodePoints.KahnRip,
        [GlyphName.KahnRipple] = GlyphNameCodePoints.KahnRipple,
        [GlyphName.KahnScrape] = GlyphNameCodePoints.KahnScrape,
        [GlyphName.KahnScuff] = GlyphNameCodePoints.KahnScuff,
        [GlyphName.KahnScuffle] = GlyphNameCodePoints.KahnScuffle,
        [GlyphName.KahnShuffle] = GlyphNameCodePoints.KahnShuffle,
        [GlyphName.KahnSlam] = GlyphNameCodePoints.KahnSlam,
        [GlyphName.KahnSlap] = GlyphNameCodePoints.KahnSlap,
        [GlyphName.KahnSlideStep] = GlyphNameCodePoints.KahnSlideStep,
        [GlyphName.KahnSlideTap] = GlyphNameCodePoints.KahnSlideTap,
        [GlyphName.KahnSnap] = GlyphNameCodePoints.KahnSnap,
        [GlyphName.KahnStamp] = GlyphNameCodePoints.KahnStamp,
        [GlyphName.KahnStampStamp] = GlyphNameCodePoints.KahnStampStamp,
        [GlyphName.KahnStep] = GlyphNameCodePoints.KahnStep,
        [GlyphName.KahnStepStamp] = GlyphNameCodePoints.KahnStepStamp,
        [GlyphName.KahnStomp] = GlyphNameCodePoints.KahnStomp,
        [GlyphName.KahnStompBrush] = GlyphNameCodePoints.KahnStompBrush,
        [GlyphName.KahnTap] = GlyphNameCodePoints.KahnTap,
        [GlyphName.KahnToe] = GlyphNameCodePoints.KahnToe,
        [GlyphName.KahnToeClick] = GlyphNameCodePoints.KahnToeClick,
        [GlyphName.KahnToeDrop] = GlyphNameCodePoints.KahnToeDrop,
        [GlyphName.KahnToeStep] = GlyphNameCodePoints.KahnToeStep,
        [GlyphName.KahnToeTap] = GlyphNameCodePoints.KahnToeTap,
        [GlyphName.KahnTrench] = GlyphNameCodePoints.KahnTrench,
        [GlyphName.KahnWing] = GlyphNameCodePoints.KahnWing,
        [GlyphName.KahnWingChange] = GlyphNameCodePoints.KahnWingChange,
        [GlyphName.KahnZank] = GlyphNameCodePoints.KahnZank,
        [GlyphName.KahnZink] = GlyphNameCodePoints.KahnZink,
        [GlyphName.KeyboardBebung2DotsAbove] = GlyphNameCodePoints.KeyboardBebung2DotsAbove,
        [GlyphName.KeyboardBebung2DotsBelow] = GlyphNameCodePoints.KeyboardBebung2DotsBelow,
        [GlyphName.KeyboardBebung3DotsAbove] = GlyphNameCodePoints.KeyboardBebung3DotsAbove,
        [GlyphName.KeyboardBebung3DotsBelow] = GlyphNameCodePoints.KeyboardBebung3DotsBelow,
        [GlyphName.KeyboardBebung4DotsAbove] = GlyphNameCodePoints.KeyboardBebung4DotsAbove,
        [GlyphName.KeyboardBebung4DotsBelow] = GlyphNameCodePoints.KeyboardBebung4DotsBelow,
        [GlyphName.KeyboardLeftPedalPictogram] = GlyphNameCodePoints.KeyboardLeftPedalPictogram,
        [GlyphName.KeyboardMiddlePedalPictogram] = GlyphNameCodePoints.KeyboardMiddlePedalPictogram,
        [GlyphName.KeyboardPedalD] = GlyphNameCodePoints.KeyboardPedalD,
        [GlyphName.KeyboardPedalDot] = GlyphNameCodePoints.KeyboardPedalDot,
        [GlyphName.KeyboardPedalE] = GlyphNameCodePoints.KeyboardPedalE,
        [GlyphName.KeyboardPedalHalf] = GlyphNameCodePoints.KeyboardPedalHalf,
        [GlyphName.KeyboardPedalHalf2] = GlyphNameCodePoints.KeyboardPedalHalf2,
        [GlyphName.KeyboardPedalHalf3] = GlyphNameCodePoints.KeyboardPedalHalf3,
        [GlyphName.KeyboardPedalHeel1] = GlyphNameCodePoints.KeyboardPedalHeel1,
        [GlyphName.KeyboardPedalHeel2] = GlyphNameCodePoints.KeyboardPedalHeel2,
        [GlyphName.KeyboardPedalHeel3] = GlyphNameCodePoints.KeyboardPedalHeel3,
        [GlyphName.KeyboardPedalHeelToToe] = GlyphNameCodePoints.KeyboardPedalHeelToToe,
        [GlyphName.KeyboardPedalHeelToe] = GlyphNameCodePoints.KeyboardPedalHeelToe,
        [GlyphName.KeyboardPedalHookEnd] = GlyphNameCodePoints.KeyboardPedalHookEnd,
        [GlyphName.KeyboardPedalHookStart] = GlyphNameCodePoints.KeyboardPedalHookStart,
        [GlyphName.KeyboardPedalHyphen] = GlyphNameCodePoints.KeyboardPedalHyphen,
        [GlyphName.KeyboardPedalP] = GlyphNameCodePoints.KeyboardPedalP,
        [GlyphName.KeyboardPedalParensLeft] = GlyphNameCodePoints.KeyboardPedalParensLeft,
        [GlyphName.KeyboardPedalParensRight] = GlyphNameCodePoints.KeyboardPedalParensRight,
        [GlyphName.KeyboardPedalPed] = GlyphNameCodePoints.KeyboardPedalPed,
        [GlyphName.KeyboardPedalS] = GlyphNameCodePoints.KeyboardPedalS,
        [GlyphName.KeyboardPedalSost] = GlyphNameCodePoints.KeyboardPedalSost,
        [GlyphName.KeyboardPedalToe1] = GlyphNameCodePoints.KeyboardPedalToe1,
        [GlyphName.KeyboardPedalToe2] = GlyphNameCodePoints.KeyboardPedalToe2,
        [GlyphName.KeyboardPedalToeToHeel] = GlyphNameCodePoints.KeyboardPedalToeToHeel,
        [GlyphName.KeyboardPedalUp] = GlyphNameCodePoints.KeyboardPedalUp,
        [GlyphName.KeyboardPedalUpNotch] = GlyphNameCodePoints.KeyboardPedalUpNotch,
        [GlyphName.KeyboardPedalUpSpecial] = GlyphNameCodePoints.KeyboardPedalUpSpecial,
        [GlyphName.KeyboardPlayWithLH] = GlyphNameCodePoints.KeyboardPlayWithLH,
        [GlyphName.KeyboardPlayWithLHEnd] = GlyphNameCodePoints.KeyboardPlayWithLHEnd,
        [GlyphName.KeyboardPlayWithRH] = GlyphNameCodePoints.KeyboardPlayWithRH,
        [GlyphName.KeyboardPlayWithRHEnd] = GlyphNameCodePoints.KeyboardPlayWithRHEnd,
        [GlyphName.KeyboardPluckInside] = GlyphNameCodePoints.KeyboardPluckInside,
        [GlyphName.KeyboardRightPedalPictogram] = GlyphNameCodePoints.KeyboardRightPedalPictogram,
        [GlyphName.KievanAccidentalFlat] = GlyphNameCodePoints.KievanAccidentalFlat,
        [GlyphName.KievanAccidentalSharp] = GlyphNameCodePoints.KievanAccidentalSharp,
        [GlyphName.KievanAugmentationDot] = GlyphNameCodePoints.KievanAugmentationDot,
        [GlyphName.KievanCClef] = GlyphNameCodePoints.KievanCClef,
        [GlyphName.KievanEndingSymbol] = GlyphNameCodePoints.KievanEndingSymbol,
        [GlyphName.KievanNote8thStemDown] = GlyphNameCodePoints.KievanNote8thStemDown,
        [GlyphName.KievanNote8thStemUp] = GlyphNameCodePoints.KievanNote8thStemUp,
        [GlyphName.KievanNoteBeam] = GlyphNameCodePoints.KievanNoteBeam,
        [GlyphName.KievanNoteHalfStaffLine] = GlyphNameCodePoints.KievanNoteHalfStaffLine,
        [GlyphName.KievanNoteHalfStaffSpace] = GlyphNameCodePoints.KievanNoteHalfStaffSpace,
        [GlyphName.KievanNoteQuarterStemDown] = GlyphNameCodePoints.KievanNoteQuarterStemDown,
        [GlyphName.KievanNoteQuarterStemUp] = GlyphNameCodePoints.KievanNoteQuarterStemUp,
        [GlyphName.KievanNoteReciting] = GlyphNameCodePoints.KievanNoteReciting,
        [GlyphName.KievanNoteWhole] = GlyphNameCodePoints.KievanNoteWhole,
        [GlyphName.KievanNoteWholeFinal] = GlyphNameCodePoints.KievanNoteWholeFinal,
        [GlyphName.KodalyHandDo] = GlyphNameCodePoints.KodalyHandDo,
        [GlyphName.KodalyHandFa] = GlyphNameCodePoints.KodalyHandFa,
        [GlyphName.KodalyHandLa] = GlyphNameCodePoints.KodalyHandLa,
        [GlyphName.KodalyHandMi] = GlyphNameCodePoints.KodalyHandMi,
        [GlyphName.KodalyHandRe] = GlyphNameCodePoints.KodalyHandRe,
        [GlyphName.KodalyHandSo] = GlyphNameCodePoints.KodalyHandSo,
        [GlyphName.KodalyHandTi] = GlyphNameCodePoints.KodalyHandTi,
        [GlyphName.LeftRepeatSmall] = GlyphNameCodePoints.LeftRepeatSmall,
        [GlyphName.LegerLine] = GlyphNameCodePoints.LegerLine,
        [GlyphName.LegerLineNarrow] = GlyphNameCodePoints.LegerLineNarrow,
        [GlyphName.LegerLineWide] = GlyphNameCodePoints.LegerLineWide,
        [GlyphName.LuteBarlineEndRepeat] = GlyphNameCodePoints.LuteBarlineEndRepeat,
        [GlyphName.LuteBarlineFinal] = GlyphNameCodePoints.LuteBarlineFinal,
        [GlyphName.LuteBarlineStartRepeat] = GlyphNameCodePoints.LuteBarlineStartRepeat,
        [GlyphName.LuteDuration16th] = GlyphNameCodePoints.LuteDuration16th,
        [GlyphName.LuteDuration32nd] = GlyphNameCodePoints.LuteDuration32nd,
        [GlyphName.LuteDuration8th] = GlyphNameCodePoints.LuteDuration8th,
        [GlyphName.LuteDurationDoubleWhole] = GlyphNameCodePoints.LuteDurationDoubleWhole,
        [GlyphName.LuteDurationHalf] = GlyphNameCodePoints.LuteDurationHalf,
        [GlyphName.LuteDurationQuarter] = GlyphNameCodePoints.LuteDurationQuarter,
        [GlyphName.LuteDurationWhole] = GlyphNameCodePoints.LuteDurationWhole,
        [GlyphName.LuteFingeringRHFirst] = GlyphNameCodePoints.LuteFingeringRHFirst,
        [GlyphName.LuteFingeringRHSecond] = GlyphNameCodePoints.LuteFingeringRHSecond,
        [GlyphName.LuteFingeringRHThird] = GlyphNameCodePoints.LuteFingeringRHThird,
        [GlyphName.LuteFingeringRHThumb] = GlyphNameCodePoints.LuteFingeringRHThumb,
        [GlyphName.LuteFrench10thCourse] = GlyphNameCodePoints.LuteFrench10thCourse,
        [GlyphName.LuteFrench7thCourse] = GlyphNameCodePoints.LuteFrench7thCourse,
        [GlyphName.LuteFrench8thCourse] = GlyphNameCodePoints.LuteFrench8thCourse,
        [GlyphName.LuteFrench9thCourse] = GlyphNameCodePoints.LuteFrench9thCourse,
        [GlyphName.LuteFrenchAppoggiaturaAbove] = GlyphNameCodePoints.LuteFrenchAppoggiaturaAbove,
        [GlyphName.LuteFrenchAppoggiaturaBelow] = GlyphNameCodePoints.LuteFrenchAppoggiaturaBelow,
        [GlyphName.LuteFrenchFretA] = GlyphNameCodePoints.LuteFrenchFretA,
        [GlyphName.LuteFrenchFretB] = GlyphNameCodePoints.LuteFrenchFretB,
        [GlyphName.LuteFrenchFretC] = GlyphNameCodePoints.LuteFrenchFretC,
        [GlyphName.LuteFrenchFretD] = GlyphNameCodePoints.LuteFrenchFretD,
        [GlyphName.LuteFrenchFretE] = GlyphNameCodePoints.LuteFrenchFretE,
        [GlyphName.LuteFrenchFretF] = GlyphNameCodePoints.LuteFrenchFretF,
        [GlyphName.LuteFrenchFretG] = GlyphNameCodePoints.LuteFrenchFretG,
        [GlyphName.LuteFrenchFretH] = GlyphNameCodePoints.LuteFrenchFretH,
        [GlyphName.LuteFrenchFretI] = GlyphNameCodePoints.LuteFrenchFretI,
        [GlyphName.LuteFrenchFretK] = GlyphNameCodePoints.LuteFrenchFretK,
        [GlyphName.LuteFrenchFretL] = GlyphNameCodePoints.LuteFrenchFretL,
        [GlyphName.LuteFrenchFretM] = GlyphNameCodePoints.LuteFrenchFretM,
        [GlyphName.LuteFrenchFretN] = GlyphNameCodePoints.LuteFrenchFretN,
        [GlyphName.LuteFrenchMordentInverted] = GlyphNameCodePoints.LuteFrenchMordentInverted,
        [GlyphName.LuteFrenchMordentLower] = GlyphNameCodePoints.LuteFrenchMordentLower,
        [GlyphName.LuteFrenchMordentUpper] = GlyphNameCodePoints.LuteFrenchMordentUpper,
        [GlyphName.LuteGermanALower] = GlyphNameCodePoints.LuteGermanALower,
        [GlyphName.LuteGermanAUpper] = GlyphNameCodePoints.LuteGermanAUpper,
        [GlyphName.LuteGermanBLower] = GlyphNameCodePoints.LuteGermanBLower,
        [GlyphName.LuteGermanBUpper] = GlyphNameCodePoints.LuteGermanBUpper,
        [GlyphName.LuteGermanCLower] = GlyphNameCodePoints.LuteGermanCLower,
        [GlyphName.LuteGermanCUpper] = GlyphNameCodePoints.LuteGermanCUpper,
        [GlyphName.LuteGermanDLower] = GlyphNameCodePoints.LuteGermanDLower,
        [GlyphName.LuteGermanDUpper] = GlyphNameCodePoints.LuteGermanDUpper,
        [GlyphName.LuteGermanELower] = GlyphNameCodePoints.LuteGermanELower,
        [GlyphName.LuteGermanEUpper] = GlyphNameCodePoints.LuteGermanEUpper,
        [GlyphName.LuteGermanFLower] = GlyphNameCodePoints.LuteGermanFLower,
        [GlyphName.LuteGermanFUpper] = GlyphNameCodePoints.LuteGermanFUpper,
        [GlyphName.LuteGermanGLower] = GlyphNameCodePoints.LuteGermanGLower,
        [GlyphName.LuteGermanGUpper] = GlyphNameCodePoints.LuteGermanGUpper,
        [GlyphName.LuteGermanHLower] = GlyphNameCodePoints.LuteGermanHLower,
        [GlyphName.LuteGermanHUpper] = GlyphNameCodePoints.LuteGermanHUpper,
        [GlyphName.LuteGermanILower] = GlyphNameCodePoints.LuteGermanILower,
        [GlyphName.LuteGermanIUpper] = GlyphNameCodePoints.LuteGermanIUpper,
        [GlyphName.LuteGermanKLower] = GlyphNameCodePoints.LuteGermanKLower,
        [GlyphName.LuteGermanKUpper] = GlyphNameCodePoints.LuteGermanKUpper,
        [GlyphName.LuteGermanLLower] = GlyphNameCodePoints.LuteGermanLLower,
        [GlyphName.LuteGermanLUpper] = GlyphNameCodePoints.LuteGermanLUpper,
        [GlyphName.LuteGermanMLower] = GlyphNameCodePoints.LuteGermanMLower,
        [GlyphName.LuteGermanMUpper] = GlyphNameCodePoints.LuteGermanMUpper,
        [GlyphName.LuteGermanNLower] = GlyphNameCodePoints.LuteGermanNLower,
        [GlyphName.LuteGermanNUpper] = GlyphNameCodePoints.LuteGermanNUpper,
        [GlyphName.LuteGermanOLower] = GlyphNameCodePoints.LuteGermanOLower,
        [GlyphName.LuteGermanPLower] = GlyphNameCodePoints.LuteGermanPLower,
        [GlyphName.LuteGermanQLower] = GlyphNameCodePoints.LuteGermanQLower,
        [GlyphName.LuteGermanRLower] = GlyphNameCodePoints.LuteGermanRLower,
        [GlyphName.LuteGermanSLower] = GlyphNameCodePoints.LuteGermanSLower,
        [GlyphName.LuteGermanTLower] = GlyphNameCodePoints.LuteGermanTLower,
        [GlyphName.LuteGermanVLower] = GlyphNameCodePoints.LuteGermanVLower,
        [GlyphName.LuteGermanXLower] = GlyphNameCodePoints.LuteGermanXLower,
        [GlyphName.LuteGermanYLower] = GlyphNameCodePoints.LuteGermanYLower,
        [GlyphName.LuteGermanZLower] = GlyphNameCodePoints.LuteGermanZLower,
        [GlyphName.LuteItalianClefCSolFaUt] = GlyphNameCodePoints.LuteItalianClefCSolFaUt,
        [GlyphName.LuteItalianClefFFaUt] = GlyphNameCodePoints.LuteItalianClefFFaUt,
        [GlyphName.LuteItalianFret0] = GlyphNameCodePoints.LuteItalianFret0,
        [GlyphName.LuteItalianFret1] = GlyphNameCodePoints.LuteItalianFret1,
        [GlyphName.LuteItalianFret2] = GlyphNameCodePoints.LuteItalianFret2,
        [GlyphName.LuteItalianFret3] = GlyphNameCodePoints.LuteItalianFret3,
        [GlyphName.LuteItalianFret4] = GlyphNameCodePoints.LuteItalianFret4,
        [GlyphName.LuteItalianFret5] = GlyphNameCodePoints.LuteItalianFret5,
        [GlyphName.LuteItalianFret6] = GlyphNameCodePoints.LuteItalianFret6,
        [GlyphName.LuteItalianFret7] = GlyphNameCodePoints.LuteItalianFret7,
        [GlyphName.LuteItalianFret8] = GlyphNameCodePoints.LuteItalianFret8,
        [GlyphName.LuteItalianFret9] = GlyphNameCodePoints.LuteItalianFret9,
        [GlyphName.LuteItalianHoldFinger] = GlyphNameCodePoints.LuteItalianHoldFinger,
        [GlyphName.LuteItalianHoldNote] = GlyphNameCodePoints.LuteItalianHoldNote,
        [GlyphName.LuteItalianReleaseFinger] = GlyphNameCodePoints.LuteItalianReleaseFinger,
        [GlyphName.LuteItalianTempoFast] = GlyphNameCodePoints.LuteItalianTempoFast,
        [GlyphName.LuteItalianTempoNeitherFastNorSlow] = GlyphNameCodePoints.LuteItalianTempoNeitherFastNorSlow,
        [GlyphName.LuteItalianTempoSlow] = GlyphNameCodePoints.LuteItalianTempoSlow,
        [GlyphName.LuteItalianTempoSomewhatFast] = GlyphNameCodePoints.LuteItalianTempoSomewhatFast,
        [GlyphName.LuteItalianTempoVerySlow] = GlyphNameCodePoints.LuteItalianTempoVerySlow,
        [GlyphName.LuteItalianTimeTriple] = GlyphNameCodePoints.LuteItalianTimeTriple,
        [GlyphName.LuteItalianTremolo] = GlyphNameCodePoints.LuteItalianTremolo,
        [GlyphName.LuteItalianVibrato] = GlyphNameCodePoints.LuteItalianVibrato,
        [GlyphName.LuteStaff6Lines] = GlyphNameCodePoints.LuteStaff6Lines,
        [GlyphName.LuteStaff6LinesNarrow] = GlyphNameCodePoints.LuteStaff6LinesNarrow,
        [GlyphName.LuteStaff6LinesWide] = GlyphNameCodePoints.LuteStaff6LinesWide,
        [GlyphName.LyricsElision] = GlyphNameCodePoints.LyricsElision,
        [GlyphName.LyricsElisionNarrow] = GlyphNameCodePoints.LyricsElisionNarrow,
        [GlyphName.LyricsElisionWide] = GlyphNameCodePoints.LyricsElisionWide,
        [GlyphName.LyricsHyphenBaseline] = GlyphNameCodePoints.LyricsHyphenBaseline,
        [GlyphName.LyricsHyphenBaselineNonBreaking] = GlyphNameCodePoints.LyricsHyphenBaselineNonBreaking,
        [GlyphName.LyricsTextRepeat] = GlyphNameCodePoints.LyricsTextRepeat,
        [GlyphName.MedRenFlatHardB] = GlyphNameCodePoints.MedRenFlatHardB,
        [GlyphName.MedRenFlatSoftB] = GlyphNameCodePoints.MedRenFlatSoftB,
        [GlyphName.MedRenFlatWithDot] = GlyphNameCodePoints.MedRenFlatWithDot,
        [GlyphName.MedRenGClefCMN] = GlyphNameCodePoints.MedRenGClefCMN,
        [GlyphName.MedRenLiquescenceCMN] = GlyphNameCodePoints.MedRenLiquescenceCMN,
        [GlyphName.MedRenLiquescentAscCMN] = GlyphNameCodePoints.MedRenLiquescentAscCMN,
        [GlyphName.MedRenLiquescentDescCMN] = GlyphNameCodePoints.MedRenLiquescentDescCMN,
        [GlyphName.MedRenNatural] = GlyphNameCodePoints.MedRenNatural,
        [GlyphName.MedRenNaturalWithCross] = GlyphNameCodePoints.MedRenNaturalWithCross,
        [GlyphName.MedRenOriscusCMN] = GlyphNameCodePoints.MedRenOriscusCMN,
        [GlyphName.MedRenPlicaCMN] = GlyphNameCodePoints.MedRenPlicaCMN,
        [GlyphName.MedRenPunctumCMN] = GlyphNameCodePoints.MedRenPunctumCMN,
        [GlyphName.MedRenQuilismaCMN] = GlyphNameCodePoints.MedRenQuilismaCMN,
        [GlyphName.MedRenSharpCroix] = GlyphNameCodePoints.MedRenSharpCroix,
        [GlyphName.MedRenStrophicusCMN] = GlyphNameCodePoints.MedRenStrophicusCMN,
        [GlyphName.MensuralAlterationSign] = GlyphNameCodePoints.MensuralAlterationSign,
        [GlyphName.MensuralBlackBrevis] = GlyphNameCodePoints.MensuralBlackBrevis,
        [GlyphName.MensuralBlackBrevisVoid] = GlyphNameCodePoints.MensuralBlackBrevisVoid,
        [GlyphName.MensuralBlackDragma] = GlyphNameCodePoints.MensuralBlackDragma,
        [GlyphName.MensuralBlackLonga] = GlyphNameCodePoints.MensuralBlackLonga,
        [GlyphName.MensuralBlackMaxima] = GlyphNameCodePoints.MensuralBlackMaxima,
        [GlyphName.MensuralBlackMinima] = GlyphNameCodePoints.MensuralBlackMinima,
        [GlyphName.MensuralBlackMinimaVoid] = GlyphNameCodePoints.MensuralBlackMinimaVoid,
        [GlyphName.MensuralBlackSemibrevis] = GlyphNameCodePoints.MensuralBlackSemibrevis,
        [GlyphName.MensuralBlackSemibrevisCaudata] = GlyphNameCodePoints.MensuralBlackSemibrevisCaudata,
        [GlyphName.MensuralBlackSemibrevisOblique] = GlyphNameCodePoints.MensuralBlackSemibrevisOblique,
        [GlyphName.MensuralBlackSemibrevisVoid] = GlyphNameCodePoints.MensuralBlackSemibrevisVoid,
        [GlyphName.MensuralBlackSemiminima] = GlyphNameCodePoints.MensuralBlackSemiminima,
        [GlyphName.MensuralCclef] = GlyphNameCodePoints.MensuralCclef,
        [GlyphName.MensuralCclefPetrucciPosHigh] = GlyphNameCodePoints.MensuralCclefPetrucciPosHigh,
        [GlyphName.MensuralCclefPetrucciPosHighest] = GlyphNameCodePoints.MensuralCclefPetrucciPosHighest,
        [GlyphName.MensuralCclefPetrucciPosLow] = GlyphNameCodePoints.MensuralCclefPetrucciPosLow,
        [GlyphName.MensuralCclefPetrucciPosLowest] = GlyphNameCodePoints.MensuralCclefPetrucciPosLowest,
        [GlyphName.MensuralCclefPetrucciPosMiddle] = GlyphNameCodePoints.MensuralCclefPetrucciPosMiddle,
        [GlyphName.MensuralColorationEndRound] = GlyphNameCodePoints.MensuralColorationEndRound,
        [GlyphName.MensuralColorationEndSquare] = GlyphNameCodePoints.MensuralColorationEndSquare,
        [GlyphName.MensuralColorationStartRound] = GlyphNameCodePoints.MensuralColorationStartRound,
        [GlyphName.MensuralColorationStartSquare] = GlyphNameCodePoints.MensuralColorationStartSquare,
        [GlyphName.MensuralCombStemDiagonal] = GlyphNameCodePoints.MensuralCombStemDiagonal,
        [GlyphName.MensuralCombStemDown] = GlyphNameCodePoints.MensuralCombStemDown,
        [GlyphName.MensuralCombStemDownFlagExtended] = GlyphNameCodePoints.MensuralCombStemDownFlagExtended,
        [GlyphName.MensuralCombStemDownFlagFlared] = GlyphNameCodePoints.MensuralCombStemDownFlagFlared,
        [GlyphName.MensuralCombStemDownFlagFusa] = GlyphNameCodePoints.MensuralCombStemDownFlagFusa,
        [GlyphName.MensuralCombStemDownFlagLeft] = GlyphNameCodePoints.MensuralCombStemDownFlagLeft,
        [GlyphName.MensuralCombStemDownFlagRight] = GlyphNameCodePoints.MensuralCombStemDownFlagRight,
        [GlyphName.MensuralCombStemDownFlagSemiminima] = GlyphNameCodePoints.MensuralCombStemDownFlagSemiminima,
        [GlyphName.MensuralCombStemUp] = GlyphNameCodePoints.MensuralCombStemUp,
        [GlyphName.MensuralCombStemUpFlagExtended] = GlyphNameCodePoints.MensuralCombStemUpFlagExtended,
        [GlyphName.MensuralCombStemUpFlagFlared] = GlyphNameCodePoints.MensuralCombStemUpFlagFlared,
        [GlyphName.MensuralCombStemUpFlagFusa] = GlyphNameCodePoints.MensuralCombStemUpFlagFusa,
        [GlyphName.MensuralCombStemUpFlagLeft] = GlyphNameCodePoints.MensuralCombStemUpFlagLeft,
        [GlyphName.MensuralCombStemUpFlagRight] = GlyphNameCodePoints.MensuralCombStemUpFlagRight,
        [GlyphName.MensuralCombStemUpFlagSemiminima] = GlyphNameCodePoints.MensuralCombStemUpFlagSemiminima,
        [GlyphName.MensuralCustosCheckmark] = GlyphNameCodePoints.MensuralCustosCheckmark,
        [GlyphName.MensuralCustosDown] = GlyphNameCodePoints.MensuralCustosDown,
        [GlyphName.MensuralCustosTurn] = GlyphNameCodePoints.MensuralCustosTurn,
        [GlyphName.MensuralCustosUp] = GlyphNameCodePoints.MensuralCustosUp,
        [GlyphName.MensuralFclef] = GlyphNameCodePoints.MensuralFclef,
        [GlyphName.MensuralFclefPetrucci] = GlyphNameCodePoints.MensuralFclefPetrucci,
        [GlyphName.MensuralGclef] = GlyphNameCodePoints.MensuralGclef,
        [GlyphName.MensuralGclefPetrucci] = GlyphNameCodePoints.MensuralGclefPetrucci,
        [GlyphName.MensuralModusImperfectumVert] = GlyphNameCodePoints.MensuralModusImperfectumVert,
        [GlyphName.MensuralModusPerfectumVert] = GlyphNameCodePoints.MensuralModusPerfectumVert,
        [GlyphName.MensuralNoteheadLongaBlack] = GlyphNameCodePoints.MensuralNoteheadLongaBlack,
        [GlyphName.MensuralNoteheadLongaBlackVoid] = GlyphNameCodePoints.MensuralNoteheadLongaBlackVoid,
        [GlyphName.MensuralNoteheadLongaVoid] = GlyphNameCodePoints.MensuralNoteheadLongaVoid,
        [GlyphName.MensuralNoteheadLongaWhite] = GlyphNameCodePoints.MensuralNoteheadLongaWhite,
        [GlyphName.MensuralNoteheadMaximaBlack] = GlyphNameCodePoints.MensuralNoteheadMaximaBlack,
        [GlyphName.MensuralNoteheadMaximaBlackVoid] = GlyphNameCodePoints.MensuralNoteheadMaximaBlackVoid,
        [GlyphName.MensuralNoteheadMaximaVoid] = GlyphNameCodePoints.MensuralNoteheadMaximaVoid,
        [GlyphName.MensuralNoteheadMaximaWhite] = GlyphNameCodePoints.MensuralNoteheadMaximaWhite,
        [GlyphName.MensuralNoteheadMinimaWhite] = GlyphNameCodePoints.MensuralNoteheadMinimaWhite,
        [GlyphName.MensuralNoteheadSemibrevisBlack] = GlyphNameCodePoints.MensuralNoteheadSemibrevisBlack,
        [GlyphName.MensuralNoteheadSemibrevisBlackVoid] = GlyphNameCodePoints.MensuralNoteheadSemibrevisBlackVoid,
        [GlyphName.MensuralNoteheadSemibrevisBlackVoidTurned] = GlyphNameCodePoints.MensuralNoteheadSemibrevisBlackVoidTurned,
        [GlyphName.MensuralNoteheadSemibrevisVoid] = GlyphNameCodePoints.MensuralNoteheadSemibrevisVoid,
        [GlyphName.MensuralNoteheadSemiminimaWhite] = GlyphNameCodePoints.MensuralNoteheadSemiminimaWhite,
        [GlyphName.MensuralObliqueAsc2ndBlack] = GlyphNameCodePoints.MensuralObliqueAsc2ndBlack,
        [GlyphName.MensuralObliqueAsc2ndBlackVoid] = GlyphNameCodePoints.MensuralObliqueAsc2ndBlackVoid,
        [GlyphName.MensuralObliqueAsc2ndVoid] = GlyphNameCodePoints.MensuralObliqueAsc2ndVoid,
        [GlyphName.MensuralObliqueAsc2ndWhite] = GlyphNameCodePoints.MensuralObliqueAsc2ndWhite,
        [GlyphName.MensuralObliqueAsc3rdBlack] = GlyphNameCodePoints.MensuralObliqueAsc3rdBlack,
        [GlyphName.MensuralObliqueAsc3rdBlackVoid] = GlyphNameCodePoints.MensuralObliqueAsc3rdBlackVoid,
        [GlyphName.MensuralObliqueAsc3rdVoid] = GlyphNameCodePoints.MensuralObliqueAsc3rdVoid,
        [GlyphName.MensuralObliqueAsc3rdWhite] = GlyphNameCodePoints.MensuralObliqueAsc3rdWhite,
        [GlyphName.MensuralObliqueAsc4thBlack] = GlyphNameCodePoints.MensuralObliqueAsc4thBlack,
        [GlyphName.MensuralObliqueAsc4thBlackVoid] = GlyphNameCodePoints.MensuralObliqueAsc4thBlackVoid,
        [GlyphName.MensuralObliqueAsc4thVoid] = GlyphNameCodePoints.MensuralObliqueAsc4thVoid,
        [GlyphName.MensuralObliqueAsc4thWhite] = GlyphNameCodePoints.MensuralObliqueAsc4thWhite,
        [GlyphName.MensuralObliqueAsc5thBlack] = GlyphNameCodePoints.MensuralObliqueAsc5thBlack,
        [GlyphName.MensuralObliqueAsc5thBlackVoid] = GlyphNameCodePoints.MensuralObliqueAsc5thBlackVoid,
        [GlyphName.MensuralObliqueAsc5thVoid] = GlyphNameCodePoints.MensuralObliqueAsc5thVoid,
        [GlyphName.MensuralObliqueAsc5thWhite] = GlyphNameCodePoints.MensuralObliqueAsc5thWhite,
        [GlyphName.MensuralObliqueDesc2ndBlack] = GlyphNameCodePoints.MensuralObliqueDesc2ndBlack,
        [GlyphName.MensuralObliqueDesc2ndBlackVoid] = GlyphNameCodePoints.MensuralObliqueDesc2ndBlackVoid,
        [GlyphName.MensuralObliqueDesc2ndVoid] = GlyphNameCodePoints.MensuralObliqueDesc2ndVoid,
        [GlyphName.MensuralObliqueDesc2ndWhite] = GlyphNameCodePoints.MensuralObliqueDesc2ndWhite,
        [GlyphName.MensuralObliqueDesc3rdBlack] = GlyphNameCodePoints.MensuralObliqueDesc3rdBlack,
        [GlyphName.MensuralObliqueDesc3rdBlackVoid] = GlyphNameCodePoints.MensuralObliqueDesc3rdBlackVoid,
        [GlyphName.MensuralObliqueDesc3rdVoid] = GlyphNameCodePoints.MensuralObliqueDesc3rdVoid,
        [GlyphName.MensuralObliqueDesc3rdWhite] = GlyphNameCodePoints.MensuralObliqueDesc3rdWhite,
        [GlyphName.MensuralObliqueDesc4thBlack] = GlyphNameCodePoints.MensuralObliqueDesc4thBlack,
        [GlyphName.MensuralObliqueDesc4thBlackVoid] = GlyphNameCodePoints.MensuralObliqueDesc4thBlackVoid,
        [GlyphName.MensuralObliqueDesc4thVoid] = GlyphNameCodePoints.MensuralObliqueDesc4thVoid,
        [GlyphName.MensuralObliqueDesc4thWhite] = GlyphNameCodePoints.MensuralObliqueDesc4thWhite,
        [GlyphName.MensuralObliqueDesc5thBlack] = GlyphNameCodePoints.MensuralObliqueDesc5thBlack,
        [GlyphName.MensuralObliqueDesc5thBlackVoid] = GlyphNameCodePoints.MensuralObliqueDesc5thBlackVoid,
        [GlyphName.MensuralObliqueDesc5thVoid] = GlyphNameCodePoints.MensuralObliqueDesc5thVoid,
        [GlyphName.MensuralObliqueDesc5thWhite] = GlyphNameCodePoints.MensuralObliqueDesc5thWhite,
        [GlyphName.MensuralProlation1] = GlyphNameCodePoints.MensuralProlation1,
        [GlyphName.MensuralProlation10] = GlyphNameCodePoints.MensuralProlation10,
        [GlyphName.MensuralProlation11] = GlyphNameCodePoints.MensuralProlation11,
        [GlyphName.MensuralProlation2] = GlyphNameCodePoints.MensuralProlation2,
        [GlyphName.MensuralProlation3] = GlyphNameCodePoints.MensuralProlation3,
        [GlyphName.MensuralProlation4] = GlyphNameCodePoints.MensuralProlation4,
        [GlyphName.MensuralProlation5] = GlyphNameCodePoints.MensuralProlation5,
        [GlyphName.MensuralProlation6] = GlyphNameCodePoints.MensuralProlation6,
        [GlyphName.MensuralProlation7] = GlyphNameCodePoints.MensuralProlation7,
        [GlyphName.MensuralProlation8] = GlyphNameCodePoints.MensuralProlation8,
        [GlyphName.MensuralProlation9] = GlyphNameCodePoints.MensuralProlation9,
        [GlyphName.MensuralProlationCombiningDot] = GlyphNameCodePoints.MensuralProlationCombiningDot,
        [GlyphName.MensuralProlationCombiningDotVoid] = GlyphNameCodePoints.MensuralProlationCombiningDotVoid,
        [GlyphName.MensuralProlationCombiningStroke] = GlyphNameCodePoints.MensuralProlationCombiningStroke,
        [GlyphName.MensuralProlationCombiningThreeDots] = GlyphNameCodePoints.MensuralProlationCombiningThreeDots,
        [GlyphName.MensuralProlationCombiningThreeDotsTri] = GlyphNameCodePoints.MensuralProlationCombiningThreeDotsTri,
        [GlyphName.MensuralProlationCombiningTwoDots] = GlyphNameCodePoints.MensuralProlationCombiningTwoDots,
        [GlyphName.MensuralProportion1] = GlyphNameCodePoints.MensuralProportion1,
        [GlyphName.MensuralProportion2] = GlyphNameCodePoints.MensuralProportion2,
        [GlyphName.MensuralProportion3] = GlyphNameCodePoints.MensuralProportion3,
        [GlyphName.MensuralProportion4] = GlyphNameCodePoints.MensuralProportion4,
        [GlyphName.MensuralProportion5] = GlyphNameCodePoints.MensuralProportion5,
        [GlyphName.MensuralProportion6] = GlyphNameCodePoints.MensuralProportion6,
        [GlyphName.MensuralProportion7] = GlyphNameCodePoints.MensuralProportion7,
        [GlyphName.MensuralProportion8] = GlyphNameCodePoints.MensuralProportion8,
        [GlyphName.MensuralProportion9] = GlyphNameCodePoints.MensuralProportion9,
        [GlyphName.MensuralProportionMajor] = GlyphNameCodePoints.MensuralProportionMajor,
        [GlyphName.MensuralProportionMinor] = GlyphNameCodePoints.MensuralProportionMinor,
        [GlyphName.MensuralProportionProportioDupla1] = GlyphNameCodePoints.MensuralProportionProportioDupla1,
        [GlyphName.MensuralProportionProportioDupla2] = GlyphNameCodePoints.MensuralProportionProportioDupla2,
        [GlyphName.MensuralProportionProportioQuadrupla] = GlyphNameCodePoints.MensuralProportionProportioQuadrupla,
        [GlyphName.MensuralProportionProportioTripla] = GlyphNameCodePoints.MensuralProportionProportioTripla,
        [GlyphName.MensuralProportionTempusPerfectum] = GlyphNameCodePoints.MensuralProportionTempusPerfectum,
        [GlyphName.MensuralRestBrevis] = GlyphNameCodePoints.MensuralRestBrevis,
        [GlyphName.MensuralRestFusa] = GlyphNameCodePoints.MensuralRestFusa,
        [GlyphName.MensuralRestLongaImperfecta] = GlyphNameCodePoints.MensuralRestLongaImperfecta,
        [GlyphName.MensuralRestLongaPerfecta] = GlyphNameCodePoints.MensuralRestLongaPerfecta,
        [GlyphName.MensuralRestMaxima] = GlyphNameCodePoints.MensuralRestMaxima,
        [GlyphName.MensuralRestMinima] = GlyphNameCodePoints.MensuralRestMinima,
        [GlyphName.MensuralRestSemibrevis] = GlyphNameCodePoints.MensuralRestSemibrevis,
        [GlyphName.MensuralRestSemifusa] = GlyphNameCodePoints.MensuralRestSemifusa,
        [GlyphName.MensuralRestSemiminima] = GlyphNameCodePoints.MensuralRestSemiminima,
        [GlyphName.MensuralSignumDown] = GlyphNameCodePoints.MensuralSignumDown,
        [GlyphName.MensuralSignumUp] = GlyphNameCodePoints.MensuralSignumUp,
        [GlyphName.MensuralTempusImperfectumHoriz] = GlyphNameCodePoints.MensuralTempusImperfectumHoriz,
        [GlyphName.MensuralTempusPerfectumHoriz] = GlyphNameCodePoints.MensuralTempusPerfectumHoriz,
        [GlyphName.MensuralWhiteBrevis] = GlyphNameCodePoints.MensuralWhiteBrevis,
        [GlyphName.MensuralWhiteFusa] = GlyphNameCodePoints.MensuralWhiteFusa,
        [GlyphName.MensuralWhiteLonga] = GlyphNameCodePoints.MensuralWhiteLonga,
        [GlyphName.MensuralWhiteMaxima] = GlyphNameCodePoints.MensuralWhiteMaxima,
        [GlyphName.MensuralWhiteMinima] = GlyphNameCodePoints.MensuralWhiteMinima,
        [GlyphName.MensuralWhiteSemibrevis] = GlyphNameCodePoints.MensuralWhiteSemibrevis,
        [GlyphName.MensuralWhiteSemiminima] = GlyphNameCodePoints.MensuralWhiteSemiminima,
        [GlyphName.MetAugmentationDot] = GlyphNameCodePoints.MetAugmentationDot,
        [GlyphName.MetNote1024thDown] = GlyphNameCodePoints.MetNote1024thDown,
        [GlyphName.MetNote1024thUp] = GlyphNameCodePoints.MetNote1024thUp,
        [GlyphName.MetNote128thDown] = GlyphNameCodePoints.MetNote128thDown,
        [GlyphName.MetNote128thUp] = GlyphNameCodePoints.MetNote128thUp,
        [GlyphName.MetNote16thDown] = GlyphNameCodePoints.MetNote16thDown,
        [GlyphName.MetNote16thUp] = GlyphNameCodePoints.MetNote16thUp,
        [GlyphName.MetNote256thDown] = GlyphNameCodePoints.MetNote256thDown,
        [GlyphName.MetNote256thUp] = GlyphNameCodePoints.MetNote256thUp,
        [GlyphName.MetNote32ndDown] = GlyphNameCodePoints.MetNote32ndDown,
        [GlyphName.MetNote32ndUp] = GlyphNameCodePoints.MetNote32ndUp,
        [GlyphName.MetNote512thDown] = GlyphNameCodePoints.MetNote512thDown,
        [GlyphName.MetNote512thUp] = GlyphNameCodePoints.MetNote512thUp,
        [GlyphName.MetNote64thDown] = GlyphNameCodePoints.MetNote64thDown,
        [GlyphName.MetNote64thUp] = GlyphNameCodePoints.MetNote64thUp,
        [GlyphName.MetNote8thDown] = GlyphNameCodePoints.MetNote8thDown,
        [GlyphName.MetNote8thUp] = GlyphNameCodePoints.MetNote8thUp,
        [GlyphName.MetNoteDoubleWhole] = GlyphNameCodePoints.MetNoteDoubleWhole,
        [GlyphName.MetNoteDoubleWholeSquare] = GlyphNameCodePoints.MetNoteDoubleWholeSquare,
        [GlyphName.MetNoteHalfDown] = GlyphNameCodePoints.MetNoteHalfDown,
        [GlyphName.MetNoteHalfUp] = GlyphNameCodePoints.MetNoteHalfUp,
        [GlyphName.MetNoteQuarterDown] = GlyphNameCodePoints.MetNoteQuarterDown,
        [GlyphName.MetNoteQuarterUp] = GlyphNameCodePoints.MetNoteQuarterUp,
        [GlyphName.MetNoteWhole] = GlyphNameCodePoints.MetNoteWhole,
        [GlyphName.MetricModulationArrowLeft] = GlyphNameCodePoints.MetricModulationArrowLeft,
        [GlyphName.MetricModulationArrowRight] = GlyphNameCodePoints.MetricModulationArrowRight,
        [GlyphName.MiscDoNotCopy] = GlyphNameCodePoints.MiscDoNotCopy,
        [GlyphName.MiscDoNotPhotocopy] = GlyphNameCodePoints.MiscDoNotPhotocopy,
        [GlyphName.MiscEyeglasses] = GlyphNameCodePoints.MiscEyeglasses,
        [GlyphName.Note1024thDown] = GlyphNameCodePoints.Note1024thDown,
        [GlyphName.Note1024thUp] = GlyphNameCodePoints.Note1024thUp,
        [GlyphName.Note128thDown] = GlyphNameCodePoints.Note128thDown,
        [GlyphName.Note128thUp] = GlyphNameCodePoints.Note128thUp,
        [GlyphName.Note16thDown] = GlyphNameCodePoints.Note16thDown,
        [GlyphName.Note16thUp] = GlyphNameCodePoints.Note16thUp,
        [GlyphName.Note256thDown] = GlyphNameCodePoints.Note256thDown,
        [GlyphName.Note256thUp] = GlyphNameCodePoints.Note256thUp,
        [GlyphName.Note32ndDown] = GlyphNameCodePoints.Note32ndDown,
        [GlyphName.Note32ndUp] = GlyphNameCodePoints.Note32ndUp,
        [GlyphName.Note512thDown] = GlyphNameCodePoints.Note512thDown,
        [GlyphName.Note512thUp] = GlyphNameCodePoints.Note512thUp,
        [GlyphName.Note64thDown] = GlyphNameCodePoints.Note64thDown,
        [GlyphName.Note64thUp] = GlyphNameCodePoints.Note64thUp,
        [GlyphName.Note8thDown] = GlyphNameCodePoints.Note8thDown,
        [GlyphName.Note8thUp] = GlyphNameCodePoints.Note8thUp,
        [GlyphName.NoteABlack] = GlyphNameCodePoints.NoteABlack,
        [GlyphName.NoteAFlatBlack] = GlyphNameCodePoints.NoteAFlatBlack,
        [GlyphName.NoteAFlatHalf] = GlyphNameCodePoints.NoteAFlatHalf,
        [GlyphName.NoteAFlatWhole] = GlyphNameCodePoints.NoteAFlatWhole,
        [GlyphName.NoteAHalf] = GlyphNameCodePoints.NoteAHalf,
        [GlyphName.NoteASharpBlack] = GlyphNameCodePoints.NoteASharpBlack,
        [GlyphName.NoteASharpHalf] = GlyphNameCodePoints.NoteASharpHalf,
        [GlyphName.NoteASharpWhole] = GlyphNameCodePoints.NoteASharpWhole,
        [GlyphName.NoteAWhole] = GlyphNameCodePoints.NoteAWhole,
        [GlyphName.NoteBBlack] = GlyphNameCodePoints.NoteBBlack,
        [GlyphName.NoteBFlatBlack] = GlyphNameCodePoints.NoteBFlatBlack,
        [GlyphName.NoteBFlatHalf] = GlyphNameCodePoints.NoteBFlatHalf,
        [GlyphName.NoteBFlatWhole] = GlyphNameCodePoints.NoteBFlatWhole,
        [GlyphName.NoteBHalf] = GlyphNameCodePoints.NoteBHalf,
        [GlyphName.NoteBSharpBlack] = GlyphNameCodePoints.NoteBSharpBlack,
        [GlyphName.NoteBSharpHalf] = GlyphNameCodePoints.NoteBSharpHalf,
        [GlyphName.NoteBSharpWhole] = GlyphNameCodePoints.NoteBSharpWhole,
        [GlyphName.NoteBWhole] = GlyphNameCodePoints.NoteBWhole,
        [GlyphName.NoteCBlack] = GlyphNameCodePoints.NoteCBlack,
        [GlyphName.NoteCFlatBlack] = GlyphNameCodePoints.NoteCFlatBlack,
        [GlyphName.NoteCFlatHalf] = GlyphNameCodePoints.NoteCFlatHalf,
        [GlyphName.NoteCFlatWhole] = GlyphNameCodePoints.NoteCFlatWhole,
        [GlyphName.NoteCHalf] = GlyphNameCodePoints.NoteCHalf,
        [GlyphName.NoteCSharpBlack] = GlyphNameCodePoints.NoteCSharpBlack,
        [GlyphName.NoteCSharpHalf] = GlyphNameCodePoints.NoteCSharpHalf,
        [GlyphName.NoteCSharpWhole] = GlyphNameCodePoints.NoteCSharpWhole,
        [GlyphName.NoteCWhole] = GlyphNameCodePoints.NoteCWhole,
        [GlyphName.NoteDBlack] = GlyphNameCodePoints.NoteDBlack,
        [GlyphName.NoteDFlatBlack] = GlyphNameCodePoints.NoteDFlatBlack,
        [GlyphName.NoteDFlatHalf] = GlyphNameCodePoints.NoteDFlatHalf,
        [GlyphName.NoteDFlatWhole] = GlyphNameCodePoints.NoteDFlatWhole,
        [GlyphName.NoteDHalf] = GlyphNameCodePoints.NoteDHalf,
        [GlyphName.NoteDSharpBlack] = GlyphNameCodePoints.NoteDSharpBlack,
        [GlyphName.NoteDSharpHalf] = GlyphNameCodePoints.NoteDSharpHalf,
        [GlyphName.NoteDSharpWhole] = GlyphNameCodePoints.NoteDSharpWhole,
        [GlyphName.NoteDWhole] = GlyphNameCodePoints.NoteDWhole,
        [GlyphName.NoteDiBlack] = GlyphNameCodePoints.NoteDiBlack,
        [GlyphName.NoteDiHalf] = GlyphNameCodePoints.NoteDiHalf,
        [GlyphName.NoteDiWhole] = GlyphNameCodePoints.NoteDiWhole,
        [GlyphName.NoteDoBlack] = GlyphNameCodePoints.NoteDoBlack,
        [GlyphName.NoteDoHalf] = GlyphNameCodePoints.NoteDoHalf,
        [GlyphName.NoteDoWhole] = GlyphNameCodePoints.NoteDoWhole,
        [GlyphName.NoteDoubleWhole] = GlyphNameCodePoints.NoteDoubleWhole,
        [GlyphName.NoteDoubleWholeSquare] = GlyphNameCodePoints.NoteDoubleWholeSquare,
        [GlyphName.NoteEBlack] = GlyphNameCodePoints.NoteEBlack,
        [GlyphName.NoteEFlatBlack] = GlyphNameCodePoints.NoteEFlatBlack,
        [GlyphName.NoteEFlatHalf] = GlyphNameCodePoints.NoteEFlatHalf,
        [GlyphName.NoteEFlatWhole] = GlyphNameCodePoints.NoteEFlatWhole,
        [GlyphName.NoteEHalf] = GlyphNameCodePoints.NoteEHalf,
        [GlyphName.NoteESharpBlack] = GlyphNameCodePoints.NoteESharpBlack,
        [GlyphName.NoteESharpHalf] = GlyphNameCodePoints.NoteESharpHalf,
        [GlyphName.NoteESharpWhole] = GlyphNameCodePoints.NoteESharpWhole,
        [GlyphName.NoteEWhole] = GlyphNameCodePoints.NoteEWhole,
        [GlyphName.NoteEmptyBlack] = GlyphNameCodePoints.NoteEmptyBlack,
        [GlyphName.NoteEmptyHalf] = GlyphNameCodePoints.NoteEmptyHalf,
        [GlyphName.NoteEmptyWhole] = GlyphNameCodePoints.NoteEmptyWhole,
        [GlyphName.NoteFBlack] = GlyphNameCodePoints.NoteFBlack,
        [GlyphName.NoteFFlatBlack] = GlyphNameCodePoints.NoteFFlatBlack,
        [GlyphName.NoteFFlatHalf] = GlyphNameCodePoints.NoteFFlatHalf,
        [GlyphName.NoteFFlatWhole] = GlyphNameCodePoints.NoteFFlatWhole,
        [GlyphName.NoteFHalf] = GlyphNameCodePoints.NoteFHalf,
        [GlyphName.NoteFSharpBlack] = GlyphNameCodePoints.NoteFSharpBlack,
        [GlyphName.NoteFSharpHalf] = GlyphNameCodePoints.NoteFSharpHalf,
        [GlyphName.NoteFSharpWhole] = GlyphNameCodePoints.NoteFSharpWhole,
        [GlyphName.NoteFWhole] = GlyphNameCodePoints.NoteFWhole,
        [GlyphName.NoteFaBlack] = GlyphNameCodePoints.NoteFaBlack,
        [GlyphName.NoteFaHalf] = GlyphNameCodePoints.NoteFaHalf,
        [GlyphName.NoteFaWhole] = GlyphNameCodePoints.NoteFaWhole,
        [GlyphName.NoteFiBlack] = GlyphNameCodePoints.NoteFiBlack,
        [GlyphName.NoteFiHalf] = GlyphNameCodePoints.NoteFiHalf,
        [GlyphName.NoteFiWhole] = GlyphNameCodePoints.NoteFiWhole,
        [GlyphName.NoteGBlack] = GlyphNameCodePoints.NoteGBlack,
        [GlyphName.NoteGFlatBlack] = GlyphNameCodePoints.NoteGFlatBlack,
        [GlyphName.NoteGFlatHalf] = GlyphNameCodePoints.NoteGFlatHalf,
        [GlyphName.NoteGFlatWhole] = GlyphNameCodePoints.NoteGFlatWhole,
        [GlyphName.NoteGHalf] = GlyphNameCodePoints.NoteGHalf,
        [GlyphName.NoteGSharpBlack] = GlyphNameCodePoints.NoteGSharpBlack,
        [GlyphName.NoteGSharpHalf] = GlyphNameCodePoints.NoteGSharpHalf,
        [GlyphName.NoteGSharpWhole] = GlyphNameCodePoints.NoteGSharpWhole,
        [GlyphName.NoteGWhole] = GlyphNameCodePoints.NoteGWhole,
        [GlyphName.NoteHBlack] = GlyphNameCodePoints.NoteHBlack,
        [GlyphName.NoteHHalf] = GlyphNameCodePoints.NoteHHalf,
        [GlyphName.NoteHSharpBlack] = GlyphNameCodePoints.NoteHSharpBlack,
        [GlyphName.NoteHSharpHalf] = GlyphNameCodePoints.NoteHSharpHalf,
        [GlyphName.NoteHSharpWhole] = GlyphNameCodePoints.NoteHSharpWhole,
        [GlyphName.NoteHWhole] = GlyphNameCodePoints.NoteHWhole,
        [GlyphName.NoteHalfDown] = GlyphNameCodePoints.NoteHalfDown,
        [GlyphName.NoteHalfUp] = GlyphNameCodePoints.NoteHalfUp,
        [GlyphName.NoteLaBlack] = GlyphNameCodePoints.NoteLaBlack,
        [GlyphName.NoteLaHalf] = GlyphNameCodePoints.NoteLaHalf,
        [GlyphName.NoteLaWhole] = GlyphNameCodePoints.NoteLaWhole,
        [GlyphName.NoteLeBlack] = GlyphNameCodePoints.NoteLeBlack,
        [GlyphName.NoteLeHalf] = GlyphNameCodePoints.NoteLeHalf,
        [GlyphName.NoteLeWhole] = GlyphNameCodePoints.NoteLeWhole,
        [GlyphName.NoteLiBlack] = GlyphNameCodePoints.NoteLiBlack,
        [GlyphName.NoteLiHalf] = GlyphNameCodePoints.NoteLiHalf,
        [GlyphName.NoteLiWhole] = GlyphNameCodePoints.NoteLiWhole,
        [GlyphName.NoteMeBlack] = GlyphNameCodePoints.NoteMeBlack,
        [GlyphName.NoteMeHalf] = GlyphNameCodePoints.NoteMeHalf,
        [GlyphName.NoteMeWhole] = GlyphNameCodePoints.NoteMeWhole,
        [GlyphName.NoteMiBlack] = GlyphNameCodePoints.NoteMiBlack,
        [GlyphName.NoteMiHalf] = GlyphNameCodePoints.NoteMiHalf,
        [GlyphName.NoteMiWhole] = GlyphNameCodePoints.NoteMiWhole,
        [GlyphName.NoteQuarterDown] = GlyphNameCodePoints.NoteQuarterDown,
        [GlyphName.NoteQuarterUp] = GlyphNameCodePoints.NoteQuarterUp,
        [GlyphName.NoteRaBlack] = GlyphNameCodePoints.NoteRaBlack,
        [GlyphName.NoteRaHalf] = GlyphNameCodePoints.NoteRaHalf,
        [GlyphName.NoteRaWhole] = GlyphNameCodePoints.NoteRaWhole,
        [GlyphName.NoteReBlack] = GlyphNameCodePoints.NoteReBlack,
        [GlyphName.NoteReHalf] = GlyphNameCodePoints.NoteReHalf,
        [GlyphName.NoteReWhole] = GlyphNameCodePoints.NoteReWhole,
        [GlyphName.NoteRiBlack] = GlyphNameCodePoints.NoteRiBlack,
        [GlyphName.NoteRiHalf] = GlyphNameCodePoints.NoteRiHalf,
        [GlyphName.NoteRiWhole] = GlyphNameCodePoints.NoteRiWhole,
        [GlyphName.NoteSeBlack] = GlyphNameCodePoints.NoteSeBlack,
        [GlyphName.NoteSeHalf] = GlyphNameCodePoints.NoteSeHalf,
        [GlyphName.NoteSeWhole] = GlyphNameCodePoints.NoteSeWhole,
        [GlyphName.NoteShapeArrowheadLeftBlack] = GlyphNameCodePoints.NoteShapeArrowheadLeftBlack,
        [GlyphName.NoteShapeArrowheadLeftDoubleWhole] = GlyphNameCodePoints.NoteShapeArrowheadLeftDoubleWhole,
        [GlyphName.NoteShapeArrowheadLeftWhite] = GlyphNameCodePoints.NoteShapeArrowheadLeftWhite,
        [GlyphName.NoteShapeDiamondBlack] = GlyphNameCodePoints.NoteShapeDiamondBlack,
        [GlyphName.NoteShapeDiamondDoubleWhole] = GlyphNameCodePoints.NoteShapeDiamondDoubleWhole,
        [GlyphName.NoteShapeDiamondWhite] = GlyphNameCodePoints.NoteShapeDiamondWhite,
        [GlyphName.NoteShapeIsoscelesTriangleBlack] = GlyphNameCodePoints.NoteShapeIsoscelesTriangleBlack,
        [GlyphName.NoteShapeIsoscelesTriangleDoubleWhole] = GlyphNameCodePoints.NoteShapeIsoscelesTriangleDoubleWhole,
        [GlyphName.NoteShapeIsoscelesTriangleWhite] = GlyphNameCodePoints.NoteShapeIsoscelesTriangleWhite,
        [GlyphName.NoteShapeKeystoneBlack] = GlyphNameCodePoints.NoteShapeKeystoneBlack,
        [GlyphName.NoteShapeKeystoneDoubleWhole] = GlyphNameCodePoints.NoteShapeKeystoneDoubleWhole,
        [GlyphName.NoteShapeKeystoneWhite] = GlyphNameCodePoints.NoteShapeKeystoneWhite,
        [GlyphName.NoteShapeMoonBlack] = GlyphNameCodePoints.NoteShapeMoonBlack,
        [GlyphName.NoteShapeMoonDoubleWhole] = GlyphNameCodePoints.NoteShapeMoonDoubleWhole,
        [GlyphName.NoteShapeMoonLeftBlack] = GlyphNameCodePoints.NoteShapeMoonLeftBlack,
        [GlyphName.NoteShapeMoonLeftDoubleWhole] = GlyphNameCodePoints.NoteShapeMoonLeftDoubleWhole,
        [GlyphName.NoteShapeMoonLeftWhite] = GlyphNameCodePoints.NoteShapeMoonLeftWhite,
        [GlyphName.NoteShapeMoonWhite] = GlyphNameCodePoints.NoteShapeMoonWhite,
        [GlyphName.NoteShapeQuarterMoonBlack] = GlyphNameCodePoints.NoteShapeQuarterMoonBlack,
        [GlyphName.NoteShapeQuarterMoonDoubleWhole] = GlyphNameCodePoints.NoteShapeQuarterMoonDoubleWhole,
        [GlyphName.NoteShapeQuarterMoonWhite] = GlyphNameCodePoints.NoteShapeQuarterMoonWhite,
        [GlyphName.NoteShapeRoundBlack] = GlyphNameCodePoints.NoteShapeRoundBlack,
        [GlyphName.NoteShapeRoundDoubleWhole] = GlyphNameCodePoints.NoteShapeRoundDoubleWhole,
        [GlyphName.NoteShapeRoundWhite] = GlyphNameCodePoints.NoteShapeRoundWhite,
        [GlyphName.NoteShapeSquareBlack] = GlyphNameCodePoints.NoteShapeSquareBlack,
        [GlyphName.NoteShapeSquareDoubleWhole] = GlyphNameCodePoints.NoteShapeSquareDoubleWhole,
        [GlyphName.NoteShapeSquareWhite] = GlyphNameCodePoints.NoteShapeSquareWhite,
        [GlyphName.NoteShapeTriangleLeftBlack] = GlyphNameCodePoints.NoteShapeTriangleLeftBlack,
        [GlyphName.NoteShapeTriangleLeftDoubleWhole] = GlyphNameCodePoints.NoteShapeTriangleLeftDoubleWhole,
        [GlyphName.NoteShapeTriangleLeftWhite] = GlyphNameCodePoints.NoteShapeTriangleLeftWhite,
        [GlyphName.NoteShapeTriangleRightBlack] = GlyphNameCodePoints.NoteShapeTriangleRightBlack,
        [GlyphName.NoteShapeTriangleRightDoubleWhole] = GlyphNameCodePoints.NoteShapeTriangleRightDoubleWhole,
        [GlyphName.NoteShapeTriangleRightWhite] = GlyphNameCodePoints.NoteShapeTriangleRightWhite,
        [GlyphName.NoteShapeTriangleRoundBlack] = GlyphNameCodePoints.NoteShapeTriangleRoundBlack,
        [GlyphName.NoteShapeTriangleRoundDoubleWhole] = GlyphNameCodePoints.NoteShapeTriangleRoundDoubleWhole,
        [GlyphName.NoteShapeTriangleRoundLeftBlack] = GlyphNameCodePoints.NoteShapeTriangleRoundLeftBlack,
        [GlyphName.NoteShapeTriangleRoundLeftDoubleWhole] = GlyphNameCodePoints.NoteShapeTriangleRoundLeftDoubleWhole,
        [GlyphName.NoteShapeTriangleRoundLeftWhite] = GlyphNameCodePoints.NoteShapeTriangleRoundLeftWhite,
        [GlyphName.NoteShapeTriangleRoundWhite] = GlyphNameCodePoints.NoteShapeTriangleRoundWhite,
        [GlyphName.NoteShapeTriangleUpBlack] = GlyphNameCodePoints.NoteShapeTriangleUpBlack,
        [GlyphName.NoteShapeTriangleUpDoubleWhole] = GlyphNameCodePoints.NoteShapeTriangleUpDoubleWhole,
        [GlyphName.NoteShapeTriangleUpWhite] = GlyphNameCodePoints.NoteShapeTriangleUpWhite,
        [GlyphName.NoteSiBlack] = GlyphNameCodePoints.NoteSiBlack,
        [GlyphName.NoteSiHalf] = GlyphNameCodePoints.NoteSiHalf,
        [GlyphName.NoteSiWhole] = GlyphNameCodePoints.NoteSiWhole,
        [GlyphName.NoteSoBlack] = GlyphNameCodePoints.NoteSoBlack,
        [GlyphName.NoteSoHalf] = GlyphNameCodePoints.NoteSoHalf,
        [GlyphName.NoteSoWhole] = GlyphNameCodePoints.NoteSoWhole,
        [GlyphName.NoteTeBlack] = GlyphNameCodePoints.NoteTeBlack,
        [GlyphName.NoteTeHalf] = GlyphNameCodePoints.NoteTeHalf,
        [GlyphName.NoteTeWhole] = GlyphNameCodePoints.NoteTeWhole,
        [GlyphName.NoteTiBlack] = GlyphNameCodePoints.NoteTiBlack,
        [GlyphName.NoteTiHalf] = GlyphNameCodePoints.NoteTiHalf,
        [GlyphName.NoteTiWhole] = GlyphNameCodePoints.NoteTiWhole,
        [GlyphName.NoteWhole] = GlyphNameCodePoints.NoteWhole,
        [GlyphName.NoteheadBlack] = GlyphNameCodePoints.NoteheadBlack,
        [GlyphName.NoteheadCircleSlash] = GlyphNameCodePoints.NoteheadCircleSlash,
        [GlyphName.NoteheadCircleX] = GlyphNameCodePoints.NoteheadCircleX,
        [GlyphName.NoteheadCircleXDoubleWhole] = GlyphNameCodePoints.NoteheadCircleXDoubleWhole,
        [GlyphName.NoteheadCircleXHalf] = GlyphNameCodePoints.NoteheadCircleXHalf,
        [GlyphName.NoteheadCircleXWhole] = GlyphNameCodePoints.NoteheadCircleXWhole,
        [GlyphName.NoteheadCircledBlack] = GlyphNameCodePoints.NoteheadCircledBlack,
        [GlyphName.NoteheadCircledBlackLarge] = GlyphNameCodePoints.NoteheadCircledBlackLarge,
        [GlyphName.NoteheadCircledDoubleWhole] = GlyphNameCodePoints.NoteheadCircledDoubleWhole,
        [GlyphName.NoteheadCircledDoubleWholeLarge] = GlyphNameCodePoints.NoteheadCircledDoubleWholeLarge,
        [GlyphName.NoteheadCircledHalf] = GlyphNameCodePoints.NoteheadCircledHalf,
        [GlyphName.NoteheadCircledHalfLarge] = GlyphNameCodePoints.NoteheadCircledHalfLarge,
        [GlyphName.NoteheadCircledWhole] = GlyphNameCodePoints.NoteheadCircledWhole,
        [GlyphName.NoteheadCircledWholeLarge] = GlyphNameCodePoints.NoteheadCircledWholeLarge,
        [GlyphName.NoteheadCircledXLarge] = GlyphNameCodePoints.NoteheadCircledXLarge,
        [GlyphName.NoteheadClusterDoubleWhole2nd] = GlyphNameCodePoints.NoteheadClusterDoubleWhole2nd,
        [GlyphName.NoteheadClusterDoubleWhole3rd] = GlyphNameCodePoints.NoteheadClusterDoubleWhole3rd,
        [GlyphName.NoteheadClusterDoubleWholeBottom] = GlyphNameCodePoints.NoteheadClusterDoubleWholeBottom,
        [GlyphName.NoteheadClusterDoubleWholeMiddle] = GlyphNameCodePoints.NoteheadClusterDoubleWholeMiddle,
        [GlyphName.NoteheadClusterDoubleWholeTop] = GlyphNameCodePoints.NoteheadClusterDoubleWholeTop,
        [GlyphName.NoteheadClusterHalf2nd] = GlyphNameCodePoints.NoteheadClusterHalf2nd,
        [GlyphName.NoteheadClusterHalf3rd] = GlyphNameCodePoints.NoteheadClusterHalf3rd,
        [GlyphName.NoteheadClusterHalfBottom] = GlyphNameCodePoints.NoteheadClusterHalfBottom,
        [GlyphName.NoteheadClusterHalfMiddle] = GlyphNameCodePoints.NoteheadClusterHalfMiddle,
        [GlyphName.NoteheadClusterHalfTop] = GlyphNameCodePoints.NoteheadClusterHalfTop,
        [GlyphName.NoteheadClusterQuarter2nd] = GlyphNameCodePoints.NoteheadClusterQuarter2nd,
        [GlyphName.NoteheadClusterQuarter3rd] = GlyphNameCodePoints.NoteheadClusterQuarter3rd,
        [GlyphName.NoteheadClusterQuarterBottom] = GlyphNameCodePoints.NoteheadClusterQuarterBottom,
        [GlyphName.NoteheadClusterQuarterMiddle] = GlyphNameCodePoints.NoteheadClusterQuarterMiddle,
        [GlyphName.NoteheadClusterQuarterTop] = GlyphNameCodePoints.NoteheadClusterQuarterTop,
        [GlyphName.NoteheadClusterRoundBlack] = GlyphNameCodePoints.NoteheadClusterRoundBlack,
        [GlyphName.NoteheadClusterRoundWhite] = GlyphNameCodePoints.NoteheadClusterRoundWhite,
        [GlyphName.NoteheadClusterSquareBlack] = GlyphNameCodePoints.NoteheadClusterSquareBlack,
        [GlyphName.NoteheadClusterSquareWhite] = GlyphNameCodePoints.NoteheadClusterSquareWhite,
        [GlyphName.NoteheadClusterWhole2nd] = GlyphNameCodePoints.NoteheadClusterWhole2nd,
        [GlyphName.NoteheadClusterWhole3rd] = GlyphNameCodePoints.NoteheadClusterWhole3rd,
        [GlyphName.NoteheadClusterWholeBottom] = GlyphNameCodePoints.NoteheadClusterWholeBottom,
        [GlyphName.NoteheadClusterWholeMiddle] = GlyphNameCodePoints.NoteheadClusterWholeMiddle,
        [GlyphName.NoteheadClusterWholeTop] = GlyphNameCodePoints.NoteheadClusterWholeTop,
        [GlyphName.NoteheadCowellEleventhNoteSeriesHalf] = GlyphNameCodePoints.NoteheadCowellEleventhNoteSeriesHalf,
        [GlyphName.NoteheadCowellEleventhNoteSeriesWhole] = GlyphNameCodePoints.NoteheadCowellEleventhNoteSeriesWhole,
        [GlyphName.NoteheadCowellEleventhSeriesBlack] = GlyphNameCodePoints.NoteheadCowellEleventhSeriesBlack,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesBlack] = GlyphNameCodePoints.NoteheadCowellFifteenthNoteSeriesBlack,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesHalf] = GlyphNameCodePoints.NoteheadCowellFifteenthNoteSeriesHalf,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesWhole] = GlyphNameCodePoints.NoteheadCowellFifteenthNoteSeriesWhole,
        [GlyphName.NoteheadCowellFifthNoteSeriesBlack] = GlyphNameCodePoints.NoteheadCowellFifthNoteSeriesBlack,
        [GlyphName.NoteheadCowellFifthNoteSeriesHalf] = GlyphNameCodePoints.NoteheadCowellFifthNoteSeriesHalf,
        [GlyphName.NoteheadCowellFifthNoteSeriesWhole] = GlyphNameCodePoints.NoteheadCowellFifthNoteSeriesWhole,
        [GlyphName.NoteheadCowellNinthNoteSeriesBlack] = GlyphNameCodePoints.NoteheadCowellNinthNoteSeriesBlack,
        [GlyphName.NoteheadCowellNinthNoteSeriesHalf] = GlyphNameCodePoints.NoteheadCowellNinthNoteSeriesHalf,
        [GlyphName.NoteheadCowellNinthNoteSeriesWhole] = GlyphNameCodePoints.NoteheadCowellNinthNoteSeriesWhole,
        [GlyphName.NoteheadCowellSeventhNoteSeriesBlack] = GlyphNameCodePoints.NoteheadCowellSeventhNoteSeriesBlack,
        [GlyphName.NoteheadCowellSeventhNoteSeriesHalf] = GlyphNameCodePoints.NoteheadCowellSeventhNoteSeriesHalf,
        [GlyphName.NoteheadCowellSeventhNoteSeriesWhole] = GlyphNameCodePoints.NoteheadCowellSeventhNoteSeriesWhole,
        [GlyphName.NoteheadCowellThirdNoteSeriesBlack] = GlyphNameCodePoints.NoteheadCowellThirdNoteSeriesBlack,
        [GlyphName.NoteheadCowellThirdNoteSeriesHalf] = GlyphNameCodePoints.NoteheadCowellThirdNoteSeriesHalf,
        [GlyphName.NoteheadCowellThirdNoteSeriesWhole] = GlyphNameCodePoints.NoteheadCowellThirdNoteSeriesWhole,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesBlack] = GlyphNameCodePoints.NoteheadCowellThirteenthNoteSeriesBlack,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesHalf] = GlyphNameCodePoints.NoteheadCowellThirteenthNoteSeriesHalf,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesWhole] = GlyphNameCodePoints.NoteheadCowellThirteenthNoteSeriesWhole,
        [GlyphName.NoteheadDiamondBlack] = GlyphNameCodePoints.NoteheadDiamondBlack,
        [GlyphName.NoteheadDiamondBlackOld] = GlyphNameCodePoints.NoteheadDiamondBlackOld,
        [GlyphName.NoteheadDiamondBlackWide] = GlyphNameCodePoints.NoteheadDiamondBlackWide,
        [GlyphName.NoteheadDiamondClusterBlack2nd] = GlyphNameCodePoints.NoteheadDiamondClusterBlack2nd,
        [GlyphName.NoteheadDiamondClusterBlack3rd] = GlyphNameCodePoints.NoteheadDiamondClusterBlack3rd,
        [GlyphName.NoteheadDiamondClusterBlackBottom] = GlyphNameCodePoints.NoteheadDiamondClusterBlackBottom,
        [GlyphName.NoteheadDiamondClusterBlackMiddle] = GlyphNameCodePoints.NoteheadDiamondClusterBlackMiddle,
        [GlyphName.NoteheadDiamondClusterBlackTop] = GlyphNameCodePoints.NoteheadDiamondClusterBlackTop,
        [GlyphName.NoteheadDiamondClusterWhite2nd] = GlyphNameCodePoints.NoteheadDiamondClusterWhite2nd,
        [GlyphName.NoteheadDiamondClusterWhite3rd] = GlyphNameCodePoints.NoteheadDiamondClusterWhite3rd,
        [GlyphName.NoteheadDiamondClusterWhiteBottom] = GlyphNameCodePoints.NoteheadDiamondClusterWhiteBottom,
        [GlyphName.NoteheadDiamondClusterWhiteMiddle] = GlyphNameCodePoints.NoteheadDiamondClusterWhiteMiddle,
        [GlyphName.NoteheadDiamondClusterWhiteTop] = GlyphNameCodePoints.NoteheadDiamondClusterWhiteTop,
        [GlyphName.NoteheadDiamondDoubleWhole] = GlyphNameCodePoints.NoteheadDiamondDoubleWhole,
        [GlyphName.NoteheadDiamondDoubleWholeOld] = GlyphNameCodePoints.NoteheadDiamondDoubleWholeOld,
        [GlyphName.NoteheadDiamondHalf] = GlyphNameCodePoints.NoteheadDiamondHalf,
        [GlyphName.NoteheadDiamondHalfFilled] = GlyphNameCodePoints.NoteheadDiamondHalfFilled,
        [GlyphName.NoteheadDiamondHalfOld] = GlyphNameCodePoints.NoteheadDiamondHalfOld,
        [GlyphName.NoteheadDiamondHalfWide] = GlyphNameCodePoints.NoteheadDiamondHalfWide,
        [GlyphName.NoteheadDiamondOpen] = GlyphNameCodePoints.NoteheadDiamondOpen,
        [GlyphName.NoteheadDiamondWhite] = GlyphNameCodePoints.NoteheadDiamondWhite,
        [GlyphName.NoteheadDiamondWhiteWide] = GlyphNameCodePoints.NoteheadDiamondWhiteWide,
        [GlyphName.NoteheadDiamondWhole] = GlyphNameCodePoints.NoteheadDiamondWhole,
        [GlyphName.NoteheadDiamondWholeOld] = GlyphNameCodePoints.NoteheadDiamondWholeOld,
        [GlyphName.NoteheadDoubleWhole] = GlyphNameCodePoints.NoteheadDoubleWhole,
        [GlyphName.NoteheadDoubleWholeSquare] = GlyphNameCodePoints.NoteheadDoubleWholeSquare,
        [GlyphName.NoteheadDoubleWholeWithX] = GlyphNameCodePoints.NoteheadDoubleWholeWithX,
        [GlyphName.NoteheadHalf] = GlyphNameCodePoints.NoteheadHalf,
        [GlyphName.NoteheadHalfFilled] = GlyphNameCodePoints.NoteheadHalfFilled,
        [GlyphName.NoteheadHalfWithX] = GlyphNameCodePoints.NoteheadHalfWithX,
        [GlyphName.NoteheadHeavyX] = GlyphNameCodePoints.NoteheadHeavyX,
        [GlyphName.NoteheadHeavyXHat] = GlyphNameCodePoints.NoteheadHeavyXHat,
        [GlyphName.NoteheadLargeArrowDownBlack] = GlyphNameCodePoints.NoteheadLargeArrowDownBlack,
        [GlyphName.NoteheadLargeArrowDownDoubleWhole] = GlyphNameCodePoints.NoteheadLargeArrowDownDoubleWhole,
        [GlyphName.NoteheadLargeArrowDownHalf] = GlyphNameCodePoints.NoteheadLargeArrowDownHalf,
        [GlyphName.NoteheadLargeArrowDownWhole] = GlyphNameCodePoints.NoteheadLargeArrowDownWhole,
        [GlyphName.NoteheadLargeArrowUpBlack] = GlyphNameCodePoints.NoteheadLargeArrowUpBlack,
        [GlyphName.NoteheadLargeArrowUpDoubleWhole] = GlyphNameCodePoints.NoteheadLargeArrowUpDoubleWhole,
        [GlyphName.NoteheadLargeArrowUpHalf] = GlyphNameCodePoints.NoteheadLargeArrowUpHalf,
        [GlyphName.NoteheadLargeArrowUpWhole] = GlyphNameCodePoints.NoteheadLargeArrowUpWhole,
        [GlyphName.NoteheadMoonBlack] = GlyphNameCodePoints.NoteheadMoonBlack,
        [GlyphName.NoteheadMoonWhite] = GlyphNameCodePoints.NoteheadMoonWhite,
        [GlyphName.NoteheadNancarrowSine] = GlyphNameCodePoints.NoteheadNancarrowSine,
        [GlyphName.NoteheadNull] = GlyphNameCodePoints.NoteheadNull,
        [GlyphName.NoteheadParenthesis] = GlyphNameCodePoints.NoteheadParenthesis,
        [GlyphName.NoteheadParenthesisLeft] = GlyphNameCodePoints.NoteheadParenthesisLeft,
        [GlyphName.NoteheadParenthesisRight] = GlyphNameCodePoints.NoteheadParenthesisRight,
        [GlyphName.NoteheadPlusBlack] = GlyphNameCodePoints.NoteheadPlusBlack,
        [GlyphName.NoteheadPlusDoubleWhole] = GlyphNameCodePoints.NoteheadPlusDoubleWhole,
        [GlyphName.NoteheadPlusHalf] = GlyphNameCodePoints.NoteheadPlusHalf,
        [GlyphName.NoteheadPlusWhole] = GlyphNameCodePoints.NoteheadPlusWhole,
        [GlyphName.NoteheadRectangularClusterBlackBottom] = GlyphNameCodePoints.NoteheadRectangularClusterBlackBottom,
        [GlyphName.NoteheadRectangularClusterBlackMiddle] = GlyphNameCodePoints.NoteheadRectangularClusterBlackMiddle,
        [GlyphName.NoteheadRectangularClusterBlackTop] = GlyphNameCodePoints.NoteheadRectangularClusterBlackTop,
        [GlyphName.NoteheadRectangularClusterWhiteBottom] = GlyphNameCodePoints.NoteheadRectangularClusterWhiteBottom,
        [GlyphName.NoteheadRectangularClusterWhiteMiddle] = GlyphNameCodePoints.NoteheadRectangularClusterWhiteMiddle,
        [GlyphName.NoteheadRectangularClusterWhiteTop] = GlyphNameCodePoints.NoteheadRectangularClusterWhiteTop,
        [GlyphName.NoteheadRoundBlack] = GlyphNameCodePoints.NoteheadRoundBlack,
        [GlyphName.NoteheadRoundBlackDoubleSlashed] = GlyphNameCodePoints.NoteheadRoundBlackDoubleSlashed,
        [GlyphName.NoteheadRoundBlackLarge] = GlyphNameCodePoints.NoteheadRoundBlackLarge,
        [GlyphName.NoteheadRoundBlackSlashed] = GlyphNameCodePoints.NoteheadRoundBlackSlashed,
        [GlyphName.NoteheadRoundBlackSlashedLarge] = GlyphNameCodePoints.NoteheadRoundBlackSlashedLarge,
        [GlyphName.NoteheadRoundWhite] = GlyphNameCodePoints.NoteheadRoundWhite,
        [GlyphName.NoteheadRoundWhiteDoubleSlashed] = GlyphNameCodePoints.NoteheadRoundWhiteDoubleSlashed,
        [GlyphName.NoteheadRoundWhiteLarge] = GlyphNameCodePoints.NoteheadRoundWhiteLarge,
        [GlyphName.NoteheadRoundWhiteSlashed] = GlyphNameCodePoints.NoteheadRoundWhiteSlashed,
        [GlyphName.NoteheadRoundWhiteSlashedLarge] = GlyphNameCodePoints.NoteheadRoundWhiteSlashedLarge,
        [GlyphName.NoteheadRoundWhiteWithDot] = GlyphNameCodePoints.NoteheadRoundWhiteWithDot,
        [GlyphName.NoteheadRoundWhiteWithDotLarge] = GlyphNameCodePoints.NoteheadRoundWhiteWithDotLarge,
        [GlyphName.NoteheadSlashDiamondWhite] = GlyphNameCodePoints.NoteheadSlashDiamondWhite,
        [GlyphName.NoteheadSlashHorizontalEnds] = GlyphNameCodePoints.NoteheadSlashHorizontalEnds,
        [GlyphName.NoteheadSlashHorizontalEndsMuted] = GlyphNameCodePoints.NoteheadSlashHorizontalEndsMuted,
        [GlyphName.NoteheadSlashVerticalEnds] = GlyphNameCodePoints.NoteheadSlashVerticalEnds,
        [GlyphName.NoteheadSlashVerticalEndsMuted] = GlyphNameCodePoints.NoteheadSlashVerticalEndsMuted,
        [GlyphName.NoteheadSlashVerticalEndsSmall] = GlyphNameCodePoints.NoteheadSlashVerticalEndsSmall,
        [GlyphName.NoteheadSlashWhiteDoubleWhole] = GlyphNameCodePoints.NoteheadSlashWhiteDoubleWhole,
        [GlyphName.NoteheadSlashWhiteHalf] = GlyphNameCodePoints.NoteheadSlashWhiteHalf,
        [GlyphName.NoteheadSlashWhiteMuted] = GlyphNameCodePoints.NoteheadSlashWhiteMuted,
        [GlyphName.NoteheadSlashWhiteWhole] = GlyphNameCodePoints.NoteheadSlashWhiteWhole,
        [GlyphName.NoteheadSlashX] = GlyphNameCodePoints.NoteheadSlashX,
        [GlyphName.NoteheadSlashedBlack1] = GlyphNameCodePoints.NoteheadSlashedBlack1,
        [GlyphName.NoteheadSlashedBlack2] = GlyphNameCodePoints.NoteheadSlashedBlack2,
        [GlyphName.NoteheadSlashedDoubleWhole1] = GlyphNameCodePoints.NoteheadSlashedDoubleWhole1,
        [GlyphName.NoteheadSlashedDoubleWhole2] = GlyphNameCodePoints.NoteheadSlashedDoubleWhole2,
        [GlyphName.NoteheadSlashedHalf1] = GlyphNameCodePoints.NoteheadSlashedHalf1,
        [GlyphName.NoteheadSlashedHalf2] = GlyphNameCodePoints.NoteheadSlashedHalf2,
        [GlyphName.NoteheadSlashedWhole1] = GlyphNameCodePoints.NoteheadSlashedWhole1,
        [GlyphName.NoteheadSlashedWhole2] = GlyphNameCodePoints.NoteheadSlashedWhole2,
        [GlyphName.NoteheadSquareBlack] = GlyphNameCodePoints.NoteheadSquareBlack,
        [GlyphName.NoteheadSquareBlackLarge] = GlyphNameCodePoints.NoteheadSquareBlackLarge,
        [GlyphName.NoteheadSquareBlackWhite] = GlyphNameCodePoints.NoteheadSquareBlackWhite,
        [GlyphName.NoteheadSquareWhite] = GlyphNameCodePoints.NoteheadSquareWhite,
        [GlyphName.NoteheadTriangleDownBlack] = GlyphNameCodePoints.NoteheadTriangleDownBlack,
        [GlyphName.NoteheadTriangleDownDoubleWhole] = GlyphNameCodePoints.NoteheadTriangleDownDoubleWhole,
        [GlyphName.NoteheadTriangleDownHalf] = GlyphNameCodePoints.NoteheadTriangleDownHalf,
        [GlyphName.NoteheadTriangleDownWhite] = GlyphNameCodePoints.NoteheadTriangleDownWhite,
        [GlyphName.NoteheadTriangleDownWhole] = GlyphNameCodePoints.NoteheadTriangleDownWhole,
        [GlyphName.NoteheadTriangleLeftBlack] = GlyphNameCodePoints.NoteheadTriangleLeftBlack,
        [GlyphName.NoteheadTriangleLeftWhite] = GlyphNameCodePoints.NoteheadTriangleLeftWhite,
        [GlyphName.NoteheadTriangleRightBlack] = GlyphNameCodePoints.NoteheadTriangleRightBlack,
        [GlyphName.NoteheadTriangleRightWhite] = GlyphNameCodePoints.NoteheadTriangleRightWhite,
        [GlyphName.NoteheadTriangleRoundDownBlack] = GlyphNameCodePoints.NoteheadTriangleRoundDownBlack,
        [GlyphName.NoteheadTriangleRoundDownWhite] = GlyphNameCodePoints.NoteheadTriangleRoundDownWhite,
        [GlyphName.NoteheadTriangleUpBlack] = GlyphNameCodePoints.NoteheadTriangleUpBlack,
        [GlyphName.NoteheadTriangleUpDoubleWhole] = GlyphNameCodePoints.NoteheadTriangleUpDoubleWhole,
        [GlyphName.NoteheadTriangleUpHalf] = GlyphNameCodePoints.NoteheadTriangleUpHalf,
        [GlyphName.NoteheadTriangleUpRightBlack] = GlyphNameCodePoints.NoteheadTriangleUpRightBlack,
        [GlyphName.NoteheadTriangleUpRightWhite] = GlyphNameCodePoints.NoteheadTriangleUpRightWhite,
        [GlyphName.NoteheadTriangleUpWhite] = GlyphNameCodePoints.NoteheadTriangleUpWhite,
        [GlyphName.NoteheadTriangleUpWhole] = GlyphNameCodePoints.NoteheadTriangleUpWhole,
        [GlyphName.NoteheadVoidWithX] = GlyphNameCodePoints.NoteheadVoidWithX,
        [GlyphName.NoteheadWhole] = GlyphNameCodePoints.NoteheadWhole,
        [GlyphName.NoteheadWholeFilled] = GlyphNameCodePoints.NoteheadWholeFilled,
        [GlyphName.NoteheadWholeWithX] = GlyphNameCodePoints.NoteheadWholeWithX,
        [GlyphName.NoteheadXBlack] = GlyphNameCodePoints.NoteheadXBlack,
        [GlyphName.NoteheadXDoubleWhole] = GlyphNameCodePoints.NoteheadXDoubleWhole,
        [GlyphName.NoteheadXHalf] = GlyphNameCodePoints.NoteheadXHalf,
        [GlyphName.NoteheadXOrnate] = GlyphNameCodePoints.NoteheadXOrnate,
        [GlyphName.NoteheadXOrnateEllipse] = GlyphNameCodePoints.NoteheadXOrnateEllipse,
        [GlyphName.NoteheadXWhole] = GlyphNameCodePoints.NoteheadXWhole,
        [GlyphName.OctaveBaselineA] = GlyphNameCodePoints.OctaveBaselineA,
        [GlyphName.OctaveBaselineB] = GlyphNameCodePoints.OctaveBaselineB,
        [GlyphName.OctaveBaselineM] = GlyphNameCodePoints.OctaveBaselineM,
        [GlyphName.OctaveBaselineV] = GlyphNameCodePoints.OctaveBaselineV,
        [GlyphName.OctaveBassa] = GlyphNameCodePoints.OctaveBassa,
        [GlyphName.OctaveLoco] = GlyphNameCodePoints.OctaveLoco,
        [GlyphName.OctaveParensLeft] = GlyphNameCodePoints.OctaveParensLeft,
        [GlyphName.OctaveParensRight] = GlyphNameCodePoints.OctaveParensRight,
        [GlyphName.OctaveSuperscriptA] = GlyphNameCodePoints.OctaveSuperscriptA,
        [GlyphName.OctaveSuperscriptB] = GlyphNameCodePoints.OctaveSuperscriptB,
        [GlyphName.OctaveSuperscriptM] = GlyphNameCodePoints.OctaveSuperscriptM,
        [GlyphName.OctaveSuperscriptV] = GlyphNameCodePoints.OctaveSuperscriptV,
        [GlyphName.OneHandedRollStevens] = GlyphNameCodePoints.OneHandedRollStevens,
        [GlyphName.OrganGerman2Fusae] = GlyphNameCodePoints.OrganGerman2Fusae,
        [GlyphName.OrganGerman2Minimae] = GlyphNameCodePoints.OrganGerman2Minimae,
        [GlyphName.OrganGerman2OctaveUp] = GlyphNameCodePoints.OrganGerman2OctaveUp,
        [GlyphName.OrganGerman2Semifusae] = GlyphNameCodePoints.OrganGerman2Semifusae,
        [GlyphName.OrganGerman2Semiminimae] = GlyphNameCodePoints.OrganGerman2Semiminimae,
        [GlyphName.OrganGerman3Fusae] = GlyphNameCodePoints.OrganGerman3Fusae,
        [GlyphName.OrganGerman3Minimae] = GlyphNameCodePoints.OrganGerman3Minimae,
        [GlyphName.OrganGerman3Semifusae] = GlyphNameCodePoints.OrganGerman3Semifusae,
        [GlyphName.OrganGerman3Semiminimae] = GlyphNameCodePoints.OrganGerman3Semiminimae,
        [GlyphName.OrganGerman4Fusae] = GlyphNameCodePoints.OrganGerman4Fusae,
        [GlyphName.OrganGerman4Minimae] = GlyphNameCodePoints.OrganGerman4Minimae,
        [GlyphName.OrganGerman4Semifusae] = GlyphNameCodePoints.OrganGerman4Semifusae,
        [GlyphName.OrganGerman4Semiminimae] = GlyphNameCodePoints.OrganGerman4Semiminimae,
        [GlyphName.OrganGerman5Fusae] = GlyphNameCodePoints.OrganGerman5Fusae,
        [GlyphName.OrganGerman5Minimae] = GlyphNameCodePoints.OrganGerman5Minimae,
        [GlyphName.OrganGerman5Semifusae] = GlyphNameCodePoints.OrganGerman5Semifusae,
        [GlyphName.OrganGerman5Semiminimae] = GlyphNameCodePoints.OrganGerman5Semiminimae,
        [GlyphName.OrganGerman6Fusae] = GlyphNameCodePoints.OrganGerman6Fusae,
        [GlyphName.OrganGerman6Minimae] = GlyphNameCodePoints.OrganGerman6Minimae,
        [GlyphName.OrganGerman6Semifusae] = GlyphNameCodePoints.OrganGerman6Semifusae,
        [GlyphName.OrganGerman6Semiminimae] = GlyphNameCodePoints.OrganGerman6Semiminimae,
        [GlyphName.OrganGermanALower] = GlyphNameCodePoints.OrganGermanALower,
        [GlyphName.OrganGermanAUpper] = GlyphNameCodePoints.OrganGermanAUpper,
        [GlyphName.OrganGermanAugmentationDot] = GlyphNameCodePoints.OrganGermanAugmentationDot,
        [GlyphName.OrganGermanBLower] = GlyphNameCodePoints.OrganGermanBLower,
        [GlyphName.OrganGermanBUpper] = GlyphNameCodePoints.OrganGermanBUpper,
        [GlyphName.OrganGermanBuxheimerBrevis2] = GlyphNameCodePoints.OrganGermanBuxheimerBrevis2,
        [GlyphName.OrganGermanBuxheimerBrevis3] = GlyphNameCodePoints.OrganGermanBuxheimerBrevis3,
        [GlyphName.OrganGermanBuxheimerMinimaRest] = GlyphNameCodePoints.OrganGermanBuxheimerMinimaRest,
        [GlyphName.OrganGermanBuxheimerSemibrevis] = GlyphNameCodePoints.OrganGermanBuxheimerSemibrevis,
        [GlyphName.OrganGermanBuxheimerSemibrevisRest] = GlyphNameCodePoints.OrganGermanBuxheimerSemibrevisRest,
        [GlyphName.OrganGermanCLower] = GlyphNameCodePoints.OrganGermanCLower,
        [GlyphName.OrganGermanCUpper] = GlyphNameCodePoints.OrganGermanCUpper,
        [GlyphName.OrganGermanCisLower] = GlyphNameCodePoints.OrganGermanCisLower,
        [GlyphName.OrganGermanCisUpper] = GlyphNameCodePoints.OrganGermanCisUpper,
        [GlyphName.OrganGermanDLower] = GlyphNameCodePoints.OrganGermanDLower,
        [GlyphName.OrganGermanDUpper] = GlyphNameCodePoints.OrganGermanDUpper,
        [GlyphName.OrganGermanDisLower] = GlyphNameCodePoints.OrganGermanDisLower,
        [GlyphName.OrganGermanDisUpper] = GlyphNameCodePoints.OrganGermanDisUpper,
        [GlyphName.OrganGermanELower] = GlyphNameCodePoints.OrganGermanELower,
        [GlyphName.OrganGermanEUpper] = GlyphNameCodePoints.OrganGermanEUpper,
        [GlyphName.OrganGermanFLower] = GlyphNameCodePoints.OrganGermanFLower,
        [GlyphName.OrganGermanFUpper] = GlyphNameCodePoints.OrganGermanFUpper,
        [GlyphName.OrganGermanFisLower] = GlyphNameCodePoints.OrganGermanFisLower,
        [GlyphName.OrganGermanFisUpper] = GlyphNameCodePoints.OrganGermanFisUpper,
        [GlyphName.OrganGermanFusa] = GlyphNameCodePoints.OrganGermanFusa,
        [GlyphName.OrganGermanFusaRest] = GlyphNameCodePoints.OrganGermanFusaRest,
        [GlyphName.OrganGermanGLower] = GlyphNameCodePoints.OrganGermanGLower,
        [GlyphName.OrganGermanGUpper] = GlyphNameCodePoints.OrganGermanGUpper,
        [GlyphName.OrganGermanGisLower] = GlyphNameCodePoints.OrganGermanGisLower,
        [GlyphName.OrganGermanGisUpper] = GlyphNameCodePoints.OrganGermanGisUpper,
        [GlyphName.OrganGermanHLower] = GlyphNameCodePoints.OrganGermanHLower,
        [GlyphName.OrganGermanHUpper] = GlyphNameCodePoints.OrganGermanHUpper,
        [GlyphName.OrganGermanMinima] = GlyphNameCodePoints.OrganGermanMinima,
        [GlyphName.OrganGermanMinimaRest] = GlyphNameCodePoints.OrganGermanMinimaRest,
        [GlyphName.OrganGermanOctaveDown] = GlyphNameCodePoints.OrganGermanOctaveDown,
        [GlyphName.OrganGermanOctaveUp] = GlyphNameCodePoints.OrganGermanOctaveUp,
        [GlyphName.OrganGermanSemibrevis] = GlyphNameCodePoints.OrganGermanSemibrevis,
        [GlyphName.OrganGermanSemibrevisRest] = GlyphNameCodePoints.OrganGermanSemibrevisRest,
        [GlyphName.OrganGermanSemifusa] = GlyphNameCodePoints.OrganGermanSemifusa,
        [GlyphName.OrganGermanSemifusaRest] = GlyphNameCodePoints.OrganGermanSemifusaRest,
        [GlyphName.OrganGermanSemiminima] = GlyphNameCodePoints.OrganGermanSemiminima,
        [GlyphName.OrganGermanSemiminimaRest] = GlyphNameCodePoints.OrganGermanSemiminimaRest,
        [GlyphName.OrganGermanTie] = GlyphNameCodePoints.OrganGermanTie,
        [GlyphName.OrnamentBottomLeftConcaveStroke] = GlyphNameCodePoints.OrnamentBottomLeftConcaveStroke,
        [GlyphName.OrnamentBottomLeftConcaveStrokeLarge] = GlyphNameCodePoints.OrnamentBottomLeftConcaveStrokeLarge,
        [GlyphName.OrnamentBottomLeftConvexStroke] = GlyphNameCodePoints.OrnamentBottomLeftConvexStroke,
        [GlyphName.OrnamentBottomRightConcaveStroke] = GlyphNameCodePoints.OrnamentBottomRightConcaveStroke,
        [GlyphName.OrnamentBottomRightConvexStroke] = GlyphNameCodePoints.OrnamentBottomRightConvexStroke,
        [GlyphName.OrnamentComma] = GlyphNameCodePoints.OrnamentComma,
        [GlyphName.OrnamentDoubleObliqueLinesAfterNote] = GlyphNameCodePoints.OrnamentDoubleObliqueLinesAfterNote,
        [GlyphName.OrnamentDoubleObliqueLinesBeforeNote] = GlyphNameCodePoints.OrnamentDoubleObliqueLinesBeforeNote,
        [GlyphName.OrnamentDownCurve] = GlyphNameCodePoints.OrnamentDownCurve,
        [GlyphName.OrnamentHaydn] = GlyphNameCodePoints.OrnamentHaydn,
        [GlyphName.OrnamentHighLeftConcaveStroke] = GlyphNameCodePoints.OrnamentHighLeftConcaveStroke,
        [GlyphName.OrnamentHighLeftConvexStroke] = GlyphNameCodePoints.OrnamentHighLeftConvexStroke,
        [GlyphName.OrnamentHighRightConcaveStroke] = GlyphNameCodePoints.OrnamentHighRightConcaveStroke,
        [GlyphName.OrnamentHighRightConvexStroke] = GlyphNameCodePoints.OrnamentHighRightConvexStroke,
        [GlyphName.OrnamentHookAfterNote] = GlyphNameCodePoints.OrnamentHookAfterNote,
        [GlyphName.OrnamentHookBeforeNote] = GlyphNameCodePoints.OrnamentHookBeforeNote,
        [GlyphName.OrnamentLeftFacingHalfCircle] = GlyphNameCodePoints.OrnamentLeftFacingHalfCircle,
        [GlyphName.OrnamentLeftFacingHook] = GlyphNameCodePoints.OrnamentLeftFacingHook,
        [GlyphName.OrnamentLeftPlus] = GlyphNameCodePoints.OrnamentLeftPlus,
        [GlyphName.OrnamentLeftShakeT] = GlyphNameCodePoints.OrnamentLeftShakeT,
        [GlyphName.OrnamentLeftVerticalStroke] = GlyphNameCodePoints.OrnamentLeftVerticalStroke,
        [GlyphName.OrnamentLeftVerticalStrokeWithCross] = GlyphNameCodePoints.OrnamentLeftVerticalStrokeWithCross,
        [GlyphName.OrnamentLowLeftConcaveStroke] = GlyphNameCodePoints.OrnamentLowLeftConcaveStroke,
        [GlyphName.OrnamentLowLeftConvexStroke] = GlyphNameCodePoints.OrnamentLowLeftConvexStroke,
        [GlyphName.OrnamentLowRightConcaveStroke] = GlyphNameCodePoints.OrnamentLowRightConcaveStroke,
        [GlyphName.OrnamentLowRightConvexStroke] = GlyphNameCodePoints.OrnamentLowRightConvexStroke,
        [GlyphName.OrnamentMiddleVerticalStroke] = GlyphNameCodePoints.OrnamentMiddleVerticalStroke,
        [GlyphName.OrnamentMordent] = GlyphNameCodePoints.OrnamentMordent,
        [GlyphName.OrnamentObliqueLineAfterNote] = GlyphNameCodePoints.OrnamentObliqueLineAfterNote,
        [GlyphName.OrnamentObliqueLineBeforeNote] = GlyphNameCodePoints.OrnamentObliqueLineBeforeNote,
        [GlyphName.OrnamentObliqueLineHorizAfterNote] = GlyphNameCodePoints.OrnamentObliqueLineHorizAfterNote,
        [GlyphName.OrnamentObliqueLineHorizBeforeNote] = GlyphNameCodePoints.OrnamentObliqueLineHorizBeforeNote,
        [GlyphName.OrnamentOriscus] = GlyphNameCodePoints.OrnamentOriscus,
        [GlyphName.OrnamentPinceCouperin] = GlyphNameCodePoints.OrnamentPinceCouperin,
        [GlyphName.OrnamentPortDeVoixV] = GlyphNameCodePoints.OrnamentPortDeVoixV,
        [GlyphName.OrnamentPrecompAppoggTrill] = GlyphNameCodePoints.OrnamentPrecompAppoggTrill,
        [GlyphName.OrnamentPrecompAppoggTrillSuffix] = GlyphNameCodePoints.OrnamentPrecompAppoggTrillSuffix,
        [GlyphName.OrnamentPrecompCadence] = GlyphNameCodePoints.OrnamentPrecompCadence,
        [GlyphName.OrnamentPrecompCadenceUpperPrefix] = GlyphNameCodePoints.OrnamentPrecompCadenceUpperPrefix,
        [GlyphName.OrnamentPrecompCadenceUpperPrefixTurn] = GlyphNameCodePoints.OrnamentPrecompCadenceUpperPrefixTurn,
        [GlyphName.OrnamentPrecompCadenceWithTurn] = GlyphNameCodePoints.OrnamentPrecompCadenceWithTurn,
        [GlyphName.OrnamentPrecompDescendingSlide] = GlyphNameCodePoints.OrnamentPrecompDescendingSlide,
        [GlyphName.OrnamentPrecompDoubleCadenceLowerPrefix] = GlyphNameCodePoints.OrnamentPrecompDoubleCadenceLowerPrefix,
        [GlyphName.OrnamentPrecompDoubleCadenceUpperPrefix] = GlyphNameCodePoints.OrnamentPrecompDoubleCadenceUpperPrefix,
        [GlyphName.OrnamentPrecompDoubleCadenceUpperPrefixTurn] = GlyphNameCodePoints.OrnamentPrecompDoubleCadenceUpperPrefixTurn,
        [GlyphName.OrnamentPrecompInvertedMordentUpperPrefix] = GlyphNameCodePoints.OrnamentPrecompInvertedMordentUpperPrefix,
        [GlyphName.OrnamentPrecompMordentRelease] = GlyphNameCodePoints.OrnamentPrecompMordentRelease,
        [GlyphName.OrnamentPrecompMordentUpperPrefix] = GlyphNameCodePoints.OrnamentPrecompMordentUpperPrefix,
        [GlyphName.OrnamentPrecompPortDeVoixMordent] = GlyphNameCodePoints.OrnamentPrecompPortDeVoixMordent,
        [GlyphName.OrnamentPrecompSlide] = GlyphNameCodePoints.OrnamentPrecompSlide,
        [GlyphName.OrnamentPrecompSlideTrillBach] = GlyphNameCodePoints.OrnamentPrecompSlideTrillBach,
        [GlyphName.OrnamentPrecompSlideTrillDAnglebert] = GlyphNameCodePoints.OrnamentPrecompSlideTrillDAnglebert,
        [GlyphName.OrnamentPrecompSlideTrillMarpurg] = GlyphNameCodePoints.OrnamentPrecompSlideTrillMarpurg,
        [GlyphName.OrnamentPrecompSlideTrillMuffat] = GlyphNameCodePoints.OrnamentPrecompSlideTrillMuffat,
        [GlyphName.OrnamentPrecompSlideTrillSuffixMuffat] = GlyphNameCodePoints.OrnamentPrecompSlideTrillSuffixMuffat,
        [GlyphName.OrnamentPrecompTrillLowerSuffix] = GlyphNameCodePoints.OrnamentPrecompTrillLowerSuffix,
        [GlyphName.OrnamentPrecompTrillSuffixDandrieu] = GlyphNameCodePoints.OrnamentPrecompTrillSuffixDandrieu,
        [GlyphName.OrnamentPrecompTrillWithMordent] = GlyphNameCodePoints.OrnamentPrecompTrillWithMordent,
        [GlyphName.OrnamentPrecompTurnTrillBach] = GlyphNameCodePoints.OrnamentPrecompTurnTrillBach,
        [GlyphName.OrnamentPrecompTurnTrillDAnglebert] = GlyphNameCodePoints.OrnamentPrecompTurnTrillDAnglebert,
        [GlyphName.OrnamentQuilisma] = GlyphNameCodePoints.OrnamentQuilisma,
        [GlyphName.OrnamentRightFacingHalfCircle] = GlyphNameCodePoints.OrnamentRightFacingHalfCircle,
        [GlyphName.OrnamentRightFacingHook] = GlyphNameCodePoints.OrnamentRightFacingHook,
        [GlyphName.OrnamentRightVerticalStroke] = GlyphNameCodePoints.OrnamentRightVerticalStroke,
        [GlyphName.OrnamentSchleifer] = GlyphNameCodePoints.OrnamentSchleifer,
        [GlyphName.OrnamentShake3] = GlyphNameCodePoints.OrnamentShake3,
        [GlyphName.OrnamentShakeMuffat1] = GlyphNameCodePoints.OrnamentShakeMuffat1,
        [GlyphName.OrnamentShortObliqueLineAfterNote] = GlyphNameCodePoints.OrnamentShortObliqueLineAfterNote,
        [GlyphName.OrnamentShortObliqueLineBeforeNote] = GlyphNameCodePoints.OrnamentShortObliqueLineBeforeNote,
        [GlyphName.OrnamentShortTrill] = GlyphNameCodePoints.OrnamentShortTrill,
        [GlyphName.OrnamentTopLeftConcaveStroke] = GlyphNameCodePoints.OrnamentTopLeftConcaveStroke,
        [GlyphName.OrnamentTopLeftConvexStroke] = GlyphNameCodePoints.OrnamentTopLeftConvexStroke,
        [GlyphName.OrnamentTopRightConcaveStroke] = GlyphNameCodePoints.OrnamentTopRightConcaveStroke,
        [GlyphName.OrnamentTopRightConvexStroke] = GlyphNameCodePoints.OrnamentTopRightConvexStroke,
        [GlyphName.OrnamentTremblement] = GlyphNameCodePoints.OrnamentTremblement,
        [GlyphName.OrnamentTremblementCouperin] = GlyphNameCodePoints.OrnamentTremblementCouperin,
        [GlyphName.OrnamentTrill] = GlyphNameCodePoints.OrnamentTrill,
        [GlyphName.OrnamentTurn] = GlyphNameCodePoints.OrnamentTurn,
        [GlyphName.OrnamentTurnInverted] = GlyphNameCodePoints.OrnamentTurnInverted,
        [GlyphName.OrnamentTurnSlash] = GlyphNameCodePoints.OrnamentTurnSlash,
        [GlyphName.OrnamentTurnUp] = GlyphNameCodePoints.OrnamentTurnUp,
        [GlyphName.OrnamentTurnUpS] = GlyphNameCodePoints.OrnamentTurnUpS,
        [GlyphName.OrnamentUpCurve] = GlyphNameCodePoints.OrnamentUpCurve,
        [GlyphName.OrnamentVerticalLine] = GlyphNameCodePoints.OrnamentVerticalLine,
        [GlyphName.OrnamentZigZagLineNoRightEnd] = GlyphNameCodePoints.OrnamentZigZagLineNoRightEnd,
        [GlyphName.OrnamentZigZagLineWithRightEnd] = GlyphNameCodePoints.OrnamentZigZagLineWithRightEnd,
        [GlyphName.Ottava] = GlyphNameCodePoints.Ottava,
        [GlyphName.OttavaAlta] = GlyphNameCodePoints.OttavaAlta,
        [GlyphName.OttavaBassa] = GlyphNameCodePoints.OttavaBassa,
        [GlyphName.OttavaBassaBa] = GlyphNameCodePoints.OttavaBassaBa,
        [GlyphName.OttavaBassaVb] = GlyphNameCodePoints.OttavaBassaVb,
        [GlyphName.PendereckiTremolo] = GlyphNameCodePoints.PendereckiTremolo,
        [GlyphName.PictAgogo] = GlyphNameCodePoints.PictAgogo,
        [GlyphName.PictAlmglocken] = GlyphNameCodePoints.PictAlmglocken,
        [GlyphName.PictAnvil] = GlyphNameCodePoints.PictAnvil,
        [GlyphName.PictBambooChimes] = GlyphNameCodePoints.PictBambooChimes,
        [GlyphName.PictBambooScraper] = GlyphNameCodePoints.PictBambooScraper,
        [GlyphName.PictBassDrum] = GlyphNameCodePoints.PictBassDrum,
        [GlyphName.PictBassDrumOnSide] = GlyphNameCodePoints.PictBassDrumOnSide,
        [GlyphName.PictBeaterBow] = GlyphNameCodePoints.PictBeaterBow,
        [GlyphName.PictBeaterBox] = GlyphNameCodePoints.PictBeaterBox,
        [GlyphName.PictBeaterBrassMalletsDown] = GlyphNameCodePoints.PictBeaterBrassMalletsDown,
        [GlyphName.PictBeaterBrassMalletsLeft] = GlyphNameCodePoints.PictBeaterBrassMalletsLeft,
        [GlyphName.PictBeaterBrassMalletsRight] = GlyphNameCodePoints.PictBeaterBrassMalletsRight,
        [GlyphName.PictBeaterBrassMalletsUp] = GlyphNameCodePoints.PictBeaterBrassMalletsUp,
        [GlyphName.PictBeaterCombiningDashedCircle] = GlyphNameCodePoints.PictBeaterCombiningDashedCircle,
        [GlyphName.PictBeaterCombiningParentheses] = GlyphNameCodePoints.PictBeaterCombiningParentheses,
        [GlyphName.PictBeaterDoubleBassDrumDown] = GlyphNameCodePoints.PictBeaterDoubleBassDrumDown,
        [GlyphName.PictBeaterDoubleBassDrumUp] = GlyphNameCodePoints.PictBeaterDoubleBassDrumUp,
        [GlyphName.PictBeaterFinger] = GlyphNameCodePoints.PictBeaterFinger,
        [GlyphName.PictBeaterFingernails] = GlyphNameCodePoints.PictBeaterFingernails,
        [GlyphName.PictBeaterFist] = GlyphNameCodePoints.PictBeaterFist,
        [GlyphName.PictBeaterGuiroScraper] = GlyphNameCodePoints.PictBeaterGuiroScraper,
        [GlyphName.PictBeaterHammer] = GlyphNameCodePoints.PictBeaterHammer,
        [GlyphName.PictBeaterHammerMetalDown] = GlyphNameCodePoints.PictBeaterHammerMetalDown,
        [GlyphName.PictBeaterHammerMetalUp] = GlyphNameCodePoints.PictBeaterHammerMetalUp,
        [GlyphName.PictBeaterHammerPlasticDown] = GlyphNameCodePoints.PictBeaterHammerPlasticDown,
        [GlyphName.PictBeaterHammerPlasticUp] = GlyphNameCodePoints.PictBeaterHammerPlasticUp,
        [GlyphName.PictBeaterHammerWoodDown] = GlyphNameCodePoints.PictBeaterHammerWoodDown,
        [GlyphName.PictBeaterHammerWoodUp] = GlyphNameCodePoints.PictBeaterHammerWoodUp,
        [GlyphName.PictBeaterHand] = GlyphNameCodePoints.PictBeaterHand,
        [GlyphName.PictBeaterHardBassDrumDown] = GlyphNameCodePoints.PictBeaterHardBassDrumDown,
        [GlyphName.PictBeaterHardBassDrumUp] = GlyphNameCodePoints.PictBeaterHardBassDrumUp,
        [GlyphName.PictBeaterHardGlockenspielDown] = GlyphNameCodePoints.PictBeaterHardGlockenspielDown,
        [GlyphName.PictBeaterHardGlockenspielLeft] = GlyphNameCodePoints.PictBeaterHardGlockenspielLeft,
        [GlyphName.PictBeaterHardGlockenspielRight] = GlyphNameCodePoints.PictBeaterHardGlockenspielRight,
        [GlyphName.PictBeaterHardGlockenspielUp] = GlyphNameCodePoints.PictBeaterHardGlockenspielUp,
        [GlyphName.PictBeaterHardTimpaniDown] = GlyphNameCodePoints.PictBeaterHardTimpaniDown,
        [GlyphName.PictBeaterHardTimpaniLeft] = GlyphNameCodePoints.PictBeaterHardTimpaniLeft,
        [GlyphName.PictBeaterHardTimpaniRight] = GlyphNameCodePoints.PictBeaterHardTimpaniRight,
        [GlyphName.PictBeaterHardTimpaniUp] = GlyphNameCodePoints.PictBeaterHardTimpaniUp,
        [GlyphName.PictBeaterHardXylophoneDown] = GlyphNameCodePoints.PictBeaterHardXylophoneDown,
        [GlyphName.PictBeaterHardXylophoneLeft] = GlyphNameCodePoints.PictBeaterHardXylophoneLeft,
        [GlyphName.PictBeaterHardXylophoneRight] = GlyphNameCodePoints.PictBeaterHardXylophoneRight,
        [GlyphName.PictBeaterHardXylophoneUp] = GlyphNameCodePoints.PictBeaterHardXylophoneUp,
        [GlyphName.PictBeaterHardYarnDown] = GlyphNameCodePoints.PictBeaterHardYarnDown,
        [GlyphName.PictBeaterHardYarnLeft] = GlyphNameCodePoints.PictBeaterHardYarnLeft,
        [GlyphName.PictBeaterHardYarnRight] = GlyphNameCodePoints.PictBeaterHardYarnRight,
        [GlyphName.PictBeaterHardYarnUp] = GlyphNameCodePoints.PictBeaterHardYarnUp,
        [GlyphName.PictBeaterJazzSticksDown] = GlyphNameCodePoints.PictBeaterJazzSticksDown,
        [GlyphName.PictBeaterJazzSticksUp] = GlyphNameCodePoints.PictBeaterJazzSticksUp,
        [GlyphName.PictBeaterKnittingNeedle] = GlyphNameCodePoints.PictBeaterKnittingNeedle,
        [GlyphName.PictBeaterMallet] = GlyphNameCodePoints.PictBeaterMallet,
        [GlyphName.PictBeaterMalletDown] = GlyphNameCodePoints.PictBeaterMalletDown,
        [GlyphName.PictBeaterMediumBassDrumDown] = GlyphNameCodePoints.PictBeaterMediumBassDrumDown,
        [GlyphName.PictBeaterMediumBassDrumUp] = GlyphNameCodePoints.PictBeaterMediumBassDrumUp,
        [GlyphName.PictBeaterMediumTimpaniDown] = GlyphNameCodePoints.PictBeaterMediumTimpaniDown,
        [GlyphName.PictBeaterMediumTimpaniLeft] = GlyphNameCodePoints.PictBeaterMediumTimpaniLeft,
        [GlyphName.PictBeaterMediumTimpaniRight] = GlyphNameCodePoints.PictBeaterMediumTimpaniRight,
        [GlyphName.PictBeaterMediumTimpaniUp] = GlyphNameCodePoints.PictBeaterMediumTimpaniUp,
        [GlyphName.PictBeaterMediumXylophoneDown] = GlyphNameCodePoints.PictBeaterMediumXylophoneDown,
        [GlyphName.PictBeaterMediumXylophoneLeft] = GlyphNameCodePoints.PictBeaterMediumXylophoneLeft,
        [GlyphName.PictBeaterMediumXylophoneRight] = GlyphNameCodePoints.PictBeaterMediumXylophoneRight,
        [GlyphName.PictBeaterMediumXylophoneUp] = GlyphNameCodePoints.PictBeaterMediumXylophoneUp,
        [GlyphName.PictBeaterMediumYarnDown] = GlyphNameCodePoints.PictBeaterMediumYarnDown,
        [GlyphName.PictBeaterMediumYarnLeft] = GlyphNameCodePoints.PictBeaterMediumYarnLeft,
        [GlyphName.PictBeaterMediumYarnRight] = GlyphNameCodePoints.PictBeaterMediumYarnRight,
        [GlyphName.PictBeaterMediumYarnUp] = GlyphNameCodePoints.PictBeaterMediumYarnUp,
        [GlyphName.PictBeaterMetalBassDrumDown] = GlyphNameCodePoints.PictBeaterMetalBassDrumDown,
        [GlyphName.PictBeaterMetalBassDrumUp] = GlyphNameCodePoints.PictBeaterMetalBassDrumUp,
        [GlyphName.PictBeaterMetalDown] = GlyphNameCodePoints.PictBeaterMetalDown,
        [GlyphName.PictBeaterMetalHammer] = GlyphNameCodePoints.PictBeaterMetalHammer,
        [GlyphName.PictBeaterMetalLeft] = GlyphNameCodePoints.PictBeaterMetalLeft,
        [GlyphName.PictBeaterMetalRight] = GlyphNameCodePoints.PictBeaterMetalRight,
        [GlyphName.PictBeaterMetalUp] = GlyphNameCodePoints.PictBeaterMetalUp,
        [GlyphName.PictBeaterSnareSticksDown] = GlyphNameCodePoints.PictBeaterSnareSticksDown,
        [GlyphName.PictBeaterSnareSticksUp] = GlyphNameCodePoints.PictBeaterSnareSticksUp,
        [GlyphName.PictBeaterSoftBassDrumDown] = GlyphNameCodePoints.PictBeaterSoftBassDrumDown,
        [GlyphName.PictBeaterSoftBassDrumUp] = GlyphNameCodePoints.PictBeaterSoftBassDrumUp,
        [GlyphName.PictBeaterSoftGlockenspielDown] = GlyphNameCodePoints.PictBeaterSoftGlockenspielDown,
        [GlyphName.PictBeaterSoftGlockenspielLeft] = GlyphNameCodePoints.PictBeaterSoftGlockenspielLeft,
        [GlyphName.PictBeaterSoftGlockenspielRight] = GlyphNameCodePoints.PictBeaterSoftGlockenspielRight,
        [GlyphName.PictBeaterSoftGlockenspielUp] = GlyphNameCodePoints.PictBeaterSoftGlockenspielUp,
        [GlyphName.PictBeaterSoftTimpaniDown] = GlyphNameCodePoints.PictBeaterSoftTimpaniDown,
        [GlyphName.PictBeaterSoftTimpaniLeft] = GlyphNameCodePoints.PictBeaterSoftTimpaniLeft,
        [GlyphName.PictBeaterSoftTimpaniRight] = GlyphNameCodePoints.PictBeaterSoftTimpaniRight,
        [GlyphName.PictBeaterSoftTimpaniUp] = GlyphNameCodePoints.PictBeaterSoftTimpaniUp,
        [GlyphName.PictBeaterSoftXylophone] = GlyphNameCodePoints.PictBeaterSoftXylophone,
        [GlyphName.PictBeaterSoftXylophoneDown] = GlyphNameCodePoints.PictBeaterSoftXylophoneDown,
        [GlyphName.PictBeaterSoftXylophoneLeft] = GlyphNameCodePoints.PictBeaterSoftXylophoneLeft,
        [GlyphName.PictBeaterSoftXylophoneRight] = GlyphNameCodePoints.PictBeaterSoftXylophoneRight,
        [GlyphName.PictBeaterSoftXylophoneUp] = GlyphNameCodePoints.PictBeaterSoftXylophoneUp,
        [GlyphName.PictBeaterSoftYarnDown] = GlyphNameCodePoints.PictBeaterSoftYarnDown,
        [GlyphName.PictBeaterSoftYarnLeft] = GlyphNameCodePoints.PictBeaterSoftYarnLeft,
        [GlyphName.PictBeaterSoftYarnRight] = GlyphNameCodePoints.PictBeaterSoftYarnRight,
        [GlyphName.PictBeaterSoftYarnUp] = GlyphNameCodePoints.PictBeaterSoftYarnUp,
        [GlyphName.PictBeaterSpoonWoodenMallet] = GlyphNameCodePoints.PictBeaterSpoonWoodenMallet,
        [GlyphName.PictBeaterSuperballDown] = GlyphNameCodePoints.PictBeaterSuperballDown,
        [GlyphName.PictBeaterSuperballLeft] = GlyphNameCodePoints.PictBeaterSuperballLeft,
        [GlyphName.PictBeaterSuperballRight] = GlyphNameCodePoints.PictBeaterSuperballRight,
        [GlyphName.PictBeaterSuperballUp] = GlyphNameCodePoints.PictBeaterSuperballUp,
        [GlyphName.PictBeaterTriangleDown] = GlyphNameCodePoints.PictBeaterTriangleDown,
        [GlyphName.PictBeaterTrianglePlain] = GlyphNameCodePoints.PictBeaterTrianglePlain,
        [GlyphName.PictBeaterTriangleUp] = GlyphNameCodePoints.PictBeaterTriangleUp,
        [GlyphName.PictBeaterWireBrushesDown] = GlyphNameCodePoints.PictBeaterWireBrushesDown,
        [GlyphName.PictBeaterWireBrushesUp] = GlyphNameCodePoints.PictBeaterWireBrushesUp,
        [GlyphName.PictBeaterWoodTimpaniDown] = GlyphNameCodePoints.PictBeaterWoodTimpaniDown,
        [GlyphName.PictBeaterWoodTimpaniLeft] = GlyphNameCodePoints.PictBeaterWoodTimpaniLeft,
        [GlyphName.PictBeaterWoodTimpaniRight] = GlyphNameCodePoints.PictBeaterWoodTimpaniRight,
        [GlyphName.PictBeaterWoodTimpaniUp] = GlyphNameCodePoints.PictBeaterWoodTimpaniUp,
        [GlyphName.PictBeaterWoodXylophoneDown] = GlyphNameCodePoints.PictBeaterWoodXylophoneDown,
        [GlyphName.PictBeaterWoodXylophoneLeft] = GlyphNameCodePoints.PictBeaterWoodXylophoneLeft,
        [GlyphName.PictBeaterWoodXylophoneRight] = GlyphNameCodePoints.PictBeaterWoodXylophoneRight,
        [GlyphName.PictBeaterWoodXylophoneUp] = GlyphNameCodePoints.PictBeaterWoodXylophoneUp,
        [GlyphName.PictBell] = GlyphNameCodePoints.PictBell,
        [GlyphName.PictBellOfCymbal] = GlyphNameCodePoints.PictBellOfCymbal,
        [GlyphName.PictBellPlate] = GlyphNameCodePoints.PictBellPlate,
        [GlyphName.PictBellTree] = GlyphNameCodePoints.PictBellTree,
        [GlyphName.PictBirdWhistle] = GlyphNameCodePoints.PictBirdWhistle,
        [GlyphName.PictBoardClapper] = GlyphNameCodePoints.PictBoardClapper,
        [GlyphName.PictBongos] = GlyphNameCodePoints.PictBongos,
        [GlyphName.PictBrakeDrum] = GlyphNameCodePoints.PictBrakeDrum,
        [GlyphName.PictCabasa] = GlyphNameCodePoints.PictCabasa,
        [GlyphName.PictCannon] = GlyphNameCodePoints.PictCannon,
        [GlyphName.PictCarHorn] = GlyphNameCodePoints.PictCarHorn,
        [GlyphName.PictCastanets] = GlyphNameCodePoints.PictCastanets,
        [GlyphName.PictCastanetsWithHandle] = GlyphNameCodePoints.PictCastanetsWithHandle,
        [GlyphName.PictCelesta] = GlyphNameCodePoints.PictCelesta,
        [GlyphName.PictCencerro] = GlyphNameCodePoints.PictCencerro,
        [GlyphName.PictCenter1] = GlyphNameCodePoints.PictCenter1,
        [GlyphName.PictCenter2] = GlyphNameCodePoints.PictCenter2,
        [GlyphName.PictCenter3] = GlyphNameCodePoints.PictCenter3,
        [GlyphName.PictChainRattle] = GlyphNameCodePoints.PictChainRattle,
        [GlyphName.PictChimes] = GlyphNameCodePoints.PictChimes,
        [GlyphName.PictChineseCymbal] = GlyphNameCodePoints.PictChineseCymbal,
        [GlyphName.PictChokeCymbal] = GlyphNameCodePoints.PictChokeCymbal,
        [GlyphName.PictClaves] = GlyphNameCodePoints.PictClaves,
        [GlyphName.PictCoins] = GlyphNameCodePoints.PictCoins,
        [GlyphName.PictConga] = GlyphNameCodePoints.PictConga,
        [GlyphName.PictCowBell] = GlyphNameCodePoints.PictCowBell,
        [GlyphName.PictCrashCymbals] = GlyphNameCodePoints.PictCrashCymbals,
        [GlyphName.PictCrotales] = GlyphNameCodePoints.PictCrotales,
        [GlyphName.PictCrushStem] = GlyphNameCodePoints.PictCrushStem,
        [GlyphName.PictCuica] = GlyphNameCodePoints.PictCuica,
        [GlyphName.PictCymbalTongs] = GlyphNameCodePoints.PictCymbalTongs,
        [GlyphName.PictDamp1] = GlyphNameCodePoints.PictDamp1,
        [GlyphName.PictDamp2] = GlyphNameCodePoints.PictDamp2,
        [GlyphName.PictDamp3] = GlyphNameCodePoints.PictDamp3,
        [GlyphName.PictDamp4] = GlyphNameCodePoints.PictDamp4,
        [GlyphName.PictDeadNoteStem] = GlyphNameCodePoints.PictDeadNoteStem,
        [GlyphName.PictDrumStick] = GlyphNameCodePoints.PictDrumStick,
        [GlyphName.PictDuckCall] = GlyphNameCodePoints.PictDuckCall,
        [GlyphName.PictEdgeOfCymbal] = GlyphNameCodePoints.PictEdgeOfCymbal,
        [GlyphName.PictEmptyTrap] = GlyphNameCodePoints.PictEmptyTrap,
        [GlyphName.PictFingerCymbals] = GlyphNameCodePoints.PictFingerCymbals,
        [GlyphName.PictFlexatone] = GlyphNameCodePoints.PictFlexatone,
        [GlyphName.PictFootballRatchet] = GlyphNameCodePoints.PictFootballRatchet,
        [GlyphName.PictGlassHarmonica] = GlyphNameCodePoints.PictGlassHarmonica,
        [GlyphName.PictGlassHarp] = GlyphNameCodePoints.PictGlassHarp,
        [GlyphName.PictGlassPlateChimes] = GlyphNameCodePoints.PictGlassPlateChimes,
        [GlyphName.PictGlassTubeChimes] = GlyphNameCodePoints.PictGlassTubeChimes,
        [GlyphName.PictGlsp] = GlyphNameCodePoints.PictGlsp,
        [GlyphName.PictGlspSmithBrindle] = GlyphNameCodePoints.PictGlspSmithBrindle,
        [GlyphName.PictGobletDrum] = GlyphNameCodePoints.PictGobletDrum,
        [GlyphName.PictGong] = GlyphNameCodePoints.PictGong,
        [GlyphName.PictGongWithButton] = GlyphNameCodePoints.PictGongWithButton,
        [GlyphName.PictGuiro] = GlyphNameCodePoints.PictGuiro,
        [GlyphName.PictGumHardDown] = GlyphNameCodePoints.PictGumHardDown,
        [GlyphName.PictGumHardLeft] = GlyphNameCodePoints.PictGumHardLeft,
        [GlyphName.PictGumHardRight] = GlyphNameCodePoints.PictGumHardRight,
        [GlyphName.PictGumHardUp] = GlyphNameCodePoints.PictGumHardUp,
        [GlyphName.PictGumMediumDown] = GlyphNameCodePoints.PictGumMediumDown,
        [GlyphName.PictGumMediumLeft] = GlyphNameCodePoints.PictGumMediumLeft,
        [GlyphName.PictGumMediumRight] = GlyphNameCodePoints.PictGumMediumRight,
        [GlyphName.PictGumMediumUp] = GlyphNameCodePoints.PictGumMediumUp,
        [GlyphName.PictGumSoftDown] = GlyphNameCodePoints.PictGumSoftDown,
        [GlyphName.PictGumSoftLeft] = GlyphNameCodePoints.PictGumSoftLeft,
        [GlyphName.PictGumSoftRight] = GlyphNameCodePoints.PictGumSoftRight,
        [GlyphName.PictGumSoftUp] = GlyphNameCodePoints.PictGumSoftUp,
        [GlyphName.PictHalfOpen1] = GlyphNameCodePoints.PictHalfOpen1,
        [GlyphName.PictHalfOpen2] = GlyphNameCodePoints.PictHalfOpen2,
        [GlyphName.PictHandbell] = GlyphNameCodePoints.PictHandbell,
        [GlyphName.PictHiHat] = GlyphNameCodePoints.PictHiHat,
        [GlyphName.PictHiHatOnStand] = GlyphNameCodePoints.PictHiHatOnStand,
        [GlyphName.PictJawHarp] = GlyphNameCodePoints.PictJawHarp,
        [GlyphName.PictJingleBells] = GlyphNameCodePoints.PictJingleBells,
        [GlyphName.PictKlaxonHorn] = GlyphNameCodePoints.PictKlaxonHorn,
        [GlyphName.PictLeftHandCircle] = GlyphNameCodePoints.PictLeftHandCircle,
        [GlyphName.PictLionsRoar] = GlyphNameCodePoints.PictLionsRoar,
        [GlyphName.PictLithophone] = GlyphNameCodePoints.PictLithophone,
        [GlyphName.PictLogDrum] = GlyphNameCodePoints.PictLogDrum,
        [GlyphName.PictLotusFlute] = GlyphNameCodePoints.PictLotusFlute,
        [GlyphName.PictMar] = GlyphNameCodePoints.PictMar,
        [GlyphName.PictMarSmithBrindle] = GlyphNameCodePoints.PictMarSmithBrindle,
        [GlyphName.PictMaraca] = GlyphNameCodePoints.PictMaraca,
        [GlyphName.PictMaracas] = GlyphNameCodePoints.PictMaracas,
        [GlyphName.PictMegaphone] = GlyphNameCodePoints.PictMegaphone,
        [GlyphName.PictMetalPlateChimes] = GlyphNameCodePoints.PictMetalPlateChimes,
        [GlyphName.PictMetalTubeChimes] = GlyphNameCodePoints.PictMetalTubeChimes,
        [GlyphName.PictMusicalSaw] = GlyphNameCodePoints.PictMusicalSaw,
        [GlyphName.PictNormalPosition] = GlyphNameCodePoints.PictNormalPosition,
        [GlyphName.PictOnRim] = GlyphNameCodePoints.PictOnRim,
        [GlyphName.PictOpen] = GlyphNameCodePoints.PictOpen,
        [GlyphName.PictOpenRimShot] = GlyphNameCodePoints.PictOpenRimShot,
        [GlyphName.PictPistolShot] = GlyphNameCodePoints.PictPistolShot,
        [GlyphName.PictPoliceWhistle] = GlyphNameCodePoints.PictPoliceWhistle,
        [GlyphName.PictQuijada] = GlyphNameCodePoints.PictQuijada,
        [GlyphName.PictRainstick] = GlyphNameCodePoints.PictRainstick,
        [GlyphName.PictRatchet] = GlyphNameCodePoints.PictRatchet,
        [GlyphName.PictRecoReco] = GlyphNameCodePoints.PictRecoReco,
        [GlyphName.PictRightHandSquare] = GlyphNameCodePoints.PictRightHandSquare,
        [GlyphName.PictRim1] = GlyphNameCodePoints.PictRim1,
        [GlyphName.PictRim2] = GlyphNameCodePoints.PictRim2,
        [GlyphName.PictRim3] = GlyphNameCodePoints.PictRim3,
        [GlyphName.PictRimShotOnStem] = GlyphNameCodePoints.PictRimShotOnStem,
        [GlyphName.PictSandpaperBlocks] = GlyphNameCodePoints.PictSandpaperBlocks,
        [GlyphName.PictScrapeAroundRim] = GlyphNameCodePoints.PictScrapeAroundRim,
        [GlyphName.PictScrapeAroundRimClockwise] = GlyphNameCodePoints.PictScrapeAroundRimClockwise,
        [GlyphName.PictScrapeCenterToEdge] = GlyphNameCodePoints.PictScrapeCenterToEdge,
        [GlyphName.PictScrapeEdgeToCenter] = GlyphNameCodePoints.PictScrapeEdgeToCenter,
        [GlyphName.PictShellBells] = GlyphNameCodePoints.PictShellBells,
        [GlyphName.PictShellChimes] = GlyphNameCodePoints.PictShellChimes,
        [GlyphName.PictSiren] = GlyphNameCodePoints.PictSiren,
        [GlyphName.PictSistrum] = GlyphNameCodePoints.PictSistrum,
        [GlyphName.PictSizzleCymbal] = GlyphNameCodePoints.PictSizzleCymbal,
        [GlyphName.PictSleighBell] = GlyphNameCodePoints.PictSleighBell,
        [GlyphName.PictSlideBrushOnGong] = GlyphNameCodePoints.PictSlideBrushOnGong,
        [GlyphName.PictSlideWhistle] = GlyphNameCodePoints.PictSlideWhistle,
        [GlyphName.PictSlitDrum] = GlyphNameCodePoints.PictSlitDrum,
        [GlyphName.PictSnareDrum] = GlyphNameCodePoints.PictSnareDrum,
        [GlyphName.PictSnareDrumMilitary] = GlyphNameCodePoints.PictSnareDrumMilitary,
        [GlyphName.PictSnareDrumSnaresOff] = GlyphNameCodePoints.PictSnareDrumSnaresOff,
        [GlyphName.PictSteelDrums] = GlyphNameCodePoints.PictSteelDrums,
        [GlyphName.PictStickShot] = GlyphNameCodePoints.PictStickShot,
        [GlyphName.PictSuperball] = GlyphNameCodePoints.PictSuperball,
        [GlyphName.PictSuspendedCymbal] = GlyphNameCodePoints.PictSuspendedCymbal,
        [GlyphName.PictSwishStem] = GlyphNameCodePoints.PictSwishStem,
        [GlyphName.PictTabla] = GlyphNameCodePoints.PictTabla,
        [GlyphName.PictTamTam] = GlyphNameCodePoints.PictTamTam,
        [GlyphName.PictTamTamWithBeater] = GlyphNameCodePoints.PictTamTamWithBeater,
        [GlyphName.PictTambourine] = GlyphNameCodePoints.PictTambourine,
        [GlyphName.PictTempleBlocks] = GlyphNameCodePoints.PictTempleBlocks,
        [GlyphName.PictTenorDrum] = GlyphNameCodePoints.PictTenorDrum,
        [GlyphName.PictThundersheet] = GlyphNameCodePoints.PictThundersheet,
        [GlyphName.PictTimbales] = GlyphNameCodePoints.PictTimbales,
        [GlyphName.PictTimpani] = GlyphNameCodePoints.PictTimpani,
        [GlyphName.PictTomTom] = GlyphNameCodePoints.PictTomTom,
        [GlyphName.PictTomTomChinese] = GlyphNameCodePoints.PictTomTomChinese,
        [GlyphName.PictTomTomIndoAmerican] = GlyphNameCodePoints.PictTomTomIndoAmerican,
        [GlyphName.PictTomTomJapanese] = GlyphNameCodePoints.PictTomTomJapanese,
        [GlyphName.PictTriangle] = GlyphNameCodePoints.PictTriangle,
        [GlyphName.PictTubaphone] = GlyphNameCodePoints.PictTubaphone,
        [GlyphName.PictTubularBells] = GlyphNameCodePoints.PictTubularBells,
        [GlyphName.PictTurnLeftStem] = GlyphNameCodePoints.PictTurnLeftStem,
        [GlyphName.PictTurnRightLeftStem] = GlyphNameCodePoints.PictTurnRightLeftStem,
        [GlyphName.PictTurnRightStem] = GlyphNameCodePoints.PictTurnRightStem,
        [GlyphName.PictVib] = GlyphNameCodePoints.PictVib,
        [GlyphName.PictVibMotorOff] = GlyphNameCodePoints.PictVibMotorOff,
        [GlyphName.PictVibSmithBrindle] = GlyphNameCodePoints.PictVibSmithBrindle,
        [GlyphName.PictVibraslap] = GlyphNameCodePoints.PictVibraslap,
        [GlyphName.PictVietnameseHat] = GlyphNameCodePoints.PictVietnameseHat,
        [GlyphName.PictWhip] = GlyphNameCodePoints.PictWhip,
        [GlyphName.PictWindChimesGlass] = GlyphNameCodePoints.PictWindChimesGlass,
        [GlyphName.PictWindMachine] = GlyphNameCodePoints.PictWindMachine,
        [GlyphName.PictWindWhistle] = GlyphNameCodePoints.PictWindWhistle,
        [GlyphName.PictWoodBlock] = GlyphNameCodePoints.PictWoodBlock,
        [GlyphName.PictWoundHardDown] = GlyphNameCodePoints.PictWoundHardDown,
        [GlyphName.PictWoundHardLeft] = GlyphNameCodePoints.PictWoundHardLeft,
        [GlyphName.PictWoundHardRight] = GlyphNameCodePoints.PictWoundHardRight,
        [GlyphName.PictWoundHardUp] = GlyphNameCodePoints.PictWoundHardUp,
        [GlyphName.PictWoundSoftDown] = GlyphNameCodePoints.PictWoundSoftDown,
        [GlyphName.PictWoundSoftLeft] = GlyphNameCodePoints.PictWoundSoftLeft,
        [GlyphName.PictWoundSoftRight] = GlyphNameCodePoints.PictWoundSoftRight,
        [GlyphName.PictWoundSoftUp] = GlyphNameCodePoints.PictWoundSoftUp,
        [GlyphName.PictXyl] = GlyphNameCodePoints.PictXyl,
        [GlyphName.PictXylBass] = GlyphNameCodePoints.PictXylBass,
        [GlyphName.PictXylSmithBrindle] = GlyphNameCodePoints.PictXylSmithBrindle,
        [GlyphName.PictXylTenor] = GlyphNameCodePoints.PictXylTenor,
        [GlyphName.PictXylTenorTrough] = GlyphNameCodePoints.PictXylTenorTrough,
        [GlyphName.PictXylTrough] = GlyphNameCodePoints.PictXylTrough,
        [GlyphName.PluckedBuzzPizzicato] = GlyphNameCodePoints.PluckedBuzzPizzicato,
        [GlyphName.PluckedDamp] = GlyphNameCodePoints.PluckedDamp,
        [GlyphName.PluckedDampAll] = GlyphNameCodePoints.PluckedDampAll,
        [GlyphName.PluckedDampOnStem] = GlyphNameCodePoints.PluckedDampOnStem,
        [GlyphName.PluckedFingernailFlick] = GlyphNameCodePoints.PluckedFingernailFlick,
        [GlyphName.PluckedLeftHandPizzicato] = GlyphNameCodePoints.PluckedLeftHandPizzicato,
        [GlyphName.PluckedPlectrum] = GlyphNameCodePoints.PluckedPlectrum,
        [GlyphName.PluckedSnapPizzicatoAbove] = GlyphNameCodePoints.PluckedSnapPizzicatoAbove,
        [GlyphName.PluckedSnapPizzicatoBelow] = GlyphNameCodePoints.PluckedSnapPizzicatoBelow,
        [GlyphName.PluckedWithFingernails] = GlyphNameCodePoints.PluckedWithFingernails,
        [GlyphName.Quindicesima] = GlyphNameCodePoints.Quindicesima,
        [GlyphName.QuindicesimaAlta] = GlyphNameCodePoints.QuindicesimaAlta,
        [GlyphName.QuindicesimaBassa] = GlyphNameCodePoints.QuindicesimaBassa,
        [GlyphName.QuindicesimaBassaMb] = GlyphNameCodePoints.QuindicesimaBassaMb,
        [GlyphName.Repeat1Bar] = GlyphNameCodePoints.Repeat1Bar,
        [GlyphName.Repeat2Bars] = GlyphNameCodePoints.Repeat2Bars,
        [GlyphName.Repeat4Bars] = GlyphNameCodePoints.Repeat4Bars,
        [GlyphName.RepeatBarLowerDot] = GlyphNameCodePoints.RepeatBarLowerDot,
        [GlyphName.RepeatBarSlash] = GlyphNameCodePoints.RepeatBarSlash,
        [GlyphName.RepeatBarUpperDot] = GlyphNameCodePoints.RepeatBarUpperDot,
        [GlyphName.RepeatDot] = GlyphNameCodePoints.RepeatDot,
        [GlyphName.RepeatDots] = GlyphNameCodePoints.RepeatDots,
        [GlyphName.RepeatLeft] = GlyphNameCodePoints.RepeatLeft,
        [GlyphName.RepeatRight] = GlyphNameCodePoints.RepeatRight,
        [GlyphName.RepeatRightLeft] = GlyphNameCodePoints.RepeatRightLeft,
        [GlyphName.Rest1024th] = GlyphNameCodePoints.Rest1024th,
        [GlyphName.Rest128th] = GlyphNameCodePoints.Rest128th,
        [GlyphName.Rest16th] = GlyphNameCodePoints.Rest16th,
        [GlyphName.Rest256th] = GlyphNameCodePoints.Rest256th,
        [GlyphName.Rest32nd] = GlyphNameCodePoints.Rest32nd,
        [GlyphName.Rest512th] = GlyphNameCodePoints.Rest512th,
        [GlyphName.Rest64th] = GlyphNameCodePoints.Rest64th,
        [GlyphName.Rest8th] = GlyphNameCodePoints.Rest8th,
        [GlyphName.RestDoubleWhole] = GlyphNameCodePoints.RestDoubleWhole,
        [GlyphName.RestDoubleWholeLegerLine] = GlyphNameCodePoints.RestDoubleWholeLegerLine,
        [GlyphName.RestHBar] = GlyphNameCodePoints.RestHBar,
        [GlyphName.RestHBarLeft] = GlyphNameCodePoints.RestHBarLeft,
        [GlyphName.RestHBarMiddle] = GlyphNameCodePoints.RestHBarMiddle,
        [GlyphName.RestHBarRight] = GlyphNameCodePoints.RestHBarRight,
        [GlyphName.RestHalf] = GlyphNameCodePoints.RestHalf,
        [GlyphName.RestHalfLegerLine] = GlyphNameCodePoints.RestHalfLegerLine,
        [GlyphName.RestLonga] = GlyphNameCodePoints.RestLonga,
        [GlyphName.RestMaxima] = GlyphNameCodePoints.RestMaxima,
        [GlyphName.RestQuarter] = GlyphNameCodePoints.RestQuarter,
        [GlyphName.RestQuarterOld] = GlyphNameCodePoints.RestQuarterOld,
        [GlyphName.RestQuarterZ] = GlyphNameCodePoints.RestQuarterZ,
        [GlyphName.RestWhole] = GlyphNameCodePoints.RestWhole,
        [GlyphName.RestWholeLegerLine] = GlyphNameCodePoints.RestWholeLegerLine,
        [GlyphName.ReversedBrace] = GlyphNameCodePoints.ReversedBrace,
        [GlyphName.ReversedBracketBottom] = GlyphNameCodePoints.ReversedBracketBottom,
        [GlyphName.ReversedBracketTop] = GlyphNameCodePoints.ReversedBracketTop,
        [GlyphName.RightRepeatSmall] = GlyphNameCodePoints.RightRepeatSmall,
        [GlyphName.ScaleDegree1] = GlyphNameCodePoints.ScaleDegree1,
        [GlyphName.ScaleDegree2] = GlyphNameCodePoints.ScaleDegree2,
        [GlyphName.ScaleDegree3] = GlyphNameCodePoints.ScaleDegree3,
        [GlyphName.ScaleDegree4] = GlyphNameCodePoints.ScaleDegree4,
        [GlyphName.ScaleDegree5] = GlyphNameCodePoints.ScaleDegree5,
        [GlyphName.ScaleDegree6] = GlyphNameCodePoints.ScaleDegree6,
        [GlyphName.ScaleDegree7] = GlyphNameCodePoints.ScaleDegree7,
        [GlyphName.ScaleDegree8] = GlyphNameCodePoints.ScaleDegree8,
        [GlyphName.ScaleDegree9] = GlyphNameCodePoints.ScaleDegree9,
        [GlyphName.SchaefferClef] = GlyphNameCodePoints.SchaefferClef,
        [GlyphName.SchaefferFClefToGClef] = GlyphNameCodePoints.SchaefferFClefToGClef,
        [GlyphName.SchaefferGClefToFClef] = GlyphNameCodePoints.SchaefferGClefToFClef,
        [GlyphName.SchaefferPreviousClef] = GlyphNameCodePoints.SchaefferPreviousClef,
        [GlyphName.Segno] = GlyphNameCodePoints.Segno,
        [GlyphName.SegnoSerpent1] = GlyphNameCodePoints.SegnoSerpent1,
        [GlyphName.SegnoSerpent2] = GlyphNameCodePoints.SegnoSerpent2,
        [GlyphName.SemipitchedPercussionClef1] = GlyphNameCodePoints.SemipitchedPercussionClef1,
        [GlyphName.SemipitchedPercussionClef2] = GlyphNameCodePoints.SemipitchedPercussionClef2,
        [GlyphName.SmnFlat] = GlyphNameCodePoints.SmnFlat,
        [GlyphName.SmnFlatWhite] = GlyphNameCodePoints.SmnFlatWhite,
        [GlyphName.SmnHistoryDoubleFlat] = GlyphNameCodePoints.SmnHistoryDoubleFlat,
        [GlyphName.SmnHistoryDoubleSharp] = GlyphNameCodePoints.SmnHistoryDoubleSharp,
        [GlyphName.SmnHistoryFlat] = GlyphNameCodePoints.SmnHistoryFlat,
        [GlyphName.SmnHistorySharp] = GlyphNameCodePoints.SmnHistorySharp,
        [GlyphName.SmnNatural] = GlyphNameCodePoints.SmnNatural,
        [GlyphName.SmnSharp] = GlyphNameCodePoints.SmnSharp,
        [GlyphName.SmnSharpDown] = GlyphNameCodePoints.SmnSharpDown,
        [GlyphName.SmnSharpWhite] = GlyphNameCodePoints.SmnSharpWhite,
        [GlyphName.SmnSharpWhiteDown] = GlyphNameCodePoints.SmnSharpWhiteDown,
        [GlyphName.SplitBarDivider] = GlyphNameCodePoints.SplitBarDivider,
        [GlyphName.Staff1Line] = GlyphNameCodePoints.Staff1Line,
        [GlyphName.Staff1LineNarrow] = GlyphNameCodePoints.Staff1LineNarrow,
        [GlyphName.Staff1LineWide] = GlyphNameCodePoints.Staff1LineWide,
        [GlyphName.Staff2Lines] = GlyphNameCodePoints.Staff2Lines,
        [GlyphName.Staff2LinesNarrow] = GlyphNameCodePoints.Staff2LinesNarrow,
        [GlyphName.Staff2LinesWide] = GlyphNameCodePoints.Staff2LinesWide,
        [GlyphName.Staff3Lines] = GlyphNameCodePoints.Staff3Lines,
        [GlyphName.Staff3LinesNarrow] = GlyphNameCodePoints.Staff3LinesNarrow,
        [GlyphName.Staff3LinesWide] = GlyphNameCodePoints.Staff3LinesWide,
        [GlyphName.Staff4Lines] = GlyphNameCodePoints.Staff4Lines,
        [GlyphName.Staff4LinesNarrow] = GlyphNameCodePoints.Staff4LinesNarrow,
        [GlyphName.Staff4LinesWide] = GlyphNameCodePoints.Staff4LinesWide,
        [GlyphName.Staff5Lines] = GlyphNameCodePoints.Staff5Lines,
        [GlyphName.Staff5LinesNarrow] = GlyphNameCodePoints.Staff5LinesNarrow,
        [GlyphName.Staff5LinesWide] = GlyphNameCodePoints.Staff5LinesWide,
        [GlyphName.Staff6Lines] = GlyphNameCodePoints.Staff6Lines,
        [GlyphName.Staff6LinesNarrow] = GlyphNameCodePoints.Staff6LinesNarrow,
        [GlyphName.Staff6LinesWide] = GlyphNameCodePoints.Staff6LinesWide,
        [GlyphName.StaffDivideArrowDown] = GlyphNameCodePoints.StaffDivideArrowDown,
        [GlyphName.StaffDivideArrowUp] = GlyphNameCodePoints.StaffDivideArrowUp,
        [GlyphName.StaffDivideArrowUpDown] = GlyphNameCodePoints.StaffDivideArrowUpDown,
        [GlyphName.StaffPosLower1] = GlyphNameCodePoints.StaffPosLower1,
        [GlyphName.StaffPosLower2] = GlyphNameCodePoints.StaffPosLower2,
        [GlyphName.StaffPosLower3] = GlyphNameCodePoints.StaffPosLower3,
        [GlyphName.StaffPosLower4] = GlyphNameCodePoints.StaffPosLower4,
        [GlyphName.StaffPosLower5] = GlyphNameCodePoints.StaffPosLower5,
        [GlyphName.StaffPosLower6] = GlyphNameCodePoints.StaffPosLower6,
        [GlyphName.StaffPosLower7] = GlyphNameCodePoints.StaffPosLower7,
        [GlyphName.StaffPosLower8] = GlyphNameCodePoints.StaffPosLower8,
        [GlyphName.StaffPosRaise1] = GlyphNameCodePoints.StaffPosRaise1,
        [GlyphName.StaffPosRaise2] = GlyphNameCodePoints.StaffPosRaise2,
        [GlyphName.StaffPosRaise3] = GlyphNameCodePoints.StaffPosRaise3,
        [GlyphName.StaffPosRaise4] = GlyphNameCodePoints.StaffPosRaise4,
        [GlyphName.StaffPosRaise5] = GlyphNameCodePoints.StaffPosRaise5,
        [GlyphName.StaffPosRaise6] = GlyphNameCodePoints.StaffPosRaise6,
        [GlyphName.StaffPosRaise7] = GlyphNameCodePoints.StaffPosRaise7,
        [GlyphName.StaffPosRaise8] = GlyphNameCodePoints.StaffPosRaise8,
        [GlyphName.Stem] = GlyphNameCodePoints.Stem,
        [GlyphName.StemBowOnBridge] = GlyphNameCodePoints.StemBowOnBridge,
        [GlyphName.StemBowOnTailpiece] = GlyphNameCodePoints.StemBowOnTailpiece,
        [GlyphName.StemBuzzRoll] = GlyphNameCodePoints.StemBuzzRoll,
        [GlyphName.StemDamp] = GlyphNameCodePoints.StemDamp,
        [GlyphName.StemHarpStringNoise] = GlyphNameCodePoints.StemHarpStringNoise,
        [GlyphName.StemMultiphonicsBlack] = GlyphNameCodePoints.StemMultiphonicsBlack,
        [GlyphName.StemMultiphonicsBlackWhite] = GlyphNameCodePoints.StemMultiphonicsBlackWhite,
        [GlyphName.StemMultiphonicsWhite] = GlyphNameCodePoints.StemMultiphonicsWhite,
        [GlyphName.StemPendereckiTremolo] = GlyphNameCodePoints.StemPendereckiTremolo,
        [GlyphName.StemRimShot] = GlyphNameCodePoints.StemRimShot,
        [GlyphName.StemSprechgesang] = GlyphNameCodePoints.StemSprechgesang,
        [GlyphName.StemSulPonticello] = GlyphNameCodePoints.StemSulPonticello,
        [GlyphName.StemSussurando] = GlyphNameCodePoints.StemSussurando,
        [GlyphName.StemSwished] = GlyphNameCodePoints.StemSwished,
        [GlyphName.StemVibratoPulse] = GlyphNameCodePoints.StemVibratoPulse,
        [GlyphName.StockhausenTremolo] = GlyphNameCodePoints.StockhausenTremolo,
        [GlyphName.StringsBowBehindBridge] = GlyphNameCodePoints.StringsBowBehindBridge,
        [GlyphName.StringsBowBehindBridgeFourStrings] = GlyphNameCodePoints.StringsBowBehindBridgeFourStrings,
        [GlyphName.StringsBowBehindBridgeOneString] = GlyphNameCodePoints.StringsBowBehindBridgeOneString,
        [GlyphName.StringsBowBehindBridgeThreeStrings] = GlyphNameCodePoints.StringsBowBehindBridgeThreeStrings,
        [GlyphName.StringsBowBehindBridgeTwoStrings] = GlyphNameCodePoints.StringsBowBehindBridgeTwoStrings,
        [GlyphName.StringsBowOnBridge] = GlyphNameCodePoints.StringsBowOnBridge,
        [GlyphName.StringsBowOnTailpiece] = GlyphNameCodePoints.StringsBowOnTailpiece,
        [GlyphName.StringsChangeBowDirection] = GlyphNameCodePoints.StringsChangeBowDirection,
        [GlyphName.StringsDownBow] = GlyphNameCodePoints.StringsDownBow,
        [GlyphName.StringsDownBowAwayFromBody] = GlyphNameCodePoints.StringsDownBowAwayFromBody,
        [GlyphName.StringsDownBowBeyondBridge] = GlyphNameCodePoints.StringsDownBowBeyondBridge,
        [GlyphName.StringsDownBowTowardsBody] = GlyphNameCodePoints.StringsDownBowTowardsBody,
        [GlyphName.StringsDownBowTurned] = GlyphNameCodePoints.StringsDownBowTurned,
        [GlyphName.StringsFouette] = GlyphNameCodePoints.StringsFouette,
        [GlyphName.StringsHalfHarmonic] = GlyphNameCodePoints.StringsHalfHarmonic,
        [GlyphName.StringsHarmonic] = GlyphNameCodePoints.StringsHarmonic,
        [GlyphName.StringsJeteAbove] = GlyphNameCodePoints.StringsJeteAbove,
        [GlyphName.StringsJeteBelow] = GlyphNameCodePoints.StringsJeteBelow,
        [GlyphName.StringsMuteOff] = GlyphNameCodePoints.StringsMuteOff,
        [GlyphName.StringsMuteOn] = GlyphNameCodePoints.StringsMuteOn,
        [GlyphName.StringsOverpressureDownBow] = GlyphNameCodePoints.StringsOverpressureDownBow,
        [GlyphName.StringsOverpressureNoDirection] = GlyphNameCodePoints.StringsOverpressureNoDirection,
        [GlyphName.StringsOverpressurePossibileDownBow] = GlyphNameCodePoints.StringsOverpressurePossibileDownBow,
        [GlyphName.StringsOverpressurePossibileUpBow] = GlyphNameCodePoints.StringsOverpressurePossibileUpBow,
        [GlyphName.StringsOverpressureUpBow] = GlyphNameCodePoints.StringsOverpressureUpBow,
        [GlyphName.StringsScrapeCircularClockwise] = GlyphNameCodePoints.StringsScrapeCircularClockwise,
        [GlyphName.StringsScrapeCircularCounterclockwise] = GlyphNameCodePoints.StringsScrapeCircularCounterclockwise,
        [GlyphName.StringsScrapeParallelInward] = GlyphNameCodePoints.StringsScrapeParallelInward,
        [GlyphName.StringsScrapeParallelOutward] = GlyphNameCodePoints.StringsScrapeParallelOutward,
        [GlyphName.StringsThumbPosition] = GlyphNameCodePoints.StringsThumbPosition,
        [GlyphName.StringsThumbPositionTurned] = GlyphNameCodePoints.StringsThumbPositionTurned,
        [GlyphName.StringsTripleChopInward] = GlyphNameCodePoints.StringsTripleChopInward,
        [GlyphName.StringsTripleChopOutward] = GlyphNameCodePoints.StringsTripleChopOutward,
        [GlyphName.StringsUpBow] = GlyphNameCodePoints.StringsUpBow,
        [GlyphName.StringsUpBowAwayFromBody] = GlyphNameCodePoints.StringsUpBowAwayFromBody,
        [GlyphName.StringsUpBowBeyondBridge] = GlyphNameCodePoints.StringsUpBowBeyondBridge,
        [GlyphName.StringsUpBowTowardsBody] = GlyphNameCodePoints.StringsUpBowTowardsBody,
        [GlyphName.StringsUpBowTurned] = GlyphNameCodePoints.StringsUpBowTurned,
        [GlyphName.StringsVibratoPulse] = GlyphNameCodePoints.StringsVibratoPulse,
        [GlyphName.SwissRudimentsNoteheadBlackDouble] = GlyphNameCodePoints.SwissRudimentsNoteheadBlackDouble,
        [GlyphName.SwissRudimentsNoteheadBlackFlam] = GlyphNameCodePoints.SwissRudimentsNoteheadBlackFlam,
        [GlyphName.SwissRudimentsNoteheadHalfDouble] = GlyphNameCodePoints.SwissRudimentsNoteheadHalfDouble,
        [GlyphName.SwissRudimentsNoteheadHalfFlam] = GlyphNameCodePoints.SwissRudimentsNoteheadHalfFlam,
        [GlyphName.SystemDivider] = GlyphNameCodePoints.SystemDivider,
        [GlyphName.SystemDividerExtraLong] = GlyphNameCodePoints.SystemDividerExtraLong,
        [GlyphName.SystemDividerLong] = GlyphNameCodePoints.SystemDividerLong,
        [GlyphName.TextAugmentationDot] = GlyphNameCodePoints.TextAugmentationDot,
        [GlyphName.TextBlackNoteFrac16thLongStem] = GlyphNameCodePoints.TextBlackNoteFrac16thLongStem,
        [GlyphName.TextBlackNoteFrac16thShortStem] = GlyphNameCodePoints.TextBlackNoteFrac16thShortStem,
        [GlyphName.TextBlackNoteFrac32ndLongStem] = GlyphNameCodePoints.TextBlackNoteFrac32ndLongStem,
        [GlyphName.TextBlackNoteFrac8thLongStem] = GlyphNameCodePoints.TextBlackNoteFrac8thLongStem,
        [GlyphName.TextBlackNoteFrac8thShortStem] = GlyphNameCodePoints.TextBlackNoteFrac8thShortStem,
        [GlyphName.TextBlackNoteLongStem] = GlyphNameCodePoints.TextBlackNoteLongStem,
        [GlyphName.TextBlackNoteShortStem] = GlyphNameCodePoints.TextBlackNoteShortStem,
        [GlyphName.TextCont16thBeamLongStem] = GlyphNameCodePoints.TextCont16thBeamLongStem,
        [GlyphName.TextCont16thBeamShortStem] = GlyphNameCodePoints.TextCont16thBeamShortStem,
        [GlyphName.TextCont32ndBeamLongStem] = GlyphNameCodePoints.TextCont32ndBeamLongStem,
        [GlyphName.TextCont8thBeamLongStem] = GlyphNameCodePoints.TextCont8thBeamLongStem,
        [GlyphName.TextCont8thBeamShortStem] = GlyphNameCodePoints.TextCont8thBeamShortStem,
        [GlyphName.TextHeadlessBlackNoteFrac16thLongStem] = GlyphNameCodePoints.TextHeadlessBlackNoteFrac16thLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac16thShortStem] = GlyphNameCodePoints.TextHeadlessBlackNoteFrac16thShortStem,
        [GlyphName.TextHeadlessBlackNoteFrac32ndLongStem] = GlyphNameCodePoints.TextHeadlessBlackNoteFrac32ndLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac8thLongStem] = GlyphNameCodePoints.TextHeadlessBlackNoteFrac8thLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac8thShortStem] = GlyphNameCodePoints.TextHeadlessBlackNoteFrac8thShortStem,
        [GlyphName.TextHeadlessBlackNoteLongStem] = GlyphNameCodePoints.TextHeadlessBlackNoteLongStem,
        [GlyphName.TextHeadlessBlackNoteShortStem] = GlyphNameCodePoints.TextHeadlessBlackNoteShortStem,
        [GlyphName.TextTie] = GlyphNameCodePoints.TextTie,
        [GlyphName.TextTuplet3LongStem] = GlyphNameCodePoints.TextTuplet3LongStem,
        [GlyphName.TextTuplet3ShortStem] = GlyphNameCodePoints.TextTuplet3ShortStem,
        [GlyphName.TextTupletBracketEndLongStem] = GlyphNameCodePoints.TextTupletBracketEndLongStem,
        [GlyphName.TextTupletBracketEndShortStem] = GlyphNameCodePoints.TextTupletBracketEndShortStem,
        [GlyphName.TextTupletBracketStartLongStem] = GlyphNameCodePoints.TextTupletBracketStartLongStem,
        [GlyphName.TextTupletBracketStartShortStem] = GlyphNameCodePoints.TextTupletBracketStartShortStem,
        [GlyphName.TimeSig0] = GlyphNameCodePoints.TimeSig0,
        [GlyphName.TimeSig0Reversed] = GlyphNameCodePoints.TimeSig0Reversed,
        [GlyphName.TimeSig0Turned] = GlyphNameCodePoints.TimeSig0Turned,
        [GlyphName.TimeSig1] = GlyphNameCodePoints.TimeSig1,
        [GlyphName.TimeSig1Reversed] = GlyphNameCodePoints.TimeSig1Reversed,
        [GlyphName.TimeSig1Turned] = GlyphNameCodePoints.TimeSig1Turned,
        [GlyphName.TimeSig2] = GlyphNameCodePoints.TimeSig2,
        [GlyphName.TimeSig2Reversed] = GlyphNameCodePoints.TimeSig2Reversed,
        [GlyphName.TimeSig2Turned] = GlyphNameCodePoints.TimeSig2Turned,
        [GlyphName.TimeSig3] = GlyphNameCodePoints.TimeSig3,
        [GlyphName.TimeSig3Reversed] = GlyphNameCodePoints.TimeSig3Reversed,
        [GlyphName.TimeSig3Turned] = GlyphNameCodePoints.TimeSig3Turned,
        [GlyphName.TimeSig4] = GlyphNameCodePoints.TimeSig4,
        [GlyphName.TimeSig4Reversed] = GlyphNameCodePoints.TimeSig4Reversed,
        [GlyphName.TimeSig4Turned] = GlyphNameCodePoints.TimeSig4Turned,
        [GlyphName.TimeSig5] = GlyphNameCodePoints.TimeSig5,
        [GlyphName.TimeSig5Reversed] = GlyphNameCodePoints.TimeSig5Reversed,
        [GlyphName.TimeSig5Turned] = GlyphNameCodePoints.TimeSig5Turned,
        [GlyphName.TimeSig6] = GlyphNameCodePoints.TimeSig6,
        [GlyphName.TimeSig6Reversed] = GlyphNameCodePoints.TimeSig6Reversed,
        [GlyphName.TimeSig6Turned] = GlyphNameCodePoints.TimeSig6Turned,
        [GlyphName.TimeSig7] = GlyphNameCodePoints.TimeSig7,
        [GlyphName.TimeSig7Reversed] = GlyphNameCodePoints.TimeSig7Reversed,
        [GlyphName.TimeSig7Turned] = GlyphNameCodePoints.TimeSig7Turned,
        [GlyphName.TimeSig8] = GlyphNameCodePoints.TimeSig8,
        [GlyphName.TimeSig8Reversed] = GlyphNameCodePoints.TimeSig8Reversed,
        [GlyphName.TimeSig8Turned] = GlyphNameCodePoints.TimeSig8Turned,
        [GlyphName.TimeSig9] = GlyphNameCodePoints.TimeSig9,
        [GlyphName.TimeSig9Reversed] = GlyphNameCodePoints.TimeSig9Reversed,
        [GlyphName.TimeSig9Turned] = GlyphNameCodePoints.TimeSig9Turned,
        [GlyphName.TimeSigBracketLeft] = GlyphNameCodePoints.TimeSigBracketLeft,
        [GlyphName.TimeSigBracketLeftSmall] = GlyphNameCodePoints.TimeSigBracketLeftSmall,
        [GlyphName.TimeSigBracketRight] = GlyphNameCodePoints.TimeSigBracketRight,
        [GlyphName.TimeSigBracketRightSmall] = GlyphNameCodePoints.TimeSigBracketRightSmall,
        [GlyphName.TimeSigCombDenominator] = GlyphNameCodePoints.TimeSigCombDenominator,
        [GlyphName.TimeSigCombNumerator] = GlyphNameCodePoints.TimeSigCombNumerator,
        [GlyphName.TimeSigComma] = GlyphNameCodePoints.TimeSigComma,
        [GlyphName.TimeSigCommon] = GlyphNameCodePoints.TimeSigCommon,
        [GlyphName.TimeSigCommonReversed] = GlyphNameCodePoints.TimeSigCommonReversed,
        [GlyphName.TimeSigCommonTurned] = GlyphNameCodePoints.TimeSigCommonTurned,
        [GlyphName.TimeSigCut2] = GlyphNameCodePoints.TimeSigCut2,
        [GlyphName.TimeSigCut3] = GlyphNameCodePoints.TimeSigCut3,
        [GlyphName.TimeSigCutCommon] = GlyphNameCodePoints.TimeSigCutCommon,
        [GlyphName.TimeSigCutCommonReversed] = GlyphNameCodePoints.TimeSigCutCommonReversed,
        [GlyphName.TimeSigCutCommonTurned] = GlyphNameCodePoints.TimeSigCutCommonTurned,
        [GlyphName.TimeSigEquals] = GlyphNameCodePoints.TimeSigEquals,
        [GlyphName.TimeSigFractionHalf] = GlyphNameCodePoints.TimeSigFractionHalf,
        [GlyphName.TimeSigFractionOneThird] = GlyphNameCodePoints.TimeSigFractionOneThird,
        [GlyphName.TimeSigFractionQuarter] = GlyphNameCodePoints.TimeSigFractionQuarter,
        [GlyphName.TimeSigFractionThreeQuarters] = GlyphNameCodePoints.TimeSigFractionThreeQuarters,
        [GlyphName.TimeSigFractionTwoThirds] = GlyphNameCodePoints.TimeSigFractionTwoThirds,
        [GlyphName.TimeSigFractionalSlash] = GlyphNameCodePoints.TimeSigFractionalSlash,
        [GlyphName.TimeSigMinus] = GlyphNameCodePoints.TimeSigMinus,
        [GlyphName.TimeSigMultiply] = GlyphNameCodePoints.TimeSigMultiply,
        [GlyphName.TimeSigOpenPenderecki] = GlyphNameCodePoints.TimeSigOpenPenderecki,
        [GlyphName.TimeSigParensLeft] = GlyphNameCodePoints.TimeSigParensLeft,
        [GlyphName.TimeSigParensLeftSmall] = GlyphNameCodePoints.TimeSigParensLeftSmall,
        [GlyphName.TimeSigParensRight] = GlyphNameCodePoints.TimeSigParensRight,
        [GlyphName.TimeSigParensRightSmall] = GlyphNameCodePoints.TimeSigParensRightSmall,
        [GlyphName.TimeSigPlus] = GlyphNameCodePoints.TimeSigPlus,
        [GlyphName.TimeSigPlusSmall] = GlyphNameCodePoints.TimeSigPlusSmall,
        [GlyphName.TimeSigSlash] = GlyphNameCodePoints.TimeSigSlash,
        [GlyphName.TimeSigX] = GlyphNameCodePoints.TimeSigX,
        [GlyphName.Tremolo1] = GlyphNameCodePoints.Tremolo1,
        [GlyphName.Tremolo2] = GlyphNameCodePoints.Tremolo2,
        [GlyphName.Tremolo3] = GlyphNameCodePoints.Tremolo3,
        [GlyphName.Tremolo4] = GlyphNameCodePoints.Tremolo4,
        [GlyphName.Tremolo5] = GlyphNameCodePoints.Tremolo5,
        [GlyphName.TremoloDivisiDots2] = GlyphNameCodePoints.TremoloDivisiDots2,
        [GlyphName.TremoloDivisiDots3] = GlyphNameCodePoints.TremoloDivisiDots3,
        [GlyphName.TremoloDivisiDots4] = GlyphNameCodePoints.TremoloDivisiDots4,
        [GlyphName.TremoloDivisiDots6] = GlyphNameCodePoints.TremoloDivisiDots6,
        [GlyphName.TremoloFingered1] = GlyphNameCodePoints.TremoloFingered1,
        [GlyphName.TremoloFingered2] = GlyphNameCodePoints.TremoloFingered2,
        [GlyphName.TremoloFingered3] = GlyphNameCodePoints.TremoloFingered3,
        [GlyphName.TremoloFingered4] = GlyphNameCodePoints.TremoloFingered4,
        [GlyphName.TremoloFingered5] = GlyphNameCodePoints.TremoloFingered5,
        [GlyphName.TripleTongueAbove] = GlyphNameCodePoints.TripleTongueAbove,
        [GlyphName.TripleTongueBelow] = GlyphNameCodePoints.TripleTongueBelow,
        [GlyphName.Tuplet0] = GlyphNameCodePoints.Tuplet0,
        [GlyphName.Tuplet1] = GlyphNameCodePoints.Tuplet1,
        [GlyphName.Tuplet2] = GlyphNameCodePoints.Tuplet2,
        [GlyphName.Tuplet3] = GlyphNameCodePoints.Tuplet3,
        [GlyphName.Tuplet4] = GlyphNameCodePoints.Tuplet4,
        [GlyphName.Tuplet5] = GlyphNameCodePoints.Tuplet5,
        [GlyphName.Tuplet6] = GlyphNameCodePoints.Tuplet6,
        [GlyphName.Tuplet7] = GlyphNameCodePoints.Tuplet7,
        [GlyphName.Tuplet8] = GlyphNameCodePoints.Tuplet8,
        [GlyphName.Tuplet9] = GlyphNameCodePoints.Tuplet9,
        [GlyphName.TupletColon] = GlyphNameCodePoints.TupletColon,
        [GlyphName.UnmeasuredTremolo] = GlyphNameCodePoints.UnmeasuredTremolo,
        [GlyphName.UnmeasuredTremoloSimple] = GlyphNameCodePoints.UnmeasuredTremoloSimple,
        [GlyphName.UnpitchedPercussionClef1] = GlyphNameCodePoints.UnpitchedPercussionClef1,
        [GlyphName.UnpitchedPercussionClef2] = GlyphNameCodePoints.UnpitchedPercussionClef2,
        [GlyphName.Ventiduesima] = GlyphNameCodePoints.Ventiduesima,
        [GlyphName.VentiduesimaAlta] = GlyphNameCodePoints.VentiduesimaAlta,
        [GlyphName.VentiduesimaBassa] = GlyphNameCodePoints.VentiduesimaBassa,
        [GlyphName.VentiduesimaBassaMb] = GlyphNameCodePoints.VentiduesimaBassaMb,
        [GlyphName.VocalFingerClickStockhausen] = GlyphNameCodePoints.VocalFingerClickStockhausen,
        [GlyphName.VocalHalbGesungen] = GlyphNameCodePoints.VocalHalbGesungen,
        [GlyphName.VocalMouthClosed] = GlyphNameCodePoints.VocalMouthClosed,
        [GlyphName.VocalMouthOpen] = GlyphNameCodePoints.VocalMouthOpen,
        [GlyphName.VocalMouthPursed] = GlyphNameCodePoints.VocalMouthPursed,
        [GlyphName.VocalMouthSlightlyOpen] = GlyphNameCodePoints.VocalMouthSlightlyOpen,
        [GlyphName.VocalMouthWideOpen] = GlyphNameCodePoints.VocalMouthWideOpen,
        [GlyphName.VocalNasalVoice] = GlyphNameCodePoints.VocalNasalVoice,
        [GlyphName.VocalSprechgesang] = GlyphNameCodePoints.VocalSprechgesang,
        [GlyphName.VocalTongueClickStockhausen] = GlyphNameCodePoints.VocalTongueClickStockhausen,
        [GlyphName.VocalTongueFingerClickStockhausen] = GlyphNameCodePoints.VocalTongueFingerClickStockhausen,
        [GlyphName.VocalsSussurando] = GlyphNameCodePoints.VocalsSussurando,
        [GlyphName.WiggleArpeggiatoDown] = GlyphNameCodePoints.WiggleArpeggiatoDown,
        [GlyphName.WiggleArpeggiatoDownArrow] = GlyphNameCodePoints.WiggleArpeggiatoDownArrow,
        [GlyphName.WiggleArpeggiatoDownSwash] = GlyphNameCodePoints.WiggleArpeggiatoDownSwash,
        [GlyphName.WiggleArpeggiatoUp] = GlyphNameCodePoints.WiggleArpeggiatoUp,
        [GlyphName.WiggleArpeggiatoUpArrow] = GlyphNameCodePoints.WiggleArpeggiatoUpArrow,
        [GlyphName.WiggleArpeggiatoUpSwash] = GlyphNameCodePoints.WiggleArpeggiatoUpSwash,
        [GlyphName.WiggleCircular] = GlyphNameCodePoints.WiggleCircular,
        [GlyphName.WiggleCircularConstant] = GlyphNameCodePoints.WiggleCircularConstant,
        [GlyphName.WiggleCircularConstantFlipped] = GlyphNameCodePoints.WiggleCircularConstantFlipped,
        [GlyphName.WiggleCircularConstantFlippedLarge] = GlyphNameCodePoints.WiggleCircularConstantFlippedLarge,
        [GlyphName.WiggleCircularConstantLarge] = GlyphNameCodePoints.WiggleCircularConstantLarge,
        [GlyphName.WiggleCircularEnd] = GlyphNameCodePoints.WiggleCircularEnd,
        [GlyphName.WiggleCircularLarge] = GlyphNameCodePoints.WiggleCircularLarge,
        [GlyphName.WiggleCircularLarger] = GlyphNameCodePoints.WiggleCircularLarger,
        [GlyphName.WiggleCircularLargerStill] = GlyphNameCodePoints.WiggleCircularLargerStill,
        [GlyphName.WiggleCircularLargest] = GlyphNameCodePoints.WiggleCircularLargest,
        [GlyphName.WiggleCircularSmall] = GlyphNameCodePoints.WiggleCircularSmall,
        [GlyphName.WiggleCircularStart] = GlyphNameCodePoints.WiggleCircularStart,
        [GlyphName.WiggleGlissando] = GlyphNameCodePoints.WiggleGlissando,
        [GlyphName.WiggleGlissandoGroup1] = GlyphNameCodePoints.WiggleGlissandoGroup1,
        [GlyphName.WiggleGlissandoGroup2] = GlyphNameCodePoints.WiggleGlissandoGroup2,
        [GlyphName.WiggleGlissandoGroup3] = GlyphNameCodePoints.WiggleGlissandoGroup3,
        [GlyphName.WiggleRandom1] = GlyphNameCodePoints.WiggleRandom1,
        [GlyphName.WiggleRandom2] = GlyphNameCodePoints.WiggleRandom2,
        [GlyphName.WiggleRandom3] = GlyphNameCodePoints.WiggleRandom3,
        [GlyphName.WiggleRandom4] = GlyphNameCodePoints.WiggleRandom4,
        [GlyphName.WiggleSawtooth] = GlyphNameCodePoints.WiggleSawtooth,
        [GlyphName.WiggleSawtoothNarrow] = GlyphNameCodePoints.WiggleSawtoothNarrow,
        [GlyphName.WiggleSawtoothWide] = GlyphNameCodePoints.WiggleSawtoothWide,
        [GlyphName.WiggleSquareWave] = GlyphNameCodePoints.WiggleSquareWave,
        [GlyphName.WiggleSquareWaveNarrow] = GlyphNameCodePoints.WiggleSquareWaveNarrow,
        [GlyphName.WiggleSquareWaveWide] = GlyphNameCodePoints.WiggleSquareWaveWide,
        [GlyphName.WiggleTrill] = GlyphNameCodePoints.WiggleTrill,
        [GlyphName.WiggleTrillFast] = GlyphNameCodePoints.WiggleTrillFast,
        [GlyphName.WiggleTrillFaster] = GlyphNameCodePoints.WiggleTrillFaster,
        [GlyphName.WiggleTrillFasterStill] = GlyphNameCodePoints.WiggleTrillFasterStill,
        [GlyphName.WiggleTrillFastest] = GlyphNameCodePoints.WiggleTrillFastest,
        [GlyphName.WiggleTrillSlow] = GlyphNameCodePoints.WiggleTrillSlow,
        [GlyphName.WiggleTrillSlower] = GlyphNameCodePoints.WiggleTrillSlower,
        [GlyphName.WiggleTrillSlowerStill] = GlyphNameCodePoints.WiggleTrillSlowerStill,
        [GlyphName.WiggleTrillSlowest] = GlyphNameCodePoints.WiggleTrillSlowest,
        [GlyphName.WiggleVIbratoLargestSlower] = GlyphNameCodePoints.WiggleVIbratoLargestSlower,
        [GlyphName.WiggleVIbratoMediumSlower] = GlyphNameCodePoints.WiggleVIbratoMediumSlower,
        [GlyphName.WiggleVibrato] = GlyphNameCodePoints.WiggleVibrato,
        [GlyphName.WiggleVibratoLargeFast] = GlyphNameCodePoints.WiggleVibratoLargeFast,
        [GlyphName.WiggleVibratoLargeFaster] = GlyphNameCodePoints.WiggleVibratoLargeFaster,
        [GlyphName.WiggleVibratoLargeFasterStill] = GlyphNameCodePoints.WiggleVibratoLargeFasterStill,
        [GlyphName.WiggleVibratoLargeFastest] = GlyphNameCodePoints.WiggleVibratoLargeFastest,
        [GlyphName.WiggleVibratoLargeSlow] = GlyphNameCodePoints.WiggleVibratoLargeSlow,
        [GlyphName.WiggleVibratoLargeSlower] = GlyphNameCodePoints.WiggleVibratoLargeSlower,
        [GlyphName.WiggleVibratoLargeSlowest] = GlyphNameCodePoints.WiggleVibratoLargeSlowest,
        [GlyphName.WiggleVibratoLargestFast] = GlyphNameCodePoints.WiggleVibratoLargestFast,
        [GlyphName.WiggleVibratoLargestFaster] = GlyphNameCodePoints.WiggleVibratoLargestFaster,
        [GlyphName.WiggleVibratoLargestFasterStill] = GlyphNameCodePoints.WiggleVibratoLargestFasterStill,
        [GlyphName.WiggleVibratoLargestFastest] = GlyphNameCodePoints.WiggleVibratoLargestFastest,
        [GlyphName.WiggleVibratoLargestSlow] = GlyphNameCodePoints.WiggleVibratoLargestSlow,
        [GlyphName.WiggleVibratoLargestSlowest] = GlyphNameCodePoints.WiggleVibratoLargestSlowest,
        [GlyphName.WiggleVibratoMediumFast] = GlyphNameCodePoints.WiggleVibratoMediumFast,
        [GlyphName.WiggleVibratoMediumFaster] = GlyphNameCodePoints.WiggleVibratoMediumFaster,
        [GlyphName.WiggleVibratoMediumFasterStill] = GlyphNameCodePoints.WiggleVibratoMediumFasterStill,
        [GlyphName.WiggleVibratoMediumFastest] = GlyphNameCodePoints.WiggleVibratoMediumFastest,
        [GlyphName.WiggleVibratoMediumSlow] = GlyphNameCodePoints.WiggleVibratoMediumSlow,
        [GlyphName.WiggleVibratoMediumSlowest] = GlyphNameCodePoints.WiggleVibratoMediumSlowest,
        [GlyphName.WiggleVibratoSmallFast] = GlyphNameCodePoints.WiggleVibratoSmallFast,
        [GlyphName.WiggleVibratoSmallFaster] = GlyphNameCodePoints.WiggleVibratoSmallFaster,
        [GlyphName.WiggleVibratoSmallFasterStill] = GlyphNameCodePoints.WiggleVibratoSmallFasterStill,
        [GlyphName.WiggleVibratoSmallFastest] = GlyphNameCodePoints.WiggleVibratoSmallFastest,
        [GlyphName.WiggleVibratoSmallSlow] = GlyphNameCodePoints.WiggleVibratoSmallSlow,
        [GlyphName.WiggleVibratoSmallSlower] = GlyphNameCodePoints.WiggleVibratoSmallSlower,
        [GlyphName.WiggleVibratoSmallSlowest] = GlyphNameCodePoints.WiggleVibratoSmallSlowest,
        [GlyphName.WiggleVibratoSmallestFast] = GlyphNameCodePoints.WiggleVibratoSmallestFast,
        [GlyphName.WiggleVibratoSmallestFaster] = GlyphNameCodePoints.WiggleVibratoSmallestFaster,
        [GlyphName.WiggleVibratoSmallestFasterStill] = GlyphNameCodePoints.WiggleVibratoSmallestFasterStill,
        [GlyphName.WiggleVibratoSmallestFastest] = GlyphNameCodePoints.WiggleVibratoSmallestFastest,
        [GlyphName.WiggleVibratoSmallestSlow] = GlyphNameCodePoints.WiggleVibratoSmallestSlow,
        [GlyphName.WiggleVibratoSmallestSlower] = GlyphNameCodePoints.WiggleVibratoSmallestSlower,
        [GlyphName.WiggleVibratoSmallestSlowest] = GlyphNameCodePoints.WiggleVibratoSmallestSlowest,
        [GlyphName.WiggleVibratoStart] = GlyphNameCodePoints.WiggleVibratoStart,
        [GlyphName.WiggleVibratoWide] = GlyphNameCodePoints.WiggleVibratoWide,
        [GlyphName.WiggleWavy] = GlyphNameCodePoints.WiggleWavy,
        [GlyphName.WiggleWavyNarrow] = GlyphNameCodePoints.WiggleWavyNarrow,
        [GlyphName.WiggleWavyWide] = GlyphNameCodePoints.WiggleWavyWide,
        [GlyphName.WindClosedHole] = GlyphNameCodePoints.WindClosedHole,
        [GlyphName.WindFlatEmbouchure] = GlyphNameCodePoints.WindFlatEmbouchure,
        [GlyphName.WindHalfClosedHole1] = GlyphNameCodePoints.WindHalfClosedHole1,
        [GlyphName.WindHalfClosedHole2] = GlyphNameCodePoints.WindHalfClosedHole2,
        [GlyphName.WindHalfClosedHole3] = GlyphNameCodePoints.WindHalfClosedHole3,
        [GlyphName.WindLessRelaxedEmbouchure] = GlyphNameCodePoints.WindLessRelaxedEmbouchure,
        [GlyphName.WindLessTightEmbouchure] = GlyphNameCodePoints.WindLessTightEmbouchure,
        [GlyphName.WindMouthpiecePop] = GlyphNameCodePoints.WindMouthpiecePop,
        [GlyphName.WindMultiphonicsBlackStem] = GlyphNameCodePoints.WindMultiphonicsBlackStem,
        [GlyphName.WindMultiphonicsBlackWhiteStem] = GlyphNameCodePoints.WindMultiphonicsBlackWhiteStem,
        [GlyphName.WindMultiphonicsWhiteStem] = GlyphNameCodePoints.WindMultiphonicsWhiteStem,
        [GlyphName.WindOpenHole] = GlyphNameCodePoints.WindOpenHole,
        [GlyphName.WindReedPositionIn] = GlyphNameCodePoints.WindReedPositionIn,
        [GlyphName.WindReedPositionNormal] = GlyphNameCodePoints.WindReedPositionNormal,
        [GlyphName.WindReedPositionOut] = GlyphNameCodePoints.WindReedPositionOut,
        [GlyphName.WindRelaxedEmbouchure] = GlyphNameCodePoints.WindRelaxedEmbouchure,
        [GlyphName.WindRimOnly] = GlyphNameCodePoints.WindRimOnly,
        [GlyphName.WindSharpEmbouchure] = GlyphNameCodePoints.WindSharpEmbouchure,
        [GlyphName.WindStrongAirPressure] = GlyphNameCodePoints.WindStrongAirPressure,
        [GlyphName.WindThreeQuartersClosedHole] = GlyphNameCodePoints.WindThreeQuartersClosedHole,
        [GlyphName.WindTightEmbouchure] = GlyphNameCodePoints.WindTightEmbouchure,
        [GlyphName.WindTrillKey] = GlyphNameCodePoints.WindTrillKey,
        [GlyphName.WindVeryTightEmbouchure] = GlyphNameCodePoints.WindVeryTightEmbouchure,
        [GlyphName.WindWeakAirPressure] = GlyphNameCodePoints.WindWeakAirPressure,
    };

    /// <summary>
    /// Maps glyph name enums to their corresponding alternate code points.
    /// </summary>
    public static IReadOnlyDictionary<GlyphName, int> GlyphName2AlternateCodePointMap { get; } = new Dictionary<GlyphName, int> {
        [GlyphName.AccidentalDoubleFlat] = GlyphNameAlternateCodePoints.AccidentalDoubleFlat,
        [GlyphName.AccidentalDoubleSharp] = GlyphNameAlternateCodePoints.AccidentalDoubleSharp,
        [GlyphName.AccidentalFlat] = GlyphNameAlternateCodePoints.AccidentalFlat,
        [GlyphName.AccidentalNatural] = GlyphNameAlternateCodePoints.AccidentalNatural,
        [GlyphName.AccidentalQuarterToneFlat4] = GlyphNameAlternateCodePoints.AccidentalQuarterToneFlat4,
        [GlyphName.AccidentalQuarterToneFlatArrowUp] = GlyphNameAlternateCodePoints.AccidentalQuarterToneFlatArrowUp,
        [GlyphName.AccidentalQuarterToneFlatNaturalArrowDown] = GlyphNameAlternateCodePoints.AccidentalQuarterToneFlatNaturalArrowDown,
        [GlyphName.AccidentalQuarterToneSharp4] = GlyphNameAlternateCodePoints.AccidentalQuarterToneSharp4,
        [GlyphName.AccidentalQuarterToneSharpArrowDown] = GlyphNameAlternateCodePoints.AccidentalQuarterToneSharpArrowDown,
        [GlyphName.AccidentalQuarterToneSharpNaturalArrowUp] = GlyphNameAlternateCodePoints.AccidentalQuarterToneSharpNaturalArrowUp,
        [GlyphName.AccidentalSharp] = GlyphNameAlternateCodePoints.AccidentalSharp,
        [GlyphName.AccidentalThreeQuarterTonesFlatArrowDown] = GlyphNameAlternateCodePoints.AccidentalThreeQuarterTonesFlatArrowDown,
        [GlyphName.AccidentalThreeQuarterTonesSharpArrowUp] = GlyphNameAlternateCodePoints.AccidentalThreeQuarterTonesSharpArrowUp,
        [GlyphName.AnalyticsEndStimme] = GlyphNameAlternateCodePoints.AnalyticsEndStimme,
        [GlyphName.AnalyticsHauptstimme] = GlyphNameAlternateCodePoints.AnalyticsHauptstimme,
        [GlyphName.AnalyticsNebenstimme] = GlyphNameAlternateCodePoints.AnalyticsNebenstimme,
        [GlyphName.ArpeggiatoDown] = GlyphNameAlternateCodePoints.ArpeggiatoDown,
        [GlyphName.ArpeggiatoUp] = GlyphNameAlternateCodePoints.ArpeggiatoUp,
        [GlyphName.ArticAccentAbove] = GlyphNameAlternateCodePoints.ArticAccentAbove,
        [GlyphName.ArticAccentStaccatoAbove] = GlyphNameAlternateCodePoints.ArticAccentStaccatoAbove,
        [GlyphName.ArticMarcatoAbove] = GlyphNameAlternateCodePoints.ArticMarcatoAbove,
        [GlyphName.ArticMarcatoStaccatoAbove] = GlyphNameAlternateCodePoints.ArticMarcatoStaccatoAbove,
        [GlyphName.ArticStaccatissimoAbove] = GlyphNameAlternateCodePoints.ArticStaccatissimoAbove,
        [GlyphName.ArticStaccatoAbove] = GlyphNameAlternateCodePoints.ArticStaccatoAbove,
        [GlyphName.ArticTenutoAbove] = GlyphNameAlternateCodePoints.ArticTenutoAbove,
        [GlyphName.ArticTenutoStaccatoAbove] = GlyphNameAlternateCodePoints.ArticTenutoStaccatoAbove,
        [GlyphName.AugmentationDot] = GlyphNameAlternateCodePoints.AugmentationDot,
        [GlyphName.BarlineDashed] = GlyphNameAlternateCodePoints.BarlineDashed,
        [GlyphName.BarlineDouble] = GlyphNameAlternateCodePoints.BarlineDouble,
        [GlyphName.BarlineFinal] = GlyphNameAlternateCodePoints.BarlineFinal,
        [GlyphName.BarlineReverseFinal] = GlyphNameAlternateCodePoints.BarlineReverseFinal,
        [GlyphName.BarlineShort] = GlyphNameAlternateCodePoints.BarlineShort,
        [GlyphName.BarlineSingle] = GlyphNameAlternateCodePoints.BarlineSingle,
        [GlyphName.Brace] = GlyphNameAlternateCodePoints.Brace,
        [GlyphName.Bracket] = GlyphNameAlternateCodePoints.Bracket,
        [GlyphName.BrassBend] = GlyphNameAlternateCodePoints.BrassBend,
        [GlyphName.BrassDoitShort] = GlyphNameAlternateCodePoints.BrassDoitShort,
        [GlyphName.BrassFallLipShort] = GlyphNameAlternateCodePoints.BrassFallLipShort,
        [GlyphName.BrassFlip] = GlyphNameAlternateCodePoints.BrassFlip,
        [GlyphName.BrassSmear] = GlyphNameAlternateCodePoints.BrassSmear,
        [GlyphName.BreathMarkComma] = GlyphNameAlternateCodePoints.BreathMarkComma,
        [GlyphName.CClef] = GlyphNameAlternateCodePoints.CClef,
        [GlyphName.Caesura] = GlyphNameAlternateCodePoints.Caesura,
        [GlyphName.ChantCclef] = GlyphNameAlternateCodePoints.ChantCclef,
        [GlyphName.ChantFclef] = GlyphNameAlternateCodePoints.ChantFclef,
        [GlyphName.ChantPodatusUpper] = GlyphNameAlternateCodePoints.ChantPodatusUpper,
        [GlyphName.ChantPunctumVirga] = GlyphNameAlternateCodePoints.ChantPunctumVirga,
        [GlyphName.Coda] = GlyphNameAlternateCodePoints.Coda,
        [GlyphName.ControlBeginBeam] = GlyphNameAlternateCodePoints.ControlBeginBeam,
        [GlyphName.ControlBeginPhrase] = GlyphNameAlternateCodePoints.ControlBeginPhrase,
        [GlyphName.ControlBeginSlur] = GlyphNameAlternateCodePoints.ControlBeginSlur,
        [GlyphName.ControlBeginTie] = GlyphNameAlternateCodePoints.ControlBeginTie,
        [GlyphName.ControlEndBeam] = GlyphNameAlternateCodePoints.ControlEndBeam,
        [GlyphName.ControlEndPhrase] = GlyphNameAlternateCodePoints.ControlEndPhrase,
        [GlyphName.ControlEndSlur] = GlyphNameAlternateCodePoints.ControlEndSlur,
        [GlyphName.ControlEndTie] = GlyphNameAlternateCodePoints.ControlEndTie,
        [GlyphName.CsymDiminished] = GlyphNameAlternateCodePoints.CsymDiminished,
        [GlyphName.DaCapo] = GlyphNameAlternateCodePoints.DaCapo,
        [GlyphName.DalSegno] = GlyphNameAlternateCodePoints.DalSegno,
        [GlyphName.DoubleTongueAbove] = GlyphNameAlternateCodePoints.DoubleTongueAbove,
        [GlyphName.DynamicCrescendoHairpin] = GlyphNameAlternateCodePoints.DynamicCrescendoHairpin,
        [GlyphName.DynamicDiminuendoHairpin] = GlyphNameAlternateCodePoints.DynamicDiminuendoHairpin,
        [GlyphName.DynamicForte] = GlyphNameAlternateCodePoints.DynamicForte,
        [GlyphName.DynamicMezzo] = GlyphNameAlternateCodePoints.DynamicMezzo,
        [GlyphName.DynamicPiano] = GlyphNameAlternateCodePoints.DynamicPiano,
        [GlyphName.DynamicRinforzando] = GlyphNameAlternateCodePoints.DynamicRinforzando,
        [GlyphName.DynamicSforzando] = GlyphNameAlternateCodePoints.DynamicSforzando,
        [GlyphName.DynamicZ] = GlyphNameAlternateCodePoints.DynamicZ,
        [GlyphName.FClef] = GlyphNameAlternateCodePoints.FClef,
        [GlyphName.FClef8va] = GlyphNameAlternateCodePoints.FClef8va,
        [GlyphName.FClef8vb] = GlyphNameAlternateCodePoints.FClef8vb,
        [GlyphName.FermataAbove] = GlyphNameAlternateCodePoints.FermataAbove,
        [GlyphName.FermataBelow] = GlyphNameAlternateCodePoints.FermataBelow,
        [GlyphName.Flag128thUp] = GlyphNameAlternateCodePoints.Flag128thUp,
        [GlyphName.Flag16thUp] = GlyphNameAlternateCodePoints.Flag16thUp,
        [GlyphName.Flag32ndUp] = GlyphNameAlternateCodePoints.Flag32ndUp,
        [GlyphName.Flag64thUp] = GlyphNameAlternateCodePoints.Flag64thUp,
        [GlyphName.Flag8thUp] = GlyphNameAlternateCodePoints.Flag8thUp,
        [GlyphName.Fretboard4String] = GlyphNameAlternateCodePoints.Fretboard4String,
        [GlyphName.Fretboard6String] = GlyphNameAlternateCodePoints.Fretboard6String,
        [GlyphName.GClef] = GlyphNameAlternateCodePoints.GClef,
        [GlyphName.GClef8va] = GlyphNameAlternateCodePoints.GClef8va,
        [GlyphName.GClef8vb] = GlyphNameAlternateCodePoints.GClef8vb,
        [GlyphName.GlissandoDown] = GlyphNameAlternateCodePoints.GlissandoDown,
        [GlyphName.GlissandoUp] = GlyphNameAlternateCodePoints.GlissandoUp,
        [GlyphName.GraceNoteAcciaccaturaStemUp] = GlyphNameAlternateCodePoints.GraceNoteAcciaccaturaStemUp,
        [GlyphName.GraceNoteAppoggiaturaStemUp] = GlyphNameAlternateCodePoints.GraceNoteAppoggiaturaStemUp,
        [GlyphName.KeyboardPedalHalf] = GlyphNameAlternateCodePoints.KeyboardPedalHalf,
        [GlyphName.KeyboardPedalPed] = GlyphNameAlternateCodePoints.KeyboardPedalPed,
        [GlyphName.KeyboardPedalUp] = GlyphNameAlternateCodePoints.KeyboardPedalUp,
        [GlyphName.KievanAccidentalFlat] = GlyphNameAlternateCodePoints.KievanAccidentalFlat,
        [GlyphName.KievanCClef] = GlyphNameAlternateCodePoints.KievanCClef,
        [GlyphName.KievanEndingSymbol] = GlyphNameAlternateCodePoints.KievanEndingSymbol,
        [GlyphName.KievanNote8thStemDown] = GlyphNameAlternateCodePoints.KievanNote8thStemDown,
        [GlyphName.KievanNote8thStemUp] = GlyphNameAlternateCodePoints.KievanNote8thStemUp,
        [GlyphName.KievanNoteHalfStaffLine] = GlyphNameAlternateCodePoints.KievanNoteHalfStaffLine,
        [GlyphName.KievanNoteQuarterStemDown] = GlyphNameAlternateCodePoints.KievanNoteQuarterStemDown,
        [GlyphName.KievanNoteQuarterStemUp] = GlyphNameAlternateCodePoints.KievanNoteQuarterStemUp,
        [GlyphName.KievanNoteReciting] = GlyphNameAlternateCodePoints.KievanNoteReciting,
        [GlyphName.KievanNoteWhole] = GlyphNameAlternateCodePoints.KievanNoteWhole,
        [GlyphName.KievanNoteWholeFinal] = GlyphNameAlternateCodePoints.KievanNoteWholeFinal,
        [GlyphName.MedRenFlatSoftB] = GlyphNameAlternateCodePoints.MedRenFlatSoftB,
        [GlyphName.MedRenSharpCroix] = GlyphNameAlternateCodePoints.MedRenSharpCroix,
        [GlyphName.MensuralBlackMinima] = GlyphNameAlternateCodePoints.MensuralBlackMinima,
        [GlyphName.MensuralBlackMinimaVoid] = GlyphNameAlternateCodePoints.MensuralBlackMinimaVoid,
        [GlyphName.MensuralBlackSemibrevis] = GlyphNameAlternateCodePoints.MensuralBlackSemibrevis,
        [GlyphName.MensuralBlackSemibrevisVoid] = GlyphNameAlternateCodePoints.MensuralBlackSemibrevisVoid,
        [GlyphName.MensuralProlation1] = GlyphNameAlternateCodePoints.MensuralProlation1,
        [GlyphName.MensuralProlation10] = GlyphNameAlternateCodePoints.MensuralProlation10,
        [GlyphName.MensuralProlation2] = GlyphNameAlternateCodePoints.MensuralProlation2,
        [GlyphName.MensuralProlation3] = GlyphNameAlternateCodePoints.MensuralProlation3,
        [GlyphName.MensuralProlation5] = GlyphNameAlternateCodePoints.MensuralProlation5,
        [GlyphName.MensuralProlation6] = GlyphNameAlternateCodePoints.MensuralProlation6,
        [GlyphName.MensuralProlation7] = GlyphNameAlternateCodePoints.MensuralProlation7,
        [GlyphName.MensuralProlation9] = GlyphNameAlternateCodePoints.MensuralProlation9,
        [GlyphName.MensuralRestBrevis] = GlyphNameAlternateCodePoints.MensuralRestBrevis,
        [GlyphName.MensuralRestLongaImperfecta] = GlyphNameAlternateCodePoints.MensuralRestLongaImperfecta,
        [GlyphName.MensuralRestLongaPerfecta] = GlyphNameAlternateCodePoints.MensuralRestLongaPerfecta,
        [GlyphName.MensuralRestMinima] = GlyphNameAlternateCodePoints.MensuralRestMinima,
        [GlyphName.MensuralRestSemibrevis] = GlyphNameAlternateCodePoints.MensuralRestSemibrevis,
        [GlyphName.MensuralRestSemiminima] = GlyphNameAlternateCodePoints.MensuralRestSemiminima,
        [GlyphName.MensuralWhiteBrevis] = GlyphNameAlternateCodePoints.MensuralWhiteBrevis,
        [GlyphName.MensuralWhiteFusa] = GlyphNameAlternateCodePoints.MensuralWhiteFusa,
        [GlyphName.MensuralWhiteLonga] = GlyphNameAlternateCodePoints.MensuralWhiteLonga,
        [GlyphName.MensuralWhiteMaxima] = GlyphNameAlternateCodePoints.MensuralWhiteMaxima,
        [GlyphName.MensuralWhiteSemibrevis] = GlyphNameAlternateCodePoints.MensuralWhiteSemibrevis,
        [GlyphName.Note128thUp] = GlyphNameAlternateCodePoints.Note128thUp,
        [GlyphName.Note16thUp] = GlyphNameAlternateCodePoints.Note16thUp,
        [GlyphName.Note32ndUp] = GlyphNameAlternateCodePoints.Note32ndUp,
        [GlyphName.Note64thUp] = GlyphNameAlternateCodePoints.Note64thUp,
        [GlyphName.Note8thUp] = GlyphNameAlternateCodePoints.Note8thUp,
        [GlyphName.NoteDoubleWhole] = GlyphNameAlternateCodePoints.NoteDoubleWhole,
        [GlyphName.NoteHalfUp] = GlyphNameAlternateCodePoints.NoteHalfUp,
        [GlyphName.NoteQuarterUp] = GlyphNameAlternateCodePoints.NoteQuarterUp,
        [GlyphName.NoteWhole] = GlyphNameAlternateCodePoints.NoteWhole,
        [GlyphName.NoteheadBlack] = GlyphNameAlternateCodePoints.NoteheadBlack,
        [GlyphName.NoteheadCircleX] = GlyphNameAlternateCodePoints.NoteheadCircleX,
        [GlyphName.NoteheadClusterSquareBlack] = GlyphNameAlternateCodePoints.NoteheadClusterSquareBlack,
        [GlyphName.NoteheadClusterSquareWhite] = GlyphNameAlternateCodePoints.NoteheadClusterSquareWhite,
        [GlyphName.NoteheadHalf] = GlyphNameAlternateCodePoints.NoteheadHalf,
        [GlyphName.NoteheadMoonBlack] = GlyphNameAlternateCodePoints.NoteheadMoonBlack,
        [GlyphName.NoteheadMoonWhite] = GlyphNameAlternateCodePoints.NoteheadMoonWhite,
        [GlyphName.NoteheadNull] = GlyphNameAlternateCodePoints.NoteheadNull,
        [GlyphName.NoteheadParenthesis] = GlyphNameAlternateCodePoints.NoteheadParenthesis,
        [GlyphName.NoteheadPlusBlack] = GlyphNameAlternateCodePoints.NoteheadPlusBlack,
        [GlyphName.NoteheadSlashHorizontalEnds] = GlyphNameAlternateCodePoints.NoteheadSlashHorizontalEnds,
        [GlyphName.NoteheadSquareBlack] = GlyphNameAlternateCodePoints.NoteheadSquareBlack,
        [GlyphName.NoteheadSquareWhite] = GlyphNameAlternateCodePoints.NoteheadSquareWhite,
        [GlyphName.NoteheadTriangleDownBlack] = GlyphNameAlternateCodePoints.NoteheadTriangleDownBlack,
        [GlyphName.NoteheadTriangleDownWhite] = GlyphNameAlternateCodePoints.NoteheadTriangleDownWhite,
        [GlyphName.NoteheadTriangleLeftBlack] = GlyphNameAlternateCodePoints.NoteheadTriangleLeftBlack,
        [GlyphName.NoteheadTriangleLeftWhite] = GlyphNameAlternateCodePoints.NoteheadTriangleLeftWhite,
        [GlyphName.NoteheadTriangleRightBlack] = GlyphNameAlternateCodePoints.NoteheadTriangleRightBlack,
        [GlyphName.NoteheadTriangleRightWhite] = GlyphNameAlternateCodePoints.NoteheadTriangleRightWhite,
        [GlyphName.NoteheadTriangleRoundDownBlack] = GlyphNameAlternateCodePoints.NoteheadTriangleRoundDownBlack,
        [GlyphName.NoteheadTriangleRoundDownWhite] = GlyphNameAlternateCodePoints.NoteheadTriangleRoundDownWhite,
        [GlyphName.NoteheadTriangleUpBlack] = GlyphNameAlternateCodePoints.NoteheadTriangleUpBlack,
        [GlyphName.NoteheadTriangleUpRightBlack] = GlyphNameAlternateCodePoints.NoteheadTriangleUpRightBlack,
        [GlyphName.NoteheadTriangleUpRightWhite] = GlyphNameAlternateCodePoints.NoteheadTriangleUpRightWhite,
        [GlyphName.NoteheadTriangleUpWhite] = GlyphNameAlternateCodePoints.NoteheadTriangleUpWhite,
        [GlyphName.NoteheadXBlack] = GlyphNameAlternateCodePoints.NoteheadXBlack,
        [GlyphName.OrnamentBottomLeftConcaveStrokeLarge] = GlyphNameAlternateCodePoints.OrnamentBottomLeftConcaveStrokeLarge,
        [GlyphName.OrnamentBottomRightConcaveStroke] = GlyphNameAlternateCodePoints.OrnamentBottomRightConcaveStroke,
        [GlyphName.OrnamentHighLeftConvexStroke] = GlyphNameAlternateCodePoints.OrnamentHighLeftConvexStroke,
        [GlyphName.OrnamentLeftVerticalStroke] = GlyphNameAlternateCodePoints.OrnamentLeftVerticalStroke,
        [GlyphName.OrnamentLowLeftConvexStroke] = GlyphNameAlternateCodePoints.OrnamentLowLeftConvexStroke,
        [GlyphName.OrnamentLowRightConcaveStroke] = GlyphNameAlternateCodePoints.OrnamentLowRightConcaveStroke,
        [GlyphName.OrnamentMiddleVerticalStroke] = GlyphNameAlternateCodePoints.OrnamentMiddleVerticalStroke,
        [GlyphName.OrnamentTopLeftConvexStroke] = GlyphNameAlternateCodePoints.OrnamentTopLeftConvexStroke,
        [GlyphName.OrnamentTopRightConvexStroke] = GlyphNameAlternateCodePoints.OrnamentTopRightConvexStroke,
        [GlyphName.OrnamentTrill] = GlyphNameAlternateCodePoints.OrnamentTrill,
        [GlyphName.OrnamentTurn] = GlyphNameAlternateCodePoints.OrnamentTurn,
        [GlyphName.OrnamentTurnInverted] = GlyphNameAlternateCodePoints.OrnamentTurnInverted,
        [GlyphName.OrnamentTurnSlash] = GlyphNameAlternateCodePoints.OrnamentTurnSlash,
        [GlyphName.OrnamentTurnUp] = GlyphNameAlternateCodePoints.OrnamentTurnUp,
        [GlyphName.OrnamentZigZagLineNoRightEnd] = GlyphNameAlternateCodePoints.OrnamentZigZagLineNoRightEnd,
        [GlyphName.OrnamentZigZagLineWithRightEnd] = GlyphNameAlternateCodePoints.OrnamentZigZagLineWithRightEnd,
        [GlyphName.OttavaAlta] = GlyphNameAlternateCodePoints.OttavaAlta,
        [GlyphName.OttavaBassa] = GlyphNameAlternateCodePoints.OttavaBassa,
        [GlyphName.PluckedDamp] = GlyphNameAlternateCodePoints.PluckedDamp,
        [GlyphName.PluckedDampAll] = GlyphNameAlternateCodePoints.PluckedDampAll,
        [GlyphName.PluckedSnapPizzicatoBelow] = GlyphNameAlternateCodePoints.PluckedSnapPizzicatoBelow,
        [GlyphName.PluckedWithFingernails] = GlyphNameAlternateCodePoints.PluckedWithFingernails,
        [GlyphName.QuindicesimaBassa] = GlyphNameAlternateCodePoints.QuindicesimaBassa,
        [GlyphName.Repeat1Bar] = GlyphNameAlternateCodePoints.Repeat1Bar,
        [GlyphName.Repeat2Bars] = GlyphNameAlternateCodePoints.Repeat2Bars,
        [GlyphName.RepeatDots] = GlyphNameAlternateCodePoints.RepeatDots,
        [GlyphName.RepeatLeft] = GlyphNameAlternateCodePoints.RepeatLeft,
        [GlyphName.RepeatRight] = GlyphNameAlternateCodePoints.RepeatRight,
        [GlyphName.Rest128th] = GlyphNameAlternateCodePoints.Rest128th,
        [GlyphName.Rest16th] = GlyphNameAlternateCodePoints.Rest16th,
        [GlyphName.Rest32nd] = GlyphNameAlternateCodePoints.Rest32nd,
        [GlyphName.Rest64th] = GlyphNameAlternateCodePoints.Rest64th,
        [GlyphName.Rest8th] = GlyphNameAlternateCodePoints.Rest8th,
        [GlyphName.RestDoubleWhole] = GlyphNameAlternateCodePoints.RestDoubleWhole,
        [GlyphName.RestHBar] = GlyphNameAlternateCodePoints.RestHBar,
        [GlyphName.RestHalf] = GlyphNameAlternateCodePoints.RestHalf,
        [GlyphName.RestQuarter] = GlyphNameAlternateCodePoints.RestQuarter,
        [GlyphName.RestWhole] = GlyphNameAlternateCodePoints.RestWhole,
        [GlyphName.Segno] = GlyphNameAlternateCodePoints.Segno,
        [GlyphName.Staff1Line] = GlyphNameAlternateCodePoints.Staff1Line,
        [GlyphName.Staff2Lines] = GlyphNameAlternateCodePoints.Staff2Lines,
        [GlyphName.Staff3Lines] = GlyphNameAlternateCodePoints.Staff3Lines,
        [GlyphName.Staff4Lines] = GlyphNameAlternateCodePoints.Staff4Lines,
        [GlyphName.Staff5Lines] = GlyphNameAlternateCodePoints.Staff5Lines,
        [GlyphName.Staff6Lines] = GlyphNameAlternateCodePoints.Staff6Lines,
        [GlyphName.Stem] = GlyphNameAlternateCodePoints.Stem,
        [GlyphName.StemSprechgesang] = GlyphNameAlternateCodePoints.StemSprechgesang,
        [GlyphName.StringsDownBow] = GlyphNameAlternateCodePoints.StringsDownBow,
        [GlyphName.StringsHarmonic] = GlyphNameAlternateCodePoints.StringsHarmonic,
        [GlyphName.StringsUpBow] = GlyphNameAlternateCodePoints.StringsUpBow,
        [GlyphName.TimeSigCommon] = GlyphNameAlternateCodePoints.TimeSigCommon,
        [GlyphName.TimeSigCutCommon] = GlyphNameAlternateCodePoints.TimeSigCutCommon,
        [GlyphName.Tremolo1] = GlyphNameAlternateCodePoints.Tremolo1,
        [GlyphName.Tremolo2] = GlyphNameAlternateCodePoints.Tremolo2,
        [GlyphName.Tremolo3] = GlyphNameAlternateCodePoints.Tremolo3,
        [GlyphName.TremoloFingered1] = GlyphNameAlternateCodePoints.TremoloFingered1,
        [GlyphName.TremoloFingered2] = GlyphNameAlternateCodePoints.TremoloFingered2,
        [GlyphName.TremoloFingered3] = GlyphNameAlternateCodePoints.TremoloFingered3,
        [GlyphName.TripleTongueAbove] = GlyphNameAlternateCodePoints.TripleTongueAbove,
        [GlyphName.UnpitchedPercussionClef1] = GlyphNameAlternateCodePoints.UnpitchedPercussionClef1,
        [GlyphName.UnpitchedPercussionClef2] = GlyphNameAlternateCodePoints.UnpitchedPercussionClef2,
    };

    /// <summary>
    /// Maps glyph name enums to their corresponding descriptions.
    /// </summary>
    public static IReadOnlyDictionary<GlyphName, string> GlyphName2DescriptionMap { get; } = new Dictionary<GlyphName, string> {
        [GlyphName.FourStringTabClef] = GlyphNameDescriptions.FourStringTabClef,
        [GlyphName.SixStringTabClef] = GlyphNameDescriptions.SixStringTabClef,
        [GlyphName.AccSagittal11LargeDiesisDown] = GlyphNameDescriptions.AccSagittal11LargeDiesisDown,
        [GlyphName.AccSagittal11LargeDiesisUp] = GlyphNameDescriptions.AccSagittal11LargeDiesisUp,
        [GlyphName.AccSagittal11MediumDiesisDown] = GlyphNameDescriptions.AccSagittal11MediumDiesisDown,
        [GlyphName.AccSagittal11MediumDiesisUp] = GlyphNameDescriptions.AccSagittal11MediumDiesisUp,
        [GlyphName.AccSagittal11v19LargeDiesisDown] = GlyphNameDescriptions.AccSagittal11v19LargeDiesisDown,
        [GlyphName.AccSagittal11v19LargeDiesisUp] = GlyphNameDescriptions.AccSagittal11v19LargeDiesisUp,
        [GlyphName.AccSagittal11v19MediumDiesisDown] = GlyphNameDescriptions.AccSagittal11v19MediumDiesisDown,
        [GlyphName.AccSagittal11v19MediumDiesisUp] = GlyphNameDescriptions.AccSagittal11v19MediumDiesisUp,
        [GlyphName.AccSagittal11v49CommaDown] = GlyphNameDescriptions.AccSagittal11v49CommaDown,
        [GlyphName.AccSagittal11v49CommaUp] = GlyphNameDescriptions.AccSagittal11v49CommaUp,
        [GlyphName.AccSagittal143CommaDown] = GlyphNameDescriptions.AccSagittal143CommaDown,
        [GlyphName.AccSagittal143CommaUp] = GlyphNameDescriptions.AccSagittal143CommaUp,
        [GlyphName.AccSagittal17CommaDown] = GlyphNameDescriptions.AccSagittal17CommaDown,
        [GlyphName.AccSagittal17CommaUp] = GlyphNameDescriptions.AccSagittal17CommaUp,
        [GlyphName.AccSagittal17KleismaDown] = GlyphNameDescriptions.AccSagittal17KleismaDown,
        [GlyphName.AccSagittal17KleismaUp] = GlyphNameDescriptions.AccSagittal17KleismaUp,
        [GlyphName.AccSagittal19CommaDown] = GlyphNameDescriptions.AccSagittal19CommaDown,
        [GlyphName.AccSagittal19CommaUp] = GlyphNameDescriptions.AccSagittal19CommaUp,
        [GlyphName.AccSagittal19SchismaDown] = GlyphNameDescriptions.AccSagittal19SchismaDown,
        [GlyphName.AccSagittal19SchismaUp] = GlyphNameDescriptions.AccSagittal19SchismaUp,
        [GlyphName.AccSagittal1MinaDown] = GlyphNameDescriptions.AccSagittal1MinaDown,
        [GlyphName.AccSagittal1MinaUp] = GlyphNameDescriptions.AccSagittal1MinaUp,
        [GlyphName.AccSagittal1TinaDown] = GlyphNameDescriptions.AccSagittal1TinaDown,
        [GlyphName.AccSagittal1TinaUp] = GlyphNameDescriptions.AccSagittal1TinaUp,
        [GlyphName.AccSagittal23CommaDown] = GlyphNameDescriptions.AccSagittal23CommaDown,
        [GlyphName.AccSagittal23CommaUp] = GlyphNameDescriptions.AccSagittal23CommaUp,
        [GlyphName.AccSagittal23SmallDiesisDown] = GlyphNameDescriptions.AccSagittal23SmallDiesisDown,
        [GlyphName.AccSagittal23SmallDiesisUp] = GlyphNameDescriptions.AccSagittal23SmallDiesisUp,
        [GlyphName.AccSagittal25SmallDiesisDown] = GlyphNameDescriptions.AccSagittal25SmallDiesisDown,
        [GlyphName.AccSagittal25SmallDiesisUp] = GlyphNameDescriptions.AccSagittal25SmallDiesisUp,
        [GlyphName.AccSagittal2MinasDown] = GlyphNameDescriptions.AccSagittal2MinasDown,
        [GlyphName.AccSagittal2MinasUp] = GlyphNameDescriptions.AccSagittal2MinasUp,
        [GlyphName.AccSagittal2TinasDown] = GlyphNameDescriptions.AccSagittal2TinasDown,
        [GlyphName.AccSagittal2TinasUp] = GlyphNameDescriptions.AccSagittal2TinasUp,
        [GlyphName.AccSagittal35LargeDiesisDown] = GlyphNameDescriptions.AccSagittal35LargeDiesisDown,
        [GlyphName.AccSagittal35LargeDiesisUp] = GlyphNameDescriptions.AccSagittal35LargeDiesisUp,
        [GlyphName.AccSagittal35MediumDiesisDown] = GlyphNameDescriptions.AccSagittal35MediumDiesisDown,
        [GlyphName.AccSagittal35MediumDiesisUp] = GlyphNameDescriptions.AccSagittal35MediumDiesisUp,
        [GlyphName.AccSagittal3TinasDown] = GlyphNameDescriptions.AccSagittal3TinasDown,
        [GlyphName.AccSagittal3TinasUp] = GlyphNameDescriptions.AccSagittal3TinasUp,
        [GlyphName.AccSagittal49LargeDiesisDown] = GlyphNameDescriptions.AccSagittal49LargeDiesisDown,
        [GlyphName.AccSagittal49LargeDiesisUp] = GlyphNameDescriptions.AccSagittal49LargeDiesisUp,
        [GlyphName.AccSagittal49MediumDiesisDown] = GlyphNameDescriptions.AccSagittal49MediumDiesisDown,
        [GlyphName.AccSagittal49MediumDiesisUp] = GlyphNameDescriptions.AccSagittal49MediumDiesisUp,
        [GlyphName.AccSagittal49SmallDiesisDown] = GlyphNameDescriptions.AccSagittal49SmallDiesisDown,
        [GlyphName.AccSagittal49SmallDiesisUp] = GlyphNameDescriptions.AccSagittal49SmallDiesisUp,
        [GlyphName.AccSagittal4TinasDown] = GlyphNameDescriptions.AccSagittal4TinasDown,
        [GlyphName.AccSagittal4TinasUp] = GlyphNameDescriptions.AccSagittal4TinasUp,
        [GlyphName.AccSagittal55CommaDown] = GlyphNameDescriptions.AccSagittal55CommaDown,
        [GlyphName.AccSagittal55CommaUp] = GlyphNameDescriptions.AccSagittal55CommaUp,
        [GlyphName.AccSagittal5CommaDown] = GlyphNameDescriptions.AccSagittal5CommaDown,
        [GlyphName.AccSagittal5CommaUp] = GlyphNameDescriptions.AccSagittal5CommaUp,
        [GlyphName.AccSagittal5TinasDown] = GlyphNameDescriptions.AccSagittal5TinasDown,
        [GlyphName.AccSagittal5TinasUp] = GlyphNameDescriptions.AccSagittal5TinasUp,
        [GlyphName.AccSagittal5v11SmallDiesisDown] = GlyphNameDescriptions.AccSagittal5v11SmallDiesisDown,
        [GlyphName.AccSagittal5v11SmallDiesisUp] = GlyphNameDescriptions.AccSagittal5v11SmallDiesisUp,
        [GlyphName.AccSagittal5v13LargeDiesisDown] = GlyphNameDescriptions.AccSagittal5v13LargeDiesisDown,
        [GlyphName.AccSagittal5v13LargeDiesisUp] = GlyphNameDescriptions.AccSagittal5v13LargeDiesisUp,
        [GlyphName.AccSagittal5v13MediumDiesisDown] = GlyphNameDescriptions.AccSagittal5v13MediumDiesisDown,
        [GlyphName.AccSagittal5v13MediumDiesisUp] = GlyphNameDescriptions.AccSagittal5v13MediumDiesisUp,
        [GlyphName.AccSagittal5v19CommaDown] = GlyphNameDescriptions.AccSagittal5v19CommaDown,
        [GlyphName.AccSagittal5v19CommaUp] = GlyphNameDescriptions.AccSagittal5v19CommaUp,
        [GlyphName.AccSagittal5v23SmallDiesisDown] = GlyphNameDescriptions.AccSagittal5v23SmallDiesisDown,
        [GlyphName.AccSagittal5v23SmallDiesisUp] = GlyphNameDescriptions.AccSagittal5v23SmallDiesisUp,
        [GlyphName.AccSagittal5v49MediumDiesisDown] = GlyphNameDescriptions.AccSagittal5v49MediumDiesisDown,
        [GlyphName.AccSagittal5v49MediumDiesisUp] = GlyphNameDescriptions.AccSagittal5v49MediumDiesisUp,
        [GlyphName.AccSagittal5v7KleismaDown] = GlyphNameDescriptions.AccSagittal5v7KleismaDown,
        [GlyphName.AccSagittal5v7KleismaUp] = GlyphNameDescriptions.AccSagittal5v7KleismaUp,
        [GlyphName.AccSagittal6TinasDown] = GlyphNameDescriptions.AccSagittal6TinasDown,
        [GlyphName.AccSagittal6TinasUp] = GlyphNameDescriptions.AccSagittal6TinasUp,
        [GlyphName.AccSagittal7CommaDown] = GlyphNameDescriptions.AccSagittal7CommaDown,
        [GlyphName.AccSagittal7CommaUp] = GlyphNameDescriptions.AccSagittal7CommaUp,
        [GlyphName.AccSagittal7TinasDown] = GlyphNameDescriptions.AccSagittal7TinasDown,
        [GlyphName.AccSagittal7TinasUp] = GlyphNameDescriptions.AccSagittal7TinasUp,
        [GlyphName.AccSagittal7v11CommaDown] = GlyphNameDescriptions.AccSagittal7v11CommaDown,
        [GlyphName.AccSagittal7v11CommaUp] = GlyphNameDescriptions.AccSagittal7v11CommaUp,
        [GlyphName.AccSagittal7v11KleismaDown] = GlyphNameDescriptions.AccSagittal7v11KleismaDown,
        [GlyphName.AccSagittal7v11KleismaUp] = GlyphNameDescriptions.AccSagittal7v11KleismaUp,
        [GlyphName.AccSagittal7v19CommaDown] = GlyphNameDescriptions.AccSagittal7v19CommaDown,
        [GlyphName.AccSagittal7v19CommaUp] = GlyphNameDescriptions.AccSagittal7v19CommaUp,
        [GlyphName.AccSagittal8TinasDown] = GlyphNameDescriptions.AccSagittal8TinasDown,
        [GlyphName.AccSagittal8TinasUp] = GlyphNameDescriptions.AccSagittal8TinasUp,
        [GlyphName.AccSagittal9TinasDown] = GlyphNameDescriptions.AccSagittal9TinasDown,
        [GlyphName.AccSagittal9TinasUp] = GlyphNameDescriptions.AccSagittal9TinasUp,
        [GlyphName.AccSagittalAcute] = GlyphNameDescriptions.AccSagittalAcute,
        [GlyphName.AccSagittalDoubleFlat] = GlyphNameDescriptions.AccSagittalDoubleFlat,
        [GlyphName.AccSagittalDoubleFlat11v49CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat11v49CUp,
        [GlyphName.AccSagittalDoubleFlat143CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat143CUp,
        [GlyphName.AccSagittalDoubleFlat17CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat17CUp,
        [GlyphName.AccSagittalDoubleFlat17kUp] = GlyphNameDescriptions.AccSagittalDoubleFlat17kUp,
        [GlyphName.AccSagittalDoubleFlat19CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat19CUp,
        [GlyphName.AccSagittalDoubleFlat19sUp] = GlyphNameDescriptions.AccSagittalDoubleFlat19sUp,
        [GlyphName.AccSagittalDoubleFlat23CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat23CUp,
        [GlyphName.AccSagittalDoubleFlat23SUp] = GlyphNameDescriptions.AccSagittalDoubleFlat23SUp,
        [GlyphName.AccSagittalDoubleFlat25SUp] = GlyphNameDescriptions.AccSagittalDoubleFlat25SUp,
        [GlyphName.AccSagittalDoubleFlat49SUp] = GlyphNameDescriptions.AccSagittalDoubleFlat49SUp,
        [GlyphName.AccSagittalDoubleFlat55CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat55CUp,
        [GlyphName.AccSagittalDoubleFlat5CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat5CUp,
        [GlyphName.AccSagittalDoubleFlat5v11SUp] = GlyphNameDescriptions.AccSagittalDoubleFlat5v11SUp,
        [GlyphName.AccSagittalDoubleFlat5v19CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat5v19CUp,
        [GlyphName.AccSagittalDoubleFlat5v23SUp] = GlyphNameDescriptions.AccSagittalDoubleFlat5v23SUp,
        [GlyphName.AccSagittalDoubleFlat5v7kUp] = GlyphNameDescriptions.AccSagittalDoubleFlat5v7kUp,
        [GlyphName.AccSagittalDoubleFlat7CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat7CUp,
        [GlyphName.AccSagittalDoubleFlat7v11CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat7v11CUp,
        [GlyphName.AccSagittalDoubleFlat7v11kUp] = GlyphNameDescriptions.AccSagittalDoubleFlat7v11kUp,
        [GlyphName.AccSagittalDoubleFlat7v19CUp] = GlyphNameDescriptions.AccSagittalDoubleFlat7v19CUp,
        [GlyphName.AccSagittalDoubleSharp] = GlyphNameDescriptions.AccSagittalDoubleSharp,
        [GlyphName.AccSagittalDoubleSharp11v49CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp11v49CDown,
        [GlyphName.AccSagittalDoubleSharp143CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp143CDown,
        [GlyphName.AccSagittalDoubleSharp17CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp17CDown,
        [GlyphName.AccSagittalDoubleSharp17kDown] = GlyphNameDescriptions.AccSagittalDoubleSharp17kDown,
        [GlyphName.AccSagittalDoubleSharp19CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp19CDown,
        [GlyphName.AccSagittalDoubleSharp19sDown] = GlyphNameDescriptions.AccSagittalDoubleSharp19sDown,
        [GlyphName.AccSagittalDoubleSharp23CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp23CDown,
        [GlyphName.AccSagittalDoubleSharp23SDown] = GlyphNameDescriptions.AccSagittalDoubleSharp23SDown,
        [GlyphName.AccSagittalDoubleSharp25SDown] = GlyphNameDescriptions.AccSagittalDoubleSharp25SDown,
        [GlyphName.AccSagittalDoubleSharp49SDown] = GlyphNameDescriptions.AccSagittalDoubleSharp49SDown,
        [GlyphName.AccSagittalDoubleSharp55CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp55CDown,
        [GlyphName.AccSagittalDoubleSharp5CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp5CDown,
        [GlyphName.AccSagittalDoubleSharp5v11SDown] = GlyphNameDescriptions.AccSagittalDoubleSharp5v11SDown,
        [GlyphName.AccSagittalDoubleSharp5v19CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp5v19CDown,
        [GlyphName.AccSagittalDoubleSharp5v23SDown] = GlyphNameDescriptions.AccSagittalDoubleSharp5v23SDown,
        [GlyphName.AccSagittalDoubleSharp5v7kDown] = GlyphNameDescriptions.AccSagittalDoubleSharp5v7kDown,
        [GlyphName.AccSagittalDoubleSharp7CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp7CDown,
        [GlyphName.AccSagittalDoubleSharp7v11CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp7v11CDown,
        [GlyphName.AccSagittalDoubleSharp7v11kDown] = GlyphNameDescriptions.AccSagittalDoubleSharp7v11kDown,
        [GlyphName.AccSagittalDoubleSharp7v19CDown] = GlyphNameDescriptions.AccSagittalDoubleSharp7v19CDown,
        [GlyphName.AccSagittalFlat] = GlyphNameDescriptions.AccSagittalFlat,
        [GlyphName.AccSagittalFlat11LDown] = GlyphNameDescriptions.AccSagittalFlat11LDown,
        [GlyphName.AccSagittalFlat11MDown] = GlyphNameDescriptions.AccSagittalFlat11MDown,
        [GlyphName.AccSagittalFlat11v19LDown] = GlyphNameDescriptions.AccSagittalFlat11v19LDown,
        [GlyphName.AccSagittalFlat11v19MDown] = GlyphNameDescriptions.AccSagittalFlat11v19MDown,
        [GlyphName.AccSagittalFlat11v49CDown] = GlyphNameDescriptions.AccSagittalFlat11v49CDown,
        [GlyphName.AccSagittalFlat11v49CUp] = GlyphNameDescriptions.AccSagittalFlat11v49CUp,
        [GlyphName.AccSagittalFlat143CDown] = GlyphNameDescriptions.AccSagittalFlat143CDown,
        [GlyphName.AccSagittalFlat143CUp] = GlyphNameDescriptions.AccSagittalFlat143CUp,
        [GlyphName.AccSagittalFlat17CDown] = GlyphNameDescriptions.AccSagittalFlat17CDown,
        [GlyphName.AccSagittalFlat17CUp] = GlyphNameDescriptions.AccSagittalFlat17CUp,
        [GlyphName.AccSagittalFlat17kDown] = GlyphNameDescriptions.AccSagittalFlat17kDown,
        [GlyphName.AccSagittalFlat17kUp] = GlyphNameDescriptions.AccSagittalFlat17kUp,
        [GlyphName.AccSagittalFlat19CDown] = GlyphNameDescriptions.AccSagittalFlat19CDown,
        [GlyphName.AccSagittalFlat19CUp] = GlyphNameDescriptions.AccSagittalFlat19CUp,
        [GlyphName.AccSagittalFlat19sDown] = GlyphNameDescriptions.AccSagittalFlat19sDown,
        [GlyphName.AccSagittalFlat19sUp] = GlyphNameDescriptions.AccSagittalFlat19sUp,
        [GlyphName.AccSagittalFlat23CDown] = GlyphNameDescriptions.AccSagittalFlat23CDown,
        [GlyphName.AccSagittalFlat23CUp] = GlyphNameDescriptions.AccSagittalFlat23CUp,
        [GlyphName.AccSagittalFlat23SDown] = GlyphNameDescriptions.AccSagittalFlat23SDown,
        [GlyphName.AccSagittalFlat23SUp] = GlyphNameDescriptions.AccSagittalFlat23SUp,
        [GlyphName.AccSagittalFlat25SDown] = GlyphNameDescriptions.AccSagittalFlat25SDown,
        [GlyphName.AccSagittalFlat25SUp] = GlyphNameDescriptions.AccSagittalFlat25SUp,
        [GlyphName.AccSagittalFlat35LDown] = GlyphNameDescriptions.AccSagittalFlat35LDown,
        [GlyphName.AccSagittalFlat35MDown] = GlyphNameDescriptions.AccSagittalFlat35MDown,
        [GlyphName.AccSagittalFlat49LDown] = GlyphNameDescriptions.AccSagittalFlat49LDown,
        [GlyphName.AccSagittalFlat49MDown] = GlyphNameDescriptions.AccSagittalFlat49MDown,
        [GlyphName.AccSagittalFlat49SDown] = GlyphNameDescriptions.AccSagittalFlat49SDown,
        [GlyphName.AccSagittalFlat49SUp] = GlyphNameDescriptions.AccSagittalFlat49SUp,
        [GlyphName.AccSagittalFlat55CDown] = GlyphNameDescriptions.AccSagittalFlat55CDown,
        [GlyphName.AccSagittalFlat55CUp] = GlyphNameDescriptions.AccSagittalFlat55CUp,
        [GlyphName.AccSagittalFlat5CDown] = GlyphNameDescriptions.AccSagittalFlat5CDown,
        [GlyphName.AccSagittalFlat5CUp] = GlyphNameDescriptions.AccSagittalFlat5CUp,
        [GlyphName.AccSagittalFlat5v11SDown] = GlyphNameDescriptions.AccSagittalFlat5v11SDown,
        [GlyphName.AccSagittalFlat5v11SUp] = GlyphNameDescriptions.AccSagittalFlat5v11SUp,
        [GlyphName.AccSagittalFlat5v13LDown] = GlyphNameDescriptions.AccSagittalFlat5v13LDown,
        [GlyphName.AccSagittalFlat5v13MDown] = GlyphNameDescriptions.AccSagittalFlat5v13MDown,
        [GlyphName.AccSagittalFlat5v19CDown] = GlyphNameDescriptions.AccSagittalFlat5v19CDown,
        [GlyphName.AccSagittalFlat5v19CUp] = GlyphNameDescriptions.AccSagittalFlat5v19CUp,
        [GlyphName.AccSagittalFlat5v23SDown] = GlyphNameDescriptions.AccSagittalFlat5v23SDown,
        [GlyphName.AccSagittalFlat5v23SUp] = GlyphNameDescriptions.AccSagittalFlat5v23SUp,
        [GlyphName.AccSagittalFlat5v49MDown] = GlyphNameDescriptions.AccSagittalFlat5v49MDown,
        [GlyphName.AccSagittalFlat5v7kDown] = GlyphNameDescriptions.AccSagittalFlat5v7kDown,
        [GlyphName.AccSagittalFlat5v7kUp] = GlyphNameDescriptions.AccSagittalFlat5v7kUp,
        [GlyphName.AccSagittalFlat7CDown] = GlyphNameDescriptions.AccSagittalFlat7CDown,
        [GlyphName.AccSagittalFlat7CUp] = GlyphNameDescriptions.AccSagittalFlat7CUp,
        [GlyphName.AccSagittalFlat7v11CDown] = GlyphNameDescriptions.AccSagittalFlat7v11CDown,
        [GlyphName.AccSagittalFlat7v11CUp] = GlyphNameDescriptions.AccSagittalFlat7v11CUp,
        [GlyphName.AccSagittalFlat7v11kDown] = GlyphNameDescriptions.AccSagittalFlat7v11kDown,
        [GlyphName.AccSagittalFlat7v11kUp] = GlyphNameDescriptions.AccSagittalFlat7v11kUp,
        [GlyphName.AccSagittalFlat7v19CDown] = GlyphNameDescriptions.AccSagittalFlat7v19CDown,
        [GlyphName.AccSagittalFlat7v19CUp] = GlyphNameDescriptions.AccSagittalFlat7v19CUp,
        [GlyphName.AccSagittalFractionalTinaDown] = GlyphNameDescriptions.AccSagittalFractionalTinaDown,
        [GlyphName.AccSagittalFractionalTinaUp] = GlyphNameDescriptions.AccSagittalFractionalTinaUp,
        [GlyphName.AccSagittalGrave] = GlyphNameDescriptions.AccSagittalGrave,
        [GlyphName.AccSagittalShaftDown] = GlyphNameDescriptions.AccSagittalShaftDown,
        [GlyphName.AccSagittalShaftUp] = GlyphNameDescriptions.AccSagittalShaftUp,
        [GlyphName.AccSagittalSharp] = GlyphNameDescriptions.AccSagittalSharp,
        [GlyphName.AccSagittalSharp11LUp] = GlyphNameDescriptions.AccSagittalSharp11LUp,
        [GlyphName.AccSagittalSharp11MUp] = GlyphNameDescriptions.AccSagittalSharp11MUp,
        [GlyphName.AccSagittalSharp11v19LUp] = GlyphNameDescriptions.AccSagittalSharp11v19LUp,
        [GlyphName.AccSagittalSharp11v19MUp] = GlyphNameDescriptions.AccSagittalSharp11v19MUp,
        [GlyphName.AccSagittalSharp11v49CDown] = GlyphNameDescriptions.AccSagittalSharp11v49CDown,
        [GlyphName.AccSagittalSharp11v49CUp] = GlyphNameDescriptions.AccSagittalSharp11v49CUp,
        [GlyphName.AccSagittalSharp143CDown] = GlyphNameDescriptions.AccSagittalSharp143CDown,
        [GlyphName.AccSagittalSharp143CUp] = GlyphNameDescriptions.AccSagittalSharp143CUp,
        [GlyphName.AccSagittalSharp17CDown] = GlyphNameDescriptions.AccSagittalSharp17CDown,
        [GlyphName.AccSagittalSharp17CUp] = GlyphNameDescriptions.AccSagittalSharp17CUp,
        [GlyphName.AccSagittalSharp17kDown] = GlyphNameDescriptions.AccSagittalSharp17kDown,
        [GlyphName.AccSagittalSharp17kUp] = GlyphNameDescriptions.AccSagittalSharp17kUp,
        [GlyphName.AccSagittalSharp19CDown] = GlyphNameDescriptions.AccSagittalSharp19CDown,
        [GlyphName.AccSagittalSharp19CUp] = GlyphNameDescriptions.AccSagittalSharp19CUp,
        [GlyphName.AccSagittalSharp19sDown] = GlyphNameDescriptions.AccSagittalSharp19sDown,
        [GlyphName.AccSagittalSharp19sUp] = GlyphNameDescriptions.AccSagittalSharp19sUp,
        [GlyphName.AccSagittalSharp23CDown] = GlyphNameDescriptions.AccSagittalSharp23CDown,
        [GlyphName.AccSagittalSharp23CUp] = GlyphNameDescriptions.AccSagittalSharp23CUp,
        [GlyphName.AccSagittalSharp23SDown] = GlyphNameDescriptions.AccSagittalSharp23SDown,
        [GlyphName.AccSagittalSharp23SUp] = GlyphNameDescriptions.AccSagittalSharp23SUp,
        [GlyphName.AccSagittalSharp25SDown] = GlyphNameDescriptions.AccSagittalSharp25SDown,
        [GlyphName.AccSagittalSharp25SUp] = GlyphNameDescriptions.AccSagittalSharp25SUp,
        [GlyphName.AccSagittalSharp35LUp] = GlyphNameDescriptions.AccSagittalSharp35LUp,
        [GlyphName.AccSagittalSharp35MUp] = GlyphNameDescriptions.AccSagittalSharp35MUp,
        [GlyphName.AccSagittalSharp49LUp] = GlyphNameDescriptions.AccSagittalSharp49LUp,
        [GlyphName.AccSagittalSharp49MUp] = GlyphNameDescriptions.AccSagittalSharp49MUp,
        [GlyphName.AccSagittalSharp49SDown] = GlyphNameDescriptions.AccSagittalSharp49SDown,
        [GlyphName.AccSagittalSharp49SUp] = GlyphNameDescriptions.AccSagittalSharp49SUp,
        [GlyphName.AccSagittalSharp55CDown] = GlyphNameDescriptions.AccSagittalSharp55CDown,
        [GlyphName.AccSagittalSharp55CUp] = GlyphNameDescriptions.AccSagittalSharp55CUp,
        [GlyphName.AccSagittalSharp5CDown] = GlyphNameDescriptions.AccSagittalSharp5CDown,
        [GlyphName.AccSagittalSharp5CUp] = GlyphNameDescriptions.AccSagittalSharp5CUp,
        [GlyphName.AccSagittalSharp5v11SDown] = GlyphNameDescriptions.AccSagittalSharp5v11SDown,
        [GlyphName.AccSagittalSharp5v11SUp] = GlyphNameDescriptions.AccSagittalSharp5v11SUp,
        [GlyphName.AccSagittalSharp5v13LUp] = GlyphNameDescriptions.AccSagittalSharp5v13LUp,
        [GlyphName.AccSagittalSharp5v13MUp] = GlyphNameDescriptions.AccSagittalSharp5v13MUp,
        [GlyphName.AccSagittalSharp5v19CDown] = GlyphNameDescriptions.AccSagittalSharp5v19CDown,
        [GlyphName.AccSagittalSharp5v19CUp] = GlyphNameDescriptions.AccSagittalSharp5v19CUp,
        [GlyphName.AccSagittalSharp5v23SDown] = GlyphNameDescriptions.AccSagittalSharp5v23SDown,
        [GlyphName.AccSagittalSharp5v23SUp] = GlyphNameDescriptions.AccSagittalSharp5v23SUp,
        [GlyphName.AccSagittalSharp5v49MUp] = GlyphNameDescriptions.AccSagittalSharp5v49MUp,
        [GlyphName.AccSagittalSharp5v7kDown] = GlyphNameDescriptions.AccSagittalSharp5v7kDown,
        [GlyphName.AccSagittalSharp5v7kUp] = GlyphNameDescriptions.AccSagittalSharp5v7kUp,
        [GlyphName.AccSagittalSharp7CDown] = GlyphNameDescriptions.AccSagittalSharp7CDown,
        [GlyphName.AccSagittalSharp7CUp] = GlyphNameDescriptions.AccSagittalSharp7CUp,
        [GlyphName.AccSagittalSharp7v11CDown] = GlyphNameDescriptions.AccSagittalSharp7v11CDown,
        [GlyphName.AccSagittalSharp7v11CUp] = GlyphNameDescriptions.AccSagittalSharp7v11CUp,
        [GlyphName.AccSagittalSharp7v11kDown] = GlyphNameDescriptions.AccSagittalSharp7v11kDown,
        [GlyphName.AccSagittalSharp7v11kUp] = GlyphNameDescriptions.AccSagittalSharp7v11kUp,
        [GlyphName.AccSagittalSharp7v19CDown] = GlyphNameDescriptions.AccSagittalSharp7v19CDown,
        [GlyphName.AccSagittalSharp7v19CUp] = GlyphNameDescriptions.AccSagittalSharp7v19CUp,
        [GlyphName.AccSagittalUnused1] = GlyphNameDescriptions.AccSagittalUnused1,
        [GlyphName.AccSagittalUnused2] = GlyphNameDescriptions.AccSagittalUnused2,
        [GlyphName.AccSagittalUnused3] = GlyphNameDescriptions.AccSagittalUnused3,
        [GlyphName.AccSagittalUnused4] = GlyphNameDescriptions.AccSagittalUnused4,
        [GlyphName.AccdnCombDot] = GlyphNameDescriptions.AccdnCombDot,
        [GlyphName.AccdnCombLH2RanksEmpty] = GlyphNameDescriptions.AccdnCombLH2RanksEmpty,
        [GlyphName.AccdnCombLH3RanksEmptySquare] = GlyphNameDescriptions.AccdnCombLH3RanksEmptySquare,
        [GlyphName.AccdnCombRH3RanksEmpty] = GlyphNameDescriptions.AccdnCombRH3RanksEmpty,
        [GlyphName.AccdnCombRH4RanksEmpty] = GlyphNameDescriptions.AccdnCombRH4RanksEmpty,
        [GlyphName.AccdnDiatonicClef] = GlyphNameDescriptions.AccdnDiatonicClef,
        [GlyphName.AccdnLH2Ranks16Round] = GlyphNameDescriptions.AccdnLH2Ranks16Round,
        [GlyphName.AccdnLH2Ranks8Plus16Round] = GlyphNameDescriptions.AccdnLH2Ranks8Plus16Round,
        [GlyphName.AccdnLH2Ranks8Round] = GlyphNameDescriptions.AccdnLH2Ranks8Round,
        [GlyphName.AccdnLH2RanksFullMasterRound] = GlyphNameDescriptions.AccdnLH2RanksFullMasterRound,
        [GlyphName.AccdnLH2RanksMasterPlus16Round] = GlyphNameDescriptions.AccdnLH2RanksMasterPlus16Round,
        [GlyphName.AccdnLH2RanksMasterRound] = GlyphNameDescriptions.AccdnLH2RanksMasterRound,
        [GlyphName.AccdnLH3Ranks2Plus8Square] = GlyphNameDescriptions.AccdnLH3Ranks2Plus8Square,
        [GlyphName.AccdnLH3Ranks2Square] = GlyphNameDescriptions.AccdnLH3Ranks2Square,
        [GlyphName.AccdnLH3Ranks8Square] = GlyphNameDescriptions.AccdnLH3Ranks8Square,
        [GlyphName.AccdnLH3RanksDouble8Square] = GlyphNameDescriptions.AccdnLH3RanksDouble8Square,
        [GlyphName.AccdnLH3RanksTuttiSquare] = GlyphNameDescriptions.AccdnLH3RanksTuttiSquare,
        [GlyphName.AccdnPull] = GlyphNameDescriptions.AccdnPull,
        [GlyphName.AccdnPush] = GlyphNameDescriptions.AccdnPush,
        [GlyphName.AccdnRH3RanksAccordion] = GlyphNameDescriptions.AccdnRH3RanksAccordion,
        [GlyphName.AccdnRH3RanksAuthenticMusette] = GlyphNameDescriptions.AccdnRH3RanksAuthenticMusette,
        [GlyphName.AccdnRH3RanksBandoneon] = GlyphNameDescriptions.AccdnRH3RanksBandoneon,
        [GlyphName.AccdnRH3RanksBassoon] = GlyphNameDescriptions.AccdnRH3RanksBassoon,
        [GlyphName.AccdnRH3RanksClarinet] = GlyphNameDescriptions.AccdnRH3RanksClarinet,
        [GlyphName.AccdnRH3RanksDoubleTremoloLower8ve] = GlyphNameDescriptions.AccdnRH3RanksDoubleTremoloLower8ve,
        [GlyphName.AccdnRH3RanksDoubleTremoloUpper8ve] = GlyphNameDescriptions.AccdnRH3RanksDoubleTremoloUpper8ve,
        [GlyphName.AccdnRH3RanksFullFactory] = GlyphNameDescriptions.AccdnRH3RanksFullFactory,
        [GlyphName.AccdnRH3RanksHarmonium] = GlyphNameDescriptions.AccdnRH3RanksHarmonium,
        [GlyphName.AccdnRH3RanksImitationMusette] = GlyphNameDescriptions.AccdnRH3RanksImitationMusette,
        [GlyphName.AccdnRH3RanksLowerTremolo8] = GlyphNameDescriptions.AccdnRH3RanksLowerTremolo8,
        [GlyphName.AccdnRH3RanksMaster] = GlyphNameDescriptions.AccdnRH3RanksMaster,
        [GlyphName.AccdnRH3RanksOboe] = GlyphNameDescriptions.AccdnRH3RanksOboe,
        [GlyphName.AccdnRH3RanksOrgan] = GlyphNameDescriptions.AccdnRH3RanksOrgan,
        [GlyphName.AccdnRH3RanksPiccolo] = GlyphNameDescriptions.AccdnRH3RanksPiccolo,
        [GlyphName.AccdnRH3RanksTremoloLower8ve] = GlyphNameDescriptions.AccdnRH3RanksTremoloLower8ve,
        [GlyphName.AccdnRH3RanksTremoloUpper8ve] = GlyphNameDescriptions.AccdnRH3RanksTremoloUpper8ve,
        [GlyphName.AccdnRH3RanksTwoChoirs] = GlyphNameDescriptions.AccdnRH3RanksTwoChoirs,
        [GlyphName.AccdnRH3RanksUpperTremolo8] = GlyphNameDescriptions.AccdnRH3RanksUpperTremolo8,
        [GlyphName.AccdnRH3RanksViolin] = GlyphNameDescriptions.AccdnRH3RanksViolin,
        [GlyphName.AccdnRH4RanksAlto] = GlyphNameDescriptions.AccdnRH4RanksAlto,
        [GlyphName.AccdnRH4RanksBassAlto] = GlyphNameDescriptions.AccdnRH4RanksBassAlto,
        [GlyphName.AccdnRH4RanksMaster] = GlyphNameDescriptions.AccdnRH4RanksMaster,
        [GlyphName.AccdnRH4RanksSoftBass] = GlyphNameDescriptions.AccdnRH4RanksSoftBass,
        [GlyphName.AccdnRH4RanksSoftTenor] = GlyphNameDescriptions.AccdnRH4RanksSoftTenor,
        [GlyphName.AccdnRH4RanksSoprano] = GlyphNameDescriptions.AccdnRH4RanksSoprano,
        [GlyphName.AccdnRH4RanksTenor] = GlyphNameDescriptions.AccdnRH4RanksTenor,
        [GlyphName.AccdnRicochet2] = GlyphNameDescriptions.AccdnRicochet2,
        [GlyphName.AccdnRicochet3] = GlyphNameDescriptions.AccdnRicochet3,
        [GlyphName.AccdnRicochet4] = GlyphNameDescriptions.AccdnRicochet4,
        [GlyphName.AccdnRicochet5] = GlyphNameDescriptions.AccdnRicochet5,
        [GlyphName.AccdnRicochet6] = GlyphNameDescriptions.AccdnRicochet6,
        [GlyphName.AccdnRicochetStem2] = GlyphNameDescriptions.AccdnRicochetStem2,
        [GlyphName.AccdnRicochetStem3] = GlyphNameDescriptions.AccdnRicochetStem3,
        [GlyphName.AccdnRicochetStem4] = GlyphNameDescriptions.AccdnRicochetStem4,
        [GlyphName.AccdnRicochetStem5] = GlyphNameDescriptions.AccdnRicochetStem5,
        [GlyphName.AccdnRicochetStem6] = GlyphNameDescriptions.AccdnRicochetStem6,
        [GlyphName.Accidental1CommaFlat] = GlyphNameDescriptions.Accidental1CommaFlat,
        [GlyphName.Accidental1CommaSharp] = GlyphNameDescriptions.Accidental1CommaSharp,
        [GlyphName.Accidental2CommaFlat] = GlyphNameDescriptions.Accidental2CommaFlat,
        [GlyphName.Accidental2CommaSharp] = GlyphNameDescriptions.Accidental2CommaSharp,
        [GlyphName.Accidental3CommaFlat] = GlyphNameDescriptions.Accidental3CommaFlat,
        [GlyphName.Accidental3CommaSharp] = GlyphNameDescriptions.Accidental3CommaSharp,
        [GlyphName.Accidental4CommaFlat] = GlyphNameDescriptions.Accidental4CommaFlat,
        [GlyphName.Accidental5CommaSharp] = GlyphNameDescriptions.Accidental5CommaSharp,
        [GlyphName.AccidentalArrowDown] = GlyphNameDescriptions.AccidentalArrowDown,
        [GlyphName.AccidentalArrowUp] = GlyphNameDescriptions.AccidentalArrowUp,
        [GlyphName.AccidentalBakiyeFlat] = GlyphNameDescriptions.AccidentalBakiyeFlat,
        [GlyphName.AccidentalBakiyeSharp] = GlyphNameDescriptions.AccidentalBakiyeSharp,
        [GlyphName.AccidentalBracketLeft] = GlyphNameDescriptions.AccidentalBracketLeft,
        [GlyphName.AccidentalBracketRight] = GlyphNameDescriptions.AccidentalBracketRight,
        [GlyphName.AccidentalBuyukMucennebFlat] = GlyphNameDescriptions.AccidentalBuyukMucennebFlat,
        [GlyphName.AccidentalBuyukMucennebSharp] = GlyphNameDescriptions.AccidentalBuyukMucennebSharp,
        [GlyphName.AccidentalCombiningCloseCurlyBrace] = GlyphNameDescriptions.AccidentalCombiningCloseCurlyBrace,
        [GlyphName.AccidentalCombiningLower17Schisma] = GlyphNameDescriptions.AccidentalCombiningLower17Schisma,
        [GlyphName.AccidentalCombiningLower19Schisma] = GlyphNameDescriptions.AccidentalCombiningLower19Schisma,
        [GlyphName.AccidentalCombiningLower23Limit29LimitComma] = GlyphNameDescriptions.AccidentalCombiningLower23Limit29LimitComma,
        [GlyphName.AccidentalCombiningLower29LimitComma] = GlyphNameDescriptions.AccidentalCombiningLower29LimitComma,
        [GlyphName.AccidentalCombiningLower31Schisma] = GlyphNameDescriptions.AccidentalCombiningLower31Schisma,
        [GlyphName.AccidentalCombiningLower37Quartertone] = GlyphNameDescriptions.AccidentalCombiningLower37Quartertone,
        [GlyphName.AccidentalCombiningLower41Comma] = GlyphNameDescriptions.AccidentalCombiningLower41Comma,
        [GlyphName.AccidentalCombiningLower43Comma] = GlyphNameDescriptions.AccidentalCombiningLower43Comma,
        [GlyphName.AccidentalCombiningLower47Quartertone] = GlyphNameDescriptions.AccidentalCombiningLower47Quartertone,
        [GlyphName.AccidentalCombiningLower53LimitComma] = GlyphNameDescriptions.AccidentalCombiningLower53LimitComma,
        [GlyphName.AccidentalCombiningOpenCurlyBrace] = GlyphNameDescriptions.AccidentalCombiningOpenCurlyBrace,
        [GlyphName.AccidentalCombiningRaise17Schisma] = GlyphNameDescriptions.AccidentalCombiningRaise17Schisma,
        [GlyphName.AccidentalCombiningRaise19Schisma] = GlyphNameDescriptions.AccidentalCombiningRaise19Schisma,
        [GlyphName.AccidentalCombiningRaise23Limit29LimitComma] = GlyphNameDescriptions.AccidentalCombiningRaise23Limit29LimitComma,
        [GlyphName.AccidentalCombiningRaise29LimitComma] = GlyphNameDescriptions.AccidentalCombiningRaise29LimitComma,
        [GlyphName.AccidentalCombiningRaise31Schisma] = GlyphNameDescriptions.AccidentalCombiningRaise31Schisma,
        [GlyphName.AccidentalCombiningRaise37Quartertone] = GlyphNameDescriptions.AccidentalCombiningRaise37Quartertone,
        [GlyphName.AccidentalCombiningRaise41Comma] = GlyphNameDescriptions.AccidentalCombiningRaise41Comma,
        [GlyphName.AccidentalCombiningRaise43Comma] = GlyphNameDescriptions.AccidentalCombiningRaise43Comma,
        [GlyphName.AccidentalCombiningRaise47Quartertone] = GlyphNameDescriptions.AccidentalCombiningRaise47Quartertone,
        [GlyphName.AccidentalCombiningRaise53LimitComma] = GlyphNameDescriptions.AccidentalCombiningRaise53LimitComma,
        [GlyphName.AccidentalCommaSlashDown] = GlyphNameDescriptions.AccidentalCommaSlashDown,
        [GlyphName.AccidentalCommaSlashUp] = GlyphNameDescriptions.AccidentalCommaSlashUp,
        [GlyphName.AccidentalDoubleFlat] = GlyphNameDescriptions.AccidentalDoubleFlat,
        [GlyphName.AccidentalDoubleFlatArabic] = GlyphNameDescriptions.AccidentalDoubleFlatArabic,
        [GlyphName.AccidentalDoubleFlatEqualTempered] = GlyphNameDescriptions.AccidentalDoubleFlatEqualTempered,
        [GlyphName.AccidentalDoubleFlatOneArrowDown] = GlyphNameDescriptions.AccidentalDoubleFlatOneArrowDown,
        [GlyphName.AccidentalDoubleFlatOneArrowUp] = GlyphNameDescriptions.AccidentalDoubleFlatOneArrowUp,
        [GlyphName.AccidentalDoubleFlatReversed] = GlyphNameDescriptions.AccidentalDoubleFlatReversed,
        [GlyphName.AccidentalDoubleFlatThreeArrowsDown] = GlyphNameDescriptions.AccidentalDoubleFlatThreeArrowsDown,
        [GlyphName.AccidentalDoubleFlatThreeArrowsUp] = GlyphNameDescriptions.AccidentalDoubleFlatThreeArrowsUp,
        [GlyphName.AccidentalDoubleFlatTurned] = GlyphNameDescriptions.AccidentalDoubleFlatTurned,
        [GlyphName.AccidentalDoubleFlatTwoArrowsDown] = GlyphNameDescriptions.AccidentalDoubleFlatTwoArrowsDown,
        [GlyphName.AccidentalDoubleFlatTwoArrowsUp] = GlyphNameDescriptions.AccidentalDoubleFlatTwoArrowsUp,
        [GlyphName.AccidentalDoubleSharp] = GlyphNameDescriptions.AccidentalDoubleSharp,
        [GlyphName.AccidentalDoubleSharpArabic] = GlyphNameDescriptions.AccidentalDoubleSharpArabic,
        [GlyphName.AccidentalDoubleSharpEqualTempered] = GlyphNameDescriptions.AccidentalDoubleSharpEqualTempered,
        [GlyphName.AccidentalDoubleSharpOneArrowDown] = GlyphNameDescriptions.AccidentalDoubleSharpOneArrowDown,
        [GlyphName.AccidentalDoubleSharpOneArrowUp] = GlyphNameDescriptions.AccidentalDoubleSharpOneArrowUp,
        [GlyphName.AccidentalDoubleSharpThreeArrowsDown] = GlyphNameDescriptions.AccidentalDoubleSharpThreeArrowsDown,
        [GlyphName.AccidentalDoubleSharpThreeArrowsUp] = GlyphNameDescriptions.AccidentalDoubleSharpThreeArrowsUp,
        [GlyphName.AccidentalDoubleSharpTwoArrowsDown] = GlyphNameDescriptions.AccidentalDoubleSharpTwoArrowsDown,
        [GlyphName.AccidentalDoubleSharpTwoArrowsUp] = GlyphNameDescriptions.AccidentalDoubleSharpTwoArrowsUp,
        [GlyphName.AccidentalEnharmonicAlmostEqualTo] = GlyphNameDescriptions.AccidentalEnharmonicAlmostEqualTo,
        [GlyphName.AccidentalEnharmonicEquals] = GlyphNameDescriptions.AccidentalEnharmonicEquals,
        [GlyphName.AccidentalEnharmonicTilde] = GlyphNameDescriptions.AccidentalEnharmonicTilde,
        [GlyphName.AccidentalFilledReversedFlatAndFlat] = GlyphNameDescriptions.AccidentalFilledReversedFlatAndFlat,
        [GlyphName.AccidentalFilledReversedFlatAndFlatArrowDown] = GlyphNameDescriptions.AccidentalFilledReversedFlatAndFlatArrowDown,
        [GlyphName.AccidentalFilledReversedFlatAndFlatArrowUp] = GlyphNameDescriptions.AccidentalFilledReversedFlatAndFlatArrowUp,
        [GlyphName.AccidentalFilledReversedFlatArrowDown] = GlyphNameDescriptions.AccidentalFilledReversedFlatArrowDown,
        [GlyphName.AccidentalFilledReversedFlatArrowUp] = GlyphNameDescriptions.AccidentalFilledReversedFlatArrowUp,
        [GlyphName.AccidentalFiveQuarterTonesFlatArrowDown] = GlyphNameDescriptions.AccidentalFiveQuarterTonesFlatArrowDown,
        [GlyphName.AccidentalFiveQuarterTonesSharpArrowUp] = GlyphNameDescriptions.AccidentalFiveQuarterTonesSharpArrowUp,
        [GlyphName.AccidentalFlat] = GlyphNameDescriptions.AccidentalFlat,
        [GlyphName.AccidentalFlatArabic] = GlyphNameDescriptions.AccidentalFlatArabic,
        [GlyphName.AccidentalFlatEqualTempered] = GlyphNameDescriptions.AccidentalFlatEqualTempered,
        [GlyphName.AccidentalFlatLoweredStockhausen] = GlyphNameDescriptions.AccidentalFlatLoweredStockhausen,
        [GlyphName.AccidentalFlatOneArrowDown] = GlyphNameDescriptions.AccidentalFlatOneArrowDown,
        [GlyphName.AccidentalFlatOneArrowUp] = GlyphNameDescriptions.AccidentalFlatOneArrowUp,
        [GlyphName.AccidentalFlatRaisedStockhausen] = GlyphNameDescriptions.AccidentalFlatRaisedStockhausen,
        [GlyphName.AccidentalFlatRepeatedLineStockhausen] = GlyphNameDescriptions.AccidentalFlatRepeatedLineStockhausen,
        [GlyphName.AccidentalFlatRepeatedSpaceStockhausen] = GlyphNameDescriptions.AccidentalFlatRepeatedSpaceStockhausen,
        [GlyphName.AccidentalFlatThreeArrowsDown] = GlyphNameDescriptions.AccidentalFlatThreeArrowsDown,
        [GlyphName.AccidentalFlatThreeArrowsUp] = GlyphNameDescriptions.AccidentalFlatThreeArrowsUp,
        [GlyphName.AccidentalFlatTurned] = GlyphNameDescriptions.AccidentalFlatTurned,
        [GlyphName.AccidentalFlatTwoArrowsDown] = GlyphNameDescriptions.AccidentalFlatTwoArrowsDown,
        [GlyphName.AccidentalFlatTwoArrowsUp] = GlyphNameDescriptions.AccidentalFlatTwoArrowsUp,
        [GlyphName.AccidentalHabaFlatQuarterToneHigher] = GlyphNameDescriptions.AccidentalHabaFlatQuarterToneHigher,
        [GlyphName.AccidentalHabaFlatThreeQuarterTonesLower] = GlyphNameDescriptions.AccidentalHabaFlatThreeQuarterTonesLower,
        [GlyphName.AccidentalHabaQuarterToneHigher] = GlyphNameDescriptions.AccidentalHabaQuarterToneHigher,
        [GlyphName.AccidentalHabaQuarterToneLower] = GlyphNameDescriptions.AccidentalHabaQuarterToneLower,
        [GlyphName.AccidentalHabaSharpQuarterToneLower] = GlyphNameDescriptions.AccidentalHabaSharpQuarterToneLower,
        [GlyphName.AccidentalHabaSharpThreeQuarterTonesHigher] = GlyphNameDescriptions.AccidentalHabaSharpThreeQuarterTonesHigher,
        [GlyphName.AccidentalHalfSharpArrowDown] = GlyphNameDescriptions.AccidentalHalfSharpArrowDown,
        [GlyphName.AccidentalHalfSharpArrowUp] = GlyphNameDescriptions.AccidentalHalfSharpArrowUp,
        [GlyphName.AccidentalJohnston13] = GlyphNameDescriptions.AccidentalJohnston13,
        [GlyphName.AccidentalJohnston31] = GlyphNameDescriptions.AccidentalJohnston31,
        [GlyphName.AccidentalJohnstonDown] = GlyphNameDescriptions.AccidentalJohnstonDown,
        [GlyphName.AccidentalJohnstonEl] = GlyphNameDescriptions.AccidentalJohnstonEl,
        [GlyphName.AccidentalJohnstonMinus] = GlyphNameDescriptions.AccidentalJohnstonMinus,
        [GlyphName.AccidentalJohnstonPlus] = GlyphNameDescriptions.AccidentalJohnstonPlus,
        [GlyphName.AccidentalJohnstonSeven] = GlyphNameDescriptions.AccidentalJohnstonSeven,
        [GlyphName.AccidentalJohnstonUp] = GlyphNameDescriptions.AccidentalJohnstonUp,
        [GlyphName.AccidentalKomaFlat] = GlyphNameDescriptions.AccidentalKomaFlat,
        [GlyphName.AccidentalKomaSharp] = GlyphNameDescriptions.AccidentalKomaSharp,
        [GlyphName.AccidentalKoron] = GlyphNameDescriptions.AccidentalKoron,
        [GlyphName.AccidentalKucukMucennebFlat] = GlyphNameDescriptions.AccidentalKucukMucennebFlat,
        [GlyphName.AccidentalKucukMucennebSharp] = GlyphNameDescriptions.AccidentalKucukMucennebSharp,
        [GlyphName.AccidentalLargeDoubleSharp] = GlyphNameDescriptions.AccidentalLargeDoubleSharp,
        [GlyphName.AccidentalLowerOneSeptimalComma] = GlyphNameDescriptions.AccidentalLowerOneSeptimalComma,
        [GlyphName.AccidentalLowerOneTridecimalQuartertone] = GlyphNameDescriptions.AccidentalLowerOneTridecimalQuartertone,
        [GlyphName.AccidentalLowerOneUndecimalQuartertone] = GlyphNameDescriptions.AccidentalLowerOneUndecimalQuartertone,
        [GlyphName.AccidentalLowerTwoSeptimalCommas] = GlyphNameDescriptions.AccidentalLowerTwoSeptimalCommas,
        [GlyphName.AccidentalLoweredStockhausen] = GlyphNameDescriptions.AccidentalLoweredStockhausen,
        [GlyphName.AccidentalNarrowReversedFlat] = GlyphNameDescriptions.AccidentalNarrowReversedFlat,
        [GlyphName.AccidentalNarrowReversedFlatAndFlat] = GlyphNameDescriptions.AccidentalNarrowReversedFlatAndFlat,
        [GlyphName.AccidentalNatural] = GlyphNameDescriptions.AccidentalNatural,
        [GlyphName.AccidentalNaturalArabic] = GlyphNameDescriptions.AccidentalNaturalArabic,
        [GlyphName.AccidentalNaturalEqualTempered] = GlyphNameDescriptions.AccidentalNaturalEqualTempered,
        [GlyphName.AccidentalNaturalFlat] = GlyphNameDescriptions.AccidentalNaturalFlat,
        [GlyphName.AccidentalNaturalLoweredStockhausen] = GlyphNameDescriptions.AccidentalNaturalLoweredStockhausen,
        [GlyphName.AccidentalNaturalOneArrowDown] = GlyphNameDescriptions.AccidentalNaturalOneArrowDown,
        [GlyphName.AccidentalNaturalOneArrowUp] = GlyphNameDescriptions.AccidentalNaturalOneArrowUp,
        [GlyphName.AccidentalNaturalRaisedStockhausen] = GlyphNameDescriptions.AccidentalNaturalRaisedStockhausen,
        [GlyphName.AccidentalNaturalReversed] = GlyphNameDescriptions.AccidentalNaturalReversed,
        [GlyphName.AccidentalNaturalSharp] = GlyphNameDescriptions.AccidentalNaturalSharp,
        [GlyphName.AccidentalNaturalThreeArrowsDown] = GlyphNameDescriptions.AccidentalNaturalThreeArrowsDown,
        [GlyphName.AccidentalNaturalThreeArrowsUp] = GlyphNameDescriptions.AccidentalNaturalThreeArrowsUp,
        [GlyphName.AccidentalNaturalTwoArrowsDown] = GlyphNameDescriptions.AccidentalNaturalTwoArrowsDown,
        [GlyphName.AccidentalNaturalTwoArrowsUp] = GlyphNameDescriptions.AccidentalNaturalTwoArrowsUp,
        [GlyphName.AccidentalOneAndAHalfSharpsArrowDown] = GlyphNameDescriptions.AccidentalOneAndAHalfSharpsArrowDown,
        [GlyphName.AccidentalOneAndAHalfSharpsArrowUp] = GlyphNameDescriptions.AccidentalOneAndAHalfSharpsArrowUp,
        [GlyphName.AccidentalOneQuarterToneFlatFerneyhough] = GlyphNameDescriptions.AccidentalOneQuarterToneFlatFerneyhough,
        [GlyphName.AccidentalOneQuarterToneFlatStockhausen] = GlyphNameDescriptions.AccidentalOneQuarterToneFlatStockhausen,
        [GlyphName.AccidentalOneQuarterToneSharpFerneyhough] = GlyphNameDescriptions.AccidentalOneQuarterToneSharpFerneyhough,
        [GlyphName.AccidentalOneQuarterToneSharpStockhausen] = GlyphNameDescriptions.AccidentalOneQuarterToneSharpStockhausen,
        [GlyphName.AccidentalOneThirdToneFlatFerneyhough] = GlyphNameDescriptions.AccidentalOneThirdToneFlatFerneyhough,
        [GlyphName.AccidentalOneThirdToneSharpFerneyhough] = GlyphNameDescriptions.AccidentalOneThirdToneSharpFerneyhough,
        [GlyphName.AccidentalParensLeft] = GlyphNameDescriptions.AccidentalParensLeft,
        [GlyphName.AccidentalParensRight] = GlyphNameDescriptions.AccidentalParensRight,
        [GlyphName.AccidentalQuarterFlatEqualTempered] = GlyphNameDescriptions.AccidentalQuarterFlatEqualTempered,
        [GlyphName.AccidentalQuarterSharpEqualTempered] = GlyphNameDescriptions.AccidentalQuarterSharpEqualTempered,
        [GlyphName.AccidentalQuarterToneFlat4] = GlyphNameDescriptions.AccidentalQuarterToneFlat4,
        [GlyphName.AccidentalQuarterToneFlatArabic] = GlyphNameDescriptions.AccidentalQuarterToneFlatArabic,
        [GlyphName.AccidentalQuarterToneFlatArrowUp] = GlyphNameDescriptions.AccidentalQuarterToneFlatArrowUp,
        [GlyphName.AccidentalQuarterToneFlatFilledReversed] = GlyphNameDescriptions.AccidentalQuarterToneFlatFilledReversed,
        [GlyphName.AccidentalQuarterToneFlatNaturalArrowDown] = GlyphNameDescriptions.AccidentalQuarterToneFlatNaturalArrowDown,
        [GlyphName.AccidentalQuarterToneFlatPenderecki] = GlyphNameDescriptions.AccidentalQuarterToneFlatPenderecki,
        [GlyphName.AccidentalQuarterToneFlatStein] = GlyphNameDescriptions.AccidentalQuarterToneFlatStein,
        [GlyphName.AccidentalQuarterToneFlatVanBlankenburg] = GlyphNameDescriptions.AccidentalQuarterToneFlatVanBlankenburg,
        [GlyphName.AccidentalQuarterToneSharp4] = GlyphNameDescriptions.AccidentalQuarterToneSharp4,
        [GlyphName.AccidentalQuarterToneSharpArabic] = GlyphNameDescriptions.AccidentalQuarterToneSharpArabic,
        [GlyphName.AccidentalQuarterToneSharpArrowDown] = GlyphNameDescriptions.AccidentalQuarterToneSharpArrowDown,
        [GlyphName.AccidentalQuarterToneSharpBusotti] = GlyphNameDescriptions.AccidentalQuarterToneSharpBusotti,
        [GlyphName.AccidentalQuarterToneSharpNaturalArrowUp] = GlyphNameDescriptions.AccidentalQuarterToneSharpNaturalArrowUp,
        [GlyphName.AccidentalQuarterToneSharpStein] = GlyphNameDescriptions.AccidentalQuarterToneSharpStein,
        [GlyphName.AccidentalQuarterToneSharpWiggle] = GlyphNameDescriptions.AccidentalQuarterToneSharpWiggle,
        [GlyphName.AccidentalRaiseOneSeptimalComma] = GlyphNameDescriptions.AccidentalRaiseOneSeptimalComma,
        [GlyphName.AccidentalRaiseOneTridecimalQuartertone] = GlyphNameDescriptions.AccidentalRaiseOneTridecimalQuartertone,
        [GlyphName.AccidentalRaiseOneUndecimalQuartertone] = GlyphNameDescriptions.AccidentalRaiseOneUndecimalQuartertone,
        [GlyphName.AccidentalRaiseTwoSeptimalCommas] = GlyphNameDescriptions.AccidentalRaiseTwoSeptimalCommas,
        [GlyphName.AccidentalRaisedStockhausen] = GlyphNameDescriptions.AccidentalRaisedStockhausen,
        [GlyphName.AccidentalReversedFlatAndFlatArrowDown] = GlyphNameDescriptions.AccidentalReversedFlatAndFlatArrowDown,
        [GlyphName.AccidentalReversedFlatAndFlatArrowUp] = GlyphNameDescriptions.AccidentalReversedFlatAndFlatArrowUp,
        [GlyphName.AccidentalReversedFlatArrowDown] = GlyphNameDescriptions.AccidentalReversedFlatArrowDown,
        [GlyphName.AccidentalReversedFlatArrowUp] = GlyphNameDescriptions.AccidentalReversedFlatArrowUp,
        [GlyphName.AccidentalSharp] = GlyphNameDescriptions.AccidentalSharp,
        [GlyphName.AccidentalSharpArabic] = GlyphNameDescriptions.AccidentalSharpArabic,
        [GlyphName.AccidentalSharpEqualTempered] = GlyphNameDescriptions.AccidentalSharpEqualTempered,
        [GlyphName.AccidentalSharpLoweredStockhausen] = GlyphNameDescriptions.AccidentalSharpLoweredStockhausen,
        [GlyphName.AccidentalSharpOneArrowDown] = GlyphNameDescriptions.AccidentalSharpOneArrowDown,
        [GlyphName.AccidentalSharpOneArrowUp] = GlyphNameDescriptions.AccidentalSharpOneArrowUp,
        [GlyphName.AccidentalSharpOneHorizontalStroke] = GlyphNameDescriptions.AccidentalSharpOneHorizontalStroke,
        [GlyphName.AccidentalSharpRaisedStockhausen] = GlyphNameDescriptions.AccidentalSharpRaisedStockhausen,
        [GlyphName.AccidentalSharpRepeatedLineStockhausen] = GlyphNameDescriptions.AccidentalSharpRepeatedLineStockhausen,
        [GlyphName.AccidentalSharpRepeatedSpaceStockhausen] = GlyphNameDescriptions.AccidentalSharpRepeatedSpaceStockhausen,
        [GlyphName.AccidentalSharpReversed] = GlyphNameDescriptions.AccidentalSharpReversed,
        [GlyphName.AccidentalSharpSharp] = GlyphNameDescriptions.AccidentalSharpSharp,
        [GlyphName.AccidentalSharpThreeArrowsDown] = GlyphNameDescriptions.AccidentalSharpThreeArrowsDown,
        [GlyphName.AccidentalSharpThreeArrowsUp] = GlyphNameDescriptions.AccidentalSharpThreeArrowsUp,
        [GlyphName.AccidentalSharpTwoArrowsDown] = GlyphNameDescriptions.AccidentalSharpTwoArrowsDown,
        [GlyphName.AccidentalSharpTwoArrowsUp] = GlyphNameDescriptions.AccidentalSharpTwoArrowsUp,
        [GlyphName.AccidentalSims12Down] = GlyphNameDescriptions.AccidentalSims12Down,
        [GlyphName.AccidentalSims12Up] = GlyphNameDescriptions.AccidentalSims12Up,
        [GlyphName.AccidentalSims4Down] = GlyphNameDescriptions.AccidentalSims4Down,
        [GlyphName.AccidentalSims4Up] = GlyphNameDescriptions.AccidentalSims4Up,
        [GlyphName.AccidentalSims6Down] = GlyphNameDescriptions.AccidentalSims6Down,
        [GlyphName.AccidentalSims6Up] = GlyphNameDescriptions.AccidentalSims6Up,
        [GlyphName.AccidentalSori] = GlyphNameDescriptions.AccidentalSori,
        [GlyphName.AccidentalTavenerFlat] = GlyphNameDescriptions.AccidentalTavenerFlat,
        [GlyphName.AccidentalTavenerSharp] = GlyphNameDescriptions.AccidentalTavenerSharp,
        [GlyphName.AccidentalThreeQuarterTonesFlatArabic] = GlyphNameDescriptions.AccidentalThreeQuarterTonesFlatArabic,
        [GlyphName.AccidentalThreeQuarterTonesFlatArrowDown] = GlyphNameDescriptions.AccidentalThreeQuarterTonesFlatArrowDown,
        [GlyphName.AccidentalThreeQuarterTonesFlatArrowUp] = GlyphNameDescriptions.AccidentalThreeQuarterTonesFlatArrowUp,
        [GlyphName.AccidentalThreeQuarterTonesFlatCouper] = GlyphNameDescriptions.AccidentalThreeQuarterTonesFlatCouper,
        [GlyphName.AccidentalThreeQuarterTonesFlatGrisey] = GlyphNameDescriptions.AccidentalThreeQuarterTonesFlatGrisey,
        [GlyphName.AccidentalThreeQuarterTonesFlatTartini] = GlyphNameDescriptions.AccidentalThreeQuarterTonesFlatTartini,
        [GlyphName.AccidentalThreeQuarterTonesFlatZimmermann] = GlyphNameDescriptions.AccidentalThreeQuarterTonesFlatZimmermann,
        [GlyphName.AccidentalThreeQuarterTonesSharpArabic] = GlyphNameDescriptions.AccidentalThreeQuarterTonesSharpArabic,
        [GlyphName.AccidentalThreeQuarterTonesSharpArrowDown] = GlyphNameDescriptions.AccidentalThreeQuarterTonesSharpArrowDown,
        [GlyphName.AccidentalThreeQuarterTonesSharpArrowUp] = GlyphNameDescriptions.AccidentalThreeQuarterTonesSharpArrowUp,
        [GlyphName.AccidentalThreeQuarterTonesSharpBusotti] = GlyphNameDescriptions.AccidentalThreeQuarterTonesSharpBusotti,
        [GlyphName.AccidentalThreeQuarterTonesSharpStein] = GlyphNameDescriptions.AccidentalThreeQuarterTonesSharpStein,
        [GlyphName.AccidentalThreeQuarterTonesSharpStockhausen] = GlyphNameDescriptions.AccidentalThreeQuarterTonesSharpStockhausen,
        [GlyphName.AccidentalTripleFlat] = GlyphNameDescriptions.AccidentalTripleFlat,
        [GlyphName.AccidentalTripleSharp] = GlyphNameDescriptions.AccidentalTripleSharp,
        [GlyphName.AccidentalTwoThirdTonesFlatFerneyhough] = GlyphNameDescriptions.AccidentalTwoThirdTonesFlatFerneyhough,
        [GlyphName.AccidentalTwoThirdTonesSharpFerneyhough] = GlyphNameDescriptions.AccidentalTwoThirdTonesSharpFerneyhough,
        [GlyphName.AccidentalUpsAndDownsDown] = GlyphNameDescriptions.AccidentalUpsAndDownsDown,
        [GlyphName.AccidentalUpsAndDownsLess] = GlyphNameDescriptions.AccidentalUpsAndDownsLess,
        [GlyphName.AccidentalUpsAndDownsMore] = GlyphNameDescriptions.AccidentalUpsAndDownsMore,
        [GlyphName.AccidentalUpsAndDownsUp] = GlyphNameDescriptions.AccidentalUpsAndDownsUp,
        [GlyphName.AccidentalWilsonMinus] = GlyphNameDescriptions.AccidentalWilsonMinus,
        [GlyphName.AccidentalWilsonPlus] = GlyphNameDescriptions.AccidentalWilsonPlus,
        [GlyphName.AccidentalWyschnegradsky10TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky10TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky10TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky10TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky11TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky11TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky11TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky11TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky1TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky1TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky1TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky1TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky2TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky2TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky2TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky2TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky3TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky3TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky3TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky3TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky4TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky4TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky4TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky4TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky5TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky5TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky5TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky5TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky6TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky6TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky6TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky6TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky7TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky7TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky7TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky7TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky8TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky8TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky8TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky8TwelfthsSharp,
        [GlyphName.AccidentalWyschnegradsky9TwelfthsFlat] = GlyphNameDescriptions.AccidentalWyschnegradsky9TwelfthsFlat,
        [GlyphName.AccidentalWyschnegradsky9TwelfthsSharp] = GlyphNameDescriptions.AccidentalWyschnegradsky9TwelfthsSharp,
        [GlyphName.AccidentalXenakisOneThirdToneSharp] = GlyphNameDescriptions.AccidentalXenakisOneThirdToneSharp,
        [GlyphName.AccidentalXenakisTwoThirdTonesSharp] = GlyphNameDescriptions.AccidentalXenakisTwoThirdTonesSharp,
        [GlyphName.AnalyticsChoralmelodie] = GlyphNameDescriptions.AnalyticsChoralmelodie,
        [GlyphName.AnalyticsEndStimme] = GlyphNameDescriptions.AnalyticsEndStimme,
        [GlyphName.AnalyticsHauptrhythmus] = GlyphNameDescriptions.AnalyticsHauptrhythmus,
        [GlyphName.AnalyticsHauptstimme] = GlyphNameDescriptions.AnalyticsHauptstimme,
        [GlyphName.AnalyticsInversion1] = GlyphNameDescriptions.AnalyticsInversion1,
        [GlyphName.AnalyticsNebenstimme] = GlyphNameDescriptions.AnalyticsNebenstimme,
        [GlyphName.AnalyticsStartStimme] = GlyphNameDescriptions.AnalyticsStartStimme,
        [GlyphName.AnalyticsTheme] = GlyphNameDescriptions.AnalyticsTheme,
        [GlyphName.AnalyticsTheme1] = GlyphNameDescriptions.AnalyticsTheme1,
        [GlyphName.AnalyticsThemeInversion] = GlyphNameDescriptions.AnalyticsThemeInversion,
        [GlyphName.AnalyticsThemeRetrograde] = GlyphNameDescriptions.AnalyticsThemeRetrograde,
        [GlyphName.AnalyticsThemeRetrogradeInversion] = GlyphNameDescriptions.AnalyticsThemeRetrogradeInversion,
        [GlyphName.Arpeggiato] = GlyphNameDescriptions.Arpeggiato,
        [GlyphName.ArpeggiatoDown] = GlyphNameDescriptions.ArpeggiatoDown,
        [GlyphName.ArpeggiatoUp] = GlyphNameDescriptions.ArpeggiatoUp,
        [GlyphName.ArrowBlackDown] = GlyphNameDescriptions.ArrowBlackDown,
        [GlyphName.ArrowBlackDownLeft] = GlyphNameDescriptions.ArrowBlackDownLeft,
        [GlyphName.ArrowBlackDownRight] = GlyphNameDescriptions.ArrowBlackDownRight,
        [GlyphName.ArrowBlackLeft] = GlyphNameDescriptions.ArrowBlackLeft,
        [GlyphName.ArrowBlackRight] = GlyphNameDescriptions.ArrowBlackRight,
        [GlyphName.ArrowBlackUp] = GlyphNameDescriptions.ArrowBlackUp,
        [GlyphName.ArrowBlackUpLeft] = GlyphNameDescriptions.ArrowBlackUpLeft,
        [GlyphName.ArrowBlackUpRight] = GlyphNameDescriptions.ArrowBlackUpRight,
        [GlyphName.ArrowOpenDown] = GlyphNameDescriptions.ArrowOpenDown,
        [GlyphName.ArrowOpenDownLeft] = GlyphNameDescriptions.ArrowOpenDownLeft,
        [GlyphName.ArrowOpenDownRight] = GlyphNameDescriptions.ArrowOpenDownRight,
        [GlyphName.ArrowOpenLeft] = GlyphNameDescriptions.ArrowOpenLeft,
        [GlyphName.ArrowOpenRight] = GlyphNameDescriptions.ArrowOpenRight,
        [GlyphName.ArrowOpenUp] = GlyphNameDescriptions.ArrowOpenUp,
        [GlyphName.ArrowOpenUpLeft] = GlyphNameDescriptions.ArrowOpenUpLeft,
        [GlyphName.ArrowOpenUpRight] = GlyphNameDescriptions.ArrowOpenUpRight,
        [GlyphName.ArrowWhiteDown] = GlyphNameDescriptions.ArrowWhiteDown,
        [GlyphName.ArrowWhiteDownLeft] = GlyphNameDescriptions.ArrowWhiteDownLeft,
        [GlyphName.ArrowWhiteDownRight] = GlyphNameDescriptions.ArrowWhiteDownRight,
        [GlyphName.ArrowWhiteLeft] = GlyphNameDescriptions.ArrowWhiteLeft,
        [GlyphName.ArrowWhiteRight] = GlyphNameDescriptions.ArrowWhiteRight,
        [GlyphName.ArrowWhiteUp] = GlyphNameDescriptions.ArrowWhiteUp,
        [GlyphName.ArrowWhiteUpLeft] = GlyphNameDescriptions.ArrowWhiteUpLeft,
        [GlyphName.ArrowWhiteUpRight] = GlyphNameDescriptions.ArrowWhiteUpRight,
        [GlyphName.ArrowheadBlackDown] = GlyphNameDescriptions.ArrowheadBlackDown,
        [GlyphName.ArrowheadBlackDownLeft] = GlyphNameDescriptions.ArrowheadBlackDownLeft,
        [GlyphName.ArrowheadBlackDownRight] = GlyphNameDescriptions.ArrowheadBlackDownRight,
        [GlyphName.ArrowheadBlackLeft] = GlyphNameDescriptions.ArrowheadBlackLeft,
        [GlyphName.ArrowheadBlackRight] = GlyphNameDescriptions.ArrowheadBlackRight,
        [GlyphName.ArrowheadBlackUp] = GlyphNameDescriptions.ArrowheadBlackUp,
        [GlyphName.ArrowheadBlackUpLeft] = GlyphNameDescriptions.ArrowheadBlackUpLeft,
        [GlyphName.ArrowheadBlackUpRight] = GlyphNameDescriptions.ArrowheadBlackUpRight,
        [GlyphName.ArrowheadOpenDown] = GlyphNameDescriptions.ArrowheadOpenDown,
        [GlyphName.ArrowheadOpenDownLeft] = GlyphNameDescriptions.ArrowheadOpenDownLeft,
        [GlyphName.ArrowheadOpenDownRight] = GlyphNameDescriptions.ArrowheadOpenDownRight,
        [GlyphName.ArrowheadOpenLeft] = GlyphNameDescriptions.ArrowheadOpenLeft,
        [GlyphName.ArrowheadOpenRight] = GlyphNameDescriptions.ArrowheadOpenRight,
        [GlyphName.ArrowheadOpenUp] = GlyphNameDescriptions.ArrowheadOpenUp,
        [GlyphName.ArrowheadOpenUpLeft] = GlyphNameDescriptions.ArrowheadOpenUpLeft,
        [GlyphName.ArrowheadOpenUpRight] = GlyphNameDescriptions.ArrowheadOpenUpRight,
        [GlyphName.ArrowheadWhiteDown] = GlyphNameDescriptions.ArrowheadWhiteDown,
        [GlyphName.ArrowheadWhiteDownLeft] = GlyphNameDescriptions.ArrowheadWhiteDownLeft,
        [GlyphName.ArrowheadWhiteDownRight] = GlyphNameDescriptions.ArrowheadWhiteDownRight,
        [GlyphName.ArrowheadWhiteLeft] = GlyphNameDescriptions.ArrowheadWhiteLeft,
        [GlyphName.ArrowheadWhiteRight] = GlyphNameDescriptions.ArrowheadWhiteRight,
        [GlyphName.ArrowheadWhiteUp] = GlyphNameDescriptions.ArrowheadWhiteUp,
        [GlyphName.ArrowheadWhiteUpLeft] = GlyphNameDescriptions.ArrowheadWhiteUpLeft,
        [GlyphName.ArrowheadWhiteUpRight] = GlyphNameDescriptions.ArrowheadWhiteUpRight,
        [GlyphName.ArticAccentAbove] = GlyphNameDescriptions.ArticAccentAbove,
        [GlyphName.ArticAccentBelow] = GlyphNameDescriptions.ArticAccentBelow,
        [GlyphName.ArticAccentStaccatoAbove] = GlyphNameDescriptions.ArticAccentStaccatoAbove,
        [GlyphName.ArticAccentStaccatoBelow] = GlyphNameDescriptions.ArticAccentStaccatoBelow,
        [GlyphName.ArticLaissezVibrerAbove] = GlyphNameDescriptions.ArticLaissezVibrerAbove,
        [GlyphName.ArticLaissezVibrerBelow] = GlyphNameDescriptions.ArticLaissezVibrerBelow,
        [GlyphName.ArticMarcatoAbove] = GlyphNameDescriptions.ArticMarcatoAbove,
        [GlyphName.ArticMarcatoBelow] = GlyphNameDescriptions.ArticMarcatoBelow,
        [GlyphName.ArticMarcatoStaccatoAbove] = GlyphNameDescriptions.ArticMarcatoStaccatoAbove,
        [GlyphName.ArticMarcatoStaccatoBelow] = GlyphNameDescriptions.ArticMarcatoStaccatoBelow,
        [GlyphName.ArticMarcatoTenutoAbove] = GlyphNameDescriptions.ArticMarcatoTenutoAbove,
        [GlyphName.ArticMarcatoTenutoBelow] = GlyphNameDescriptions.ArticMarcatoTenutoBelow,
        [GlyphName.ArticSoftAccentAbove] = GlyphNameDescriptions.ArticSoftAccentAbove,
        [GlyphName.ArticSoftAccentBelow] = GlyphNameDescriptions.ArticSoftAccentBelow,
        [GlyphName.ArticSoftAccentStaccatoAbove] = GlyphNameDescriptions.ArticSoftAccentStaccatoAbove,
        [GlyphName.ArticSoftAccentStaccatoBelow] = GlyphNameDescriptions.ArticSoftAccentStaccatoBelow,
        [GlyphName.ArticSoftAccentTenutoAbove] = GlyphNameDescriptions.ArticSoftAccentTenutoAbove,
        [GlyphName.ArticSoftAccentTenutoBelow] = GlyphNameDescriptions.ArticSoftAccentTenutoBelow,
        [GlyphName.ArticSoftAccentTenutoStaccatoAbove] = GlyphNameDescriptions.ArticSoftAccentTenutoStaccatoAbove,
        [GlyphName.ArticSoftAccentTenutoStaccatoBelow] = GlyphNameDescriptions.ArticSoftAccentTenutoStaccatoBelow,
        [GlyphName.ArticStaccatissimoAbove] = GlyphNameDescriptions.ArticStaccatissimoAbove,
        [GlyphName.ArticStaccatissimoBelow] = GlyphNameDescriptions.ArticStaccatissimoBelow,
        [GlyphName.ArticStaccatissimoStrokeAbove] = GlyphNameDescriptions.ArticStaccatissimoStrokeAbove,
        [GlyphName.ArticStaccatissimoStrokeBelow] = GlyphNameDescriptions.ArticStaccatissimoStrokeBelow,
        [GlyphName.ArticStaccatissimoWedgeAbove] = GlyphNameDescriptions.ArticStaccatissimoWedgeAbove,
        [GlyphName.ArticStaccatissimoWedgeBelow] = GlyphNameDescriptions.ArticStaccatissimoWedgeBelow,
        [GlyphName.ArticStaccatoAbove] = GlyphNameDescriptions.ArticStaccatoAbove,
        [GlyphName.ArticStaccatoBelow] = GlyphNameDescriptions.ArticStaccatoBelow,
        [GlyphName.ArticStressAbove] = GlyphNameDescriptions.ArticStressAbove,
        [GlyphName.ArticStressBelow] = GlyphNameDescriptions.ArticStressBelow,
        [GlyphName.ArticTenutoAbove] = GlyphNameDescriptions.ArticTenutoAbove,
        [GlyphName.ArticTenutoAccentAbove] = GlyphNameDescriptions.ArticTenutoAccentAbove,
        [GlyphName.ArticTenutoAccentBelow] = GlyphNameDescriptions.ArticTenutoAccentBelow,
        [GlyphName.ArticTenutoBelow] = GlyphNameDescriptions.ArticTenutoBelow,
        [GlyphName.ArticTenutoStaccatoAbove] = GlyphNameDescriptions.ArticTenutoStaccatoAbove,
        [GlyphName.ArticTenutoStaccatoBelow] = GlyphNameDescriptions.ArticTenutoStaccatoBelow,
        [GlyphName.ArticUnstressAbove] = GlyphNameDescriptions.ArticUnstressAbove,
        [GlyphName.ArticUnstressBelow] = GlyphNameDescriptions.ArticUnstressBelow,
        [GlyphName.AugmentationDot] = GlyphNameDescriptions.AugmentationDot,
        [GlyphName.BarlineDashed] = GlyphNameDescriptions.BarlineDashed,
        [GlyphName.BarlineDotted] = GlyphNameDescriptions.BarlineDotted,
        [GlyphName.BarlineDouble] = GlyphNameDescriptions.BarlineDouble,
        [GlyphName.BarlineFinal] = GlyphNameDescriptions.BarlineFinal,
        [GlyphName.BarlineHeavy] = GlyphNameDescriptions.BarlineHeavy,
        [GlyphName.BarlineHeavyHeavy] = GlyphNameDescriptions.BarlineHeavyHeavy,
        [GlyphName.BarlineReverseFinal] = GlyphNameDescriptions.BarlineReverseFinal,
        [GlyphName.BarlineShort] = GlyphNameDescriptions.BarlineShort,
        [GlyphName.BarlineSingle] = GlyphNameDescriptions.BarlineSingle,
        [GlyphName.BarlineTick] = GlyphNameDescriptions.BarlineTick,
        [GlyphName.BeamAccelRit1] = GlyphNameDescriptions.BeamAccelRit1,
        [GlyphName.BeamAccelRit10] = GlyphNameDescriptions.BeamAccelRit10,
        [GlyphName.BeamAccelRit11] = GlyphNameDescriptions.BeamAccelRit11,
        [GlyphName.BeamAccelRit12] = GlyphNameDescriptions.BeamAccelRit12,
        [GlyphName.BeamAccelRit13] = GlyphNameDescriptions.BeamAccelRit13,
        [GlyphName.BeamAccelRit14] = GlyphNameDescriptions.BeamAccelRit14,
        [GlyphName.BeamAccelRit15] = GlyphNameDescriptions.BeamAccelRit15,
        [GlyphName.BeamAccelRit2] = GlyphNameDescriptions.BeamAccelRit2,
        [GlyphName.BeamAccelRit3] = GlyphNameDescriptions.BeamAccelRit3,
        [GlyphName.BeamAccelRit4] = GlyphNameDescriptions.BeamAccelRit4,
        [GlyphName.BeamAccelRit5] = GlyphNameDescriptions.BeamAccelRit5,
        [GlyphName.BeamAccelRit6] = GlyphNameDescriptions.BeamAccelRit6,
        [GlyphName.BeamAccelRit7] = GlyphNameDescriptions.BeamAccelRit7,
        [GlyphName.BeamAccelRit8] = GlyphNameDescriptions.BeamAccelRit8,
        [GlyphName.BeamAccelRit9] = GlyphNameDescriptions.BeamAccelRit9,
        [GlyphName.BeamAccelRitFinal] = GlyphNameDescriptions.BeamAccelRitFinal,
        [GlyphName.Brace] = GlyphNameDescriptions.Brace,
        [GlyphName.Bracket] = GlyphNameDescriptions.Bracket,
        [GlyphName.BracketBottom] = GlyphNameDescriptions.BracketBottom,
        [GlyphName.BracketTop] = GlyphNameDescriptions.BracketTop,
        [GlyphName.BrassBend] = GlyphNameDescriptions.BrassBend,
        [GlyphName.BrassDoitLong] = GlyphNameDescriptions.BrassDoitLong,
        [GlyphName.BrassDoitMedium] = GlyphNameDescriptions.BrassDoitMedium,
        [GlyphName.BrassDoitShort] = GlyphNameDescriptions.BrassDoitShort,
        [GlyphName.BrassFallLipLong] = GlyphNameDescriptions.BrassFallLipLong,
        [GlyphName.BrassFallLipMedium] = GlyphNameDescriptions.BrassFallLipMedium,
        [GlyphName.BrassFallLipShort] = GlyphNameDescriptions.BrassFallLipShort,
        [GlyphName.BrassFallRoughLong] = GlyphNameDescriptions.BrassFallRoughLong,
        [GlyphName.BrassFallRoughMedium] = GlyphNameDescriptions.BrassFallRoughMedium,
        [GlyphName.BrassFallRoughShort] = GlyphNameDescriptions.BrassFallRoughShort,
        [GlyphName.BrassFallSmoothLong] = GlyphNameDescriptions.BrassFallSmoothLong,
        [GlyphName.BrassFallSmoothMedium] = GlyphNameDescriptions.BrassFallSmoothMedium,
        [GlyphName.BrassFallSmoothShort] = GlyphNameDescriptions.BrassFallSmoothShort,
        [GlyphName.BrassFlip] = GlyphNameDescriptions.BrassFlip,
        [GlyphName.BrassHarmonMuteClosed] = GlyphNameDescriptions.BrassHarmonMuteClosed,
        [GlyphName.BrassHarmonMuteStemHalfLeft] = GlyphNameDescriptions.BrassHarmonMuteStemHalfLeft,
        [GlyphName.BrassHarmonMuteStemHalfRight] = GlyphNameDescriptions.BrassHarmonMuteStemHalfRight,
        [GlyphName.BrassHarmonMuteStemOpen] = GlyphNameDescriptions.BrassHarmonMuteStemOpen,
        [GlyphName.BrassJazzTurn] = GlyphNameDescriptions.BrassJazzTurn,
        [GlyphName.BrassLiftLong] = GlyphNameDescriptions.BrassLiftLong,
        [GlyphName.BrassLiftMedium] = GlyphNameDescriptions.BrassLiftMedium,
        [GlyphName.BrassLiftShort] = GlyphNameDescriptions.BrassLiftShort,
        [GlyphName.BrassLiftSmoothLong] = GlyphNameDescriptions.BrassLiftSmoothLong,
        [GlyphName.BrassLiftSmoothMedium] = GlyphNameDescriptions.BrassLiftSmoothMedium,
        [GlyphName.BrassLiftSmoothShort] = GlyphNameDescriptions.BrassLiftSmoothShort,
        [GlyphName.BrassMuteClosed] = GlyphNameDescriptions.BrassMuteClosed,
        [GlyphName.BrassMuteHalfClosed] = GlyphNameDescriptions.BrassMuteHalfClosed,
        [GlyphName.BrassMuteOpen] = GlyphNameDescriptions.BrassMuteOpen,
        [GlyphName.BrassPlop] = GlyphNameDescriptions.BrassPlop,
        [GlyphName.BrassScoop] = GlyphNameDescriptions.BrassScoop,
        [GlyphName.BrassSmear] = GlyphNameDescriptions.BrassSmear,
        [GlyphName.BrassValveTrill] = GlyphNameDescriptions.BrassValveTrill,
        [GlyphName.BreathMarkComma] = GlyphNameDescriptions.BreathMarkComma,
        [GlyphName.BreathMarkSalzedo] = GlyphNameDescriptions.BreathMarkSalzedo,
        [GlyphName.BreathMarkTick] = GlyphNameDescriptions.BreathMarkTick,
        [GlyphName.BreathMarkUpbow] = GlyphNameDescriptions.BreathMarkUpbow,
        [GlyphName.BridgeClef] = GlyphNameDescriptions.BridgeClef,
        [GlyphName.BuzzRoll] = GlyphNameDescriptions.BuzzRoll,
        [GlyphName.CClef] = GlyphNameDescriptions.CClef,
        [GlyphName.CClef8vb] = GlyphNameDescriptions.CClef8vb,
        [GlyphName.CClefArrowDown] = GlyphNameDescriptions.CClefArrowDown,
        [GlyphName.CClefArrowUp] = GlyphNameDescriptions.CClefArrowUp,
        [GlyphName.CClefChange] = GlyphNameDescriptions.CClefChange,
        [GlyphName.CClefCombining] = GlyphNameDescriptions.CClefCombining,
        [GlyphName.CClefReversed] = GlyphNameDescriptions.CClefReversed,
        [GlyphName.CClefSquare] = GlyphNameDescriptions.CClefSquare,
        [GlyphName.Caesura] = GlyphNameDescriptions.Caesura,
        [GlyphName.CaesuraCurved] = GlyphNameDescriptions.CaesuraCurved,
        [GlyphName.CaesuraShort] = GlyphNameDescriptions.CaesuraShort,
        [GlyphName.CaesuraSingleStroke] = GlyphNameDescriptions.CaesuraSingleStroke,
        [GlyphName.CaesuraThick] = GlyphNameDescriptions.CaesuraThick,
        [GlyphName.ChantAccentusAbove] = GlyphNameDescriptions.ChantAccentusAbove,
        [GlyphName.ChantAccentusBelow] = GlyphNameDescriptions.ChantAccentusBelow,
        [GlyphName.ChantAuctumAsc] = GlyphNameDescriptions.ChantAuctumAsc,
        [GlyphName.ChantAuctumDesc] = GlyphNameDescriptions.ChantAuctumDesc,
        [GlyphName.ChantAugmentum] = GlyphNameDescriptions.ChantAugmentum,
        [GlyphName.ChantCaesura] = GlyphNameDescriptions.ChantCaesura,
        [GlyphName.ChantCclef] = GlyphNameDescriptions.ChantCclef,
        [GlyphName.ChantCirculusAbove] = GlyphNameDescriptions.ChantCirculusAbove,
        [GlyphName.ChantCirculusBelow] = GlyphNameDescriptions.ChantCirculusBelow,
        [GlyphName.ChantConnectingLineAsc2nd] = GlyphNameDescriptions.ChantConnectingLineAsc2nd,
        [GlyphName.ChantConnectingLineAsc3rd] = GlyphNameDescriptions.ChantConnectingLineAsc3rd,
        [GlyphName.ChantConnectingLineAsc4th] = GlyphNameDescriptions.ChantConnectingLineAsc4th,
        [GlyphName.ChantConnectingLineAsc5th] = GlyphNameDescriptions.ChantConnectingLineAsc5th,
        [GlyphName.ChantConnectingLineAsc6th] = GlyphNameDescriptions.ChantConnectingLineAsc6th,
        [GlyphName.ChantCustosStemDownPosHigh] = GlyphNameDescriptions.ChantCustosStemDownPosHigh,
        [GlyphName.ChantCustosStemDownPosHighest] = GlyphNameDescriptions.ChantCustosStemDownPosHighest,
        [GlyphName.ChantCustosStemDownPosMiddle] = GlyphNameDescriptions.ChantCustosStemDownPosMiddle,
        [GlyphName.ChantCustosStemUpPosLow] = GlyphNameDescriptions.ChantCustosStemUpPosLow,
        [GlyphName.ChantCustosStemUpPosLowest] = GlyphNameDescriptions.ChantCustosStemUpPosLowest,
        [GlyphName.ChantCustosStemUpPosMiddle] = GlyphNameDescriptions.ChantCustosStemUpPosMiddle,
        [GlyphName.ChantDeminutumLower] = GlyphNameDescriptions.ChantDeminutumLower,
        [GlyphName.ChantDeminutumUpper] = GlyphNameDescriptions.ChantDeminutumUpper,
        [GlyphName.ChantDivisioFinalis] = GlyphNameDescriptions.ChantDivisioFinalis,
        [GlyphName.ChantDivisioMaior] = GlyphNameDescriptions.ChantDivisioMaior,
        [GlyphName.ChantDivisioMaxima] = GlyphNameDescriptions.ChantDivisioMaxima,
        [GlyphName.ChantDivisioMinima] = GlyphNameDescriptions.ChantDivisioMinima,
        [GlyphName.ChantEntryLineAsc2nd] = GlyphNameDescriptions.ChantEntryLineAsc2nd,
        [GlyphName.ChantEntryLineAsc3rd] = GlyphNameDescriptions.ChantEntryLineAsc3rd,
        [GlyphName.ChantEntryLineAsc4th] = GlyphNameDescriptions.ChantEntryLineAsc4th,
        [GlyphName.ChantEntryLineAsc5th] = GlyphNameDescriptions.ChantEntryLineAsc5th,
        [GlyphName.ChantEntryLineAsc6th] = GlyphNameDescriptions.ChantEntryLineAsc6th,
        [GlyphName.ChantEpisema] = GlyphNameDescriptions.ChantEpisema,
        [GlyphName.ChantFclef] = GlyphNameDescriptions.ChantFclef,
        [GlyphName.ChantIctusAbove] = GlyphNameDescriptions.ChantIctusAbove,
        [GlyphName.ChantIctusBelow] = GlyphNameDescriptions.ChantIctusBelow,
        [GlyphName.ChantLigaturaDesc2nd] = GlyphNameDescriptions.ChantLigaturaDesc2nd,
        [GlyphName.ChantLigaturaDesc3rd] = GlyphNameDescriptions.ChantLigaturaDesc3rd,
        [GlyphName.ChantLigaturaDesc4th] = GlyphNameDescriptions.ChantLigaturaDesc4th,
        [GlyphName.ChantLigaturaDesc5th] = GlyphNameDescriptions.ChantLigaturaDesc5th,
        [GlyphName.ChantOriscusAscending] = GlyphNameDescriptions.ChantOriscusAscending,
        [GlyphName.ChantOriscusDescending] = GlyphNameDescriptions.ChantOriscusDescending,
        [GlyphName.ChantOriscusLiquescens] = GlyphNameDescriptions.ChantOriscusLiquescens,
        [GlyphName.ChantPodatusLower] = GlyphNameDescriptions.ChantPodatusLower,
        [GlyphName.ChantPodatusUpper] = GlyphNameDescriptions.ChantPodatusUpper,
        [GlyphName.ChantPunctum] = GlyphNameDescriptions.ChantPunctum,
        [GlyphName.ChantPunctumCavum] = GlyphNameDescriptions.ChantPunctumCavum,
        [GlyphName.ChantPunctumDeminutum] = GlyphNameDescriptions.ChantPunctumDeminutum,
        [GlyphName.ChantPunctumInclinatum] = GlyphNameDescriptions.ChantPunctumInclinatum,
        [GlyphName.ChantPunctumInclinatumAuctum] = GlyphNameDescriptions.ChantPunctumInclinatumAuctum,
        [GlyphName.ChantPunctumInclinatumDeminutum] = GlyphNameDescriptions.ChantPunctumInclinatumDeminutum,
        [GlyphName.ChantPunctumLinea] = GlyphNameDescriptions.ChantPunctumLinea,
        [GlyphName.ChantPunctumLineaCavum] = GlyphNameDescriptions.ChantPunctumLineaCavum,
        [GlyphName.ChantPunctumVirga] = GlyphNameDescriptions.ChantPunctumVirga,
        [GlyphName.ChantPunctumVirgaReversed] = GlyphNameDescriptions.ChantPunctumVirgaReversed,
        [GlyphName.ChantQuilisma] = GlyphNameDescriptions.ChantQuilisma,
        [GlyphName.ChantSemicirculusAbove] = GlyphNameDescriptions.ChantSemicirculusAbove,
        [GlyphName.ChantSemicirculusBelow] = GlyphNameDescriptions.ChantSemicirculusBelow,
        [GlyphName.ChantStaff] = GlyphNameDescriptions.ChantStaff,
        [GlyphName.ChantStaffNarrow] = GlyphNameDescriptions.ChantStaffNarrow,
        [GlyphName.ChantStaffWide] = GlyphNameDescriptions.ChantStaffWide,
        [GlyphName.ChantStrophicus] = GlyphNameDescriptions.ChantStrophicus,
        [GlyphName.ChantStrophicusAuctus] = GlyphNameDescriptions.ChantStrophicusAuctus,
        [GlyphName.ChantStrophicusLiquescens2nd] = GlyphNameDescriptions.ChantStrophicusLiquescens2nd,
        [GlyphName.ChantStrophicusLiquescens3rd] = GlyphNameDescriptions.ChantStrophicusLiquescens3rd,
        [GlyphName.ChantStrophicusLiquescens4th] = GlyphNameDescriptions.ChantStrophicusLiquescens4th,
        [GlyphName.ChantStrophicusLiquescens5th] = GlyphNameDescriptions.ChantStrophicusLiquescens5th,
        [GlyphName.ChantVirgula] = GlyphNameDescriptions.ChantVirgula,
        [GlyphName.Clef15] = GlyphNameDescriptions.Clef15,
        [GlyphName.Clef8] = GlyphNameDescriptions.Clef8,
        [GlyphName.ClefChangeCombining] = GlyphNameDescriptions.ClefChangeCombining,
        [GlyphName.Coda] = GlyphNameDescriptions.Coda,
        [GlyphName.CodaSquare] = GlyphNameDescriptions.CodaSquare,
        [GlyphName.ConductorBeat2Compound] = GlyphNameDescriptions.ConductorBeat2Compound,
        [GlyphName.ConductorBeat2Simple] = GlyphNameDescriptions.ConductorBeat2Simple,
        [GlyphName.ConductorBeat3Compound] = GlyphNameDescriptions.ConductorBeat3Compound,
        [GlyphName.ConductorBeat3Simple] = GlyphNameDescriptions.ConductorBeat3Simple,
        [GlyphName.ConductorBeat4Compound] = GlyphNameDescriptions.ConductorBeat4Compound,
        [GlyphName.ConductorBeat4Simple] = GlyphNameDescriptions.ConductorBeat4Simple,
        [GlyphName.ConductorLeftBeat] = GlyphNameDescriptions.ConductorLeftBeat,
        [GlyphName.ConductorRightBeat] = GlyphNameDescriptions.ConductorRightBeat,
        [GlyphName.ConductorStrongBeat] = GlyphNameDescriptions.ConductorStrongBeat,
        [GlyphName.ConductorUnconducted] = GlyphNameDescriptions.ConductorUnconducted,
        [GlyphName.ConductorWeakBeat] = GlyphNameDescriptions.ConductorWeakBeat,
        [GlyphName.ControlBeginBeam] = GlyphNameDescriptions.ControlBeginBeam,
        [GlyphName.ControlBeginPhrase] = GlyphNameDescriptions.ControlBeginPhrase,
        [GlyphName.ControlBeginSlur] = GlyphNameDescriptions.ControlBeginSlur,
        [GlyphName.ControlBeginTie] = GlyphNameDescriptions.ControlBeginTie,
        [GlyphName.ControlEndBeam] = GlyphNameDescriptions.ControlEndBeam,
        [GlyphName.ControlEndPhrase] = GlyphNameDescriptions.ControlEndPhrase,
        [GlyphName.ControlEndSlur] = GlyphNameDescriptions.ControlEndSlur,
        [GlyphName.ControlEndTie] = GlyphNameDescriptions.ControlEndTie,
        [GlyphName.CsymAccidentalDoubleFlat] = GlyphNameDescriptions.CsymAccidentalDoubleFlat,
        [GlyphName.CsymAccidentalDoubleSharp] = GlyphNameDescriptions.CsymAccidentalDoubleSharp,
        [GlyphName.CsymAccidentalFlat] = GlyphNameDescriptions.CsymAccidentalFlat,
        [GlyphName.CsymAccidentalNatural] = GlyphNameDescriptions.CsymAccidentalNatural,
        [GlyphName.CsymAccidentalSharp] = GlyphNameDescriptions.CsymAccidentalSharp,
        [GlyphName.CsymAccidentalTripleFlat] = GlyphNameDescriptions.CsymAccidentalTripleFlat,
        [GlyphName.CsymAccidentalTripleSharp] = GlyphNameDescriptions.CsymAccidentalTripleSharp,
        [GlyphName.CsymAlteredBassSlash] = GlyphNameDescriptions.CsymAlteredBassSlash,
        [GlyphName.CsymAugmented] = GlyphNameDescriptions.CsymAugmented,
        [GlyphName.CsymBracketLeftTall] = GlyphNameDescriptions.CsymBracketLeftTall,
        [GlyphName.CsymBracketRightTall] = GlyphNameDescriptions.CsymBracketRightTall,
        [GlyphName.CsymDiagonalArrangementSlash] = GlyphNameDescriptions.CsymDiagonalArrangementSlash,
        [GlyphName.CsymDiminished] = GlyphNameDescriptions.CsymDiminished,
        [GlyphName.CsymHalfDiminished] = GlyphNameDescriptions.CsymHalfDiminished,
        [GlyphName.CsymMajorSeventh] = GlyphNameDescriptions.CsymMajorSeventh,
        [GlyphName.CsymMinor] = GlyphNameDescriptions.CsymMinor,
        [GlyphName.CsymParensLeftTall] = GlyphNameDescriptions.CsymParensLeftTall,
        [GlyphName.CsymParensLeftVeryTall] = GlyphNameDescriptions.CsymParensLeftVeryTall,
        [GlyphName.CsymParensRightTall] = GlyphNameDescriptions.CsymParensRightTall,
        [GlyphName.CsymParensRightVeryTall] = GlyphNameDescriptions.CsymParensRightVeryTall,
        [GlyphName.CurlewSign] = GlyphNameDescriptions.CurlewSign,
        [GlyphName.DaCapo] = GlyphNameDescriptions.DaCapo,
        [GlyphName.DalSegno] = GlyphNameDescriptions.DalSegno,
        [GlyphName.DaseianExcellentes1] = GlyphNameDescriptions.DaseianExcellentes1,
        [GlyphName.DaseianExcellentes2] = GlyphNameDescriptions.DaseianExcellentes2,
        [GlyphName.DaseianExcellentes3] = GlyphNameDescriptions.DaseianExcellentes3,
        [GlyphName.DaseianExcellentes4] = GlyphNameDescriptions.DaseianExcellentes4,
        [GlyphName.DaseianFinales1] = GlyphNameDescriptions.DaseianFinales1,
        [GlyphName.DaseianFinales2] = GlyphNameDescriptions.DaseianFinales2,
        [GlyphName.DaseianFinales3] = GlyphNameDescriptions.DaseianFinales3,
        [GlyphName.DaseianFinales4] = GlyphNameDescriptions.DaseianFinales4,
        [GlyphName.DaseianGraves1] = GlyphNameDescriptions.DaseianGraves1,
        [GlyphName.DaseianGraves2] = GlyphNameDescriptions.DaseianGraves2,
        [GlyphName.DaseianGraves3] = GlyphNameDescriptions.DaseianGraves3,
        [GlyphName.DaseianGraves4] = GlyphNameDescriptions.DaseianGraves4,
        [GlyphName.DaseianResidua1] = GlyphNameDescriptions.DaseianResidua1,
        [GlyphName.DaseianResidua2] = GlyphNameDescriptions.DaseianResidua2,
        [GlyphName.DaseianSuperiores1] = GlyphNameDescriptions.DaseianSuperiores1,
        [GlyphName.DaseianSuperiores2] = GlyphNameDescriptions.DaseianSuperiores2,
        [GlyphName.DaseianSuperiores3] = GlyphNameDescriptions.DaseianSuperiores3,
        [GlyphName.DaseianSuperiores4] = GlyphNameDescriptions.DaseianSuperiores4,
        [GlyphName.DoubleLateralRollStevens] = GlyphNameDescriptions.DoubleLateralRollStevens,
        [GlyphName.DoubleTongueAbove] = GlyphNameDescriptions.DoubleTongueAbove,
        [GlyphName.DoubleTongueBelow] = GlyphNameDescriptions.DoubleTongueBelow,
        [GlyphName.DynamicCombinedSeparatorColon] = GlyphNameDescriptions.DynamicCombinedSeparatorColon,
        [GlyphName.DynamicCombinedSeparatorHyphen] = GlyphNameDescriptions.DynamicCombinedSeparatorHyphen,
        [GlyphName.DynamicCombinedSeparatorSlash] = GlyphNameDescriptions.DynamicCombinedSeparatorSlash,
        [GlyphName.DynamicCombinedSeparatorSpace] = GlyphNameDescriptions.DynamicCombinedSeparatorSpace,
        [GlyphName.DynamicCrescendoHairpin] = GlyphNameDescriptions.DynamicCrescendoHairpin,
        [GlyphName.DynamicDiminuendoHairpin] = GlyphNameDescriptions.DynamicDiminuendoHairpin,
        [GlyphName.DynamicFF] = GlyphNameDescriptions.DynamicFF,
        [GlyphName.DynamicFFF] = GlyphNameDescriptions.DynamicFFF,
        [GlyphName.DynamicFFFF] = GlyphNameDescriptions.DynamicFFFF,
        [GlyphName.DynamicFFFFF] = GlyphNameDescriptions.DynamicFFFFF,
        [GlyphName.DynamicFFFFFF] = GlyphNameDescriptions.DynamicFFFFFF,
        [GlyphName.DynamicForte] = GlyphNameDescriptions.DynamicForte,
        [GlyphName.DynamicFortePiano] = GlyphNameDescriptions.DynamicFortePiano,
        [GlyphName.DynamicForzando] = GlyphNameDescriptions.DynamicForzando,
        [GlyphName.DynamicHairpinBracketLeft] = GlyphNameDescriptions.DynamicHairpinBracketLeft,
        [GlyphName.DynamicHairpinBracketRight] = GlyphNameDescriptions.DynamicHairpinBracketRight,
        [GlyphName.DynamicHairpinParenthesisLeft] = GlyphNameDescriptions.DynamicHairpinParenthesisLeft,
        [GlyphName.DynamicHairpinParenthesisRight] = GlyphNameDescriptions.DynamicHairpinParenthesisRight,
        [GlyphName.DynamicMF] = GlyphNameDescriptions.DynamicMF,
        [GlyphName.DynamicMP] = GlyphNameDescriptions.DynamicMP,
        [GlyphName.DynamicMessaDiVoce] = GlyphNameDescriptions.DynamicMessaDiVoce,
        [GlyphName.DynamicMezzo] = GlyphNameDescriptions.DynamicMezzo,
        [GlyphName.DynamicNiente] = GlyphNameDescriptions.DynamicNiente,
        [GlyphName.DynamicNienteForHairpin] = GlyphNameDescriptions.DynamicNienteForHairpin,
        [GlyphName.DynamicPF] = GlyphNameDescriptions.DynamicPF,
        [GlyphName.DynamicPP] = GlyphNameDescriptions.DynamicPP,
        [GlyphName.DynamicPPP] = GlyphNameDescriptions.DynamicPPP,
        [GlyphName.DynamicPPPP] = GlyphNameDescriptions.DynamicPPPP,
        [GlyphName.DynamicPPPPP] = GlyphNameDescriptions.DynamicPPPPP,
        [GlyphName.DynamicPPPPPP] = GlyphNameDescriptions.DynamicPPPPPP,
        [GlyphName.DynamicPiano] = GlyphNameDescriptions.DynamicPiano,
        [GlyphName.DynamicRinforzando] = GlyphNameDescriptions.DynamicRinforzando,
        [GlyphName.DynamicRinforzando1] = GlyphNameDescriptions.DynamicRinforzando1,
        [GlyphName.DynamicRinforzando2] = GlyphNameDescriptions.DynamicRinforzando2,
        [GlyphName.DynamicSforzando] = GlyphNameDescriptions.DynamicSforzando,
        [GlyphName.DynamicSforzando1] = GlyphNameDescriptions.DynamicSforzando1,
        [GlyphName.DynamicSforzandoPianissimo] = GlyphNameDescriptions.DynamicSforzandoPianissimo,
        [GlyphName.DynamicSforzandoPiano] = GlyphNameDescriptions.DynamicSforzandoPiano,
        [GlyphName.DynamicSforzato] = GlyphNameDescriptions.DynamicSforzato,
        [GlyphName.DynamicSforzatoFF] = GlyphNameDescriptions.DynamicSforzatoFF,
        [GlyphName.DynamicSforzatoPiano] = GlyphNameDescriptions.DynamicSforzatoPiano,
        [GlyphName.DynamicZ] = GlyphNameDescriptions.DynamicZ,
        [GlyphName.ElecAudioChannelsEight] = GlyphNameDescriptions.ElecAudioChannelsEight,
        [GlyphName.ElecAudioChannelsFive] = GlyphNameDescriptions.ElecAudioChannelsFive,
        [GlyphName.ElecAudioChannelsFour] = GlyphNameDescriptions.ElecAudioChannelsFour,
        [GlyphName.ElecAudioChannelsOne] = GlyphNameDescriptions.ElecAudioChannelsOne,
        [GlyphName.ElecAudioChannelsSeven] = GlyphNameDescriptions.ElecAudioChannelsSeven,
        [GlyphName.ElecAudioChannelsSix] = GlyphNameDescriptions.ElecAudioChannelsSix,
        [GlyphName.ElecAudioChannelsThreeFrontal] = GlyphNameDescriptions.ElecAudioChannelsThreeFrontal,
        [GlyphName.ElecAudioChannelsThreeSurround] = GlyphNameDescriptions.ElecAudioChannelsThreeSurround,
        [GlyphName.ElecAudioChannelsTwo] = GlyphNameDescriptions.ElecAudioChannelsTwo,
        [GlyphName.ElecAudioIn] = GlyphNameDescriptions.ElecAudioIn,
        [GlyphName.ElecAudioMono] = GlyphNameDescriptions.ElecAudioMono,
        [GlyphName.ElecAudioOut] = GlyphNameDescriptions.ElecAudioOut,
        [GlyphName.ElecAudioStereo] = GlyphNameDescriptions.ElecAudioStereo,
        [GlyphName.ElecCamera] = GlyphNameDescriptions.ElecCamera,
        [GlyphName.ElecDataIn] = GlyphNameDescriptions.ElecDataIn,
        [GlyphName.ElecDataOut] = GlyphNameDescriptions.ElecDataOut,
        [GlyphName.ElecDisc] = GlyphNameDescriptions.ElecDisc,
        [GlyphName.ElecDownload] = GlyphNameDescriptions.ElecDownload,
        [GlyphName.ElecEject] = GlyphNameDescriptions.ElecEject,
        [GlyphName.ElecFastForward] = GlyphNameDescriptions.ElecFastForward,
        [GlyphName.ElecHeadphones] = GlyphNameDescriptions.ElecHeadphones,
        [GlyphName.ElecHeadset] = GlyphNameDescriptions.ElecHeadset,
        [GlyphName.ElecLineIn] = GlyphNameDescriptions.ElecLineIn,
        [GlyphName.ElecLineOut] = GlyphNameDescriptions.ElecLineOut,
        [GlyphName.ElecLoop] = GlyphNameDescriptions.ElecLoop,
        [GlyphName.ElecLoudspeaker] = GlyphNameDescriptions.ElecLoudspeaker,
        [GlyphName.ElecMIDIController0] = GlyphNameDescriptions.ElecMIDIController0,
        [GlyphName.ElecMIDIController100] = GlyphNameDescriptions.ElecMIDIController100,
        [GlyphName.ElecMIDIController20] = GlyphNameDescriptions.ElecMIDIController20,
        [GlyphName.ElecMIDIController40] = GlyphNameDescriptions.ElecMIDIController40,
        [GlyphName.ElecMIDIController60] = GlyphNameDescriptions.ElecMIDIController60,
        [GlyphName.ElecMIDIController80] = GlyphNameDescriptions.ElecMIDIController80,
        [GlyphName.ElecMIDIIn] = GlyphNameDescriptions.ElecMIDIIn,
        [GlyphName.ElecMIDIOut] = GlyphNameDescriptions.ElecMIDIOut,
        [GlyphName.ElecMicrophone] = GlyphNameDescriptions.ElecMicrophone,
        [GlyphName.ElecMicrophoneMute] = GlyphNameDescriptions.ElecMicrophoneMute,
        [GlyphName.ElecMicrophoneUnmute] = GlyphNameDescriptions.ElecMicrophoneUnmute,
        [GlyphName.ElecMixingConsole] = GlyphNameDescriptions.ElecMixingConsole,
        [GlyphName.ElecMonitor] = GlyphNameDescriptions.ElecMonitor,
        [GlyphName.ElecMute] = GlyphNameDescriptions.ElecMute,
        [GlyphName.ElecPause] = GlyphNameDescriptions.ElecPause,
        [GlyphName.ElecPlay] = GlyphNameDescriptions.ElecPlay,
        [GlyphName.ElecPowerOnOff] = GlyphNameDescriptions.ElecPowerOnOff,
        [GlyphName.ElecProjector] = GlyphNameDescriptions.ElecProjector,
        [GlyphName.ElecReplay] = GlyphNameDescriptions.ElecReplay,
        [GlyphName.ElecRewind] = GlyphNameDescriptions.ElecRewind,
        [GlyphName.ElecShuffle] = GlyphNameDescriptions.ElecShuffle,
        [GlyphName.ElecSkipBackwards] = GlyphNameDescriptions.ElecSkipBackwards,
        [GlyphName.ElecSkipForwards] = GlyphNameDescriptions.ElecSkipForwards,
        [GlyphName.ElecStop] = GlyphNameDescriptions.ElecStop,
        [GlyphName.ElecTape] = GlyphNameDescriptions.ElecTape,
        [GlyphName.ElecUSB] = GlyphNameDescriptions.ElecUSB,
        [GlyphName.ElecUnmute] = GlyphNameDescriptions.ElecUnmute,
        [GlyphName.ElecUpload] = GlyphNameDescriptions.ElecUpload,
        [GlyphName.ElecVideoCamera] = GlyphNameDescriptions.ElecVideoCamera,
        [GlyphName.ElecVideoIn] = GlyphNameDescriptions.ElecVideoIn,
        [GlyphName.ElecVideoOut] = GlyphNameDescriptions.ElecVideoOut,
        [GlyphName.ElecVolumeFader] = GlyphNameDescriptions.ElecVolumeFader,
        [GlyphName.ElecVolumeFaderThumb] = GlyphNameDescriptions.ElecVolumeFaderThumb,
        [GlyphName.ElecVolumeLevel0] = GlyphNameDescriptions.ElecVolumeLevel0,
        [GlyphName.ElecVolumeLevel100] = GlyphNameDescriptions.ElecVolumeLevel100,
        [GlyphName.ElecVolumeLevel20] = GlyphNameDescriptions.ElecVolumeLevel20,
        [GlyphName.ElecVolumeLevel40] = GlyphNameDescriptions.ElecVolumeLevel40,
        [GlyphName.ElecVolumeLevel60] = GlyphNameDescriptions.ElecVolumeLevel60,
        [GlyphName.ElecVolumeLevel80] = GlyphNameDescriptions.ElecVolumeLevel80,
        [GlyphName.FClef] = GlyphNameDescriptions.FClef,
        [GlyphName.FClef15ma] = GlyphNameDescriptions.FClef15ma,
        [GlyphName.FClef15mb] = GlyphNameDescriptions.FClef15mb,
        [GlyphName.FClef8va] = GlyphNameDescriptions.FClef8va,
        [GlyphName.FClef8vb] = GlyphNameDescriptions.FClef8vb,
        [GlyphName.FClefArrowDown] = GlyphNameDescriptions.FClefArrowDown,
        [GlyphName.FClefArrowUp] = GlyphNameDescriptions.FClefArrowUp,
        [GlyphName.FClefChange] = GlyphNameDescriptions.FClefChange,
        [GlyphName.FClefReversed] = GlyphNameDescriptions.FClefReversed,
        [GlyphName.FClefTurned] = GlyphNameDescriptions.FClefTurned,
        [GlyphName.FermataAbove] = GlyphNameDescriptions.FermataAbove,
        [GlyphName.FermataBelow] = GlyphNameDescriptions.FermataBelow,
        [GlyphName.FermataLongAbove] = GlyphNameDescriptions.FermataLongAbove,
        [GlyphName.FermataLongBelow] = GlyphNameDescriptions.FermataLongBelow,
        [GlyphName.FermataLongHenzeAbove] = GlyphNameDescriptions.FermataLongHenzeAbove,
        [GlyphName.FermataLongHenzeBelow] = GlyphNameDescriptions.FermataLongHenzeBelow,
        [GlyphName.FermataShortAbove] = GlyphNameDescriptions.FermataShortAbove,
        [GlyphName.FermataShortBelow] = GlyphNameDescriptions.FermataShortBelow,
        [GlyphName.FermataShortHenzeAbove] = GlyphNameDescriptions.FermataShortHenzeAbove,
        [GlyphName.FermataShortHenzeBelow] = GlyphNameDescriptions.FermataShortHenzeBelow,
        [GlyphName.FermataVeryLongAbove] = GlyphNameDescriptions.FermataVeryLongAbove,
        [GlyphName.FermataVeryLongBelow] = GlyphNameDescriptions.FermataVeryLongBelow,
        [GlyphName.FermataVeryShortAbove] = GlyphNameDescriptions.FermataVeryShortAbove,
        [GlyphName.FermataVeryShortBelow] = GlyphNameDescriptions.FermataVeryShortBelow,
        [GlyphName.Figbass0] = GlyphNameDescriptions.Figbass0,
        [GlyphName.Figbass1] = GlyphNameDescriptions.Figbass1,
        [GlyphName.Figbass2] = GlyphNameDescriptions.Figbass2,
        [GlyphName.Figbass2Raised] = GlyphNameDescriptions.Figbass2Raised,
        [GlyphName.Figbass3] = GlyphNameDescriptions.Figbass3,
        [GlyphName.Figbass4] = GlyphNameDescriptions.Figbass4,
        [GlyphName.Figbass4Raised] = GlyphNameDescriptions.Figbass4Raised,
        [GlyphName.Figbass5] = GlyphNameDescriptions.Figbass5,
        [GlyphName.Figbass5Raised1] = GlyphNameDescriptions.Figbass5Raised1,
        [GlyphName.Figbass5Raised2] = GlyphNameDescriptions.Figbass5Raised2,
        [GlyphName.Figbass5Raised3] = GlyphNameDescriptions.Figbass5Raised3,
        [GlyphName.Figbass6] = GlyphNameDescriptions.Figbass6,
        [GlyphName.Figbass6Raised] = GlyphNameDescriptions.Figbass6Raised,
        [GlyphName.Figbass6Raised2] = GlyphNameDescriptions.Figbass6Raised2,
        [GlyphName.Figbass7] = GlyphNameDescriptions.Figbass7,
        [GlyphName.Figbass7Diminished] = GlyphNameDescriptions.Figbass7Diminished,
        [GlyphName.Figbass7Raised1] = GlyphNameDescriptions.Figbass7Raised1,
        [GlyphName.Figbass7Raised2] = GlyphNameDescriptions.Figbass7Raised2,
        [GlyphName.Figbass8] = GlyphNameDescriptions.Figbass8,
        [GlyphName.Figbass9] = GlyphNameDescriptions.Figbass9,
        [GlyphName.Figbass9Raised] = GlyphNameDescriptions.Figbass9Raised,
        [GlyphName.FigbassBracketLeft] = GlyphNameDescriptions.FigbassBracketLeft,
        [GlyphName.FigbassBracketRight] = GlyphNameDescriptions.FigbassBracketRight,
        [GlyphName.FigbassCombiningLowering] = GlyphNameDescriptions.FigbassCombiningLowering,
        [GlyphName.FigbassCombiningRaising] = GlyphNameDescriptions.FigbassCombiningRaising,
        [GlyphName.FigbassDoubleFlat] = GlyphNameDescriptions.FigbassDoubleFlat,
        [GlyphName.FigbassDoubleSharp] = GlyphNameDescriptions.FigbassDoubleSharp,
        [GlyphName.FigbassFlat] = GlyphNameDescriptions.FigbassFlat,
        [GlyphName.FigbassNatural] = GlyphNameDescriptions.FigbassNatural,
        [GlyphName.FigbassParensLeft] = GlyphNameDescriptions.FigbassParensLeft,
        [GlyphName.FigbassParensRight] = GlyphNameDescriptions.FigbassParensRight,
        [GlyphName.FigbassPlus] = GlyphNameDescriptions.FigbassPlus,
        [GlyphName.FigbassSharp] = GlyphNameDescriptions.FigbassSharp,
        [GlyphName.FigbassTripleFlat] = GlyphNameDescriptions.FigbassTripleFlat,
        [GlyphName.FigbassTripleSharp] = GlyphNameDescriptions.FigbassTripleSharp,
        [GlyphName.Fingering0] = GlyphNameDescriptions.Fingering0,
        [GlyphName.Fingering0Italic] = GlyphNameDescriptions.Fingering0Italic,
        [GlyphName.Fingering1] = GlyphNameDescriptions.Fingering1,
        [GlyphName.Fingering1Italic] = GlyphNameDescriptions.Fingering1Italic,
        [GlyphName.Fingering2] = GlyphNameDescriptions.Fingering2,
        [GlyphName.Fingering2Italic] = GlyphNameDescriptions.Fingering2Italic,
        [GlyphName.Fingering3] = GlyphNameDescriptions.Fingering3,
        [GlyphName.Fingering3Italic] = GlyphNameDescriptions.Fingering3Italic,
        [GlyphName.Fingering4] = GlyphNameDescriptions.Fingering4,
        [GlyphName.Fingering4Italic] = GlyphNameDescriptions.Fingering4Italic,
        [GlyphName.Fingering5] = GlyphNameDescriptions.Fingering5,
        [GlyphName.Fingering5Italic] = GlyphNameDescriptions.Fingering5Italic,
        [GlyphName.Fingering6] = GlyphNameDescriptions.Fingering6,
        [GlyphName.Fingering6Italic] = GlyphNameDescriptions.Fingering6Italic,
        [GlyphName.Fingering7] = GlyphNameDescriptions.Fingering7,
        [GlyphName.Fingering7Italic] = GlyphNameDescriptions.Fingering7Italic,
        [GlyphName.Fingering8] = GlyphNameDescriptions.Fingering8,
        [GlyphName.Fingering8Italic] = GlyphNameDescriptions.Fingering8Italic,
        [GlyphName.Fingering9] = GlyphNameDescriptions.Fingering9,
        [GlyphName.Fingering9Italic] = GlyphNameDescriptions.Fingering9Italic,
        [GlyphName.FingeringALower] = GlyphNameDescriptions.FingeringALower,
        [GlyphName.FingeringCLower] = GlyphNameDescriptions.FingeringCLower,
        [GlyphName.FingeringELower] = GlyphNameDescriptions.FingeringELower,
        [GlyphName.FingeringILower] = GlyphNameDescriptions.FingeringILower,
        [GlyphName.FingeringLeftBracket] = GlyphNameDescriptions.FingeringLeftBracket,
        [GlyphName.FingeringLeftBracketItalic] = GlyphNameDescriptions.FingeringLeftBracketItalic,
        [GlyphName.FingeringLeftParenthesis] = GlyphNameDescriptions.FingeringLeftParenthesis,
        [GlyphName.FingeringLeftParenthesisItalic] = GlyphNameDescriptions.FingeringLeftParenthesisItalic,
        [GlyphName.FingeringMLower] = GlyphNameDescriptions.FingeringMLower,
        [GlyphName.FingeringMultipleNotes] = GlyphNameDescriptions.FingeringMultipleNotes,
        [GlyphName.FingeringOLower] = GlyphNameDescriptions.FingeringOLower,
        [GlyphName.FingeringPLower] = GlyphNameDescriptions.FingeringPLower,
        [GlyphName.FingeringQLower] = GlyphNameDescriptions.FingeringQLower,
        [GlyphName.FingeringRightBracket] = GlyphNameDescriptions.FingeringRightBracket,
        [GlyphName.FingeringRightBracketItalic] = GlyphNameDescriptions.FingeringRightBracketItalic,
        [GlyphName.FingeringRightParenthesis] = GlyphNameDescriptions.FingeringRightParenthesis,
        [GlyphName.FingeringRightParenthesisItalic] = GlyphNameDescriptions.FingeringRightParenthesisItalic,
        [GlyphName.FingeringSLower] = GlyphNameDescriptions.FingeringSLower,
        [GlyphName.FingeringSeparatorMiddleDot] = GlyphNameDescriptions.FingeringSeparatorMiddleDot,
        [GlyphName.FingeringSeparatorMiddleDotWhite] = GlyphNameDescriptions.FingeringSeparatorMiddleDotWhite,
        [GlyphName.FingeringSeparatorSlash] = GlyphNameDescriptions.FingeringSeparatorSlash,
        [GlyphName.FingeringSubstitutionAbove] = GlyphNameDescriptions.FingeringSubstitutionAbove,
        [GlyphName.FingeringSubstitutionBelow] = GlyphNameDescriptions.FingeringSubstitutionBelow,
        [GlyphName.FingeringSubstitutionDash] = GlyphNameDescriptions.FingeringSubstitutionDash,
        [GlyphName.FingeringTLower] = GlyphNameDescriptions.FingeringTLower,
        [GlyphName.FingeringTUpper] = GlyphNameDescriptions.FingeringTUpper,
        [GlyphName.FingeringXLower] = GlyphNameDescriptions.FingeringXLower,
        [GlyphName.Flag1024thDown] = GlyphNameDescriptions.Flag1024thDown,
        [GlyphName.Flag1024thUp] = GlyphNameDescriptions.Flag1024thUp,
        [GlyphName.Flag128thDown] = GlyphNameDescriptions.Flag128thDown,
        [GlyphName.Flag128thUp] = GlyphNameDescriptions.Flag128thUp,
        [GlyphName.Flag16thDown] = GlyphNameDescriptions.Flag16thDown,
        [GlyphName.Flag16thUp] = GlyphNameDescriptions.Flag16thUp,
        [GlyphName.Flag256thDown] = GlyphNameDescriptions.Flag256thDown,
        [GlyphName.Flag256thUp] = GlyphNameDescriptions.Flag256thUp,
        [GlyphName.Flag32ndDown] = GlyphNameDescriptions.Flag32ndDown,
        [GlyphName.Flag32ndUp] = GlyphNameDescriptions.Flag32ndUp,
        [GlyphName.Flag512thDown] = GlyphNameDescriptions.Flag512thDown,
        [GlyphName.Flag512thUp] = GlyphNameDescriptions.Flag512thUp,
        [GlyphName.Flag64thDown] = GlyphNameDescriptions.Flag64thDown,
        [GlyphName.Flag64thUp] = GlyphNameDescriptions.Flag64thUp,
        [GlyphName.Flag8thDown] = GlyphNameDescriptions.Flag8thDown,
        [GlyphName.Flag8thUp] = GlyphNameDescriptions.Flag8thUp,
        [GlyphName.FlagInternalDown] = GlyphNameDescriptions.FlagInternalDown,
        [GlyphName.FlagInternalUp] = GlyphNameDescriptions.FlagInternalUp,
        [GlyphName.Fretboard3String] = GlyphNameDescriptions.Fretboard3String,
        [GlyphName.Fretboard3StringNut] = GlyphNameDescriptions.Fretboard3StringNut,
        [GlyphName.Fretboard4String] = GlyphNameDescriptions.Fretboard4String,
        [GlyphName.Fretboard4StringNut] = GlyphNameDescriptions.Fretboard4StringNut,
        [GlyphName.Fretboard5String] = GlyphNameDescriptions.Fretboard5String,
        [GlyphName.Fretboard5StringNut] = GlyphNameDescriptions.Fretboard5StringNut,
        [GlyphName.Fretboard6String] = GlyphNameDescriptions.Fretboard6String,
        [GlyphName.Fretboard6StringNut] = GlyphNameDescriptions.Fretboard6StringNut,
        [GlyphName.FretboardFilledCircle] = GlyphNameDescriptions.FretboardFilledCircle,
        [GlyphName.FretboardO] = GlyphNameDescriptions.FretboardO,
        [GlyphName.FretboardX] = GlyphNameDescriptions.FretboardX,
        [GlyphName.FunctionAngleLeft] = GlyphNameDescriptions.FunctionAngleLeft,
        [GlyphName.FunctionAngleRight] = GlyphNameDescriptions.FunctionAngleRight,
        [GlyphName.FunctionBracketLeft] = GlyphNameDescriptions.FunctionBracketLeft,
        [GlyphName.FunctionBracketRight] = GlyphNameDescriptions.FunctionBracketRight,
        [GlyphName.FunctionDD] = GlyphNameDescriptions.FunctionDD,
        [GlyphName.FunctionDLower] = GlyphNameDescriptions.FunctionDLower,
        [GlyphName.FunctionDUpper] = GlyphNameDescriptions.FunctionDUpper,
        [GlyphName.FunctionEight] = GlyphNameDescriptions.FunctionEight,
        [GlyphName.FunctionFUpper] = GlyphNameDescriptions.FunctionFUpper,
        [GlyphName.FunctionFive] = GlyphNameDescriptions.FunctionFive,
        [GlyphName.FunctionFour] = GlyphNameDescriptions.FunctionFour,
        [GlyphName.FunctionGLower] = GlyphNameDescriptions.FunctionGLower,
        [GlyphName.FunctionGUpper] = GlyphNameDescriptions.FunctionGUpper,
        [GlyphName.FunctionGreaterThan] = GlyphNameDescriptions.FunctionGreaterThan,
        [GlyphName.FunctionILower] = GlyphNameDescriptions.FunctionILower,
        [GlyphName.FunctionIUpper] = GlyphNameDescriptions.FunctionIUpper,
        [GlyphName.FunctionKLower] = GlyphNameDescriptions.FunctionKLower,
        [GlyphName.FunctionKUpper] = GlyphNameDescriptions.FunctionKUpper,
        [GlyphName.FunctionLLower] = GlyphNameDescriptions.FunctionLLower,
        [GlyphName.FunctionLUpper] = GlyphNameDescriptions.FunctionLUpper,
        [GlyphName.FunctionLessThan] = GlyphNameDescriptions.FunctionLessThan,
        [GlyphName.FunctionMLower] = GlyphNameDescriptions.FunctionMLower,
        [GlyphName.FunctionMUpper] = GlyphNameDescriptions.FunctionMUpper,
        [GlyphName.FunctionMinus] = GlyphNameDescriptions.FunctionMinus,
        [GlyphName.FunctionNLower] = GlyphNameDescriptions.FunctionNLower,
        [GlyphName.FunctionNUpper] = GlyphNameDescriptions.FunctionNUpper,
        [GlyphName.FunctionNUpperSuperscript] = GlyphNameDescriptions.FunctionNUpperSuperscript,
        [GlyphName.FunctionNine] = GlyphNameDescriptions.FunctionNine,
        [GlyphName.FunctionOne] = GlyphNameDescriptions.FunctionOne,
        [GlyphName.FunctionPLower] = GlyphNameDescriptions.FunctionPLower,
        [GlyphName.FunctionPUpper] = GlyphNameDescriptions.FunctionPUpper,
        [GlyphName.FunctionParensLeft] = GlyphNameDescriptions.FunctionParensLeft,
        [GlyphName.FunctionParensRight] = GlyphNameDescriptions.FunctionParensRight,
        [GlyphName.FunctionPlus] = GlyphNameDescriptions.FunctionPlus,
        [GlyphName.FunctionRLower] = GlyphNameDescriptions.FunctionRLower,
        [GlyphName.FunctionRepetition1] = GlyphNameDescriptions.FunctionRepetition1,
        [GlyphName.FunctionRepetition2] = GlyphNameDescriptions.FunctionRepetition2,
        [GlyphName.FunctionRing] = GlyphNameDescriptions.FunctionRing,
        [GlyphName.FunctionSLower] = GlyphNameDescriptions.FunctionSLower,
        [GlyphName.FunctionSSLower] = GlyphNameDescriptions.FunctionSSLower,
        [GlyphName.FunctionSSUpper] = GlyphNameDescriptions.FunctionSSUpper,
        [GlyphName.FunctionSUpper] = GlyphNameDescriptions.FunctionSUpper,
        [GlyphName.FunctionSeven] = GlyphNameDescriptions.FunctionSeven,
        [GlyphName.FunctionSix] = GlyphNameDescriptions.FunctionSix,
        [GlyphName.FunctionSlashedDD] = GlyphNameDescriptions.FunctionSlashedDD,
        [GlyphName.FunctionTLower] = GlyphNameDescriptions.FunctionTLower,
        [GlyphName.FunctionTUpper] = GlyphNameDescriptions.FunctionTUpper,
        [GlyphName.FunctionThree] = GlyphNameDescriptions.FunctionThree,
        [GlyphName.FunctionTwo] = GlyphNameDescriptions.FunctionTwo,
        [GlyphName.FunctionVLower] = GlyphNameDescriptions.FunctionVLower,
        [GlyphName.FunctionVUpper] = GlyphNameDescriptions.FunctionVUpper,
        [GlyphName.FunctionZero] = GlyphNameDescriptions.FunctionZero,
        [GlyphName.GClef] = GlyphNameDescriptions.GClef,
        [GlyphName.GClef15ma] = GlyphNameDescriptions.GClef15ma,
        [GlyphName.GClef15mb] = GlyphNameDescriptions.GClef15mb,
        [GlyphName.GClef8va] = GlyphNameDescriptions.GClef8va,
        [GlyphName.GClef8vb] = GlyphNameDescriptions.GClef8vb,
        [GlyphName.GClef8vbCClef] = GlyphNameDescriptions.GClef8vbCClef,
        [GlyphName.GClef8vbOld] = GlyphNameDescriptions.GClef8vbOld,
        [GlyphName.GClef8vbParens] = GlyphNameDescriptions.GClef8vbParens,
        [GlyphName.GClefArrowDown] = GlyphNameDescriptions.GClefArrowDown,
        [GlyphName.GClefArrowUp] = GlyphNameDescriptions.GClefArrowUp,
        [GlyphName.GClefChange] = GlyphNameDescriptions.GClefChange,
        [GlyphName.GClefLigatedNumberAbove] = GlyphNameDescriptions.GClefLigatedNumberAbove,
        [GlyphName.GClefLigatedNumberBelow] = GlyphNameDescriptions.GClefLigatedNumberBelow,
        [GlyphName.GClefReversed] = GlyphNameDescriptions.GClefReversed,
        [GlyphName.GClefTurned] = GlyphNameDescriptions.GClefTurned,
        [GlyphName.GlissandoDown] = GlyphNameDescriptions.GlissandoDown,
        [GlyphName.GlissandoUp] = GlyphNameDescriptions.GlissandoUp,
        [GlyphName.GraceNoteAcciaccaturaStemDown] = GlyphNameDescriptions.GraceNoteAcciaccaturaStemDown,
        [GlyphName.GraceNoteAcciaccaturaStemUp] = GlyphNameDescriptions.GraceNoteAcciaccaturaStemUp,
        [GlyphName.GraceNoteAppoggiaturaStemDown] = GlyphNameDescriptions.GraceNoteAppoggiaturaStemDown,
        [GlyphName.GraceNoteAppoggiaturaStemUp] = GlyphNameDescriptions.GraceNoteAppoggiaturaStemUp,
        [GlyphName.GraceNoteSlashStemDown] = GlyphNameDescriptions.GraceNoteSlashStemDown,
        [GlyphName.GraceNoteSlashStemUp] = GlyphNameDescriptions.GraceNoteSlashStemUp,
        [GlyphName.GuitarBarreFull] = GlyphNameDescriptions.GuitarBarreFull,
        [GlyphName.GuitarBarreHalf] = GlyphNameDescriptions.GuitarBarreHalf,
        [GlyphName.GuitarClosePedal] = GlyphNameDescriptions.GuitarClosePedal,
        [GlyphName.GuitarFadeIn] = GlyphNameDescriptions.GuitarFadeIn,
        [GlyphName.GuitarFadeOut] = GlyphNameDescriptions.GuitarFadeOut,
        [GlyphName.GuitarGolpe] = GlyphNameDescriptions.GuitarGolpe,
        [GlyphName.GuitarHalfOpenPedal] = GlyphNameDescriptions.GuitarHalfOpenPedal,
        [GlyphName.GuitarLeftHandTapping] = GlyphNameDescriptions.GuitarLeftHandTapping,
        [GlyphName.GuitarOpenPedal] = GlyphNameDescriptions.GuitarOpenPedal,
        [GlyphName.GuitarRightHandTapping] = GlyphNameDescriptions.GuitarRightHandTapping,
        [GlyphName.GuitarShake] = GlyphNameDescriptions.GuitarShake,
        [GlyphName.GuitarString0] = GlyphNameDescriptions.GuitarString0,
        [GlyphName.GuitarString1] = GlyphNameDescriptions.GuitarString1,
        [GlyphName.GuitarString10] = GlyphNameDescriptions.GuitarString10,
        [GlyphName.GuitarString11] = GlyphNameDescriptions.GuitarString11,
        [GlyphName.GuitarString12] = GlyphNameDescriptions.GuitarString12,
        [GlyphName.GuitarString13] = GlyphNameDescriptions.GuitarString13,
        [GlyphName.GuitarString2] = GlyphNameDescriptions.GuitarString2,
        [GlyphName.GuitarString3] = GlyphNameDescriptions.GuitarString3,
        [GlyphName.GuitarString4] = GlyphNameDescriptions.GuitarString4,
        [GlyphName.GuitarString5] = GlyphNameDescriptions.GuitarString5,
        [GlyphName.GuitarString6] = GlyphNameDescriptions.GuitarString6,
        [GlyphName.GuitarString7] = GlyphNameDescriptions.GuitarString7,
        [GlyphName.GuitarString8] = GlyphNameDescriptions.GuitarString8,
        [GlyphName.GuitarString9] = GlyphNameDescriptions.GuitarString9,
        [GlyphName.GuitarStrumDown] = GlyphNameDescriptions.GuitarStrumDown,
        [GlyphName.GuitarStrumUp] = GlyphNameDescriptions.GuitarStrumUp,
        [GlyphName.GuitarVibratoBarDip] = GlyphNameDescriptions.GuitarVibratoBarDip,
        [GlyphName.GuitarVibratoBarScoop] = GlyphNameDescriptions.GuitarVibratoBarScoop,
        [GlyphName.GuitarVibratoStroke] = GlyphNameDescriptions.GuitarVibratoStroke,
        [GlyphName.GuitarVolumeSwell] = GlyphNameDescriptions.GuitarVolumeSwell,
        [GlyphName.GuitarWideVibratoStroke] = GlyphNameDescriptions.GuitarWideVibratoStroke,
        [GlyphName.HandbellsBelltree] = GlyphNameDescriptions.HandbellsBelltree,
        [GlyphName.HandbellsDamp3] = GlyphNameDescriptions.HandbellsDamp3,
        [GlyphName.HandbellsEcho1] = GlyphNameDescriptions.HandbellsEcho1,
        [GlyphName.HandbellsEcho2] = GlyphNameDescriptions.HandbellsEcho2,
        [GlyphName.HandbellsGyro] = GlyphNameDescriptions.HandbellsGyro,
        [GlyphName.HandbellsHandMartellato] = GlyphNameDescriptions.HandbellsHandMartellato,
        [GlyphName.HandbellsMalletBellOnTable] = GlyphNameDescriptions.HandbellsMalletBellOnTable,
        [GlyphName.HandbellsMalletBellSuspended] = GlyphNameDescriptions.HandbellsMalletBellSuspended,
        [GlyphName.HandbellsMalletLft] = GlyphNameDescriptions.HandbellsMalletLft,
        [GlyphName.HandbellsMartellato] = GlyphNameDescriptions.HandbellsMartellato,
        [GlyphName.HandbellsMartellatoLift] = GlyphNameDescriptions.HandbellsMartellatoLift,
        [GlyphName.HandbellsMutedMartellato] = GlyphNameDescriptions.HandbellsMutedMartellato,
        [GlyphName.HandbellsPluckLift] = GlyphNameDescriptions.HandbellsPluckLift,
        [GlyphName.HandbellsSwing] = GlyphNameDescriptions.HandbellsSwing,
        [GlyphName.HandbellsSwingDown] = GlyphNameDescriptions.HandbellsSwingDown,
        [GlyphName.HandbellsSwingUp] = GlyphNameDescriptions.HandbellsSwingUp,
        [GlyphName.HandbellsTablePairBells] = GlyphNameDescriptions.HandbellsTablePairBells,
        [GlyphName.HandbellsTableSingleBell] = GlyphNameDescriptions.HandbellsTableSingleBell,
        [GlyphName.HarpMetalRod] = GlyphNameDescriptions.HarpMetalRod,
        [GlyphName.HarpPedalCentered] = GlyphNameDescriptions.HarpPedalCentered,
        [GlyphName.HarpPedalDivider] = GlyphNameDescriptions.HarpPedalDivider,
        [GlyphName.HarpPedalLowered] = GlyphNameDescriptions.HarpPedalLowered,
        [GlyphName.HarpPedalRaised] = GlyphNameDescriptions.HarpPedalRaised,
        [GlyphName.HarpSalzedoAeolianAscending] = GlyphNameDescriptions.HarpSalzedoAeolianAscending,
        [GlyphName.HarpSalzedoAeolianDescending] = GlyphNameDescriptions.HarpSalzedoAeolianDescending,
        [GlyphName.HarpSalzedoDampAbove] = GlyphNameDescriptions.HarpSalzedoDampAbove,
        [GlyphName.HarpSalzedoDampBelow] = GlyphNameDescriptions.HarpSalzedoDampBelow,
        [GlyphName.HarpSalzedoDampBothHands] = GlyphNameDescriptions.HarpSalzedoDampBothHands,
        [GlyphName.HarpSalzedoDampLowStrings] = GlyphNameDescriptions.HarpSalzedoDampLowStrings,
        [GlyphName.HarpSalzedoFluidicSoundsLeft] = GlyphNameDescriptions.HarpSalzedoFluidicSoundsLeft,
        [GlyphName.HarpSalzedoFluidicSoundsRight] = GlyphNameDescriptions.HarpSalzedoFluidicSoundsRight,
        [GlyphName.HarpSalzedoIsolatedSounds] = GlyphNameDescriptions.HarpSalzedoIsolatedSounds,
        [GlyphName.HarpSalzedoMetallicSounds] = GlyphNameDescriptions.HarpSalzedoMetallicSounds,
        [GlyphName.HarpSalzedoMetallicSoundsOneString] = GlyphNameDescriptions.HarpSalzedoMetallicSoundsOneString,
        [GlyphName.HarpSalzedoMuffleTotally] = GlyphNameDescriptions.HarpSalzedoMuffleTotally,
        [GlyphName.HarpSalzedoOboicFlux] = GlyphNameDescriptions.HarpSalzedoOboicFlux,
        [GlyphName.HarpSalzedoPlayUpperEnd] = GlyphNameDescriptions.HarpSalzedoPlayUpperEnd,
        [GlyphName.HarpSalzedoSlideWithSuppleness] = GlyphNameDescriptions.HarpSalzedoSlideWithSuppleness,
        [GlyphName.HarpSalzedoSnareDrum] = GlyphNameDescriptions.HarpSalzedoSnareDrum,
        [GlyphName.HarpSalzedoTamTamSounds] = GlyphNameDescriptions.HarpSalzedoTamTamSounds,
        [GlyphName.HarpSalzedoThunderEffect] = GlyphNameDescriptions.HarpSalzedoThunderEffect,
        [GlyphName.HarpSalzedoTimpanicSounds] = GlyphNameDescriptions.HarpSalzedoTimpanicSounds,
        [GlyphName.HarpSalzedoWhistlingSounds] = GlyphNameDescriptions.HarpSalzedoWhistlingSounds,
        [GlyphName.HarpStringNoiseStem] = GlyphNameDescriptions.HarpStringNoiseStem,
        [GlyphName.HarpTuningKey] = GlyphNameDescriptions.HarpTuningKey,
        [GlyphName.HarpTuningKeyGlissando] = GlyphNameDescriptions.HarpTuningKeyGlissando,
        [GlyphName.HarpTuningKeyHandle] = GlyphNameDescriptions.HarpTuningKeyHandle,
        [GlyphName.HarpTuningKeyShank] = GlyphNameDescriptions.HarpTuningKeyShank,
        [GlyphName.IndianDrumClef] = GlyphNameDescriptions.IndianDrumClef,
        [GlyphName.KahnBackChug] = GlyphNameDescriptions.KahnBackChug,
        [GlyphName.KahnBackFlap] = GlyphNameDescriptions.KahnBackFlap,
        [GlyphName.KahnBackRiff] = GlyphNameDescriptions.KahnBackRiff,
        [GlyphName.KahnBackRip] = GlyphNameDescriptions.KahnBackRip,
        [GlyphName.KahnBallChange] = GlyphNameDescriptions.KahnBallChange,
        [GlyphName.KahnBallDig] = GlyphNameDescriptions.KahnBallDig,
        [GlyphName.KahnBrushBackward] = GlyphNameDescriptions.KahnBrushBackward,
        [GlyphName.KahnBrushForward] = GlyphNameDescriptions.KahnBrushForward,
        [GlyphName.KahnChug] = GlyphNameDescriptions.KahnChug,
        [GlyphName.KahnClap] = GlyphNameDescriptions.KahnClap,
        [GlyphName.KahnDoubleSnap] = GlyphNameDescriptions.KahnDoubleSnap,
        [GlyphName.KahnDoubleWing] = GlyphNameDescriptions.KahnDoubleWing,
        [GlyphName.KahnDrawStep] = GlyphNameDescriptions.KahnDrawStep,
        [GlyphName.KahnDrawTap] = GlyphNameDescriptions.KahnDrawTap,
        [GlyphName.KahnFlam] = GlyphNameDescriptions.KahnFlam,
        [GlyphName.KahnFlap] = GlyphNameDescriptions.KahnFlap,
        [GlyphName.KahnFlapStep] = GlyphNameDescriptions.KahnFlapStep,
        [GlyphName.KahnFlat] = GlyphNameDescriptions.KahnFlat,
        [GlyphName.KahnFleaHop] = GlyphNameDescriptions.KahnFleaHop,
        [GlyphName.KahnFleaTap] = GlyphNameDescriptions.KahnFleaTap,
        [GlyphName.KahnGraceTap] = GlyphNameDescriptions.KahnGraceTap,
        [GlyphName.KahnGraceTapChange] = GlyphNameDescriptions.KahnGraceTapChange,
        [GlyphName.KahnGraceTapHop] = GlyphNameDescriptions.KahnGraceTapHop,
        [GlyphName.KahnGraceTapStamp] = GlyphNameDescriptions.KahnGraceTapStamp,
        [GlyphName.KahnHeel] = GlyphNameDescriptions.KahnHeel,
        [GlyphName.KahnHeelChange] = GlyphNameDescriptions.KahnHeelChange,
        [GlyphName.KahnHeelClick] = GlyphNameDescriptions.KahnHeelClick,
        [GlyphName.KahnHeelDrop] = GlyphNameDescriptions.KahnHeelDrop,
        [GlyphName.KahnHeelStep] = GlyphNameDescriptions.KahnHeelStep,
        [GlyphName.KahnHeelTap] = GlyphNameDescriptions.KahnHeelTap,
        [GlyphName.KahnHop] = GlyphNameDescriptions.KahnHop,
        [GlyphName.KahnJumpApart] = GlyphNameDescriptions.KahnJumpApart,
        [GlyphName.KahnJumpTogether] = GlyphNameDescriptions.KahnJumpTogether,
        [GlyphName.KahnKneeInward] = GlyphNameDescriptions.KahnKneeInward,
        [GlyphName.KahnKneeOutward] = GlyphNameDescriptions.KahnKneeOutward,
        [GlyphName.KahnLeap] = GlyphNameDescriptions.KahnLeap,
        [GlyphName.KahnLeapFlatFoot] = GlyphNameDescriptions.KahnLeapFlatFoot,
        [GlyphName.KahnLeapHeelClick] = GlyphNameDescriptions.KahnLeapHeelClick,
        [GlyphName.KahnLeftCatch] = GlyphNameDescriptions.KahnLeftCatch,
        [GlyphName.KahnLeftCross] = GlyphNameDescriptions.KahnLeftCross,
        [GlyphName.KahnLeftFoot] = GlyphNameDescriptions.KahnLeftFoot,
        [GlyphName.KahnLeftToeStrike] = GlyphNameDescriptions.KahnLeftToeStrike,
        [GlyphName.KahnLeftTurn] = GlyphNameDescriptions.KahnLeftTurn,
        [GlyphName.KahnOverTheTop] = GlyphNameDescriptions.KahnOverTheTop,
        [GlyphName.KahnOverTheTopTap] = GlyphNameDescriptions.KahnOverTheTopTap,
        [GlyphName.KahnPull] = GlyphNameDescriptions.KahnPull,
        [GlyphName.KahnPush] = GlyphNameDescriptions.KahnPush,
        [GlyphName.KahnRiff] = GlyphNameDescriptions.KahnRiff,
        [GlyphName.KahnRiffle] = GlyphNameDescriptions.KahnRiffle,
        [GlyphName.KahnRightCatch] = GlyphNameDescriptions.KahnRightCatch,
        [GlyphName.KahnRightCross] = GlyphNameDescriptions.KahnRightCross,
        [GlyphName.KahnRightFoot] = GlyphNameDescriptions.KahnRightFoot,
        [GlyphName.KahnRightToeStrike] = GlyphNameDescriptions.KahnRightToeStrike,
        [GlyphName.KahnRightTurn] = GlyphNameDescriptions.KahnRightTurn,
        [GlyphName.KahnRip] = GlyphNameDescriptions.KahnRip,
        [GlyphName.KahnRipple] = GlyphNameDescriptions.KahnRipple,
        [GlyphName.KahnScrape] = GlyphNameDescriptions.KahnScrape,
        [GlyphName.KahnScuff] = GlyphNameDescriptions.KahnScuff,
        [GlyphName.KahnScuffle] = GlyphNameDescriptions.KahnScuffle,
        [GlyphName.KahnShuffle] = GlyphNameDescriptions.KahnShuffle,
        [GlyphName.KahnSlam] = GlyphNameDescriptions.KahnSlam,
        [GlyphName.KahnSlap] = GlyphNameDescriptions.KahnSlap,
        [GlyphName.KahnSlideStep] = GlyphNameDescriptions.KahnSlideStep,
        [GlyphName.KahnSlideTap] = GlyphNameDescriptions.KahnSlideTap,
        [GlyphName.KahnSnap] = GlyphNameDescriptions.KahnSnap,
        [GlyphName.KahnStamp] = GlyphNameDescriptions.KahnStamp,
        [GlyphName.KahnStampStamp] = GlyphNameDescriptions.KahnStampStamp,
        [GlyphName.KahnStep] = GlyphNameDescriptions.KahnStep,
        [GlyphName.KahnStepStamp] = GlyphNameDescriptions.KahnStepStamp,
        [GlyphName.KahnStomp] = GlyphNameDescriptions.KahnStomp,
        [GlyphName.KahnStompBrush] = GlyphNameDescriptions.KahnStompBrush,
        [GlyphName.KahnTap] = GlyphNameDescriptions.KahnTap,
        [GlyphName.KahnToe] = GlyphNameDescriptions.KahnToe,
        [GlyphName.KahnToeClick] = GlyphNameDescriptions.KahnToeClick,
        [GlyphName.KahnToeDrop] = GlyphNameDescriptions.KahnToeDrop,
        [GlyphName.KahnToeStep] = GlyphNameDescriptions.KahnToeStep,
        [GlyphName.KahnToeTap] = GlyphNameDescriptions.KahnToeTap,
        [GlyphName.KahnTrench] = GlyphNameDescriptions.KahnTrench,
        [GlyphName.KahnWing] = GlyphNameDescriptions.KahnWing,
        [GlyphName.KahnWingChange] = GlyphNameDescriptions.KahnWingChange,
        [GlyphName.KahnZank] = GlyphNameDescriptions.KahnZank,
        [GlyphName.KahnZink] = GlyphNameDescriptions.KahnZink,
        [GlyphName.KeyboardBebung2DotsAbove] = GlyphNameDescriptions.KeyboardBebung2DotsAbove,
        [GlyphName.KeyboardBebung2DotsBelow] = GlyphNameDescriptions.KeyboardBebung2DotsBelow,
        [GlyphName.KeyboardBebung3DotsAbove] = GlyphNameDescriptions.KeyboardBebung3DotsAbove,
        [GlyphName.KeyboardBebung3DotsBelow] = GlyphNameDescriptions.KeyboardBebung3DotsBelow,
        [GlyphName.KeyboardBebung4DotsAbove] = GlyphNameDescriptions.KeyboardBebung4DotsAbove,
        [GlyphName.KeyboardBebung4DotsBelow] = GlyphNameDescriptions.KeyboardBebung4DotsBelow,
        [GlyphName.KeyboardLeftPedalPictogram] = GlyphNameDescriptions.KeyboardLeftPedalPictogram,
        [GlyphName.KeyboardMiddlePedalPictogram] = GlyphNameDescriptions.KeyboardMiddlePedalPictogram,
        [GlyphName.KeyboardPedalD] = GlyphNameDescriptions.KeyboardPedalD,
        [GlyphName.KeyboardPedalDot] = GlyphNameDescriptions.KeyboardPedalDot,
        [GlyphName.KeyboardPedalE] = GlyphNameDescriptions.KeyboardPedalE,
        [GlyphName.KeyboardPedalHalf] = GlyphNameDescriptions.KeyboardPedalHalf,
        [GlyphName.KeyboardPedalHalf2] = GlyphNameDescriptions.KeyboardPedalHalf2,
        [GlyphName.KeyboardPedalHalf3] = GlyphNameDescriptions.KeyboardPedalHalf3,
        [GlyphName.KeyboardPedalHeel1] = GlyphNameDescriptions.KeyboardPedalHeel1,
        [GlyphName.KeyboardPedalHeel2] = GlyphNameDescriptions.KeyboardPedalHeel2,
        [GlyphName.KeyboardPedalHeel3] = GlyphNameDescriptions.KeyboardPedalHeel3,
        [GlyphName.KeyboardPedalHeelToToe] = GlyphNameDescriptions.KeyboardPedalHeelToToe,
        [GlyphName.KeyboardPedalHeelToe] = GlyphNameDescriptions.KeyboardPedalHeelToe,
        [GlyphName.KeyboardPedalHookEnd] = GlyphNameDescriptions.KeyboardPedalHookEnd,
        [GlyphName.KeyboardPedalHookStart] = GlyphNameDescriptions.KeyboardPedalHookStart,
        [GlyphName.KeyboardPedalHyphen] = GlyphNameDescriptions.KeyboardPedalHyphen,
        [GlyphName.KeyboardPedalP] = GlyphNameDescriptions.KeyboardPedalP,
        [GlyphName.KeyboardPedalParensLeft] = GlyphNameDescriptions.KeyboardPedalParensLeft,
        [GlyphName.KeyboardPedalParensRight] = GlyphNameDescriptions.KeyboardPedalParensRight,
        [GlyphName.KeyboardPedalPed] = GlyphNameDescriptions.KeyboardPedalPed,
        [GlyphName.KeyboardPedalS] = GlyphNameDescriptions.KeyboardPedalS,
        [GlyphName.KeyboardPedalSost] = GlyphNameDescriptions.KeyboardPedalSost,
        [GlyphName.KeyboardPedalToe1] = GlyphNameDescriptions.KeyboardPedalToe1,
        [GlyphName.KeyboardPedalToe2] = GlyphNameDescriptions.KeyboardPedalToe2,
        [GlyphName.KeyboardPedalToeToHeel] = GlyphNameDescriptions.KeyboardPedalToeToHeel,
        [GlyphName.KeyboardPedalUp] = GlyphNameDescriptions.KeyboardPedalUp,
        [GlyphName.KeyboardPedalUpNotch] = GlyphNameDescriptions.KeyboardPedalUpNotch,
        [GlyphName.KeyboardPedalUpSpecial] = GlyphNameDescriptions.KeyboardPedalUpSpecial,
        [GlyphName.KeyboardPlayWithLH] = GlyphNameDescriptions.KeyboardPlayWithLH,
        [GlyphName.KeyboardPlayWithLHEnd] = GlyphNameDescriptions.KeyboardPlayWithLHEnd,
        [GlyphName.KeyboardPlayWithRH] = GlyphNameDescriptions.KeyboardPlayWithRH,
        [GlyphName.KeyboardPlayWithRHEnd] = GlyphNameDescriptions.KeyboardPlayWithRHEnd,
        [GlyphName.KeyboardPluckInside] = GlyphNameDescriptions.KeyboardPluckInside,
        [GlyphName.KeyboardRightPedalPictogram] = GlyphNameDescriptions.KeyboardRightPedalPictogram,
        [GlyphName.KievanAccidentalFlat] = GlyphNameDescriptions.KievanAccidentalFlat,
        [GlyphName.KievanAccidentalSharp] = GlyphNameDescriptions.KievanAccidentalSharp,
        [GlyphName.KievanAugmentationDot] = GlyphNameDescriptions.KievanAugmentationDot,
        [GlyphName.KievanCClef] = GlyphNameDescriptions.KievanCClef,
        [GlyphName.KievanEndingSymbol] = GlyphNameDescriptions.KievanEndingSymbol,
        [GlyphName.KievanNote8thStemDown] = GlyphNameDescriptions.KievanNote8thStemDown,
        [GlyphName.KievanNote8thStemUp] = GlyphNameDescriptions.KievanNote8thStemUp,
        [GlyphName.KievanNoteBeam] = GlyphNameDescriptions.KievanNoteBeam,
        [GlyphName.KievanNoteHalfStaffLine] = GlyphNameDescriptions.KievanNoteHalfStaffLine,
        [GlyphName.KievanNoteHalfStaffSpace] = GlyphNameDescriptions.KievanNoteHalfStaffSpace,
        [GlyphName.KievanNoteQuarterStemDown] = GlyphNameDescriptions.KievanNoteQuarterStemDown,
        [GlyphName.KievanNoteQuarterStemUp] = GlyphNameDescriptions.KievanNoteQuarterStemUp,
        [GlyphName.KievanNoteReciting] = GlyphNameDescriptions.KievanNoteReciting,
        [GlyphName.KievanNoteWhole] = GlyphNameDescriptions.KievanNoteWhole,
        [GlyphName.KievanNoteWholeFinal] = GlyphNameDescriptions.KievanNoteWholeFinal,
        [GlyphName.KodalyHandDo] = GlyphNameDescriptions.KodalyHandDo,
        [GlyphName.KodalyHandFa] = GlyphNameDescriptions.KodalyHandFa,
        [GlyphName.KodalyHandLa] = GlyphNameDescriptions.KodalyHandLa,
        [GlyphName.KodalyHandMi] = GlyphNameDescriptions.KodalyHandMi,
        [GlyphName.KodalyHandRe] = GlyphNameDescriptions.KodalyHandRe,
        [GlyphName.KodalyHandSo] = GlyphNameDescriptions.KodalyHandSo,
        [GlyphName.KodalyHandTi] = GlyphNameDescriptions.KodalyHandTi,
        [GlyphName.LeftRepeatSmall] = GlyphNameDescriptions.LeftRepeatSmall,
        [GlyphName.LegerLine] = GlyphNameDescriptions.LegerLine,
        [GlyphName.LegerLineNarrow] = GlyphNameDescriptions.LegerLineNarrow,
        [GlyphName.LegerLineWide] = GlyphNameDescriptions.LegerLineWide,
        [GlyphName.LuteBarlineEndRepeat] = GlyphNameDescriptions.LuteBarlineEndRepeat,
        [GlyphName.LuteBarlineFinal] = GlyphNameDescriptions.LuteBarlineFinal,
        [GlyphName.LuteBarlineStartRepeat] = GlyphNameDescriptions.LuteBarlineStartRepeat,
        [GlyphName.LuteDuration16th] = GlyphNameDescriptions.LuteDuration16th,
        [GlyphName.LuteDuration32nd] = GlyphNameDescriptions.LuteDuration32nd,
        [GlyphName.LuteDuration8th] = GlyphNameDescriptions.LuteDuration8th,
        [GlyphName.LuteDurationDoubleWhole] = GlyphNameDescriptions.LuteDurationDoubleWhole,
        [GlyphName.LuteDurationHalf] = GlyphNameDescriptions.LuteDurationHalf,
        [GlyphName.LuteDurationQuarter] = GlyphNameDescriptions.LuteDurationQuarter,
        [GlyphName.LuteDurationWhole] = GlyphNameDescriptions.LuteDurationWhole,
        [GlyphName.LuteFingeringRHFirst] = GlyphNameDescriptions.LuteFingeringRHFirst,
        [GlyphName.LuteFingeringRHSecond] = GlyphNameDescriptions.LuteFingeringRHSecond,
        [GlyphName.LuteFingeringRHThird] = GlyphNameDescriptions.LuteFingeringRHThird,
        [GlyphName.LuteFingeringRHThumb] = GlyphNameDescriptions.LuteFingeringRHThumb,
        [GlyphName.LuteFrench10thCourse] = GlyphNameDescriptions.LuteFrench10thCourse,
        [GlyphName.LuteFrench7thCourse] = GlyphNameDescriptions.LuteFrench7thCourse,
        [GlyphName.LuteFrench8thCourse] = GlyphNameDescriptions.LuteFrench8thCourse,
        [GlyphName.LuteFrench9thCourse] = GlyphNameDescriptions.LuteFrench9thCourse,
        [GlyphName.LuteFrenchAppoggiaturaAbove] = GlyphNameDescriptions.LuteFrenchAppoggiaturaAbove,
        [GlyphName.LuteFrenchAppoggiaturaBelow] = GlyphNameDescriptions.LuteFrenchAppoggiaturaBelow,
        [GlyphName.LuteFrenchFretA] = GlyphNameDescriptions.LuteFrenchFretA,
        [GlyphName.LuteFrenchFretB] = GlyphNameDescriptions.LuteFrenchFretB,
        [GlyphName.LuteFrenchFretC] = GlyphNameDescriptions.LuteFrenchFretC,
        [GlyphName.LuteFrenchFretD] = GlyphNameDescriptions.LuteFrenchFretD,
        [GlyphName.LuteFrenchFretE] = GlyphNameDescriptions.LuteFrenchFretE,
        [GlyphName.LuteFrenchFretF] = GlyphNameDescriptions.LuteFrenchFretF,
        [GlyphName.LuteFrenchFretG] = GlyphNameDescriptions.LuteFrenchFretG,
        [GlyphName.LuteFrenchFretH] = GlyphNameDescriptions.LuteFrenchFretH,
        [GlyphName.LuteFrenchFretI] = GlyphNameDescriptions.LuteFrenchFretI,
        [GlyphName.LuteFrenchFretK] = GlyphNameDescriptions.LuteFrenchFretK,
        [GlyphName.LuteFrenchFretL] = GlyphNameDescriptions.LuteFrenchFretL,
        [GlyphName.LuteFrenchFretM] = GlyphNameDescriptions.LuteFrenchFretM,
        [GlyphName.LuteFrenchFretN] = GlyphNameDescriptions.LuteFrenchFretN,
        [GlyphName.LuteFrenchMordentInverted] = GlyphNameDescriptions.LuteFrenchMordentInverted,
        [GlyphName.LuteFrenchMordentLower] = GlyphNameDescriptions.LuteFrenchMordentLower,
        [GlyphName.LuteFrenchMordentUpper] = GlyphNameDescriptions.LuteFrenchMordentUpper,
        [GlyphName.LuteGermanALower] = GlyphNameDescriptions.LuteGermanALower,
        [GlyphName.LuteGermanAUpper] = GlyphNameDescriptions.LuteGermanAUpper,
        [GlyphName.LuteGermanBLower] = GlyphNameDescriptions.LuteGermanBLower,
        [GlyphName.LuteGermanBUpper] = GlyphNameDescriptions.LuteGermanBUpper,
        [GlyphName.LuteGermanCLower] = GlyphNameDescriptions.LuteGermanCLower,
        [GlyphName.LuteGermanCUpper] = GlyphNameDescriptions.LuteGermanCUpper,
        [GlyphName.LuteGermanDLower] = GlyphNameDescriptions.LuteGermanDLower,
        [GlyphName.LuteGermanDUpper] = GlyphNameDescriptions.LuteGermanDUpper,
        [GlyphName.LuteGermanELower] = GlyphNameDescriptions.LuteGermanELower,
        [GlyphName.LuteGermanEUpper] = GlyphNameDescriptions.LuteGermanEUpper,
        [GlyphName.LuteGermanFLower] = GlyphNameDescriptions.LuteGermanFLower,
        [GlyphName.LuteGermanFUpper] = GlyphNameDescriptions.LuteGermanFUpper,
        [GlyphName.LuteGermanGLower] = GlyphNameDescriptions.LuteGermanGLower,
        [GlyphName.LuteGermanGUpper] = GlyphNameDescriptions.LuteGermanGUpper,
        [GlyphName.LuteGermanHLower] = GlyphNameDescriptions.LuteGermanHLower,
        [GlyphName.LuteGermanHUpper] = GlyphNameDescriptions.LuteGermanHUpper,
        [GlyphName.LuteGermanILower] = GlyphNameDescriptions.LuteGermanILower,
        [GlyphName.LuteGermanIUpper] = GlyphNameDescriptions.LuteGermanIUpper,
        [GlyphName.LuteGermanKLower] = GlyphNameDescriptions.LuteGermanKLower,
        [GlyphName.LuteGermanKUpper] = GlyphNameDescriptions.LuteGermanKUpper,
        [GlyphName.LuteGermanLLower] = GlyphNameDescriptions.LuteGermanLLower,
        [GlyphName.LuteGermanLUpper] = GlyphNameDescriptions.LuteGermanLUpper,
        [GlyphName.LuteGermanMLower] = GlyphNameDescriptions.LuteGermanMLower,
        [GlyphName.LuteGermanMUpper] = GlyphNameDescriptions.LuteGermanMUpper,
        [GlyphName.LuteGermanNLower] = GlyphNameDescriptions.LuteGermanNLower,
        [GlyphName.LuteGermanNUpper] = GlyphNameDescriptions.LuteGermanNUpper,
        [GlyphName.LuteGermanOLower] = GlyphNameDescriptions.LuteGermanOLower,
        [GlyphName.LuteGermanPLower] = GlyphNameDescriptions.LuteGermanPLower,
        [GlyphName.LuteGermanQLower] = GlyphNameDescriptions.LuteGermanQLower,
        [GlyphName.LuteGermanRLower] = GlyphNameDescriptions.LuteGermanRLower,
        [GlyphName.LuteGermanSLower] = GlyphNameDescriptions.LuteGermanSLower,
        [GlyphName.LuteGermanTLower] = GlyphNameDescriptions.LuteGermanTLower,
        [GlyphName.LuteGermanVLower] = GlyphNameDescriptions.LuteGermanVLower,
        [GlyphName.LuteGermanXLower] = GlyphNameDescriptions.LuteGermanXLower,
        [GlyphName.LuteGermanYLower] = GlyphNameDescriptions.LuteGermanYLower,
        [GlyphName.LuteGermanZLower] = GlyphNameDescriptions.LuteGermanZLower,
        [GlyphName.LuteItalianClefCSolFaUt] = GlyphNameDescriptions.LuteItalianClefCSolFaUt,
        [GlyphName.LuteItalianClefFFaUt] = GlyphNameDescriptions.LuteItalianClefFFaUt,
        [GlyphName.LuteItalianFret0] = GlyphNameDescriptions.LuteItalianFret0,
        [GlyphName.LuteItalianFret1] = GlyphNameDescriptions.LuteItalianFret1,
        [GlyphName.LuteItalianFret2] = GlyphNameDescriptions.LuteItalianFret2,
        [GlyphName.LuteItalianFret3] = GlyphNameDescriptions.LuteItalianFret3,
        [GlyphName.LuteItalianFret4] = GlyphNameDescriptions.LuteItalianFret4,
        [GlyphName.LuteItalianFret5] = GlyphNameDescriptions.LuteItalianFret5,
        [GlyphName.LuteItalianFret6] = GlyphNameDescriptions.LuteItalianFret6,
        [GlyphName.LuteItalianFret7] = GlyphNameDescriptions.LuteItalianFret7,
        [GlyphName.LuteItalianFret8] = GlyphNameDescriptions.LuteItalianFret8,
        [GlyphName.LuteItalianFret9] = GlyphNameDescriptions.LuteItalianFret9,
        [GlyphName.LuteItalianHoldFinger] = GlyphNameDescriptions.LuteItalianHoldFinger,
        [GlyphName.LuteItalianHoldNote] = GlyphNameDescriptions.LuteItalianHoldNote,
        [GlyphName.LuteItalianReleaseFinger] = GlyphNameDescriptions.LuteItalianReleaseFinger,
        [GlyphName.LuteItalianTempoFast] = GlyphNameDescriptions.LuteItalianTempoFast,
        [GlyphName.LuteItalianTempoNeitherFastNorSlow] = GlyphNameDescriptions.LuteItalianTempoNeitherFastNorSlow,
        [GlyphName.LuteItalianTempoSlow] = GlyphNameDescriptions.LuteItalianTempoSlow,
        [GlyphName.LuteItalianTempoSomewhatFast] = GlyphNameDescriptions.LuteItalianTempoSomewhatFast,
        [GlyphName.LuteItalianTempoVerySlow] = GlyphNameDescriptions.LuteItalianTempoVerySlow,
        [GlyphName.LuteItalianTimeTriple] = GlyphNameDescriptions.LuteItalianTimeTriple,
        [GlyphName.LuteItalianTremolo] = GlyphNameDescriptions.LuteItalianTremolo,
        [GlyphName.LuteItalianVibrato] = GlyphNameDescriptions.LuteItalianVibrato,
        [GlyphName.LuteStaff6Lines] = GlyphNameDescriptions.LuteStaff6Lines,
        [GlyphName.LuteStaff6LinesNarrow] = GlyphNameDescriptions.LuteStaff6LinesNarrow,
        [GlyphName.LuteStaff6LinesWide] = GlyphNameDescriptions.LuteStaff6LinesWide,
        [GlyphName.LyricsElision] = GlyphNameDescriptions.LyricsElision,
        [GlyphName.LyricsElisionNarrow] = GlyphNameDescriptions.LyricsElisionNarrow,
        [GlyphName.LyricsElisionWide] = GlyphNameDescriptions.LyricsElisionWide,
        [GlyphName.LyricsHyphenBaseline] = GlyphNameDescriptions.LyricsHyphenBaseline,
        [GlyphName.LyricsHyphenBaselineNonBreaking] = GlyphNameDescriptions.LyricsHyphenBaselineNonBreaking,
        [GlyphName.LyricsTextRepeat] = GlyphNameDescriptions.LyricsTextRepeat,
        [GlyphName.MedRenFlatHardB] = GlyphNameDescriptions.MedRenFlatHardB,
        [GlyphName.MedRenFlatSoftB] = GlyphNameDescriptions.MedRenFlatSoftB,
        [GlyphName.MedRenFlatWithDot] = GlyphNameDescriptions.MedRenFlatWithDot,
        [GlyphName.MedRenGClefCMN] = GlyphNameDescriptions.MedRenGClefCMN,
        [GlyphName.MedRenLiquescenceCMN] = GlyphNameDescriptions.MedRenLiquescenceCMN,
        [GlyphName.MedRenLiquescentAscCMN] = GlyphNameDescriptions.MedRenLiquescentAscCMN,
        [GlyphName.MedRenLiquescentDescCMN] = GlyphNameDescriptions.MedRenLiquescentDescCMN,
        [GlyphName.MedRenNatural] = GlyphNameDescriptions.MedRenNatural,
        [GlyphName.MedRenNaturalWithCross] = GlyphNameDescriptions.MedRenNaturalWithCross,
        [GlyphName.MedRenOriscusCMN] = GlyphNameDescriptions.MedRenOriscusCMN,
        [GlyphName.MedRenPlicaCMN] = GlyphNameDescriptions.MedRenPlicaCMN,
        [GlyphName.MedRenPunctumCMN] = GlyphNameDescriptions.MedRenPunctumCMN,
        [GlyphName.MedRenQuilismaCMN] = GlyphNameDescriptions.MedRenQuilismaCMN,
        [GlyphName.MedRenSharpCroix] = GlyphNameDescriptions.MedRenSharpCroix,
        [GlyphName.MedRenStrophicusCMN] = GlyphNameDescriptions.MedRenStrophicusCMN,
        [GlyphName.MensuralAlterationSign] = GlyphNameDescriptions.MensuralAlterationSign,
        [GlyphName.MensuralBlackBrevis] = GlyphNameDescriptions.MensuralBlackBrevis,
        [GlyphName.MensuralBlackBrevisVoid] = GlyphNameDescriptions.MensuralBlackBrevisVoid,
        [GlyphName.MensuralBlackDragma] = GlyphNameDescriptions.MensuralBlackDragma,
        [GlyphName.MensuralBlackLonga] = GlyphNameDescriptions.MensuralBlackLonga,
        [GlyphName.MensuralBlackMaxima] = GlyphNameDescriptions.MensuralBlackMaxima,
        [GlyphName.MensuralBlackMinima] = GlyphNameDescriptions.MensuralBlackMinima,
        [GlyphName.MensuralBlackMinimaVoid] = GlyphNameDescriptions.MensuralBlackMinimaVoid,
        [GlyphName.MensuralBlackSemibrevis] = GlyphNameDescriptions.MensuralBlackSemibrevis,
        [GlyphName.MensuralBlackSemibrevisCaudata] = GlyphNameDescriptions.MensuralBlackSemibrevisCaudata,
        [GlyphName.MensuralBlackSemibrevisOblique] = GlyphNameDescriptions.MensuralBlackSemibrevisOblique,
        [GlyphName.MensuralBlackSemibrevisVoid] = GlyphNameDescriptions.MensuralBlackSemibrevisVoid,
        [GlyphName.MensuralBlackSemiminima] = GlyphNameDescriptions.MensuralBlackSemiminima,
        [GlyphName.MensuralCclef] = GlyphNameDescriptions.MensuralCclef,
        [GlyphName.MensuralCclefPetrucciPosHigh] = GlyphNameDescriptions.MensuralCclefPetrucciPosHigh,
        [GlyphName.MensuralCclefPetrucciPosHighest] = GlyphNameDescriptions.MensuralCclefPetrucciPosHighest,
        [GlyphName.MensuralCclefPetrucciPosLow] = GlyphNameDescriptions.MensuralCclefPetrucciPosLow,
        [GlyphName.MensuralCclefPetrucciPosLowest] = GlyphNameDescriptions.MensuralCclefPetrucciPosLowest,
        [GlyphName.MensuralCclefPetrucciPosMiddle] = GlyphNameDescriptions.MensuralCclefPetrucciPosMiddle,
        [GlyphName.MensuralColorationEndRound] = GlyphNameDescriptions.MensuralColorationEndRound,
        [GlyphName.MensuralColorationEndSquare] = GlyphNameDescriptions.MensuralColorationEndSquare,
        [GlyphName.MensuralColorationStartRound] = GlyphNameDescriptions.MensuralColorationStartRound,
        [GlyphName.MensuralColorationStartSquare] = GlyphNameDescriptions.MensuralColorationStartSquare,
        [GlyphName.MensuralCombStemDiagonal] = GlyphNameDescriptions.MensuralCombStemDiagonal,
        [GlyphName.MensuralCombStemDown] = GlyphNameDescriptions.MensuralCombStemDown,
        [GlyphName.MensuralCombStemDownFlagExtended] = GlyphNameDescriptions.MensuralCombStemDownFlagExtended,
        [GlyphName.MensuralCombStemDownFlagFlared] = GlyphNameDescriptions.MensuralCombStemDownFlagFlared,
        [GlyphName.MensuralCombStemDownFlagFusa] = GlyphNameDescriptions.MensuralCombStemDownFlagFusa,
        [GlyphName.MensuralCombStemDownFlagLeft] = GlyphNameDescriptions.MensuralCombStemDownFlagLeft,
        [GlyphName.MensuralCombStemDownFlagRight] = GlyphNameDescriptions.MensuralCombStemDownFlagRight,
        [GlyphName.MensuralCombStemDownFlagSemiminima] = GlyphNameDescriptions.MensuralCombStemDownFlagSemiminima,
        [GlyphName.MensuralCombStemUp] = GlyphNameDescriptions.MensuralCombStemUp,
        [GlyphName.MensuralCombStemUpFlagExtended] = GlyphNameDescriptions.MensuralCombStemUpFlagExtended,
        [GlyphName.MensuralCombStemUpFlagFlared] = GlyphNameDescriptions.MensuralCombStemUpFlagFlared,
        [GlyphName.MensuralCombStemUpFlagFusa] = GlyphNameDescriptions.MensuralCombStemUpFlagFusa,
        [GlyphName.MensuralCombStemUpFlagLeft] = GlyphNameDescriptions.MensuralCombStemUpFlagLeft,
        [GlyphName.MensuralCombStemUpFlagRight] = GlyphNameDescriptions.MensuralCombStemUpFlagRight,
        [GlyphName.MensuralCombStemUpFlagSemiminima] = GlyphNameDescriptions.MensuralCombStemUpFlagSemiminima,
        [GlyphName.MensuralCustosCheckmark] = GlyphNameDescriptions.MensuralCustosCheckmark,
        [GlyphName.MensuralCustosDown] = GlyphNameDescriptions.MensuralCustosDown,
        [GlyphName.MensuralCustosTurn] = GlyphNameDescriptions.MensuralCustosTurn,
        [GlyphName.MensuralCustosUp] = GlyphNameDescriptions.MensuralCustosUp,
        [GlyphName.MensuralFclef] = GlyphNameDescriptions.MensuralFclef,
        [GlyphName.MensuralFclefPetrucci] = GlyphNameDescriptions.MensuralFclefPetrucci,
        [GlyphName.MensuralGclef] = GlyphNameDescriptions.MensuralGclef,
        [GlyphName.MensuralGclefPetrucci] = GlyphNameDescriptions.MensuralGclefPetrucci,
        [GlyphName.MensuralModusImperfectumVert] = GlyphNameDescriptions.MensuralModusImperfectumVert,
        [GlyphName.MensuralModusPerfectumVert] = GlyphNameDescriptions.MensuralModusPerfectumVert,
        [GlyphName.MensuralNoteheadLongaBlack] = GlyphNameDescriptions.MensuralNoteheadLongaBlack,
        [GlyphName.MensuralNoteheadLongaBlackVoid] = GlyphNameDescriptions.MensuralNoteheadLongaBlackVoid,
        [GlyphName.MensuralNoteheadLongaVoid] = GlyphNameDescriptions.MensuralNoteheadLongaVoid,
        [GlyphName.MensuralNoteheadLongaWhite] = GlyphNameDescriptions.MensuralNoteheadLongaWhite,
        [GlyphName.MensuralNoteheadMaximaBlack] = GlyphNameDescriptions.MensuralNoteheadMaximaBlack,
        [GlyphName.MensuralNoteheadMaximaBlackVoid] = GlyphNameDescriptions.MensuralNoteheadMaximaBlackVoid,
        [GlyphName.MensuralNoteheadMaximaVoid] = GlyphNameDescriptions.MensuralNoteheadMaximaVoid,
        [GlyphName.MensuralNoteheadMaximaWhite] = GlyphNameDescriptions.MensuralNoteheadMaximaWhite,
        [GlyphName.MensuralNoteheadMinimaWhite] = GlyphNameDescriptions.MensuralNoteheadMinimaWhite,
        [GlyphName.MensuralNoteheadSemibrevisBlack] = GlyphNameDescriptions.MensuralNoteheadSemibrevisBlack,
        [GlyphName.MensuralNoteheadSemibrevisBlackVoid] = GlyphNameDescriptions.MensuralNoteheadSemibrevisBlackVoid,
        [GlyphName.MensuralNoteheadSemibrevisBlackVoidTurned] = GlyphNameDescriptions.MensuralNoteheadSemibrevisBlackVoidTurned,
        [GlyphName.MensuralNoteheadSemibrevisVoid] = GlyphNameDescriptions.MensuralNoteheadSemibrevisVoid,
        [GlyphName.MensuralNoteheadSemiminimaWhite] = GlyphNameDescriptions.MensuralNoteheadSemiminimaWhite,
        [GlyphName.MensuralObliqueAsc2ndBlack] = GlyphNameDescriptions.MensuralObliqueAsc2ndBlack,
        [GlyphName.MensuralObliqueAsc2ndBlackVoid] = GlyphNameDescriptions.MensuralObliqueAsc2ndBlackVoid,
        [GlyphName.MensuralObliqueAsc2ndVoid] = GlyphNameDescriptions.MensuralObliqueAsc2ndVoid,
        [GlyphName.MensuralObliqueAsc2ndWhite] = GlyphNameDescriptions.MensuralObliqueAsc2ndWhite,
        [GlyphName.MensuralObliqueAsc3rdBlack] = GlyphNameDescriptions.MensuralObliqueAsc3rdBlack,
        [GlyphName.MensuralObliqueAsc3rdBlackVoid] = GlyphNameDescriptions.MensuralObliqueAsc3rdBlackVoid,
        [GlyphName.MensuralObliqueAsc3rdVoid] = GlyphNameDescriptions.MensuralObliqueAsc3rdVoid,
        [GlyphName.MensuralObliqueAsc3rdWhite] = GlyphNameDescriptions.MensuralObliqueAsc3rdWhite,
        [GlyphName.MensuralObliqueAsc4thBlack] = GlyphNameDescriptions.MensuralObliqueAsc4thBlack,
        [GlyphName.MensuralObliqueAsc4thBlackVoid] = GlyphNameDescriptions.MensuralObliqueAsc4thBlackVoid,
        [GlyphName.MensuralObliqueAsc4thVoid] = GlyphNameDescriptions.MensuralObliqueAsc4thVoid,
        [GlyphName.MensuralObliqueAsc4thWhite] = GlyphNameDescriptions.MensuralObliqueAsc4thWhite,
        [GlyphName.MensuralObliqueAsc5thBlack] = GlyphNameDescriptions.MensuralObliqueAsc5thBlack,
        [GlyphName.MensuralObliqueAsc5thBlackVoid] = GlyphNameDescriptions.MensuralObliqueAsc5thBlackVoid,
        [GlyphName.MensuralObliqueAsc5thVoid] = GlyphNameDescriptions.MensuralObliqueAsc5thVoid,
        [GlyphName.MensuralObliqueAsc5thWhite] = GlyphNameDescriptions.MensuralObliqueAsc5thWhite,
        [GlyphName.MensuralObliqueDesc2ndBlack] = GlyphNameDescriptions.MensuralObliqueDesc2ndBlack,
        [GlyphName.MensuralObliqueDesc2ndBlackVoid] = GlyphNameDescriptions.MensuralObliqueDesc2ndBlackVoid,
        [GlyphName.MensuralObliqueDesc2ndVoid] = GlyphNameDescriptions.MensuralObliqueDesc2ndVoid,
        [GlyphName.MensuralObliqueDesc2ndWhite] = GlyphNameDescriptions.MensuralObliqueDesc2ndWhite,
        [GlyphName.MensuralObliqueDesc3rdBlack] = GlyphNameDescriptions.MensuralObliqueDesc3rdBlack,
        [GlyphName.MensuralObliqueDesc3rdBlackVoid] = GlyphNameDescriptions.MensuralObliqueDesc3rdBlackVoid,
        [GlyphName.MensuralObliqueDesc3rdVoid] = GlyphNameDescriptions.MensuralObliqueDesc3rdVoid,
        [GlyphName.MensuralObliqueDesc3rdWhite] = GlyphNameDescriptions.MensuralObliqueDesc3rdWhite,
        [GlyphName.MensuralObliqueDesc4thBlack] = GlyphNameDescriptions.MensuralObliqueDesc4thBlack,
        [GlyphName.MensuralObliqueDesc4thBlackVoid] = GlyphNameDescriptions.MensuralObliqueDesc4thBlackVoid,
        [GlyphName.MensuralObliqueDesc4thVoid] = GlyphNameDescriptions.MensuralObliqueDesc4thVoid,
        [GlyphName.MensuralObliqueDesc4thWhite] = GlyphNameDescriptions.MensuralObliqueDesc4thWhite,
        [GlyphName.MensuralObliqueDesc5thBlack] = GlyphNameDescriptions.MensuralObliqueDesc5thBlack,
        [GlyphName.MensuralObliqueDesc5thBlackVoid] = GlyphNameDescriptions.MensuralObliqueDesc5thBlackVoid,
        [GlyphName.MensuralObliqueDesc5thVoid] = GlyphNameDescriptions.MensuralObliqueDesc5thVoid,
        [GlyphName.MensuralObliqueDesc5thWhite] = GlyphNameDescriptions.MensuralObliqueDesc5thWhite,
        [GlyphName.MensuralProlation1] = GlyphNameDescriptions.MensuralProlation1,
        [GlyphName.MensuralProlation10] = GlyphNameDescriptions.MensuralProlation10,
        [GlyphName.MensuralProlation11] = GlyphNameDescriptions.MensuralProlation11,
        [GlyphName.MensuralProlation2] = GlyphNameDescriptions.MensuralProlation2,
        [GlyphName.MensuralProlation3] = GlyphNameDescriptions.MensuralProlation3,
        [GlyphName.MensuralProlation4] = GlyphNameDescriptions.MensuralProlation4,
        [GlyphName.MensuralProlation5] = GlyphNameDescriptions.MensuralProlation5,
        [GlyphName.MensuralProlation6] = GlyphNameDescriptions.MensuralProlation6,
        [GlyphName.MensuralProlation7] = GlyphNameDescriptions.MensuralProlation7,
        [GlyphName.MensuralProlation8] = GlyphNameDescriptions.MensuralProlation8,
        [GlyphName.MensuralProlation9] = GlyphNameDescriptions.MensuralProlation9,
        [GlyphName.MensuralProlationCombiningDot] = GlyphNameDescriptions.MensuralProlationCombiningDot,
        [GlyphName.MensuralProlationCombiningDotVoid] = GlyphNameDescriptions.MensuralProlationCombiningDotVoid,
        [GlyphName.MensuralProlationCombiningStroke] = GlyphNameDescriptions.MensuralProlationCombiningStroke,
        [GlyphName.MensuralProlationCombiningThreeDots] = GlyphNameDescriptions.MensuralProlationCombiningThreeDots,
        [GlyphName.MensuralProlationCombiningThreeDotsTri] = GlyphNameDescriptions.MensuralProlationCombiningThreeDotsTri,
        [GlyphName.MensuralProlationCombiningTwoDots] = GlyphNameDescriptions.MensuralProlationCombiningTwoDots,
        [GlyphName.MensuralProportion1] = GlyphNameDescriptions.MensuralProportion1,
        [GlyphName.MensuralProportion2] = GlyphNameDescriptions.MensuralProportion2,
        [GlyphName.MensuralProportion3] = GlyphNameDescriptions.MensuralProportion3,
        [GlyphName.MensuralProportion4] = GlyphNameDescriptions.MensuralProportion4,
        [GlyphName.MensuralProportion5] = GlyphNameDescriptions.MensuralProportion5,
        [GlyphName.MensuralProportion6] = GlyphNameDescriptions.MensuralProportion6,
        [GlyphName.MensuralProportion7] = GlyphNameDescriptions.MensuralProportion7,
        [GlyphName.MensuralProportion8] = GlyphNameDescriptions.MensuralProportion8,
        [GlyphName.MensuralProportion9] = GlyphNameDescriptions.MensuralProportion9,
        [GlyphName.MensuralProportionMajor] = GlyphNameDescriptions.MensuralProportionMajor,
        [GlyphName.MensuralProportionMinor] = GlyphNameDescriptions.MensuralProportionMinor,
        [GlyphName.MensuralProportionProportioDupla1] = GlyphNameDescriptions.MensuralProportionProportioDupla1,
        [GlyphName.MensuralProportionProportioDupla2] = GlyphNameDescriptions.MensuralProportionProportioDupla2,
        [GlyphName.MensuralProportionProportioQuadrupla] = GlyphNameDescriptions.MensuralProportionProportioQuadrupla,
        [GlyphName.MensuralProportionProportioTripla] = GlyphNameDescriptions.MensuralProportionProportioTripla,
        [GlyphName.MensuralProportionTempusPerfectum] = GlyphNameDescriptions.MensuralProportionTempusPerfectum,
        [GlyphName.MensuralRestBrevis] = GlyphNameDescriptions.MensuralRestBrevis,
        [GlyphName.MensuralRestFusa] = GlyphNameDescriptions.MensuralRestFusa,
        [GlyphName.MensuralRestLongaImperfecta] = GlyphNameDescriptions.MensuralRestLongaImperfecta,
        [GlyphName.MensuralRestLongaPerfecta] = GlyphNameDescriptions.MensuralRestLongaPerfecta,
        [GlyphName.MensuralRestMaxima] = GlyphNameDescriptions.MensuralRestMaxima,
        [GlyphName.MensuralRestMinima] = GlyphNameDescriptions.MensuralRestMinima,
        [GlyphName.MensuralRestSemibrevis] = GlyphNameDescriptions.MensuralRestSemibrevis,
        [GlyphName.MensuralRestSemifusa] = GlyphNameDescriptions.MensuralRestSemifusa,
        [GlyphName.MensuralRestSemiminima] = GlyphNameDescriptions.MensuralRestSemiminima,
        [GlyphName.MensuralSignumDown] = GlyphNameDescriptions.MensuralSignumDown,
        [GlyphName.MensuralSignumUp] = GlyphNameDescriptions.MensuralSignumUp,
        [GlyphName.MensuralTempusImperfectumHoriz] = GlyphNameDescriptions.MensuralTempusImperfectumHoriz,
        [GlyphName.MensuralTempusPerfectumHoriz] = GlyphNameDescriptions.MensuralTempusPerfectumHoriz,
        [GlyphName.MensuralWhiteBrevis] = GlyphNameDescriptions.MensuralWhiteBrevis,
        [GlyphName.MensuralWhiteFusa] = GlyphNameDescriptions.MensuralWhiteFusa,
        [GlyphName.MensuralWhiteLonga] = GlyphNameDescriptions.MensuralWhiteLonga,
        [GlyphName.MensuralWhiteMaxima] = GlyphNameDescriptions.MensuralWhiteMaxima,
        [GlyphName.MensuralWhiteMinima] = GlyphNameDescriptions.MensuralWhiteMinima,
        [GlyphName.MensuralWhiteSemibrevis] = GlyphNameDescriptions.MensuralWhiteSemibrevis,
        [GlyphName.MensuralWhiteSemiminima] = GlyphNameDescriptions.MensuralWhiteSemiminima,
        [GlyphName.MetAugmentationDot] = GlyphNameDescriptions.MetAugmentationDot,
        [GlyphName.MetNote1024thDown] = GlyphNameDescriptions.MetNote1024thDown,
        [GlyphName.MetNote1024thUp] = GlyphNameDescriptions.MetNote1024thUp,
        [GlyphName.MetNote128thDown] = GlyphNameDescriptions.MetNote128thDown,
        [GlyphName.MetNote128thUp] = GlyphNameDescriptions.MetNote128thUp,
        [GlyphName.MetNote16thDown] = GlyphNameDescriptions.MetNote16thDown,
        [GlyphName.MetNote16thUp] = GlyphNameDescriptions.MetNote16thUp,
        [GlyphName.MetNote256thDown] = GlyphNameDescriptions.MetNote256thDown,
        [GlyphName.MetNote256thUp] = GlyphNameDescriptions.MetNote256thUp,
        [GlyphName.MetNote32ndDown] = GlyphNameDescriptions.MetNote32ndDown,
        [GlyphName.MetNote32ndUp] = GlyphNameDescriptions.MetNote32ndUp,
        [GlyphName.MetNote512thDown] = GlyphNameDescriptions.MetNote512thDown,
        [GlyphName.MetNote512thUp] = GlyphNameDescriptions.MetNote512thUp,
        [GlyphName.MetNote64thDown] = GlyphNameDescriptions.MetNote64thDown,
        [GlyphName.MetNote64thUp] = GlyphNameDescriptions.MetNote64thUp,
        [GlyphName.MetNote8thDown] = GlyphNameDescriptions.MetNote8thDown,
        [GlyphName.MetNote8thUp] = GlyphNameDescriptions.MetNote8thUp,
        [GlyphName.MetNoteDoubleWhole] = GlyphNameDescriptions.MetNoteDoubleWhole,
        [GlyphName.MetNoteDoubleWholeSquare] = GlyphNameDescriptions.MetNoteDoubleWholeSquare,
        [GlyphName.MetNoteHalfDown] = GlyphNameDescriptions.MetNoteHalfDown,
        [GlyphName.MetNoteHalfUp] = GlyphNameDescriptions.MetNoteHalfUp,
        [GlyphName.MetNoteQuarterDown] = GlyphNameDescriptions.MetNoteQuarterDown,
        [GlyphName.MetNoteQuarterUp] = GlyphNameDescriptions.MetNoteQuarterUp,
        [GlyphName.MetNoteWhole] = GlyphNameDescriptions.MetNoteWhole,
        [GlyphName.MetricModulationArrowLeft] = GlyphNameDescriptions.MetricModulationArrowLeft,
        [GlyphName.MetricModulationArrowRight] = GlyphNameDescriptions.MetricModulationArrowRight,
        [GlyphName.MiscDoNotCopy] = GlyphNameDescriptions.MiscDoNotCopy,
        [GlyphName.MiscDoNotPhotocopy] = GlyphNameDescriptions.MiscDoNotPhotocopy,
        [GlyphName.MiscEyeglasses] = GlyphNameDescriptions.MiscEyeglasses,
        [GlyphName.Note1024thDown] = GlyphNameDescriptions.Note1024thDown,
        [GlyphName.Note1024thUp] = GlyphNameDescriptions.Note1024thUp,
        [GlyphName.Note128thDown] = GlyphNameDescriptions.Note128thDown,
        [GlyphName.Note128thUp] = GlyphNameDescriptions.Note128thUp,
        [GlyphName.Note16thDown] = GlyphNameDescriptions.Note16thDown,
        [GlyphName.Note16thUp] = GlyphNameDescriptions.Note16thUp,
        [GlyphName.Note256thDown] = GlyphNameDescriptions.Note256thDown,
        [GlyphName.Note256thUp] = GlyphNameDescriptions.Note256thUp,
        [GlyphName.Note32ndDown] = GlyphNameDescriptions.Note32ndDown,
        [GlyphName.Note32ndUp] = GlyphNameDescriptions.Note32ndUp,
        [GlyphName.Note512thDown] = GlyphNameDescriptions.Note512thDown,
        [GlyphName.Note512thUp] = GlyphNameDescriptions.Note512thUp,
        [GlyphName.Note64thDown] = GlyphNameDescriptions.Note64thDown,
        [GlyphName.Note64thUp] = GlyphNameDescriptions.Note64thUp,
        [GlyphName.Note8thDown] = GlyphNameDescriptions.Note8thDown,
        [GlyphName.Note8thUp] = GlyphNameDescriptions.Note8thUp,
        [GlyphName.NoteABlack] = GlyphNameDescriptions.NoteABlack,
        [GlyphName.NoteAFlatBlack] = GlyphNameDescriptions.NoteAFlatBlack,
        [GlyphName.NoteAFlatHalf] = GlyphNameDescriptions.NoteAFlatHalf,
        [GlyphName.NoteAFlatWhole] = GlyphNameDescriptions.NoteAFlatWhole,
        [GlyphName.NoteAHalf] = GlyphNameDescriptions.NoteAHalf,
        [GlyphName.NoteASharpBlack] = GlyphNameDescriptions.NoteASharpBlack,
        [GlyphName.NoteASharpHalf] = GlyphNameDescriptions.NoteASharpHalf,
        [GlyphName.NoteASharpWhole] = GlyphNameDescriptions.NoteASharpWhole,
        [GlyphName.NoteAWhole] = GlyphNameDescriptions.NoteAWhole,
        [GlyphName.NoteBBlack] = GlyphNameDescriptions.NoteBBlack,
        [GlyphName.NoteBFlatBlack] = GlyphNameDescriptions.NoteBFlatBlack,
        [GlyphName.NoteBFlatHalf] = GlyphNameDescriptions.NoteBFlatHalf,
        [GlyphName.NoteBFlatWhole] = GlyphNameDescriptions.NoteBFlatWhole,
        [GlyphName.NoteBHalf] = GlyphNameDescriptions.NoteBHalf,
        [GlyphName.NoteBSharpBlack] = GlyphNameDescriptions.NoteBSharpBlack,
        [GlyphName.NoteBSharpHalf] = GlyphNameDescriptions.NoteBSharpHalf,
        [GlyphName.NoteBSharpWhole] = GlyphNameDescriptions.NoteBSharpWhole,
        [GlyphName.NoteBWhole] = GlyphNameDescriptions.NoteBWhole,
        [GlyphName.NoteCBlack] = GlyphNameDescriptions.NoteCBlack,
        [GlyphName.NoteCFlatBlack] = GlyphNameDescriptions.NoteCFlatBlack,
        [GlyphName.NoteCFlatHalf] = GlyphNameDescriptions.NoteCFlatHalf,
        [GlyphName.NoteCFlatWhole] = GlyphNameDescriptions.NoteCFlatWhole,
        [GlyphName.NoteCHalf] = GlyphNameDescriptions.NoteCHalf,
        [GlyphName.NoteCSharpBlack] = GlyphNameDescriptions.NoteCSharpBlack,
        [GlyphName.NoteCSharpHalf] = GlyphNameDescriptions.NoteCSharpHalf,
        [GlyphName.NoteCSharpWhole] = GlyphNameDescriptions.NoteCSharpWhole,
        [GlyphName.NoteCWhole] = GlyphNameDescriptions.NoteCWhole,
        [GlyphName.NoteDBlack] = GlyphNameDescriptions.NoteDBlack,
        [GlyphName.NoteDFlatBlack] = GlyphNameDescriptions.NoteDFlatBlack,
        [GlyphName.NoteDFlatHalf] = GlyphNameDescriptions.NoteDFlatHalf,
        [GlyphName.NoteDFlatWhole] = GlyphNameDescriptions.NoteDFlatWhole,
        [GlyphName.NoteDHalf] = GlyphNameDescriptions.NoteDHalf,
        [GlyphName.NoteDSharpBlack] = GlyphNameDescriptions.NoteDSharpBlack,
        [GlyphName.NoteDSharpHalf] = GlyphNameDescriptions.NoteDSharpHalf,
        [GlyphName.NoteDSharpWhole] = GlyphNameDescriptions.NoteDSharpWhole,
        [GlyphName.NoteDWhole] = GlyphNameDescriptions.NoteDWhole,
        [GlyphName.NoteDiBlack] = GlyphNameDescriptions.NoteDiBlack,
        [GlyphName.NoteDiHalf] = GlyphNameDescriptions.NoteDiHalf,
        [GlyphName.NoteDiWhole] = GlyphNameDescriptions.NoteDiWhole,
        [GlyphName.NoteDoBlack] = GlyphNameDescriptions.NoteDoBlack,
        [GlyphName.NoteDoHalf] = GlyphNameDescriptions.NoteDoHalf,
        [GlyphName.NoteDoWhole] = GlyphNameDescriptions.NoteDoWhole,
        [GlyphName.NoteDoubleWhole] = GlyphNameDescriptions.NoteDoubleWhole,
        [GlyphName.NoteDoubleWholeSquare] = GlyphNameDescriptions.NoteDoubleWholeSquare,
        [GlyphName.NoteEBlack] = GlyphNameDescriptions.NoteEBlack,
        [GlyphName.NoteEFlatBlack] = GlyphNameDescriptions.NoteEFlatBlack,
        [GlyphName.NoteEFlatHalf] = GlyphNameDescriptions.NoteEFlatHalf,
        [GlyphName.NoteEFlatWhole] = GlyphNameDescriptions.NoteEFlatWhole,
        [GlyphName.NoteEHalf] = GlyphNameDescriptions.NoteEHalf,
        [GlyphName.NoteESharpBlack] = GlyphNameDescriptions.NoteESharpBlack,
        [GlyphName.NoteESharpHalf] = GlyphNameDescriptions.NoteESharpHalf,
        [GlyphName.NoteESharpWhole] = GlyphNameDescriptions.NoteESharpWhole,
        [GlyphName.NoteEWhole] = GlyphNameDescriptions.NoteEWhole,
        [GlyphName.NoteEmptyBlack] = GlyphNameDescriptions.NoteEmptyBlack,
        [GlyphName.NoteEmptyHalf] = GlyphNameDescriptions.NoteEmptyHalf,
        [GlyphName.NoteEmptyWhole] = GlyphNameDescriptions.NoteEmptyWhole,
        [GlyphName.NoteFBlack] = GlyphNameDescriptions.NoteFBlack,
        [GlyphName.NoteFFlatBlack] = GlyphNameDescriptions.NoteFFlatBlack,
        [GlyphName.NoteFFlatHalf] = GlyphNameDescriptions.NoteFFlatHalf,
        [GlyphName.NoteFFlatWhole] = GlyphNameDescriptions.NoteFFlatWhole,
        [GlyphName.NoteFHalf] = GlyphNameDescriptions.NoteFHalf,
        [GlyphName.NoteFSharpBlack] = GlyphNameDescriptions.NoteFSharpBlack,
        [GlyphName.NoteFSharpHalf] = GlyphNameDescriptions.NoteFSharpHalf,
        [GlyphName.NoteFSharpWhole] = GlyphNameDescriptions.NoteFSharpWhole,
        [GlyphName.NoteFWhole] = GlyphNameDescriptions.NoteFWhole,
        [GlyphName.NoteFaBlack] = GlyphNameDescriptions.NoteFaBlack,
        [GlyphName.NoteFaHalf] = GlyphNameDescriptions.NoteFaHalf,
        [GlyphName.NoteFaWhole] = GlyphNameDescriptions.NoteFaWhole,
        [GlyphName.NoteFiBlack] = GlyphNameDescriptions.NoteFiBlack,
        [GlyphName.NoteFiHalf] = GlyphNameDescriptions.NoteFiHalf,
        [GlyphName.NoteFiWhole] = GlyphNameDescriptions.NoteFiWhole,
        [GlyphName.NoteGBlack] = GlyphNameDescriptions.NoteGBlack,
        [GlyphName.NoteGFlatBlack] = GlyphNameDescriptions.NoteGFlatBlack,
        [GlyphName.NoteGFlatHalf] = GlyphNameDescriptions.NoteGFlatHalf,
        [GlyphName.NoteGFlatWhole] = GlyphNameDescriptions.NoteGFlatWhole,
        [GlyphName.NoteGHalf] = GlyphNameDescriptions.NoteGHalf,
        [GlyphName.NoteGSharpBlack] = GlyphNameDescriptions.NoteGSharpBlack,
        [GlyphName.NoteGSharpHalf] = GlyphNameDescriptions.NoteGSharpHalf,
        [GlyphName.NoteGSharpWhole] = GlyphNameDescriptions.NoteGSharpWhole,
        [GlyphName.NoteGWhole] = GlyphNameDescriptions.NoteGWhole,
        [GlyphName.NoteHBlack] = GlyphNameDescriptions.NoteHBlack,
        [GlyphName.NoteHHalf] = GlyphNameDescriptions.NoteHHalf,
        [GlyphName.NoteHSharpBlack] = GlyphNameDescriptions.NoteHSharpBlack,
        [GlyphName.NoteHSharpHalf] = GlyphNameDescriptions.NoteHSharpHalf,
        [GlyphName.NoteHSharpWhole] = GlyphNameDescriptions.NoteHSharpWhole,
        [GlyphName.NoteHWhole] = GlyphNameDescriptions.NoteHWhole,
        [GlyphName.NoteHalfDown] = GlyphNameDescriptions.NoteHalfDown,
        [GlyphName.NoteHalfUp] = GlyphNameDescriptions.NoteHalfUp,
        [GlyphName.NoteLaBlack] = GlyphNameDescriptions.NoteLaBlack,
        [GlyphName.NoteLaHalf] = GlyphNameDescriptions.NoteLaHalf,
        [GlyphName.NoteLaWhole] = GlyphNameDescriptions.NoteLaWhole,
        [GlyphName.NoteLeBlack] = GlyphNameDescriptions.NoteLeBlack,
        [GlyphName.NoteLeHalf] = GlyphNameDescriptions.NoteLeHalf,
        [GlyphName.NoteLeWhole] = GlyphNameDescriptions.NoteLeWhole,
        [GlyphName.NoteLiBlack] = GlyphNameDescriptions.NoteLiBlack,
        [GlyphName.NoteLiHalf] = GlyphNameDescriptions.NoteLiHalf,
        [GlyphName.NoteLiWhole] = GlyphNameDescriptions.NoteLiWhole,
        [GlyphName.NoteMeBlack] = GlyphNameDescriptions.NoteMeBlack,
        [GlyphName.NoteMeHalf] = GlyphNameDescriptions.NoteMeHalf,
        [GlyphName.NoteMeWhole] = GlyphNameDescriptions.NoteMeWhole,
        [GlyphName.NoteMiBlack] = GlyphNameDescriptions.NoteMiBlack,
        [GlyphName.NoteMiHalf] = GlyphNameDescriptions.NoteMiHalf,
        [GlyphName.NoteMiWhole] = GlyphNameDescriptions.NoteMiWhole,
        [GlyphName.NoteQuarterDown] = GlyphNameDescriptions.NoteQuarterDown,
        [GlyphName.NoteQuarterUp] = GlyphNameDescriptions.NoteQuarterUp,
        [GlyphName.NoteRaBlack] = GlyphNameDescriptions.NoteRaBlack,
        [GlyphName.NoteRaHalf] = GlyphNameDescriptions.NoteRaHalf,
        [GlyphName.NoteRaWhole] = GlyphNameDescriptions.NoteRaWhole,
        [GlyphName.NoteReBlack] = GlyphNameDescriptions.NoteReBlack,
        [GlyphName.NoteReHalf] = GlyphNameDescriptions.NoteReHalf,
        [GlyphName.NoteReWhole] = GlyphNameDescriptions.NoteReWhole,
        [GlyphName.NoteRiBlack] = GlyphNameDescriptions.NoteRiBlack,
        [GlyphName.NoteRiHalf] = GlyphNameDescriptions.NoteRiHalf,
        [GlyphName.NoteRiWhole] = GlyphNameDescriptions.NoteRiWhole,
        [GlyphName.NoteSeBlack] = GlyphNameDescriptions.NoteSeBlack,
        [GlyphName.NoteSeHalf] = GlyphNameDescriptions.NoteSeHalf,
        [GlyphName.NoteSeWhole] = GlyphNameDescriptions.NoteSeWhole,
        [GlyphName.NoteShapeArrowheadLeftBlack] = GlyphNameDescriptions.NoteShapeArrowheadLeftBlack,
        [GlyphName.NoteShapeArrowheadLeftDoubleWhole] = GlyphNameDescriptions.NoteShapeArrowheadLeftDoubleWhole,
        [GlyphName.NoteShapeArrowheadLeftWhite] = GlyphNameDescriptions.NoteShapeArrowheadLeftWhite,
        [GlyphName.NoteShapeDiamondBlack] = GlyphNameDescriptions.NoteShapeDiamondBlack,
        [GlyphName.NoteShapeDiamondDoubleWhole] = GlyphNameDescriptions.NoteShapeDiamondDoubleWhole,
        [GlyphName.NoteShapeDiamondWhite] = GlyphNameDescriptions.NoteShapeDiamondWhite,
        [GlyphName.NoteShapeIsoscelesTriangleBlack] = GlyphNameDescriptions.NoteShapeIsoscelesTriangleBlack,
        [GlyphName.NoteShapeIsoscelesTriangleDoubleWhole] = GlyphNameDescriptions.NoteShapeIsoscelesTriangleDoubleWhole,
        [GlyphName.NoteShapeIsoscelesTriangleWhite] = GlyphNameDescriptions.NoteShapeIsoscelesTriangleWhite,
        [GlyphName.NoteShapeKeystoneBlack] = GlyphNameDescriptions.NoteShapeKeystoneBlack,
        [GlyphName.NoteShapeKeystoneDoubleWhole] = GlyphNameDescriptions.NoteShapeKeystoneDoubleWhole,
        [GlyphName.NoteShapeKeystoneWhite] = GlyphNameDescriptions.NoteShapeKeystoneWhite,
        [GlyphName.NoteShapeMoonBlack] = GlyphNameDescriptions.NoteShapeMoonBlack,
        [GlyphName.NoteShapeMoonDoubleWhole] = GlyphNameDescriptions.NoteShapeMoonDoubleWhole,
        [GlyphName.NoteShapeMoonLeftBlack] = GlyphNameDescriptions.NoteShapeMoonLeftBlack,
        [GlyphName.NoteShapeMoonLeftDoubleWhole] = GlyphNameDescriptions.NoteShapeMoonLeftDoubleWhole,
        [GlyphName.NoteShapeMoonLeftWhite] = GlyphNameDescriptions.NoteShapeMoonLeftWhite,
        [GlyphName.NoteShapeMoonWhite] = GlyphNameDescriptions.NoteShapeMoonWhite,
        [GlyphName.NoteShapeQuarterMoonBlack] = GlyphNameDescriptions.NoteShapeQuarterMoonBlack,
        [GlyphName.NoteShapeQuarterMoonDoubleWhole] = GlyphNameDescriptions.NoteShapeQuarterMoonDoubleWhole,
        [GlyphName.NoteShapeQuarterMoonWhite] = GlyphNameDescriptions.NoteShapeQuarterMoonWhite,
        [GlyphName.NoteShapeRoundBlack] = GlyphNameDescriptions.NoteShapeRoundBlack,
        [GlyphName.NoteShapeRoundDoubleWhole] = GlyphNameDescriptions.NoteShapeRoundDoubleWhole,
        [GlyphName.NoteShapeRoundWhite] = GlyphNameDescriptions.NoteShapeRoundWhite,
        [GlyphName.NoteShapeSquareBlack] = GlyphNameDescriptions.NoteShapeSquareBlack,
        [GlyphName.NoteShapeSquareDoubleWhole] = GlyphNameDescriptions.NoteShapeSquareDoubleWhole,
        [GlyphName.NoteShapeSquareWhite] = GlyphNameDescriptions.NoteShapeSquareWhite,
        [GlyphName.NoteShapeTriangleLeftBlack] = GlyphNameDescriptions.NoteShapeTriangleLeftBlack,
        [GlyphName.NoteShapeTriangleLeftDoubleWhole] = GlyphNameDescriptions.NoteShapeTriangleLeftDoubleWhole,
        [GlyphName.NoteShapeTriangleLeftWhite] = GlyphNameDescriptions.NoteShapeTriangleLeftWhite,
        [GlyphName.NoteShapeTriangleRightBlack] = GlyphNameDescriptions.NoteShapeTriangleRightBlack,
        [GlyphName.NoteShapeTriangleRightDoubleWhole] = GlyphNameDescriptions.NoteShapeTriangleRightDoubleWhole,
        [GlyphName.NoteShapeTriangleRightWhite] = GlyphNameDescriptions.NoteShapeTriangleRightWhite,
        [GlyphName.NoteShapeTriangleRoundBlack] = GlyphNameDescriptions.NoteShapeTriangleRoundBlack,
        [GlyphName.NoteShapeTriangleRoundDoubleWhole] = GlyphNameDescriptions.NoteShapeTriangleRoundDoubleWhole,
        [GlyphName.NoteShapeTriangleRoundLeftBlack] = GlyphNameDescriptions.NoteShapeTriangleRoundLeftBlack,
        [GlyphName.NoteShapeTriangleRoundLeftDoubleWhole] = GlyphNameDescriptions.NoteShapeTriangleRoundLeftDoubleWhole,
        [GlyphName.NoteShapeTriangleRoundLeftWhite] = GlyphNameDescriptions.NoteShapeTriangleRoundLeftWhite,
        [GlyphName.NoteShapeTriangleRoundWhite] = GlyphNameDescriptions.NoteShapeTriangleRoundWhite,
        [GlyphName.NoteShapeTriangleUpBlack] = GlyphNameDescriptions.NoteShapeTriangleUpBlack,
        [GlyphName.NoteShapeTriangleUpDoubleWhole] = GlyphNameDescriptions.NoteShapeTriangleUpDoubleWhole,
        [GlyphName.NoteShapeTriangleUpWhite] = GlyphNameDescriptions.NoteShapeTriangleUpWhite,
        [GlyphName.NoteSiBlack] = GlyphNameDescriptions.NoteSiBlack,
        [GlyphName.NoteSiHalf] = GlyphNameDescriptions.NoteSiHalf,
        [GlyphName.NoteSiWhole] = GlyphNameDescriptions.NoteSiWhole,
        [GlyphName.NoteSoBlack] = GlyphNameDescriptions.NoteSoBlack,
        [GlyphName.NoteSoHalf] = GlyphNameDescriptions.NoteSoHalf,
        [GlyphName.NoteSoWhole] = GlyphNameDescriptions.NoteSoWhole,
        [GlyphName.NoteTeBlack] = GlyphNameDescriptions.NoteTeBlack,
        [GlyphName.NoteTeHalf] = GlyphNameDescriptions.NoteTeHalf,
        [GlyphName.NoteTeWhole] = GlyphNameDescriptions.NoteTeWhole,
        [GlyphName.NoteTiBlack] = GlyphNameDescriptions.NoteTiBlack,
        [GlyphName.NoteTiHalf] = GlyphNameDescriptions.NoteTiHalf,
        [GlyphName.NoteTiWhole] = GlyphNameDescriptions.NoteTiWhole,
        [GlyphName.NoteWhole] = GlyphNameDescriptions.NoteWhole,
        [GlyphName.NoteheadBlack] = GlyphNameDescriptions.NoteheadBlack,
        [GlyphName.NoteheadCircleSlash] = GlyphNameDescriptions.NoteheadCircleSlash,
        [GlyphName.NoteheadCircleX] = GlyphNameDescriptions.NoteheadCircleX,
        [GlyphName.NoteheadCircleXDoubleWhole] = GlyphNameDescriptions.NoteheadCircleXDoubleWhole,
        [GlyphName.NoteheadCircleXHalf] = GlyphNameDescriptions.NoteheadCircleXHalf,
        [GlyphName.NoteheadCircleXWhole] = GlyphNameDescriptions.NoteheadCircleXWhole,
        [GlyphName.NoteheadCircledBlack] = GlyphNameDescriptions.NoteheadCircledBlack,
        [GlyphName.NoteheadCircledBlackLarge] = GlyphNameDescriptions.NoteheadCircledBlackLarge,
        [GlyphName.NoteheadCircledDoubleWhole] = GlyphNameDescriptions.NoteheadCircledDoubleWhole,
        [GlyphName.NoteheadCircledDoubleWholeLarge] = GlyphNameDescriptions.NoteheadCircledDoubleWholeLarge,
        [GlyphName.NoteheadCircledHalf] = GlyphNameDescriptions.NoteheadCircledHalf,
        [GlyphName.NoteheadCircledHalfLarge] = GlyphNameDescriptions.NoteheadCircledHalfLarge,
        [GlyphName.NoteheadCircledWhole] = GlyphNameDescriptions.NoteheadCircledWhole,
        [GlyphName.NoteheadCircledWholeLarge] = GlyphNameDescriptions.NoteheadCircledWholeLarge,
        [GlyphName.NoteheadCircledXLarge] = GlyphNameDescriptions.NoteheadCircledXLarge,
        [GlyphName.NoteheadClusterDoubleWhole2nd] = GlyphNameDescriptions.NoteheadClusterDoubleWhole2nd,
        [GlyphName.NoteheadClusterDoubleWhole3rd] = GlyphNameDescriptions.NoteheadClusterDoubleWhole3rd,
        [GlyphName.NoteheadClusterDoubleWholeBottom] = GlyphNameDescriptions.NoteheadClusterDoubleWholeBottom,
        [GlyphName.NoteheadClusterDoubleWholeMiddle] = GlyphNameDescriptions.NoteheadClusterDoubleWholeMiddle,
        [GlyphName.NoteheadClusterDoubleWholeTop] = GlyphNameDescriptions.NoteheadClusterDoubleWholeTop,
        [GlyphName.NoteheadClusterHalf2nd] = GlyphNameDescriptions.NoteheadClusterHalf2nd,
        [GlyphName.NoteheadClusterHalf3rd] = GlyphNameDescriptions.NoteheadClusterHalf3rd,
        [GlyphName.NoteheadClusterHalfBottom] = GlyphNameDescriptions.NoteheadClusterHalfBottom,
        [GlyphName.NoteheadClusterHalfMiddle] = GlyphNameDescriptions.NoteheadClusterHalfMiddle,
        [GlyphName.NoteheadClusterHalfTop] = GlyphNameDescriptions.NoteheadClusterHalfTop,
        [GlyphName.NoteheadClusterQuarter2nd] = GlyphNameDescriptions.NoteheadClusterQuarter2nd,
        [GlyphName.NoteheadClusterQuarter3rd] = GlyphNameDescriptions.NoteheadClusterQuarter3rd,
        [GlyphName.NoteheadClusterQuarterBottom] = GlyphNameDescriptions.NoteheadClusterQuarterBottom,
        [GlyphName.NoteheadClusterQuarterMiddle] = GlyphNameDescriptions.NoteheadClusterQuarterMiddle,
        [GlyphName.NoteheadClusterQuarterTop] = GlyphNameDescriptions.NoteheadClusterQuarterTop,
        [GlyphName.NoteheadClusterRoundBlack] = GlyphNameDescriptions.NoteheadClusterRoundBlack,
        [GlyphName.NoteheadClusterRoundWhite] = GlyphNameDescriptions.NoteheadClusterRoundWhite,
        [GlyphName.NoteheadClusterSquareBlack] = GlyphNameDescriptions.NoteheadClusterSquareBlack,
        [GlyphName.NoteheadClusterSquareWhite] = GlyphNameDescriptions.NoteheadClusterSquareWhite,
        [GlyphName.NoteheadClusterWhole2nd] = GlyphNameDescriptions.NoteheadClusterWhole2nd,
        [GlyphName.NoteheadClusterWhole3rd] = GlyphNameDescriptions.NoteheadClusterWhole3rd,
        [GlyphName.NoteheadClusterWholeBottom] = GlyphNameDescriptions.NoteheadClusterWholeBottom,
        [GlyphName.NoteheadClusterWholeMiddle] = GlyphNameDescriptions.NoteheadClusterWholeMiddle,
        [GlyphName.NoteheadClusterWholeTop] = GlyphNameDescriptions.NoteheadClusterWholeTop,
        [GlyphName.NoteheadCowellEleventhNoteSeriesHalf] = GlyphNameDescriptions.NoteheadCowellEleventhNoteSeriesHalf,
        [GlyphName.NoteheadCowellEleventhNoteSeriesWhole] = GlyphNameDescriptions.NoteheadCowellEleventhNoteSeriesWhole,
        [GlyphName.NoteheadCowellEleventhSeriesBlack] = GlyphNameDescriptions.NoteheadCowellEleventhSeriesBlack,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesBlack] = GlyphNameDescriptions.NoteheadCowellFifteenthNoteSeriesBlack,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesHalf] = GlyphNameDescriptions.NoteheadCowellFifteenthNoteSeriesHalf,
        [GlyphName.NoteheadCowellFifteenthNoteSeriesWhole] = GlyphNameDescriptions.NoteheadCowellFifteenthNoteSeriesWhole,
        [GlyphName.NoteheadCowellFifthNoteSeriesBlack] = GlyphNameDescriptions.NoteheadCowellFifthNoteSeriesBlack,
        [GlyphName.NoteheadCowellFifthNoteSeriesHalf] = GlyphNameDescriptions.NoteheadCowellFifthNoteSeriesHalf,
        [GlyphName.NoteheadCowellFifthNoteSeriesWhole] = GlyphNameDescriptions.NoteheadCowellFifthNoteSeriesWhole,
        [GlyphName.NoteheadCowellNinthNoteSeriesBlack] = GlyphNameDescriptions.NoteheadCowellNinthNoteSeriesBlack,
        [GlyphName.NoteheadCowellNinthNoteSeriesHalf] = GlyphNameDescriptions.NoteheadCowellNinthNoteSeriesHalf,
        [GlyphName.NoteheadCowellNinthNoteSeriesWhole] = GlyphNameDescriptions.NoteheadCowellNinthNoteSeriesWhole,
        [GlyphName.NoteheadCowellSeventhNoteSeriesBlack] = GlyphNameDescriptions.NoteheadCowellSeventhNoteSeriesBlack,
        [GlyphName.NoteheadCowellSeventhNoteSeriesHalf] = GlyphNameDescriptions.NoteheadCowellSeventhNoteSeriesHalf,
        [GlyphName.NoteheadCowellSeventhNoteSeriesWhole] = GlyphNameDescriptions.NoteheadCowellSeventhNoteSeriesWhole,
        [GlyphName.NoteheadCowellThirdNoteSeriesBlack] = GlyphNameDescriptions.NoteheadCowellThirdNoteSeriesBlack,
        [GlyphName.NoteheadCowellThirdNoteSeriesHalf] = GlyphNameDescriptions.NoteheadCowellThirdNoteSeriesHalf,
        [GlyphName.NoteheadCowellThirdNoteSeriesWhole] = GlyphNameDescriptions.NoteheadCowellThirdNoteSeriesWhole,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesBlack] = GlyphNameDescriptions.NoteheadCowellThirteenthNoteSeriesBlack,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesHalf] = GlyphNameDescriptions.NoteheadCowellThirteenthNoteSeriesHalf,
        [GlyphName.NoteheadCowellThirteenthNoteSeriesWhole] = GlyphNameDescriptions.NoteheadCowellThirteenthNoteSeriesWhole,
        [GlyphName.NoteheadDiamondBlack] = GlyphNameDescriptions.NoteheadDiamondBlack,
        [GlyphName.NoteheadDiamondBlackOld] = GlyphNameDescriptions.NoteheadDiamondBlackOld,
        [GlyphName.NoteheadDiamondBlackWide] = GlyphNameDescriptions.NoteheadDiamondBlackWide,
        [GlyphName.NoteheadDiamondClusterBlack2nd] = GlyphNameDescriptions.NoteheadDiamondClusterBlack2nd,
        [GlyphName.NoteheadDiamondClusterBlack3rd] = GlyphNameDescriptions.NoteheadDiamondClusterBlack3rd,
        [GlyphName.NoteheadDiamondClusterBlackBottom] = GlyphNameDescriptions.NoteheadDiamondClusterBlackBottom,
        [GlyphName.NoteheadDiamondClusterBlackMiddle] = GlyphNameDescriptions.NoteheadDiamondClusterBlackMiddle,
        [GlyphName.NoteheadDiamondClusterBlackTop] = GlyphNameDescriptions.NoteheadDiamondClusterBlackTop,
        [GlyphName.NoteheadDiamondClusterWhite2nd] = GlyphNameDescriptions.NoteheadDiamondClusterWhite2nd,
        [GlyphName.NoteheadDiamondClusterWhite3rd] = GlyphNameDescriptions.NoteheadDiamondClusterWhite3rd,
        [GlyphName.NoteheadDiamondClusterWhiteBottom] = GlyphNameDescriptions.NoteheadDiamondClusterWhiteBottom,
        [GlyphName.NoteheadDiamondClusterWhiteMiddle] = GlyphNameDescriptions.NoteheadDiamondClusterWhiteMiddle,
        [GlyphName.NoteheadDiamondClusterWhiteTop] = GlyphNameDescriptions.NoteheadDiamondClusterWhiteTop,
        [GlyphName.NoteheadDiamondDoubleWhole] = GlyphNameDescriptions.NoteheadDiamondDoubleWhole,
        [GlyphName.NoteheadDiamondDoubleWholeOld] = GlyphNameDescriptions.NoteheadDiamondDoubleWholeOld,
        [GlyphName.NoteheadDiamondHalf] = GlyphNameDescriptions.NoteheadDiamondHalf,
        [GlyphName.NoteheadDiamondHalfFilled] = GlyphNameDescriptions.NoteheadDiamondHalfFilled,
        [GlyphName.NoteheadDiamondHalfOld] = GlyphNameDescriptions.NoteheadDiamondHalfOld,
        [GlyphName.NoteheadDiamondHalfWide] = GlyphNameDescriptions.NoteheadDiamondHalfWide,
        [GlyphName.NoteheadDiamondOpen] = GlyphNameDescriptions.NoteheadDiamondOpen,
        [GlyphName.NoteheadDiamondWhite] = GlyphNameDescriptions.NoteheadDiamondWhite,
        [GlyphName.NoteheadDiamondWhiteWide] = GlyphNameDescriptions.NoteheadDiamondWhiteWide,
        [GlyphName.NoteheadDiamondWhole] = GlyphNameDescriptions.NoteheadDiamondWhole,
        [GlyphName.NoteheadDiamondWholeOld] = GlyphNameDescriptions.NoteheadDiamondWholeOld,
        [GlyphName.NoteheadDoubleWhole] = GlyphNameDescriptions.NoteheadDoubleWhole,
        [GlyphName.NoteheadDoubleWholeSquare] = GlyphNameDescriptions.NoteheadDoubleWholeSquare,
        [GlyphName.NoteheadDoubleWholeWithX] = GlyphNameDescriptions.NoteheadDoubleWholeWithX,
        [GlyphName.NoteheadHalf] = GlyphNameDescriptions.NoteheadHalf,
        [GlyphName.NoteheadHalfFilled] = GlyphNameDescriptions.NoteheadHalfFilled,
        [GlyphName.NoteheadHalfWithX] = GlyphNameDescriptions.NoteheadHalfWithX,
        [GlyphName.NoteheadHeavyX] = GlyphNameDescriptions.NoteheadHeavyX,
        [GlyphName.NoteheadHeavyXHat] = GlyphNameDescriptions.NoteheadHeavyXHat,
        [GlyphName.NoteheadLargeArrowDownBlack] = GlyphNameDescriptions.NoteheadLargeArrowDownBlack,
        [GlyphName.NoteheadLargeArrowDownDoubleWhole] = GlyphNameDescriptions.NoteheadLargeArrowDownDoubleWhole,
        [GlyphName.NoteheadLargeArrowDownHalf] = GlyphNameDescriptions.NoteheadLargeArrowDownHalf,
        [GlyphName.NoteheadLargeArrowDownWhole] = GlyphNameDescriptions.NoteheadLargeArrowDownWhole,
        [GlyphName.NoteheadLargeArrowUpBlack] = GlyphNameDescriptions.NoteheadLargeArrowUpBlack,
        [GlyphName.NoteheadLargeArrowUpDoubleWhole] = GlyphNameDescriptions.NoteheadLargeArrowUpDoubleWhole,
        [GlyphName.NoteheadLargeArrowUpHalf] = GlyphNameDescriptions.NoteheadLargeArrowUpHalf,
        [GlyphName.NoteheadLargeArrowUpWhole] = GlyphNameDescriptions.NoteheadLargeArrowUpWhole,
        [GlyphName.NoteheadMoonBlack] = GlyphNameDescriptions.NoteheadMoonBlack,
        [GlyphName.NoteheadMoonWhite] = GlyphNameDescriptions.NoteheadMoonWhite,
        [GlyphName.NoteheadNancarrowSine] = GlyphNameDescriptions.NoteheadNancarrowSine,
        [GlyphName.NoteheadNull] = GlyphNameDescriptions.NoteheadNull,
        [GlyphName.NoteheadParenthesis] = GlyphNameDescriptions.NoteheadParenthesis,
        [GlyphName.NoteheadParenthesisLeft] = GlyphNameDescriptions.NoteheadParenthesisLeft,
        [GlyphName.NoteheadParenthesisRight] = GlyphNameDescriptions.NoteheadParenthesisRight,
        [GlyphName.NoteheadPlusBlack] = GlyphNameDescriptions.NoteheadPlusBlack,
        [GlyphName.NoteheadPlusDoubleWhole] = GlyphNameDescriptions.NoteheadPlusDoubleWhole,
        [GlyphName.NoteheadPlusHalf] = GlyphNameDescriptions.NoteheadPlusHalf,
        [GlyphName.NoteheadPlusWhole] = GlyphNameDescriptions.NoteheadPlusWhole,
        [GlyphName.NoteheadRectangularClusterBlackBottom] = GlyphNameDescriptions.NoteheadRectangularClusterBlackBottom,
        [GlyphName.NoteheadRectangularClusterBlackMiddle] = GlyphNameDescriptions.NoteheadRectangularClusterBlackMiddle,
        [GlyphName.NoteheadRectangularClusterBlackTop] = GlyphNameDescriptions.NoteheadRectangularClusterBlackTop,
        [GlyphName.NoteheadRectangularClusterWhiteBottom] = GlyphNameDescriptions.NoteheadRectangularClusterWhiteBottom,
        [GlyphName.NoteheadRectangularClusterWhiteMiddle] = GlyphNameDescriptions.NoteheadRectangularClusterWhiteMiddle,
        [GlyphName.NoteheadRectangularClusterWhiteTop] = GlyphNameDescriptions.NoteheadRectangularClusterWhiteTop,
        [GlyphName.NoteheadRoundBlack] = GlyphNameDescriptions.NoteheadRoundBlack,
        [GlyphName.NoteheadRoundBlackDoubleSlashed] = GlyphNameDescriptions.NoteheadRoundBlackDoubleSlashed,
        [GlyphName.NoteheadRoundBlackLarge] = GlyphNameDescriptions.NoteheadRoundBlackLarge,
        [GlyphName.NoteheadRoundBlackSlashed] = GlyphNameDescriptions.NoteheadRoundBlackSlashed,
        [GlyphName.NoteheadRoundBlackSlashedLarge] = GlyphNameDescriptions.NoteheadRoundBlackSlashedLarge,
        [GlyphName.NoteheadRoundWhite] = GlyphNameDescriptions.NoteheadRoundWhite,
        [GlyphName.NoteheadRoundWhiteDoubleSlashed] = GlyphNameDescriptions.NoteheadRoundWhiteDoubleSlashed,
        [GlyphName.NoteheadRoundWhiteLarge] = GlyphNameDescriptions.NoteheadRoundWhiteLarge,
        [GlyphName.NoteheadRoundWhiteSlashed] = GlyphNameDescriptions.NoteheadRoundWhiteSlashed,
        [GlyphName.NoteheadRoundWhiteSlashedLarge] = GlyphNameDescriptions.NoteheadRoundWhiteSlashedLarge,
        [GlyphName.NoteheadRoundWhiteWithDot] = GlyphNameDescriptions.NoteheadRoundWhiteWithDot,
        [GlyphName.NoteheadRoundWhiteWithDotLarge] = GlyphNameDescriptions.NoteheadRoundWhiteWithDotLarge,
        [GlyphName.NoteheadSlashDiamondWhite] = GlyphNameDescriptions.NoteheadSlashDiamondWhite,
        [GlyphName.NoteheadSlashHorizontalEnds] = GlyphNameDescriptions.NoteheadSlashHorizontalEnds,
        [GlyphName.NoteheadSlashHorizontalEndsMuted] = GlyphNameDescriptions.NoteheadSlashHorizontalEndsMuted,
        [GlyphName.NoteheadSlashVerticalEnds] = GlyphNameDescriptions.NoteheadSlashVerticalEnds,
        [GlyphName.NoteheadSlashVerticalEndsMuted] = GlyphNameDescriptions.NoteheadSlashVerticalEndsMuted,
        [GlyphName.NoteheadSlashVerticalEndsSmall] = GlyphNameDescriptions.NoteheadSlashVerticalEndsSmall,
        [GlyphName.NoteheadSlashWhiteDoubleWhole] = GlyphNameDescriptions.NoteheadSlashWhiteDoubleWhole,
        [GlyphName.NoteheadSlashWhiteHalf] = GlyphNameDescriptions.NoteheadSlashWhiteHalf,
        [GlyphName.NoteheadSlashWhiteMuted] = GlyphNameDescriptions.NoteheadSlashWhiteMuted,
        [GlyphName.NoteheadSlashWhiteWhole] = GlyphNameDescriptions.NoteheadSlashWhiteWhole,
        [GlyphName.NoteheadSlashX] = GlyphNameDescriptions.NoteheadSlashX,
        [GlyphName.NoteheadSlashedBlack1] = GlyphNameDescriptions.NoteheadSlashedBlack1,
        [GlyphName.NoteheadSlashedBlack2] = GlyphNameDescriptions.NoteheadSlashedBlack2,
        [GlyphName.NoteheadSlashedDoubleWhole1] = GlyphNameDescriptions.NoteheadSlashedDoubleWhole1,
        [GlyphName.NoteheadSlashedDoubleWhole2] = GlyphNameDescriptions.NoteheadSlashedDoubleWhole2,
        [GlyphName.NoteheadSlashedHalf1] = GlyphNameDescriptions.NoteheadSlashedHalf1,
        [GlyphName.NoteheadSlashedHalf2] = GlyphNameDescriptions.NoteheadSlashedHalf2,
        [GlyphName.NoteheadSlashedWhole1] = GlyphNameDescriptions.NoteheadSlashedWhole1,
        [GlyphName.NoteheadSlashedWhole2] = GlyphNameDescriptions.NoteheadSlashedWhole2,
        [GlyphName.NoteheadSquareBlack] = GlyphNameDescriptions.NoteheadSquareBlack,
        [GlyphName.NoteheadSquareBlackLarge] = GlyphNameDescriptions.NoteheadSquareBlackLarge,
        [GlyphName.NoteheadSquareBlackWhite] = GlyphNameDescriptions.NoteheadSquareBlackWhite,
        [GlyphName.NoteheadSquareWhite] = GlyphNameDescriptions.NoteheadSquareWhite,
        [GlyphName.NoteheadTriangleDownBlack] = GlyphNameDescriptions.NoteheadTriangleDownBlack,
        [GlyphName.NoteheadTriangleDownDoubleWhole] = GlyphNameDescriptions.NoteheadTriangleDownDoubleWhole,
        [GlyphName.NoteheadTriangleDownHalf] = GlyphNameDescriptions.NoteheadTriangleDownHalf,
        [GlyphName.NoteheadTriangleDownWhite] = GlyphNameDescriptions.NoteheadTriangleDownWhite,
        [GlyphName.NoteheadTriangleDownWhole] = GlyphNameDescriptions.NoteheadTriangleDownWhole,
        [GlyphName.NoteheadTriangleLeftBlack] = GlyphNameDescriptions.NoteheadTriangleLeftBlack,
        [GlyphName.NoteheadTriangleLeftWhite] = GlyphNameDescriptions.NoteheadTriangleLeftWhite,
        [GlyphName.NoteheadTriangleRightBlack] = GlyphNameDescriptions.NoteheadTriangleRightBlack,
        [GlyphName.NoteheadTriangleRightWhite] = GlyphNameDescriptions.NoteheadTriangleRightWhite,
        [GlyphName.NoteheadTriangleRoundDownBlack] = GlyphNameDescriptions.NoteheadTriangleRoundDownBlack,
        [GlyphName.NoteheadTriangleRoundDownWhite] = GlyphNameDescriptions.NoteheadTriangleRoundDownWhite,
        [GlyphName.NoteheadTriangleUpBlack] = GlyphNameDescriptions.NoteheadTriangleUpBlack,
        [GlyphName.NoteheadTriangleUpDoubleWhole] = GlyphNameDescriptions.NoteheadTriangleUpDoubleWhole,
        [GlyphName.NoteheadTriangleUpHalf] = GlyphNameDescriptions.NoteheadTriangleUpHalf,
        [GlyphName.NoteheadTriangleUpRightBlack] = GlyphNameDescriptions.NoteheadTriangleUpRightBlack,
        [GlyphName.NoteheadTriangleUpRightWhite] = GlyphNameDescriptions.NoteheadTriangleUpRightWhite,
        [GlyphName.NoteheadTriangleUpWhite] = GlyphNameDescriptions.NoteheadTriangleUpWhite,
        [GlyphName.NoteheadTriangleUpWhole] = GlyphNameDescriptions.NoteheadTriangleUpWhole,
        [GlyphName.NoteheadVoidWithX] = GlyphNameDescriptions.NoteheadVoidWithX,
        [GlyphName.NoteheadWhole] = GlyphNameDescriptions.NoteheadWhole,
        [GlyphName.NoteheadWholeFilled] = GlyphNameDescriptions.NoteheadWholeFilled,
        [GlyphName.NoteheadWholeWithX] = GlyphNameDescriptions.NoteheadWholeWithX,
        [GlyphName.NoteheadXBlack] = GlyphNameDescriptions.NoteheadXBlack,
        [GlyphName.NoteheadXDoubleWhole] = GlyphNameDescriptions.NoteheadXDoubleWhole,
        [GlyphName.NoteheadXHalf] = GlyphNameDescriptions.NoteheadXHalf,
        [GlyphName.NoteheadXOrnate] = GlyphNameDescriptions.NoteheadXOrnate,
        [GlyphName.NoteheadXOrnateEllipse] = GlyphNameDescriptions.NoteheadXOrnateEllipse,
        [GlyphName.NoteheadXWhole] = GlyphNameDescriptions.NoteheadXWhole,
        [GlyphName.OctaveBaselineA] = GlyphNameDescriptions.OctaveBaselineA,
        [GlyphName.OctaveBaselineB] = GlyphNameDescriptions.OctaveBaselineB,
        [GlyphName.OctaveBaselineM] = GlyphNameDescriptions.OctaveBaselineM,
        [GlyphName.OctaveBaselineV] = GlyphNameDescriptions.OctaveBaselineV,
        [GlyphName.OctaveBassa] = GlyphNameDescriptions.OctaveBassa,
        [GlyphName.OctaveLoco] = GlyphNameDescriptions.OctaveLoco,
        [GlyphName.OctaveParensLeft] = GlyphNameDescriptions.OctaveParensLeft,
        [GlyphName.OctaveParensRight] = GlyphNameDescriptions.OctaveParensRight,
        [GlyphName.OctaveSuperscriptA] = GlyphNameDescriptions.OctaveSuperscriptA,
        [GlyphName.OctaveSuperscriptB] = GlyphNameDescriptions.OctaveSuperscriptB,
        [GlyphName.OctaveSuperscriptM] = GlyphNameDescriptions.OctaveSuperscriptM,
        [GlyphName.OctaveSuperscriptV] = GlyphNameDescriptions.OctaveSuperscriptV,
        [GlyphName.OneHandedRollStevens] = GlyphNameDescriptions.OneHandedRollStevens,
        [GlyphName.OrganGerman2Fusae] = GlyphNameDescriptions.OrganGerman2Fusae,
        [GlyphName.OrganGerman2Minimae] = GlyphNameDescriptions.OrganGerman2Minimae,
        [GlyphName.OrganGerman2OctaveUp] = GlyphNameDescriptions.OrganGerman2OctaveUp,
        [GlyphName.OrganGerman2Semifusae] = GlyphNameDescriptions.OrganGerman2Semifusae,
        [GlyphName.OrganGerman2Semiminimae] = GlyphNameDescriptions.OrganGerman2Semiminimae,
        [GlyphName.OrganGerman3Fusae] = GlyphNameDescriptions.OrganGerman3Fusae,
        [GlyphName.OrganGerman3Minimae] = GlyphNameDescriptions.OrganGerman3Minimae,
        [GlyphName.OrganGerman3Semifusae] = GlyphNameDescriptions.OrganGerman3Semifusae,
        [GlyphName.OrganGerman3Semiminimae] = GlyphNameDescriptions.OrganGerman3Semiminimae,
        [GlyphName.OrganGerman4Fusae] = GlyphNameDescriptions.OrganGerman4Fusae,
        [GlyphName.OrganGerman4Minimae] = GlyphNameDescriptions.OrganGerman4Minimae,
        [GlyphName.OrganGerman4Semifusae] = GlyphNameDescriptions.OrganGerman4Semifusae,
        [GlyphName.OrganGerman4Semiminimae] = GlyphNameDescriptions.OrganGerman4Semiminimae,
        [GlyphName.OrganGerman5Fusae] = GlyphNameDescriptions.OrganGerman5Fusae,
        [GlyphName.OrganGerman5Minimae] = GlyphNameDescriptions.OrganGerman5Minimae,
        [GlyphName.OrganGerman5Semifusae] = GlyphNameDescriptions.OrganGerman5Semifusae,
        [GlyphName.OrganGerman5Semiminimae] = GlyphNameDescriptions.OrganGerman5Semiminimae,
        [GlyphName.OrganGerman6Fusae] = GlyphNameDescriptions.OrganGerman6Fusae,
        [GlyphName.OrganGerman6Minimae] = GlyphNameDescriptions.OrganGerman6Minimae,
        [GlyphName.OrganGerman6Semifusae] = GlyphNameDescriptions.OrganGerman6Semifusae,
        [GlyphName.OrganGerman6Semiminimae] = GlyphNameDescriptions.OrganGerman6Semiminimae,
        [GlyphName.OrganGermanALower] = GlyphNameDescriptions.OrganGermanALower,
        [GlyphName.OrganGermanAUpper] = GlyphNameDescriptions.OrganGermanAUpper,
        [GlyphName.OrganGermanAugmentationDot] = GlyphNameDescriptions.OrganGermanAugmentationDot,
        [GlyphName.OrganGermanBLower] = GlyphNameDescriptions.OrganGermanBLower,
        [GlyphName.OrganGermanBUpper] = GlyphNameDescriptions.OrganGermanBUpper,
        [GlyphName.OrganGermanBuxheimerBrevis2] = GlyphNameDescriptions.OrganGermanBuxheimerBrevis2,
        [GlyphName.OrganGermanBuxheimerBrevis3] = GlyphNameDescriptions.OrganGermanBuxheimerBrevis3,
        [GlyphName.OrganGermanBuxheimerMinimaRest] = GlyphNameDescriptions.OrganGermanBuxheimerMinimaRest,
        [GlyphName.OrganGermanBuxheimerSemibrevis] = GlyphNameDescriptions.OrganGermanBuxheimerSemibrevis,
        [GlyphName.OrganGermanBuxheimerSemibrevisRest] = GlyphNameDescriptions.OrganGermanBuxheimerSemibrevisRest,
        [GlyphName.OrganGermanCLower] = GlyphNameDescriptions.OrganGermanCLower,
        [GlyphName.OrganGermanCUpper] = GlyphNameDescriptions.OrganGermanCUpper,
        [GlyphName.OrganGermanCisLower] = GlyphNameDescriptions.OrganGermanCisLower,
        [GlyphName.OrganGermanCisUpper] = GlyphNameDescriptions.OrganGermanCisUpper,
        [GlyphName.OrganGermanDLower] = GlyphNameDescriptions.OrganGermanDLower,
        [GlyphName.OrganGermanDUpper] = GlyphNameDescriptions.OrganGermanDUpper,
        [GlyphName.OrganGermanDisLower] = GlyphNameDescriptions.OrganGermanDisLower,
        [GlyphName.OrganGermanDisUpper] = GlyphNameDescriptions.OrganGermanDisUpper,
        [GlyphName.OrganGermanELower] = GlyphNameDescriptions.OrganGermanELower,
        [GlyphName.OrganGermanEUpper] = GlyphNameDescriptions.OrganGermanEUpper,
        [GlyphName.OrganGermanFLower] = GlyphNameDescriptions.OrganGermanFLower,
        [GlyphName.OrganGermanFUpper] = GlyphNameDescriptions.OrganGermanFUpper,
        [GlyphName.OrganGermanFisLower] = GlyphNameDescriptions.OrganGermanFisLower,
        [GlyphName.OrganGermanFisUpper] = GlyphNameDescriptions.OrganGermanFisUpper,
        [GlyphName.OrganGermanFusa] = GlyphNameDescriptions.OrganGermanFusa,
        [GlyphName.OrganGermanFusaRest] = GlyphNameDescriptions.OrganGermanFusaRest,
        [GlyphName.OrganGermanGLower] = GlyphNameDescriptions.OrganGermanGLower,
        [GlyphName.OrganGermanGUpper] = GlyphNameDescriptions.OrganGermanGUpper,
        [GlyphName.OrganGermanGisLower] = GlyphNameDescriptions.OrganGermanGisLower,
        [GlyphName.OrganGermanGisUpper] = GlyphNameDescriptions.OrganGermanGisUpper,
        [GlyphName.OrganGermanHLower] = GlyphNameDescriptions.OrganGermanHLower,
        [GlyphName.OrganGermanHUpper] = GlyphNameDescriptions.OrganGermanHUpper,
        [GlyphName.OrganGermanMinima] = GlyphNameDescriptions.OrganGermanMinima,
        [GlyphName.OrganGermanMinimaRest] = GlyphNameDescriptions.OrganGermanMinimaRest,
        [GlyphName.OrganGermanOctaveDown] = GlyphNameDescriptions.OrganGermanOctaveDown,
        [GlyphName.OrganGermanOctaveUp] = GlyphNameDescriptions.OrganGermanOctaveUp,
        [GlyphName.OrganGermanSemibrevis] = GlyphNameDescriptions.OrganGermanSemibrevis,
        [GlyphName.OrganGermanSemibrevisRest] = GlyphNameDescriptions.OrganGermanSemibrevisRest,
        [GlyphName.OrganGermanSemifusa] = GlyphNameDescriptions.OrganGermanSemifusa,
        [GlyphName.OrganGermanSemifusaRest] = GlyphNameDescriptions.OrganGermanSemifusaRest,
        [GlyphName.OrganGermanSemiminima] = GlyphNameDescriptions.OrganGermanSemiminima,
        [GlyphName.OrganGermanSemiminimaRest] = GlyphNameDescriptions.OrganGermanSemiminimaRest,
        [GlyphName.OrganGermanTie] = GlyphNameDescriptions.OrganGermanTie,
        [GlyphName.OrnamentBottomLeftConcaveStroke] = GlyphNameDescriptions.OrnamentBottomLeftConcaveStroke,
        [GlyphName.OrnamentBottomLeftConcaveStrokeLarge] = GlyphNameDescriptions.OrnamentBottomLeftConcaveStrokeLarge,
        [GlyphName.OrnamentBottomLeftConvexStroke] = GlyphNameDescriptions.OrnamentBottomLeftConvexStroke,
        [GlyphName.OrnamentBottomRightConcaveStroke] = GlyphNameDescriptions.OrnamentBottomRightConcaveStroke,
        [GlyphName.OrnamentBottomRightConvexStroke] = GlyphNameDescriptions.OrnamentBottomRightConvexStroke,
        [GlyphName.OrnamentComma] = GlyphNameDescriptions.OrnamentComma,
        [GlyphName.OrnamentDoubleObliqueLinesAfterNote] = GlyphNameDescriptions.OrnamentDoubleObliqueLinesAfterNote,
        [GlyphName.OrnamentDoubleObliqueLinesBeforeNote] = GlyphNameDescriptions.OrnamentDoubleObliqueLinesBeforeNote,
        [GlyphName.OrnamentDownCurve] = GlyphNameDescriptions.OrnamentDownCurve,
        [GlyphName.OrnamentHaydn] = GlyphNameDescriptions.OrnamentHaydn,
        [GlyphName.OrnamentHighLeftConcaveStroke] = GlyphNameDescriptions.OrnamentHighLeftConcaveStroke,
        [GlyphName.OrnamentHighLeftConvexStroke] = GlyphNameDescriptions.OrnamentHighLeftConvexStroke,
        [GlyphName.OrnamentHighRightConcaveStroke] = GlyphNameDescriptions.OrnamentHighRightConcaveStroke,
        [GlyphName.OrnamentHighRightConvexStroke] = GlyphNameDescriptions.OrnamentHighRightConvexStroke,
        [GlyphName.OrnamentHookAfterNote] = GlyphNameDescriptions.OrnamentHookAfterNote,
        [GlyphName.OrnamentHookBeforeNote] = GlyphNameDescriptions.OrnamentHookBeforeNote,
        [GlyphName.OrnamentLeftFacingHalfCircle] = GlyphNameDescriptions.OrnamentLeftFacingHalfCircle,
        [GlyphName.OrnamentLeftFacingHook] = GlyphNameDescriptions.OrnamentLeftFacingHook,
        [GlyphName.OrnamentLeftPlus] = GlyphNameDescriptions.OrnamentLeftPlus,
        [GlyphName.OrnamentLeftShakeT] = GlyphNameDescriptions.OrnamentLeftShakeT,
        [GlyphName.OrnamentLeftVerticalStroke] = GlyphNameDescriptions.OrnamentLeftVerticalStroke,
        [GlyphName.OrnamentLeftVerticalStrokeWithCross] = GlyphNameDescriptions.OrnamentLeftVerticalStrokeWithCross,
        [GlyphName.OrnamentLowLeftConcaveStroke] = GlyphNameDescriptions.OrnamentLowLeftConcaveStroke,
        [GlyphName.OrnamentLowLeftConvexStroke] = GlyphNameDescriptions.OrnamentLowLeftConvexStroke,
        [GlyphName.OrnamentLowRightConcaveStroke] = GlyphNameDescriptions.OrnamentLowRightConcaveStroke,
        [GlyphName.OrnamentLowRightConvexStroke] = GlyphNameDescriptions.OrnamentLowRightConvexStroke,
        [GlyphName.OrnamentMiddleVerticalStroke] = GlyphNameDescriptions.OrnamentMiddleVerticalStroke,
        [GlyphName.OrnamentMordent] = GlyphNameDescriptions.OrnamentMordent,
        [GlyphName.OrnamentObliqueLineAfterNote] = GlyphNameDescriptions.OrnamentObliqueLineAfterNote,
        [GlyphName.OrnamentObliqueLineBeforeNote] = GlyphNameDescriptions.OrnamentObliqueLineBeforeNote,
        [GlyphName.OrnamentObliqueLineHorizAfterNote] = GlyphNameDescriptions.OrnamentObliqueLineHorizAfterNote,
        [GlyphName.OrnamentObliqueLineHorizBeforeNote] = GlyphNameDescriptions.OrnamentObliqueLineHorizBeforeNote,
        [GlyphName.OrnamentOriscus] = GlyphNameDescriptions.OrnamentOriscus,
        [GlyphName.OrnamentPinceCouperin] = GlyphNameDescriptions.OrnamentPinceCouperin,
        [GlyphName.OrnamentPortDeVoixV] = GlyphNameDescriptions.OrnamentPortDeVoixV,
        [GlyphName.OrnamentPrecompAppoggTrill] = GlyphNameDescriptions.OrnamentPrecompAppoggTrill,
        [GlyphName.OrnamentPrecompAppoggTrillSuffix] = GlyphNameDescriptions.OrnamentPrecompAppoggTrillSuffix,
        [GlyphName.OrnamentPrecompCadence] = GlyphNameDescriptions.OrnamentPrecompCadence,
        [GlyphName.OrnamentPrecompCadenceUpperPrefix] = GlyphNameDescriptions.OrnamentPrecompCadenceUpperPrefix,
        [GlyphName.OrnamentPrecompCadenceUpperPrefixTurn] = GlyphNameDescriptions.OrnamentPrecompCadenceUpperPrefixTurn,
        [GlyphName.OrnamentPrecompCadenceWithTurn] = GlyphNameDescriptions.OrnamentPrecompCadenceWithTurn,
        [GlyphName.OrnamentPrecompDescendingSlide] = GlyphNameDescriptions.OrnamentPrecompDescendingSlide,
        [GlyphName.OrnamentPrecompDoubleCadenceLowerPrefix] = GlyphNameDescriptions.OrnamentPrecompDoubleCadenceLowerPrefix,
        [GlyphName.OrnamentPrecompDoubleCadenceUpperPrefix] = GlyphNameDescriptions.OrnamentPrecompDoubleCadenceUpperPrefix,
        [GlyphName.OrnamentPrecompDoubleCadenceUpperPrefixTurn] = GlyphNameDescriptions.OrnamentPrecompDoubleCadenceUpperPrefixTurn,
        [GlyphName.OrnamentPrecompInvertedMordentUpperPrefix] = GlyphNameDescriptions.OrnamentPrecompInvertedMordentUpperPrefix,
        [GlyphName.OrnamentPrecompMordentRelease] = GlyphNameDescriptions.OrnamentPrecompMordentRelease,
        [GlyphName.OrnamentPrecompMordentUpperPrefix] = GlyphNameDescriptions.OrnamentPrecompMordentUpperPrefix,
        [GlyphName.OrnamentPrecompPortDeVoixMordent] = GlyphNameDescriptions.OrnamentPrecompPortDeVoixMordent,
        [GlyphName.OrnamentPrecompSlide] = GlyphNameDescriptions.OrnamentPrecompSlide,
        [GlyphName.OrnamentPrecompSlideTrillBach] = GlyphNameDescriptions.OrnamentPrecompSlideTrillBach,
        [GlyphName.OrnamentPrecompSlideTrillDAnglebert] = GlyphNameDescriptions.OrnamentPrecompSlideTrillDAnglebert,
        [GlyphName.OrnamentPrecompSlideTrillMarpurg] = GlyphNameDescriptions.OrnamentPrecompSlideTrillMarpurg,
        [GlyphName.OrnamentPrecompSlideTrillMuffat] = GlyphNameDescriptions.OrnamentPrecompSlideTrillMuffat,
        [GlyphName.OrnamentPrecompSlideTrillSuffixMuffat] = GlyphNameDescriptions.OrnamentPrecompSlideTrillSuffixMuffat,
        [GlyphName.OrnamentPrecompTrillLowerSuffix] = GlyphNameDescriptions.OrnamentPrecompTrillLowerSuffix,
        [GlyphName.OrnamentPrecompTrillSuffixDandrieu] = GlyphNameDescriptions.OrnamentPrecompTrillSuffixDandrieu,
        [GlyphName.OrnamentPrecompTrillWithMordent] = GlyphNameDescriptions.OrnamentPrecompTrillWithMordent,
        [GlyphName.OrnamentPrecompTurnTrillBach] = GlyphNameDescriptions.OrnamentPrecompTurnTrillBach,
        [GlyphName.OrnamentPrecompTurnTrillDAnglebert] = GlyphNameDescriptions.OrnamentPrecompTurnTrillDAnglebert,
        [GlyphName.OrnamentQuilisma] = GlyphNameDescriptions.OrnamentQuilisma,
        [GlyphName.OrnamentRightFacingHalfCircle] = GlyphNameDescriptions.OrnamentRightFacingHalfCircle,
        [GlyphName.OrnamentRightFacingHook] = GlyphNameDescriptions.OrnamentRightFacingHook,
        [GlyphName.OrnamentRightVerticalStroke] = GlyphNameDescriptions.OrnamentRightVerticalStroke,
        [GlyphName.OrnamentSchleifer] = GlyphNameDescriptions.OrnamentSchleifer,
        [GlyphName.OrnamentShake3] = GlyphNameDescriptions.OrnamentShake3,
        [GlyphName.OrnamentShakeMuffat1] = GlyphNameDescriptions.OrnamentShakeMuffat1,
        [GlyphName.OrnamentShortObliqueLineAfterNote] = GlyphNameDescriptions.OrnamentShortObliqueLineAfterNote,
        [GlyphName.OrnamentShortObliqueLineBeforeNote] = GlyphNameDescriptions.OrnamentShortObliqueLineBeforeNote,
        [GlyphName.OrnamentShortTrill] = GlyphNameDescriptions.OrnamentShortTrill,
        [GlyphName.OrnamentTopLeftConcaveStroke] = GlyphNameDescriptions.OrnamentTopLeftConcaveStroke,
        [GlyphName.OrnamentTopLeftConvexStroke] = GlyphNameDescriptions.OrnamentTopLeftConvexStroke,
        [GlyphName.OrnamentTopRightConcaveStroke] = GlyphNameDescriptions.OrnamentTopRightConcaveStroke,
        [GlyphName.OrnamentTopRightConvexStroke] = GlyphNameDescriptions.OrnamentTopRightConvexStroke,
        [GlyphName.OrnamentTremblement] = GlyphNameDescriptions.OrnamentTremblement,
        [GlyphName.OrnamentTremblementCouperin] = GlyphNameDescriptions.OrnamentTremblementCouperin,
        [GlyphName.OrnamentTrill] = GlyphNameDescriptions.OrnamentTrill,
        [GlyphName.OrnamentTurn] = GlyphNameDescriptions.OrnamentTurn,
        [GlyphName.OrnamentTurnInverted] = GlyphNameDescriptions.OrnamentTurnInverted,
        [GlyphName.OrnamentTurnSlash] = GlyphNameDescriptions.OrnamentTurnSlash,
        [GlyphName.OrnamentTurnUp] = GlyphNameDescriptions.OrnamentTurnUp,
        [GlyphName.OrnamentTurnUpS] = GlyphNameDescriptions.OrnamentTurnUpS,
        [GlyphName.OrnamentUpCurve] = GlyphNameDescriptions.OrnamentUpCurve,
        [GlyphName.OrnamentVerticalLine] = GlyphNameDescriptions.OrnamentVerticalLine,
        [GlyphName.OrnamentZigZagLineNoRightEnd] = GlyphNameDescriptions.OrnamentZigZagLineNoRightEnd,
        [GlyphName.OrnamentZigZagLineWithRightEnd] = GlyphNameDescriptions.OrnamentZigZagLineWithRightEnd,
        [GlyphName.Ottava] = GlyphNameDescriptions.Ottava,
        [GlyphName.OttavaAlta] = GlyphNameDescriptions.OttavaAlta,
        [GlyphName.OttavaBassa] = GlyphNameDescriptions.OttavaBassa,
        [GlyphName.OttavaBassaBa] = GlyphNameDescriptions.OttavaBassaBa,
        [GlyphName.OttavaBassaVb] = GlyphNameDescriptions.OttavaBassaVb,
        [GlyphName.PendereckiTremolo] = GlyphNameDescriptions.PendereckiTremolo,
        [GlyphName.PictAgogo] = GlyphNameDescriptions.PictAgogo,
        [GlyphName.PictAlmglocken] = GlyphNameDescriptions.PictAlmglocken,
        [GlyphName.PictAnvil] = GlyphNameDescriptions.PictAnvil,
        [GlyphName.PictBambooChimes] = GlyphNameDescriptions.PictBambooChimes,
        [GlyphName.PictBambooScraper] = GlyphNameDescriptions.PictBambooScraper,
        [GlyphName.PictBassDrum] = GlyphNameDescriptions.PictBassDrum,
        [GlyphName.PictBassDrumOnSide] = GlyphNameDescriptions.PictBassDrumOnSide,
        [GlyphName.PictBeaterBow] = GlyphNameDescriptions.PictBeaterBow,
        [GlyphName.PictBeaterBox] = GlyphNameDescriptions.PictBeaterBox,
        [GlyphName.PictBeaterBrassMalletsDown] = GlyphNameDescriptions.PictBeaterBrassMalletsDown,
        [GlyphName.PictBeaterBrassMalletsLeft] = GlyphNameDescriptions.PictBeaterBrassMalletsLeft,
        [GlyphName.PictBeaterBrassMalletsRight] = GlyphNameDescriptions.PictBeaterBrassMalletsRight,
        [GlyphName.PictBeaterBrassMalletsUp] = GlyphNameDescriptions.PictBeaterBrassMalletsUp,
        [GlyphName.PictBeaterCombiningDashedCircle] = GlyphNameDescriptions.PictBeaterCombiningDashedCircle,
        [GlyphName.PictBeaterCombiningParentheses] = GlyphNameDescriptions.PictBeaterCombiningParentheses,
        [GlyphName.PictBeaterDoubleBassDrumDown] = GlyphNameDescriptions.PictBeaterDoubleBassDrumDown,
        [GlyphName.PictBeaterDoubleBassDrumUp] = GlyphNameDescriptions.PictBeaterDoubleBassDrumUp,
        [GlyphName.PictBeaterFinger] = GlyphNameDescriptions.PictBeaterFinger,
        [GlyphName.PictBeaterFingernails] = GlyphNameDescriptions.PictBeaterFingernails,
        [GlyphName.PictBeaterFist] = GlyphNameDescriptions.PictBeaterFist,
        [GlyphName.PictBeaterGuiroScraper] = GlyphNameDescriptions.PictBeaterGuiroScraper,
        [GlyphName.PictBeaterHammer] = GlyphNameDescriptions.PictBeaterHammer,
        [GlyphName.PictBeaterHammerMetalDown] = GlyphNameDescriptions.PictBeaterHammerMetalDown,
        [GlyphName.PictBeaterHammerMetalUp] = GlyphNameDescriptions.PictBeaterHammerMetalUp,
        [GlyphName.PictBeaterHammerPlasticDown] = GlyphNameDescriptions.PictBeaterHammerPlasticDown,
        [GlyphName.PictBeaterHammerPlasticUp] = GlyphNameDescriptions.PictBeaterHammerPlasticUp,
        [GlyphName.PictBeaterHammerWoodDown] = GlyphNameDescriptions.PictBeaterHammerWoodDown,
        [GlyphName.PictBeaterHammerWoodUp] = GlyphNameDescriptions.PictBeaterHammerWoodUp,
        [GlyphName.PictBeaterHand] = GlyphNameDescriptions.PictBeaterHand,
        [GlyphName.PictBeaterHardBassDrumDown] = GlyphNameDescriptions.PictBeaterHardBassDrumDown,
        [GlyphName.PictBeaterHardBassDrumUp] = GlyphNameDescriptions.PictBeaterHardBassDrumUp,
        [GlyphName.PictBeaterHardGlockenspielDown] = GlyphNameDescriptions.PictBeaterHardGlockenspielDown,
        [GlyphName.PictBeaterHardGlockenspielLeft] = GlyphNameDescriptions.PictBeaterHardGlockenspielLeft,
        [GlyphName.PictBeaterHardGlockenspielRight] = GlyphNameDescriptions.PictBeaterHardGlockenspielRight,
        [GlyphName.PictBeaterHardGlockenspielUp] = GlyphNameDescriptions.PictBeaterHardGlockenspielUp,
        [GlyphName.PictBeaterHardTimpaniDown] = GlyphNameDescriptions.PictBeaterHardTimpaniDown,
        [GlyphName.PictBeaterHardTimpaniLeft] = GlyphNameDescriptions.PictBeaterHardTimpaniLeft,
        [GlyphName.PictBeaterHardTimpaniRight] = GlyphNameDescriptions.PictBeaterHardTimpaniRight,
        [GlyphName.PictBeaterHardTimpaniUp] = GlyphNameDescriptions.PictBeaterHardTimpaniUp,
        [GlyphName.PictBeaterHardXylophoneDown] = GlyphNameDescriptions.PictBeaterHardXylophoneDown,
        [GlyphName.PictBeaterHardXylophoneLeft] = GlyphNameDescriptions.PictBeaterHardXylophoneLeft,
        [GlyphName.PictBeaterHardXylophoneRight] = GlyphNameDescriptions.PictBeaterHardXylophoneRight,
        [GlyphName.PictBeaterHardXylophoneUp] = GlyphNameDescriptions.PictBeaterHardXylophoneUp,
        [GlyphName.PictBeaterHardYarnDown] = GlyphNameDescriptions.PictBeaterHardYarnDown,
        [GlyphName.PictBeaterHardYarnLeft] = GlyphNameDescriptions.PictBeaterHardYarnLeft,
        [GlyphName.PictBeaterHardYarnRight] = GlyphNameDescriptions.PictBeaterHardYarnRight,
        [GlyphName.PictBeaterHardYarnUp] = GlyphNameDescriptions.PictBeaterHardYarnUp,
        [GlyphName.PictBeaterJazzSticksDown] = GlyphNameDescriptions.PictBeaterJazzSticksDown,
        [GlyphName.PictBeaterJazzSticksUp] = GlyphNameDescriptions.PictBeaterJazzSticksUp,
        [GlyphName.PictBeaterKnittingNeedle] = GlyphNameDescriptions.PictBeaterKnittingNeedle,
        [GlyphName.PictBeaterMallet] = GlyphNameDescriptions.PictBeaterMallet,
        [GlyphName.PictBeaterMalletDown] = GlyphNameDescriptions.PictBeaterMalletDown,
        [GlyphName.PictBeaterMediumBassDrumDown] = GlyphNameDescriptions.PictBeaterMediumBassDrumDown,
        [GlyphName.PictBeaterMediumBassDrumUp] = GlyphNameDescriptions.PictBeaterMediumBassDrumUp,
        [GlyphName.PictBeaterMediumTimpaniDown] = GlyphNameDescriptions.PictBeaterMediumTimpaniDown,
        [GlyphName.PictBeaterMediumTimpaniLeft] = GlyphNameDescriptions.PictBeaterMediumTimpaniLeft,
        [GlyphName.PictBeaterMediumTimpaniRight] = GlyphNameDescriptions.PictBeaterMediumTimpaniRight,
        [GlyphName.PictBeaterMediumTimpaniUp] = GlyphNameDescriptions.PictBeaterMediumTimpaniUp,
        [GlyphName.PictBeaterMediumXylophoneDown] = GlyphNameDescriptions.PictBeaterMediumXylophoneDown,
        [GlyphName.PictBeaterMediumXylophoneLeft] = GlyphNameDescriptions.PictBeaterMediumXylophoneLeft,
        [GlyphName.PictBeaterMediumXylophoneRight] = GlyphNameDescriptions.PictBeaterMediumXylophoneRight,
        [GlyphName.PictBeaterMediumXylophoneUp] = GlyphNameDescriptions.PictBeaterMediumXylophoneUp,
        [GlyphName.PictBeaterMediumYarnDown] = GlyphNameDescriptions.PictBeaterMediumYarnDown,
        [GlyphName.PictBeaterMediumYarnLeft] = GlyphNameDescriptions.PictBeaterMediumYarnLeft,
        [GlyphName.PictBeaterMediumYarnRight] = GlyphNameDescriptions.PictBeaterMediumYarnRight,
        [GlyphName.PictBeaterMediumYarnUp] = GlyphNameDescriptions.PictBeaterMediumYarnUp,
        [GlyphName.PictBeaterMetalBassDrumDown] = GlyphNameDescriptions.PictBeaterMetalBassDrumDown,
        [GlyphName.PictBeaterMetalBassDrumUp] = GlyphNameDescriptions.PictBeaterMetalBassDrumUp,
        [GlyphName.PictBeaterMetalDown] = GlyphNameDescriptions.PictBeaterMetalDown,
        [GlyphName.PictBeaterMetalHammer] = GlyphNameDescriptions.PictBeaterMetalHammer,
        [GlyphName.PictBeaterMetalLeft] = GlyphNameDescriptions.PictBeaterMetalLeft,
        [GlyphName.PictBeaterMetalRight] = GlyphNameDescriptions.PictBeaterMetalRight,
        [GlyphName.PictBeaterMetalUp] = GlyphNameDescriptions.PictBeaterMetalUp,
        [GlyphName.PictBeaterSnareSticksDown] = GlyphNameDescriptions.PictBeaterSnareSticksDown,
        [GlyphName.PictBeaterSnareSticksUp] = GlyphNameDescriptions.PictBeaterSnareSticksUp,
        [GlyphName.PictBeaterSoftBassDrumDown] = GlyphNameDescriptions.PictBeaterSoftBassDrumDown,
        [GlyphName.PictBeaterSoftBassDrumUp] = GlyphNameDescriptions.PictBeaterSoftBassDrumUp,
        [GlyphName.PictBeaterSoftGlockenspielDown] = GlyphNameDescriptions.PictBeaterSoftGlockenspielDown,
        [GlyphName.PictBeaterSoftGlockenspielLeft] = GlyphNameDescriptions.PictBeaterSoftGlockenspielLeft,
        [GlyphName.PictBeaterSoftGlockenspielRight] = GlyphNameDescriptions.PictBeaterSoftGlockenspielRight,
        [GlyphName.PictBeaterSoftGlockenspielUp] = GlyphNameDescriptions.PictBeaterSoftGlockenspielUp,
        [GlyphName.PictBeaterSoftTimpaniDown] = GlyphNameDescriptions.PictBeaterSoftTimpaniDown,
        [GlyphName.PictBeaterSoftTimpaniLeft] = GlyphNameDescriptions.PictBeaterSoftTimpaniLeft,
        [GlyphName.PictBeaterSoftTimpaniRight] = GlyphNameDescriptions.PictBeaterSoftTimpaniRight,
        [GlyphName.PictBeaterSoftTimpaniUp] = GlyphNameDescriptions.PictBeaterSoftTimpaniUp,
        [GlyphName.PictBeaterSoftXylophone] = GlyphNameDescriptions.PictBeaterSoftXylophone,
        [GlyphName.PictBeaterSoftXylophoneDown] = GlyphNameDescriptions.PictBeaterSoftXylophoneDown,
        [GlyphName.PictBeaterSoftXylophoneLeft] = GlyphNameDescriptions.PictBeaterSoftXylophoneLeft,
        [GlyphName.PictBeaterSoftXylophoneRight] = GlyphNameDescriptions.PictBeaterSoftXylophoneRight,
        [GlyphName.PictBeaterSoftXylophoneUp] = GlyphNameDescriptions.PictBeaterSoftXylophoneUp,
        [GlyphName.PictBeaterSoftYarnDown] = GlyphNameDescriptions.PictBeaterSoftYarnDown,
        [GlyphName.PictBeaterSoftYarnLeft] = GlyphNameDescriptions.PictBeaterSoftYarnLeft,
        [GlyphName.PictBeaterSoftYarnRight] = GlyphNameDescriptions.PictBeaterSoftYarnRight,
        [GlyphName.PictBeaterSoftYarnUp] = GlyphNameDescriptions.PictBeaterSoftYarnUp,
        [GlyphName.PictBeaterSpoonWoodenMallet] = GlyphNameDescriptions.PictBeaterSpoonWoodenMallet,
        [GlyphName.PictBeaterSuperballDown] = GlyphNameDescriptions.PictBeaterSuperballDown,
        [GlyphName.PictBeaterSuperballLeft] = GlyphNameDescriptions.PictBeaterSuperballLeft,
        [GlyphName.PictBeaterSuperballRight] = GlyphNameDescriptions.PictBeaterSuperballRight,
        [GlyphName.PictBeaterSuperballUp] = GlyphNameDescriptions.PictBeaterSuperballUp,
        [GlyphName.PictBeaterTriangleDown] = GlyphNameDescriptions.PictBeaterTriangleDown,
        [GlyphName.PictBeaterTrianglePlain] = GlyphNameDescriptions.PictBeaterTrianglePlain,
        [GlyphName.PictBeaterTriangleUp] = GlyphNameDescriptions.PictBeaterTriangleUp,
        [GlyphName.PictBeaterWireBrushesDown] = GlyphNameDescriptions.PictBeaterWireBrushesDown,
        [GlyphName.PictBeaterWireBrushesUp] = GlyphNameDescriptions.PictBeaterWireBrushesUp,
        [GlyphName.PictBeaterWoodTimpaniDown] = GlyphNameDescriptions.PictBeaterWoodTimpaniDown,
        [GlyphName.PictBeaterWoodTimpaniLeft] = GlyphNameDescriptions.PictBeaterWoodTimpaniLeft,
        [GlyphName.PictBeaterWoodTimpaniRight] = GlyphNameDescriptions.PictBeaterWoodTimpaniRight,
        [GlyphName.PictBeaterWoodTimpaniUp] = GlyphNameDescriptions.PictBeaterWoodTimpaniUp,
        [GlyphName.PictBeaterWoodXylophoneDown] = GlyphNameDescriptions.PictBeaterWoodXylophoneDown,
        [GlyphName.PictBeaterWoodXylophoneLeft] = GlyphNameDescriptions.PictBeaterWoodXylophoneLeft,
        [GlyphName.PictBeaterWoodXylophoneRight] = GlyphNameDescriptions.PictBeaterWoodXylophoneRight,
        [GlyphName.PictBeaterWoodXylophoneUp] = GlyphNameDescriptions.PictBeaterWoodXylophoneUp,
        [GlyphName.PictBell] = GlyphNameDescriptions.PictBell,
        [GlyphName.PictBellOfCymbal] = GlyphNameDescriptions.PictBellOfCymbal,
        [GlyphName.PictBellPlate] = GlyphNameDescriptions.PictBellPlate,
        [GlyphName.PictBellTree] = GlyphNameDescriptions.PictBellTree,
        [GlyphName.PictBirdWhistle] = GlyphNameDescriptions.PictBirdWhistle,
        [GlyphName.PictBoardClapper] = GlyphNameDescriptions.PictBoardClapper,
        [GlyphName.PictBongos] = GlyphNameDescriptions.PictBongos,
        [GlyphName.PictBrakeDrum] = GlyphNameDescriptions.PictBrakeDrum,
        [GlyphName.PictCabasa] = GlyphNameDescriptions.PictCabasa,
        [GlyphName.PictCannon] = GlyphNameDescriptions.PictCannon,
        [GlyphName.PictCarHorn] = GlyphNameDescriptions.PictCarHorn,
        [GlyphName.PictCastanets] = GlyphNameDescriptions.PictCastanets,
        [GlyphName.PictCastanetsWithHandle] = GlyphNameDescriptions.PictCastanetsWithHandle,
        [GlyphName.PictCelesta] = GlyphNameDescriptions.PictCelesta,
        [GlyphName.PictCencerro] = GlyphNameDescriptions.PictCencerro,
        [GlyphName.PictCenter1] = GlyphNameDescriptions.PictCenter1,
        [GlyphName.PictCenter2] = GlyphNameDescriptions.PictCenter2,
        [GlyphName.PictCenter3] = GlyphNameDescriptions.PictCenter3,
        [GlyphName.PictChainRattle] = GlyphNameDescriptions.PictChainRattle,
        [GlyphName.PictChimes] = GlyphNameDescriptions.PictChimes,
        [GlyphName.PictChineseCymbal] = GlyphNameDescriptions.PictChineseCymbal,
        [GlyphName.PictChokeCymbal] = GlyphNameDescriptions.PictChokeCymbal,
        [GlyphName.PictClaves] = GlyphNameDescriptions.PictClaves,
        [GlyphName.PictCoins] = GlyphNameDescriptions.PictCoins,
        [GlyphName.PictConga] = GlyphNameDescriptions.PictConga,
        [GlyphName.PictCowBell] = GlyphNameDescriptions.PictCowBell,
        [GlyphName.PictCrashCymbals] = GlyphNameDescriptions.PictCrashCymbals,
        [GlyphName.PictCrotales] = GlyphNameDescriptions.PictCrotales,
        [GlyphName.PictCrushStem] = GlyphNameDescriptions.PictCrushStem,
        [GlyphName.PictCuica] = GlyphNameDescriptions.PictCuica,
        [GlyphName.PictCymbalTongs] = GlyphNameDescriptions.PictCymbalTongs,
        [GlyphName.PictDamp1] = GlyphNameDescriptions.PictDamp1,
        [GlyphName.PictDamp2] = GlyphNameDescriptions.PictDamp2,
        [GlyphName.PictDamp3] = GlyphNameDescriptions.PictDamp3,
        [GlyphName.PictDamp4] = GlyphNameDescriptions.PictDamp4,
        [GlyphName.PictDeadNoteStem] = GlyphNameDescriptions.PictDeadNoteStem,
        [GlyphName.PictDrumStick] = GlyphNameDescriptions.PictDrumStick,
        [GlyphName.PictDuckCall] = GlyphNameDescriptions.PictDuckCall,
        [GlyphName.PictEdgeOfCymbal] = GlyphNameDescriptions.PictEdgeOfCymbal,
        [GlyphName.PictEmptyTrap] = GlyphNameDescriptions.PictEmptyTrap,
        [GlyphName.PictFingerCymbals] = GlyphNameDescriptions.PictFingerCymbals,
        [GlyphName.PictFlexatone] = GlyphNameDescriptions.PictFlexatone,
        [GlyphName.PictFootballRatchet] = GlyphNameDescriptions.PictFootballRatchet,
        [GlyphName.PictGlassHarmonica] = GlyphNameDescriptions.PictGlassHarmonica,
        [GlyphName.PictGlassHarp] = GlyphNameDescriptions.PictGlassHarp,
        [GlyphName.PictGlassPlateChimes] = GlyphNameDescriptions.PictGlassPlateChimes,
        [GlyphName.PictGlassTubeChimes] = GlyphNameDescriptions.PictGlassTubeChimes,
        [GlyphName.PictGlsp] = GlyphNameDescriptions.PictGlsp,
        [GlyphName.PictGlspSmithBrindle] = GlyphNameDescriptions.PictGlspSmithBrindle,
        [GlyphName.PictGobletDrum] = GlyphNameDescriptions.PictGobletDrum,
        [GlyphName.PictGong] = GlyphNameDescriptions.PictGong,
        [GlyphName.PictGongWithButton] = GlyphNameDescriptions.PictGongWithButton,
        [GlyphName.PictGuiro] = GlyphNameDescriptions.PictGuiro,
        [GlyphName.PictGumHardDown] = GlyphNameDescriptions.PictGumHardDown,
        [GlyphName.PictGumHardLeft] = GlyphNameDescriptions.PictGumHardLeft,
        [GlyphName.PictGumHardRight] = GlyphNameDescriptions.PictGumHardRight,
        [GlyphName.PictGumHardUp] = GlyphNameDescriptions.PictGumHardUp,
        [GlyphName.PictGumMediumDown] = GlyphNameDescriptions.PictGumMediumDown,
        [GlyphName.PictGumMediumLeft] = GlyphNameDescriptions.PictGumMediumLeft,
        [GlyphName.PictGumMediumRight] = GlyphNameDescriptions.PictGumMediumRight,
        [GlyphName.PictGumMediumUp] = GlyphNameDescriptions.PictGumMediumUp,
        [GlyphName.PictGumSoftDown] = GlyphNameDescriptions.PictGumSoftDown,
        [GlyphName.PictGumSoftLeft] = GlyphNameDescriptions.PictGumSoftLeft,
        [GlyphName.PictGumSoftRight] = GlyphNameDescriptions.PictGumSoftRight,
        [GlyphName.PictGumSoftUp] = GlyphNameDescriptions.PictGumSoftUp,
        [GlyphName.PictHalfOpen1] = GlyphNameDescriptions.PictHalfOpen1,
        [GlyphName.PictHalfOpen2] = GlyphNameDescriptions.PictHalfOpen2,
        [GlyphName.PictHandbell] = GlyphNameDescriptions.PictHandbell,
        [GlyphName.PictHiHat] = GlyphNameDescriptions.PictHiHat,
        [GlyphName.PictHiHatOnStand] = GlyphNameDescriptions.PictHiHatOnStand,
        [GlyphName.PictJawHarp] = GlyphNameDescriptions.PictJawHarp,
        [GlyphName.PictJingleBells] = GlyphNameDescriptions.PictJingleBells,
        [GlyphName.PictKlaxonHorn] = GlyphNameDescriptions.PictKlaxonHorn,
        [GlyphName.PictLeftHandCircle] = GlyphNameDescriptions.PictLeftHandCircle,
        [GlyphName.PictLionsRoar] = GlyphNameDescriptions.PictLionsRoar,
        [GlyphName.PictLithophone] = GlyphNameDescriptions.PictLithophone,
        [GlyphName.PictLogDrum] = GlyphNameDescriptions.PictLogDrum,
        [GlyphName.PictLotusFlute] = GlyphNameDescriptions.PictLotusFlute,
        [GlyphName.PictMar] = GlyphNameDescriptions.PictMar,
        [GlyphName.PictMarSmithBrindle] = GlyphNameDescriptions.PictMarSmithBrindle,
        [GlyphName.PictMaraca] = GlyphNameDescriptions.PictMaraca,
        [GlyphName.PictMaracas] = GlyphNameDescriptions.PictMaracas,
        [GlyphName.PictMegaphone] = GlyphNameDescriptions.PictMegaphone,
        [GlyphName.PictMetalPlateChimes] = GlyphNameDescriptions.PictMetalPlateChimes,
        [GlyphName.PictMetalTubeChimes] = GlyphNameDescriptions.PictMetalTubeChimes,
        [GlyphName.PictMusicalSaw] = GlyphNameDescriptions.PictMusicalSaw,
        [GlyphName.PictNormalPosition] = GlyphNameDescriptions.PictNormalPosition,
        [GlyphName.PictOnRim] = GlyphNameDescriptions.PictOnRim,
        [GlyphName.PictOpen] = GlyphNameDescriptions.PictOpen,
        [GlyphName.PictOpenRimShot] = GlyphNameDescriptions.PictOpenRimShot,
        [GlyphName.PictPistolShot] = GlyphNameDescriptions.PictPistolShot,
        [GlyphName.PictPoliceWhistle] = GlyphNameDescriptions.PictPoliceWhistle,
        [GlyphName.PictQuijada] = GlyphNameDescriptions.PictQuijada,
        [GlyphName.PictRainstick] = GlyphNameDescriptions.PictRainstick,
        [GlyphName.PictRatchet] = GlyphNameDescriptions.PictRatchet,
        [GlyphName.PictRecoReco] = GlyphNameDescriptions.PictRecoReco,
        [GlyphName.PictRightHandSquare] = GlyphNameDescriptions.PictRightHandSquare,
        [GlyphName.PictRim1] = GlyphNameDescriptions.PictRim1,
        [GlyphName.PictRim2] = GlyphNameDescriptions.PictRim2,
        [GlyphName.PictRim3] = GlyphNameDescriptions.PictRim3,
        [GlyphName.PictRimShotOnStem] = GlyphNameDescriptions.PictRimShotOnStem,
        [GlyphName.PictSandpaperBlocks] = GlyphNameDescriptions.PictSandpaperBlocks,
        [GlyphName.PictScrapeAroundRim] = GlyphNameDescriptions.PictScrapeAroundRim,
        [GlyphName.PictScrapeAroundRimClockwise] = GlyphNameDescriptions.PictScrapeAroundRimClockwise,
        [GlyphName.PictScrapeCenterToEdge] = GlyphNameDescriptions.PictScrapeCenterToEdge,
        [GlyphName.PictScrapeEdgeToCenter] = GlyphNameDescriptions.PictScrapeEdgeToCenter,
        [GlyphName.PictShellBells] = GlyphNameDescriptions.PictShellBells,
        [GlyphName.PictShellChimes] = GlyphNameDescriptions.PictShellChimes,
        [GlyphName.PictSiren] = GlyphNameDescriptions.PictSiren,
        [GlyphName.PictSistrum] = GlyphNameDescriptions.PictSistrum,
        [GlyphName.PictSizzleCymbal] = GlyphNameDescriptions.PictSizzleCymbal,
        [GlyphName.PictSleighBell] = GlyphNameDescriptions.PictSleighBell,
        [GlyphName.PictSlideBrushOnGong] = GlyphNameDescriptions.PictSlideBrushOnGong,
        [GlyphName.PictSlideWhistle] = GlyphNameDescriptions.PictSlideWhistle,
        [GlyphName.PictSlitDrum] = GlyphNameDescriptions.PictSlitDrum,
        [GlyphName.PictSnareDrum] = GlyphNameDescriptions.PictSnareDrum,
        [GlyphName.PictSnareDrumMilitary] = GlyphNameDescriptions.PictSnareDrumMilitary,
        [GlyphName.PictSnareDrumSnaresOff] = GlyphNameDescriptions.PictSnareDrumSnaresOff,
        [GlyphName.PictSteelDrums] = GlyphNameDescriptions.PictSteelDrums,
        [GlyphName.PictStickShot] = GlyphNameDescriptions.PictStickShot,
        [GlyphName.PictSuperball] = GlyphNameDescriptions.PictSuperball,
        [GlyphName.PictSuspendedCymbal] = GlyphNameDescriptions.PictSuspendedCymbal,
        [GlyphName.PictSwishStem] = GlyphNameDescriptions.PictSwishStem,
        [GlyphName.PictTabla] = GlyphNameDescriptions.PictTabla,
        [GlyphName.PictTamTam] = GlyphNameDescriptions.PictTamTam,
        [GlyphName.PictTamTamWithBeater] = GlyphNameDescriptions.PictTamTamWithBeater,
        [GlyphName.PictTambourine] = GlyphNameDescriptions.PictTambourine,
        [GlyphName.PictTempleBlocks] = GlyphNameDescriptions.PictTempleBlocks,
        [GlyphName.PictTenorDrum] = GlyphNameDescriptions.PictTenorDrum,
        [GlyphName.PictThundersheet] = GlyphNameDescriptions.PictThundersheet,
        [GlyphName.PictTimbales] = GlyphNameDescriptions.PictTimbales,
        [GlyphName.PictTimpani] = GlyphNameDescriptions.PictTimpani,
        [GlyphName.PictTomTom] = GlyphNameDescriptions.PictTomTom,
        [GlyphName.PictTomTomChinese] = GlyphNameDescriptions.PictTomTomChinese,
        [GlyphName.PictTomTomIndoAmerican] = GlyphNameDescriptions.PictTomTomIndoAmerican,
        [GlyphName.PictTomTomJapanese] = GlyphNameDescriptions.PictTomTomJapanese,
        [GlyphName.PictTriangle] = GlyphNameDescriptions.PictTriangle,
        [GlyphName.PictTubaphone] = GlyphNameDescriptions.PictTubaphone,
        [GlyphName.PictTubularBells] = GlyphNameDescriptions.PictTubularBells,
        [GlyphName.PictTurnLeftStem] = GlyphNameDescriptions.PictTurnLeftStem,
        [GlyphName.PictTurnRightLeftStem] = GlyphNameDescriptions.PictTurnRightLeftStem,
        [GlyphName.PictTurnRightStem] = GlyphNameDescriptions.PictTurnRightStem,
        [GlyphName.PictVib] = GlyphNameDescriptions.PictVib,
        [GlyphName.PictVibMotorOff] = GlyphNameDescriptions.PictVibMotorOff,
        [GlyphName.PictVibSmithBrindle] = GlyphNameDescriptions.PictVibSmithBrindle,
        [GlyphName.PictVibraslap] = GlyphNameDescriptions.PictVibraslap,
        [GlyphName.PictVietnameseHat] = GlyphNameDescriptions.PictVietnameseHat,
        [GlyphName.PictWhip] = GlyphNameDescriptions.PictWhip,
        [GlyphName.PictWindChimesGlass] = GlyphNameDescriptions.PictWindChimesGlass,
        [GlyphName.PictWindMachine] = GlyphNameDescriptions.PictWindMachine,
        [GlyphName.PictWindWhistle] = GlyphNameDescriptions.PictWindWhistle,
        [GlyphName.PictWoodBlock] = GlyphNameDescriptions.PictWoodBlock,
        [GlyphName.PictWoundHardDown] = GlyphNameDescriptions.PictWoundHardDown,
        [GlyphName.PictWoundHardLeft] = GlyphNameDescriptions.PictWoundHardLeft,
        [GlyphName.PictWoundHardRight] = GlyphNameDescriptions.PictWoundHardRight,
        [GlyphName.PictWoundHardUp] = GlyphNameDescriptions.PictWoundHardUp,
        [GlyphName.PictWoundSoftDown] = GlyphNameDescriptions.PictWoundSoftDown,
        [GlyphName.PictWoundSoftLeft] = GlyphNameDescriptions.PictWoundSoftLeft,
        [GlyphName.PictWoundSoftRight] = GlyphNameDescriptions.PictWoundSoftRight,
        [GlyphName.PictWoundSoftUp] = GlyphNameDescriptions.PictWoundSoftUp,
        [GlyphName.PictXyl] = GlyphNameDescriptions.PictXyl,
        [GlyphName.PictXylBass] = GlyphNameDescriptions.PictXylBass,
        [GlyphName.PictXylSmithBrindle] = GlyphNameDescriptions.PictXylSmithBrindle,
        [GlyphName.PictXylTenor] = GlyphNameDescriptions.PictXylTenor,
        [GlyphName.PictXylTenorTrough] = GlyphNameDescriptions.PictXylTenorTrough,
        [GlyphName.PictXylTrough] = GlyphNameDescriptions.PictXylTrough,
        [GlyphName.PluckedBuzzPizzicato] = GlyphNameDescriptions.PluckedBuzzPizzicato,
        [GlyphName.PluckedDamp] = GlyphNameDescriptions.PluckedDamp,
        [GlyphName.PluckedDampAll] = GlyphNameDescriptions.PluckedDampAll,
        [GlyphName.PluckedDampOnStem] = GlyphNameDescriptions.PluckedDampOnStem,
        [GlyphName.PluckedFingernailFlick] = GlyphNameDescriptions.PluckedFingernailFlick,
        [GlyphName.PluckedLeftHandPizzicato] = GlyphNameDescriptions.PluckedLeftHandPizzicato,
        [GlyphName.PluckedPlectrum] = GlyphNameDescriptions.PluckedPlectrum,
        [GlyphName.PluckedSnapPizzicatoAbove] = GlyphNameDescriptions.PluckedSnapPizzicatoAbove,
        [GlyphName.PluckedSnapPizzicatoBelow] = GlyphNameDescriptions.PluckedSnapPizzicatoBelow,
        [GlyphName.PluckedWithFingernails] = GlyphNameDescriptions.PluckedWithFingernails,
        [GlyphName.Quindicesima] = GlyphNameDescriptions.Quindicesima,
        [GlyphName.QuindicesimaAlta] = GlyphNameDescriptions.QuindicesimaAlta,
        [GlyphName.QuindicesimaBassa] = GlyphNameDescriptions.QuindicesimaBassa,
        [GlyphName.QuindicesimaBassaMb] = GlyphNameDescriptions.QuindicesimaBassaMb,
        [GlyphName.Repeat1Bar] = GlyphNameDescriptions.Repeat1Bar,
        [GlyphName.Repeat2Bars] = GlyphNameDescriptions.Repeat2Bars,
        [GlyphName.Repeat4Bars] = GlyphNameDescriptions.Repeat4Bars,
        [GlyphName.RepeatBarLowerDot] = GlyphNameDescriptions.RepeatBarLowerDot,
        [GlyphName.RepeatBarSlash] = GlyphNameDescriptions.RepeatBarSlash,
        [GlyphName.RepeatBarUpperDot] = GlyphNameDescriptions.RepeatBarUpperDot,
        [GlyphName.RepeatDot] = GlyphNameDescriptions.RepeatDot,
        [GlyphName.RepeatDots] = GlyphNameDescriptions.RepeatDots,
        [GlyphName.RepeatLeft] = GlyphNameDescriptions.RepeatLeft,
        [GlyphName.RepeatRight] = GlyphNameDescriptions.RepeatRight,
        [GlyphName.RepeatRightLeft] = GlyphNameDescriptions.RepeatRightLeft,
        [GlyphName.Rest1024th] = GlyphNameDescriptions.Rest1024th,
        [GlyphName.Rest128th] = GlyphNameDescriptions.Rest128th,
        [GlyphName.Rest16th] = GlyphNameDescriptions.Rest16th,
        [GlyphName.Rest256th] = GlyphNameDescriptions.Rest256th,
        [GlyphName.Rest32nd] = GlyphNameDescriptions.Rest32nd,
        [GlyphName.Rest512th] = GlyphNameDescriptions.Rest512th,
        [GlyphName.Rest64th] = GlyphNameDescriptions.Rest64th,
        [GlyphName.Rest8th] = GlyphNameDescriptions.Rest8th,
        [GlyphName.RestDoubleWhole] = GlyphNameDescriptions.RestDoubleWhole,
        [GlyphName.RestDoubleWholeLegerLine] = GlyphNameDescriptions.RestDoubleWholeLegerLine,
        [GlyphName.RestHBar] = GlyphNameDescriptions.RestHBar,
        [GlyphName.RestHBarLeft] = GlyphNameDescriptions.RestHBarLeft,
        [GlyphName.RestHBarMiddle] = GlyphNameDescriptions.RestHBarMiddle,
        [GlyphName.RestHBarRight] = GlyphNameDescriptions.RestHBarRight,
        [GlyphName.RestHalf] = GlyphNameDescriptions.RestHalf,
        [GlyphName.RestHalfLegerLine] = GlyphNameDescriptions.RestHalfLegerLine,
        [GlyphName.RestLonga] = GlyphNameDescriptions.RestLonga,
        [GlyphName.RestMaxima] = GlyphNameDescriptions.RestMaxima,
        [GlyphName.RestQuarter] = GlyphNameDescriptions.RestQuarter,
        [GlyphName.RestQuarterOld] = GlyphNameDescriptions.RestQuarterOld,
        [GlyphName.RestQuarterZ] = GlyphNameDescriptions.RestQuarterZ,
        [GlyphName.RestWhole] = GlyphNameDescriptions.RestWhole,
        [GlyphName.RestWholeLegerLine] = GlyphNameDescriptions.RestWholeLegerLine,
        [GlyphName.ReversedBrace] = GlyphNameDescriptions.ReversedBrace,
        [GlyphName.ReversedBracketBottom] = GlyphNameDescriptions.ReversedBracketBottom,
        [GlyphName.ReversedBracketTop] = GlyphNameDescriptions.ReversedBracketTop,
        [GlyphName.RightRepeatSmall] = GlyphNameDescriptions.RightRepeatSmall,
        [GlyphName.ScaleDegree1] = GlyphNameDescriptions.ScaleDegree1,
        [GlyphName.ScaleDegree2] = GlyphNameDescriptions.ScaleDegree2,
        [GlyphName.ScaleDegree3] = GlyphNameDescriptions.ScaleDegree3,
        [GlyphName.ScaleDegree4] = GlyphNameDescriptions.ScaleDegree4,
        [GlyphName.ScaleDegree5] = GlyphNameDescriptions.ScaleDegree5,
        [GlyphName.ScaleDegree6] = GlyphNameDescriptions.ScaleDegree6,
        [GlyphName.ScaleDegree7] = GlyphNameDescriptions.ScaleDegree7,
        [GlyphName.ScaleDegree8] = GlyphNameDescriptions.ScaleDegree8,
        [GlyphName.ScaleDegree9] = GlyphNameDescriptions.ScaleDegree9,
        [GlyphName.SchaefferClef] = GlyphNameDescriptions.SchaefferClef,
        [GlyphName.SchaefferFClefToGClef] = GlyphNameDescriptions.SchaefferFClefToGClef,
        [GlyphName.SchaefferGClefToFClef] = GlyphNameDescriptions.SchaefferGClefToFClef,
        [GlyphName.SchaefferPreviousClef] = GlyphNameDescriptions.SchaefferPreviousClef,
        [GlyphName.Segno] = GlyphNameDescriptions.Segno,
        [GlyphName.SegnoSerpent1] = GlyphNameDescriptions.SegnoSerpent1,
        [GlyphName.SegnoSerpent2] = GlyphNameDescriptions.SegnoSerpent2,
        [GlyphName.SemipitchedPercussionClef1] = GlyphNameDescriptions.SemipitchedPercussionClef1,
        [GlyphName.SemipitchedPercussionClef2] = GlyphNameDescriptions.SemipitchedPercussionClef2,
        [GlyphName.SmnFlat] = GlyphNameDescriptions.SmnFlat,
        [GlyphName.SmnFlatWhite] = GlyphNameDescriptions.SmnFlatWhite,
        [GlyphName.SmnHistoryDoubleFlat] = GlyphNameDescriptions.SmnHistoryDoubleFlat,
        [GlyphName.SmnHistoryDoubleSharp] = GlyphNameDescriptions.SmnHistoryDoubleSharp,
        [GlyphName.SmnHistoryFlat] = GlyphNameDescriptions.SmnHistoryFlat,
        [GlyphName.SmnHistorySharp] = GlyphNameDescriptions.SmnHistorySharp,
        [GlyphName.SmnNatural] = GlyphNameDescriptions.SmnNatural,
        [GlyphName.SmnSharp] = GlyphNameDescriptions.SmnSharp,
        [GlyphName.SmnSharpDown] = GlyphNameDescriptions.SmnSharpDown,
        [GlyphName.SmnSharpWhite] = GlyphNameDescriptions.SmnSharpWhite,
        [GlyphName.SmnSharpWhiteDown] = GlyphNameDescriptions.SmnSharpWhiteDown,
        [GlyphName.SplitBarDivider] = GlyphNameDescriptions.SplitBarDivider,
        [GlyphName.Staff1Line] = GlyphNameDescriptions.Staff1Line,
        [GlyphName.Staff1LineNarrow] = GlyphNameDescriptions.Staff1LineNarrow,
        [GlyphName.Staff1LineWide] = GlyphNameDescriptions.Staff1LineWide,
        [GlyphName.Staff2Lines] = GlyphNameDescriptions.Staff2Lines,
        [GlyphName.Staff2LinesNarrow] = GlyphNameDescriptions.Staff2LinesNarrow,
        [GlyphName.Staff2LinesWide] = GlyphNameDescriptions.Staff2LinesWide,
        [GlyphName.Staff3Lines] = GlyphNameDescriptions.Staff3Lines,
        [GlyphName.Staff3LinesNarrow] = GlyphNameDescriptions.Staff3LinesNarrow,
        [GlyphName.Staff3LinesWide] = GlyphNameDescriptions.Staff3LinesWide,
        [GlyphName.Staff4Lines] = GlyphNameDescriptions.Staff4Lines,
        [GlyphName.Staff4LinesNarrow] = GlyphNameDescriptions.Staff4LinesNarrow,
        [GlyphName.Staff4LinesWide] = GlyphNameDescriptions.Staff4LinesWide,
        [GlyphName.Staff5Lines] = GlyphNameDescriptions.Staff5Lines,
        [GlyphName.Staff5LinesNarrow] = GlyphNameDescriptions.Staff5LinesNarrow,
        [GlyphName.Staff5LinesWide] = GlyphNameDescriptions.Staff5LinesWide,
        [GlyphName.Staff6Lines] = GlyphNameDescriptions.Staff6Lines,
        [GlyphName.Staff6LinesNarrow] = GlyphNameDescriptions.Staff6LinesNarrow,
        [GlyphName.Staff6LinesWide] = GlyphNameDescriptions.Staff6LinesWide,
        [GlyphName.StaffDivideArrowDown] = GlyphNameDescriptions.StaffDivideArrowDown,
        [GlyphName.StaffDivideArrowUp] = GlyphNameDescriptions.StaffDivideArrowUp,
        [GlyphName.StaffDivideArrowUpDown] = GlyphNameDescriptions.StaffDivideArrowUpDown,
        [GlyphName.StaffPosLower1] = GlyphNameDescriptions.StaffPosLower1,
        [GlyphName.StaffPosLower2] = GlyphNameDescriptions.StaffPosLower2,
        [GlyphName.StaffPosLower3] = GlyphNameDescriptions.StaffPosLower3,
        [GlyphName.StaffPosLower4] = GlyphNameDescriptions.StaffPosLower4,
        [GlyphName.StaffPosLower5] = GlyphNameDescriptions.StaffPosLower5,
        [GlyphName.StaffPosLower6] = GlyphNameDescriptions.StaffPosLower6,
        [GlyphName.StaffPosLower7] = GlyphNameDescriptions.StaffPosLower7,
        [GlyphName.StaffPosLower8] = GlyphNameDescriptions.StaffPosLower8,
        [GlyphName.StaffPosRaise1] = GlyphNameDescriptions.StaffPosRaise1,
        [GlyphName.StaffPosRaise2] = GlyphNameDescriptions.StaffPosRaise2,
        [GlyphName.StaffPosRaise3] = GlyphNameDescriptions.StaffPosRaise3,
        [GlyphName.StaffPosRaise4] = GlyphNameDescriptions.StaffPosRaise4,
        [GlyphName.StaffPosRaise5] = GlyphNameDescriptions.StaffPosRaise5,
        [GlyphName.StaffPosRaise6] = GlyphNameDescriptions.StaffPosRaise6,
        [GlyphName.StaffPosRaise7] = GlyphNameDescriptions.StaffPosRaise7,
        [GlyphName.StaffPosRaise8] = GlyphNameDescriptions.StaffPosRaise8,
        [GlyphName.Stem] = GlyphNameDescriptions.Stem,
        [GlyphName.StemBowOnBridge] = GlyphNameDescriptions.StemBowOnBridge,
        [GlyphName.StemBowOnTailpiece] = GlyphNameDescriptions.StemBowOnTailpiece,
        [GlyphName.StemBuzzRoll] = GlyphNameDescriptions.StemBuzzRoll,
        [GlyphName.StemDamp] = GlyphNameDescriptions.StemDamp,
        [GlyphName.StemHarpStringNoise] = GlyphNameDescriptions.StemHarpStringNoise,
        [GlyphName.StemMultiphonicsBlack] = GlyphNameDescriptions.StemMultiphonicsBlack,
        [GlyphName.StemMultiphonicsBlackWhite] = GlyphNameDescriptions.StemMultiphonicsBlackWhite,
        [GlyphName.StemMultiphonicsWhite] = GlyphNameDescriptions.StemMultiphonicsWhite,
        [GlyphName.StemPendereckiTremolo] = GlyphNameDescriptions.StemPendereckiTremolo,
        [GlyphName.StemRimShot] = GlyphNameDescriptions.StemRimShot,
        [GlyphName.StemSprechgesang] = GlyphNameDescriptions.StemSprechgesang,
        [GlyphName.StemSulPonticello] = GlyphNameDescriptions.StemSulPonticello,
        [GlyphName.StemSussurando] = GlyphNameDescriptions.StemSussurando,
        [GlyphName.StemSwished] = GlyphNameDescriptions.StemSwished,
        [GlyphName.StemVibratoPulse] = GlyphNameDescriptions.StemVibratoPulse,
        [GlyphName.StockhausenTremolo] = GlyphNameDescriptions.StockhausenTremolo,
        [GlyphName.StringsBowBehindBridge] = GlyphNameDescriptions.StringsBowBehindBridge,
        [GlyphName.StringsBowBehindBridgeFourStrings] = GlyphNameDescriptions.StringsBowBehindBridgeFourStrings,
        [GlyphName.StringsBowBehindBridgeOneString] = GlyphNameDescriptions.StringsBowBehindBridgeOneString,
        [GlyphName.StringsBowBehindBridgeThreeStrings] = GlyphNameDescriptions.StringsBowBehindBridgeThreeStrings,
        [GlyphName.StringsBowBehindBridgeTwoStrings] = GlyphNameDescriptions.StringsBowBehindBridgeTwoStrings,
        [GlyphName.StringsBowOnBridge] = GlyphNameDescriptions.StringsBowOnBridge,
        [GlyphName.StringsBowOnTailpiece] = GlyphNameDescriptions.StringsBowOnTailpiece,
        [GlyphName.StringsChangeBowDirection] = GlyphNameDescriptions.StringsChangeBowDirection,
        [GlyphName.StringsDownBow] = GlyphNameDescriptions.StringsDownBow,
        [GlyphName.StringsDownBowAwayFromBody] = GlyphNameDescriptions.StringsDownBowAwayFromBody,
        [GlyphName.StringsDownBowBeyondBridge] = GlyphNameDescriptions.StringsDownBowBeyondBridge,
        [GlyphName.StringsDownBowTowardsBody] = GlyphNameDescriptions.StringsDownBowTowardsBody,
        [GlyphName.StringsDownBowTurned] = GlyphNameDescriptions.StringsDownBowTurned,
        [GlyphName.StringsFouette] = GlyphNameDescriptions.StringsFouette,
        [GlyphName.StringsHalfHarmonic] = GlyphNameDescriptions.StringsHalfHarmonic,
        [GlyphName.StringsHarmonic] = GlyphNameDescriptions.StringsHarmonic,
        [GlyphName.StringsJeteAbove] = GlyphNameDescriptions.StringsJeteAbove,
        [GlyphName.StringsJeteBelow] = GlyphNameDescriptions.StringsJeteBelow,
        [GlyphName.StringsMuteOff] = GlyphNameDescriptions.StringsMuteOff,
        [GlyphName.StringsMuteOn] = GlyphNameDescriptions.StringsMuteOn,
        [GlyphName.StringsOverpressureDownBow] = GlyphNameDescriptions.StringsOverpressureDownBow,
        [GlyphName.StringsOverpressureNoDirection] = GlyphNameDescriptions.StringsOverpressureNoDirection,
        [GlyphName.StringsOverpressurePossibileDownBow] = GlyphNameDescriptions.StringsOverpressurePossibileDownBow,
        [GlyphName.StringsOverpressurePossibileUpBow] = GlyphNameDescriptions.StringsOverpressurePossibileUpBow,
        [GlyphName.StringsOverpressureUpBow] = GlyphNameDescriptions.StringsOverpressureUpBow,
        [GlyphName.StringsScrapeCircularClockwise] = GlyphNameDescriptions.StringsScrapeCircularClockwise,
        [GlyphName.StringsScrapeCircularCounterclockwise] = GlyphNameDescriptions.StringsScrapeCircularCounterclockwise,
        [GlyphName.StringsScrapeParallelInward] = GlyphNameDescriptions.StringsScrapeParallelInward,
        [GlyphName.StringsScrapeParallelOutward] = GlyphNameDescriptions.StringsScrapeParallelOutward,
        [GlyphName.StringsThumbPosition] = GlyphNameDescriptions.StringsThumbPosition,
        [GlyphName.StringsThumbPositionTurned] = GlyphNameDescriptions.StringsThumbPositionTurned,
        [GlyphName.StringsTripleChopInward] = GlyphNameDescriptions.StringsTripleChopInward,
        [GlyphName.StringsTripleChopOutward] = GlyphNameDescriptions.StringsTripleChopOutward,
        [GlyphName.StringsUpBow] = GlyphNameDescriptions.StringsUpBow,
        [GlyphName.StringsUpBowAwayFromBody] = GlyphNameDescriptions.StringsUpBowAwayFromBody,
        [GlyphName.StringsUpBowBeyondBridge] = GlyphNameDescriptions.StringsUpBowBeyondBridge,
        [GlyphName.StringsUpBowTowardsBody] = GlyphNameDescriptions.StringsUpBowTowardsBody,
        [GlyphName.StringsUpBowTurned] = GlyphNameDescriptions.StringsUpBowTurned,
        [GlyphName.StringsVibratoPulse] = GlyphNameDescriptions.StringsVibratoPulse,
        [GlyphName.SwissRudimentsNoteheadBlackDouble] = GlyphNameDescriptions.SwissRudimentsNoteheadBlackDouble,
        [GlyphName.SwissRudimentsNoteheadBlackFlam] = GlyphNameDescriptions.SwissRudimentsNoteheadBlackFlam,
        [GlyphName.SwissRudimentsNoteheadHalfDouble] = GlyphNameDescriptions.SwissRudimentsNoteheadHalfDouble,
        [GlyphName.SwissRudimentsNoteheadHalfFlam] = GlyphNameDescriptions.SwissRudimentsNoteheadHalfFlam,
        [GlyphName.SystemDivider] = GlyphNameDescriptions.SystemDivider,
        [GlyphName.SystemDividerExtraLong] = GlyphNameDescriptions.SystemDividerExtraLong,
        [GlyphName.SystemDividerLong] = GlyphNameDescriptions.SystemDividerLong,
        [GlyphName.TextAugmentationDot] = GlyphNameDescriptions.TextAugmentationDot,
        [GlyphName.TextBlackNoteFrac16thLongStem] = GlyphNameDescriptions.TextBlackNoteFrac16thLongStem,
        [GlyphName.TextBlackNoteFrac16thShortStem] = GlyphNameDescriptions.TextBlackNoteFrac16thShortStem,
        [GlyphName.TextBlackNoteFrac32ndLongStem] = GlyphNameDescriptions.TextBlackNoteFrac32ndLongStem,
        [GlyphName.TextBlackNoteFrac8thLongStem] = GlyphNameDescriptions.TextBlackNoteFrac8thLongStem,
        [GlyphName.TextBlackNoteFrac8thShortStem] = GlyphNameDescriptions.TextBlackNoteFrac8thShortStem,
        [GlyphName.TextBlackNoteLongStem] = GlyphNameDescriptions.TextBlackNoteLongStem,
        [GlyphName.TextBlackNoteShortStem] = GlyphNameDescriptions.TextBlackNoteShortStem,
        [GlyphName.TextCont16thBeamLongStem] = GlyphNameDescriptions.TextCont16thBeamLongStem,
        [GlyphName.TextCont16thBeamShortStem] = GlyphNameDescriptions.TextCont16thBeamShortStem,
        [GlyphName.TextCont32ndBeamLongStem] = GlyphNameDescriptions.TextCont32ndBeamLongStem,
        [GlyphName.TextCont8thBeamLongStem] = GlyphNameDescriptions.TextCont8thBeamLongStem,
        [GlyphName.TextCont8thBeamShortStem] = GlyphNameDescriptions.TextCont8thBeamShortStem,
        [GlyphName.TextHeadlessBlackNoteFrac16thLongStem] = GlyphNameDescriptions.TextHeadlessBlackNoteFrac16thLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac16thShortStem] = GlyphNameDescriptions.TextHeadlessBlackNoteFrac16thShortStem,
        [GlyphName.TextHeadlessBlackNoteFrac32ndLongStem] = GlyphNameDescriptions.TextHeadlessBlackNoteFrac32ndLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac8thLongStem] = GlyphNameDescriptions.TextHeadlessBlackNoteFrac8thLongStem,
        [GlyphName.TextHeadlessBlackNoteFrac8thShortStem] = GlyphNameDescriptions.TextHeadlessBlackNoteFrac8thShortStem,
        [GlyphName.TextHeadlessBlackNoteLongStem] = GlyphNameDescriptions.TextHeadlessBlackNoteLongStem,
        [GlyphName.TextHeadlessBlackNoteShortStem] = GlyphNameDescriptions.TextHeadlessBlackNoteShortStem,
        [GlyphName.TextTie] = GlyphNameDescriptions.TextTie,
        [GlyphName.TextTuplet3LongStem] = GlyphNameDescriptions.TextTuplet3LongStem,
        [GlyphName.TextTuplet3ShortStem] = GlyphNameDescriptions.TextTuplet3ShortStem,
        [GlyphName.TextTupletBracketEndLongStem] = GlyphNameDescriptions.TextTupletBracketEndLongStem,
        [GlyphName.TextTupletBracketEndShortStem] = GlyphNameDescriptions.TextTupletBracketEndShortStem,
        [GlyphName.TextTupletBracketStartLongStem] = GlyphNameDescriptions.TextTupletBracketStartLongStem,
        [GlyphName.TextTupletBracketStartShortStem] = GlyphNameDescriptions.TextTupletBracketStartShortStem,
        [GlyphName.TimeSig0] = GlyphNameDescriptions.TimeSig0,
        [GlyphName.TimeSig0Reversed] = GlyphNameDescriptions.TimeSig0Reversed,
        [GlyphName.TimeSig0Turned] = GlyphNameDescriptions.TimeSig0Turned,
        [GlyphName.TimeSig1] = GlyphNameDescriptions.TimeSig1,
        [GlyphName.TimeSig1Reversed] = GlyphNameDescriptions.TimeSig1Reversed,
        [GlyphName.TimeSig1Turned] = GlyphNameDescriptions.TimeSig1Turned,
        [GlyphName.TimeSig2] = GlyphNameDescriptions.TimeSig2,
        [GlyphName.TimeSig2Reversed] = GlyphNameDescriptions.TimeSig2Reversed,
        [GlyphName.TimeSig2Turned] = GlyphNameDescriptions.TimeSig2Turned,
        [GlyphName.TimeSig3] = GlyphNameDescriptions.TimeSig3,
        [GlyphName.TimeSig3Reversed] = GlyphNameDescriptions.TimeSig3Reversed,
        [GlyphName.TimeSig3Turned] = GlyphNameDescriptions.TimeSig3Turned,
        [GlyphName.TimeSig4] = GlyphNameDescriptions.TimeSig4,
        [GlyphName.TimeSig4Reversed] = GlyphNameDescriptions.TimeSig4Reversed,
        [GlyphName.TimeSig4Turned] = GlyphNameDescriptions.TimeSig4Turned,
        [GlyphName.TimeSig5] = GlyphNameDescriptions.TimeSig5,
        [GlyphName.TimeSig5Reversed] = GlyphNameDescriptions.TimeSig5Reversed,
        [GlyphName.TimeSig5Turned] = GlyphNameDescriptions.TimeSig5Turned,
        [GlyphName.TimeSig6] = GlyphNameDescriptions.TimeSig6,
        [GlyphName.TimeSig6Reversed] = GlyphNameDescriptions.TimeSig6Reversed,
        [GlyphName.TimeSig6Turned] = GlyphNameDescriptions.TimeSig6Turned,
        [GlyphName.TimeSig7] = GlyphNameDescriptions.TimeSig7,
        [GlyphName.TimeSig7Reversed] = GlyphNameDescriptions.TimeSig7Reversed,
        [GlyphName.TimeSig7Turned] = GlyphNameDescriptions.TimeSig7Turned,
        [GlyphName.TimeSig8] = GlyphNameDescriptions.TimeSig8,
        [GlyphName.TimeSig8Reversed] = GlyphNameDescriptions.TimeSig8Reversed,
        [GlyphName.TimeSig8Turned] = GlyphNameDescriptions.TimeSig8Turned,
        [GlyphName.TimeSig9] = GlyphNameDescriptions.TimeSig9,
        [GlyphName.TimeSig9Reversed] = GlyphNameDescriptions.TimeSig9Reversed,
        [GlyphName.TimeSig9Turned] = GlyphNameDescriptions.TimeSig9Turned,
        [GlyphName.TimeSigBracketLeft] = GlyphNameDescriptions.TimeSigBracketLeft,
        [GlyphName.TimeSigBracketLeftSmall] = GlyphNameDescriptions.TimeSigBracketLeftSmall,
        [GlyphName.TimeSigBracketRight] = GlyphNameDescriptions.TimeSigBracketRight,
        [GlyphName.TimeSigBracketRightSmall] = GlyphNameDescriptions.TimeSigBracketRightSmall,
        [GlyphName.TimeSigCombDenominator] = GlyphNameDescriptions.TimeSigCombDenominator,
        [GlyphName.TimeSigCombNumerator] = GlyphNameDescriptions.TimeSigCombNumerator,
        [GlyphName.TimeSigComma] = GlyphNameDescriptions.TimeSigComma,
        [GlyphName.TimeSigCommon] = GlyphNameDescriptions.TimeSigCommon,
        [GlyphName.TimeSigCommonReversed] = GlyphNameDescriptions.TimeSigCommonReversed,
        [GlyphName.TimeSigCommonTurned] = GlyphNameDescriptions.TimeSigCommonTurned,
        [GlyphName.TimeSigCut2] = GlyphNameDescriptions.TimeSigCut2,
        [GlyphName.TimeSigCut3] = GlyphNameDescriptions.TimeSigCut3,
        [GlyphName.TimeSigCutCommon] = GlyphNameDescriptions.TimeSigCutCommon,
        [GlyphName.TimeSigCutCommonReversed] = GlyphNameDescriptions.TimeSigCutCommonReversed,
        [GlyphName.TimeSigCutCommonTurned] = GlyphNameDescriptions.TimeSigCutCommonTurned,
        [GlyphName.TimeSigEquals] = GlyphNameDescriptions.TimeSigEquals,
        [GlyphName.TimeSigFractionHalf] = GlyphNameDescriptions.TimeSigFractionHalf,
        [GlyphName.TimeSigFractionOneThird] = GlyphNameDescriptions.TimeSigFractionOneThird,
        [GlyphName.TimeSigFractionQuarter] = GlyphNameDescriptions.TimeSigFractionQuarter,
        [GlyphName.TimeSigFractionThreeQuarters] = GlyphNameDescriptions.TimeSigFractionThreeQuarters,
        [GlyphName.TimeSigFractionTwoThirds] = GlyphNameDescriptions.TimeSigFractionTwoThirds,
        [GlyphName.TimeSigFractionalSlash] = GlyphNameDescriptions.TimeSigFractionalSlash,
        [GlyphName.TimeSigMinus] = GlyphNameDescriptions.TimeSigMinus,
        [GlyphName.TimeSigMultiply] = GlyphNameDescriptions.TimeSigMultiply,
        [GlyphName.TimeSigOpenPenderecki] = GlyphNameDescriptions.TimeSigOpenPenderecki,
        [GlyphName.TimeSigParensLeft] = GlyphNameDescriptions.TimeSigParensLeft,
        [GlyphName.TimeSigParensLeftSmall] = GlyphNameDescriptions.TimeSigParensLeftSmall,
        [GlyphName.TimeSigParensRight] = GlyphNameDescriptions.TimeSigParensRight,
        [GlyphName.TimeSigParensRightSmall] = GlyphNameDescriptions.TimeSigParensRightSmall,
        [GlyphName.TimeSigPlus] = GlyphNameDescriptions.TimeSigPlus,
        [GlyphName.TimeSigPlusSmall] = GlyphNameDescriptions.TimeSigPlusSmall,
        [GlyphName.TimeSigSlash] = GlyphNameDescriptions.TimeSigSlash,
        [GlyphName.TimeSigX] = GlyphNameDescriptions.TimeSigX,
        [GlyphName.Tremolo1] = GlyphNameDescriptions.Tremolo1,
        [GlyphName.Tremolo2] = GlyphNameDescriptions.Tremolo2,
        [GlyphName.Tremolo3] = GlyphNameDescriptions.Tremolo3,
        [GlyphName.Tremolo4] = GlyphNameDescriptions.Tremolo4,
        [GlyphName.Tremolo5] = GlyphNameDescriptions.Tremolo5,
        [GlyphName.TremoloDivisiDots2] = GlyphNameDescriptions.TremoloDivisiDots2,
        [GlyphName.TremoloDivisiDots3] = GlyphNameDescriptions.TremoloDivisiDots3,
        [GlyphName.TremoloDivisiDots4] = GlyphNameDescriptions.TremoloDivisiDots4,
        [GlyphName.TremoloDivisiDots6] = GlyphNameDescriptions.TremoloDivisiDots6,
        [GlyphName.TremoloFingered1] = GlyphNameDescriptions.TremoloFingered1,
        [GlyphName.TremoloFingered2] = GlyphNameDescriptions.TremoloFingered2,
        [GlyphName.TremoloFingered3] = GlyphNameDescriptions.TremoloFingered3,
        [GlyphName.TremoloFingered4] = GlyphNameDescriptions.TremoloFingered4,
        [GlyphName.TremoloFingered5] = GlyphNameDescriptions.TremoloFingered5,
        [GlyphName.TripleTongueAbove] = GlyphNameDescriptions.TripleTongueAbove,
        [GlyphName.TripleTongueBelow] = GlyphNameDescriptions.TripleTongueBelow,
        [GlyphName.Tuplet0] = GlyphNameDescriptions.Tuplet0,
        [GlyphName.Tuplet1] = GlyphNameDescriptions.Tuplet1,
        [GlyphName.Tuplet2] = GlyphNameDescriptions.Tuplet2,
        [GlyphName.Tuplet3] = GlyphNameDescriptions.Tuplet3,
        [GlyphName.Tuplet4] = GlyphNameDescriptions.Tuplet4,
        [GlyphName.Tuplet5] = GlyphNameDescriptions.Tuplet5,
        [GlyphName.Tuplet6] = GlyphNameDescriptions.Tuplet6,
        [GlyphName.Tuplet7] = GlyphNameDescriptions.Tuplet7,
        [GlyphName.Tuplet8] = GlyphNameDescriptions.Tuplet8,
        [GlyphName.Tuplet9] = GlyphNameDescriptions.Tuplet9,
        [GlyphName.TupletColon] = GlyphNameDescriptions.TupletColon,
        [GlyphName.UnmeasuredTremolo] = GlyphNameDescriptions.UnmeasuredTremolo,
        [GlyphName.UnmeasuredTremoloSimple] = GlyphNameDescriptions.UnmeasuredTremoloSimple,
        [GlyphName.UnpitchedPercussionClef1] = GlyphNameDescriptions.UnpitchedPercussionClef1,
        [GlyphName.UnpitchedPercussionClef2] = GlyphNameDescriptions.UnpitchedPercussionClef2,
        [GlyphName.Ventiduesima] = GlyphNameDescriptions.Ventiduesima,
        [GlyphName.VentiduesimaAlta] = GlyphNameDescriptions.VentiduesimaAlta,
        [GlyphName.VentiduesimaBassa] = GlyphNameDescriptions.VentiduesimaBassa,
        [GlyphName.VentiduesimaBassaMb] = GlyphNameDescriptions.VentiduesimaBassaMb,
        [GlyphName.VocalFingerClickStockhausen] = GlyphNameDescriptions.VocalFingerClickStockhausen,
        [GlyphName.VocalHalbGesungen] = GlyphNameDescriptions.VocalHalbGesungen,
        [GlyphName.VocalMouthClosed] = GlyphNameDescriptions.VocalMouthClosed,
        [GlyphName.VocalMouthOpen] = GlyphNameDescriptions.VocalMouthOpen,
        [GlyphName.VocalMouthPursed] = GlyphNameDescriptions.VocalMouthPursed,
        [GlyphName.VocalMouthSlightlyOpen] = GlyphNameDescriptions.VocalMouthSlightlyOpen,
        [GlyphName.VocalMouthWideOpen] = GlyphNameDescriptions.VocalMouthWideOpen,
        [GlyphName.VocalNasalVoice] = GlyphNameDescriptions.VocalNasalVoice,
        [GlyphName.VocalSprechgesang] = GlyphNameDescriptions.VocalSprechgesang,
        [GlyphName.VocalTongueClickStockhausen] = GlyphNameDescriptions.VocalTongueClickStockhausen,
        [GlyphName.VocalTongueFingerClickStockhausen] = GlyphNameDescriptions.VocalTongueFingerClickStockhausen,
        [GlyphName.VocalsSussurando] = GlyphNameDescriptions.VocalsSussurando,
        [GlyphName.WiggleArpeggiatoDown] = GlyphNameDescriptions.WiggleArpeggiatoDown,
        [GlyphName.WiggleArpeggiatoDownArrow] = GlyphNameDescriptions.WiggleArpeggiatoDownArrow,
        [GlyphName.WiggleArpeggiatoDownSwash] = GlyphNameDescriptions.WiggleArpeggiatoDownSwash,
        [GlyphName.WiggleArpeggiatoUp] = GlyphNameDescriptions.WiggleArpeggiatoUp,
        [GlyphName.WiggleArpeggiatoUpArrow] = GlyphNameDescriptions.WiggleArpeggiatoUpArrow,
        [GlyphName.WiggleArpeggiatoUpSwash] = GlyphNameDescriptions.WiggleArpeggiatoUpSwash,
        [GlyphName.WiggleCircular] = GlyphNameDescriptions.WiggleCircular,
        [GlyphName.WiggleCircularConstant] = GlyphNameDescriptions.WiggleCircularConstant,
        [GlyphName.WiggleCircularConstantFlipped] = GlyphNameDescriptions.WiggleCircularConstantFlipped,
        [GlyphName.WiggleCircularConstantFlippedLarge] = GlyphNameDescriptions.WiggleCircularConstantFlippedLarge,
        [GlyphName.WiggleCircularConstantLarge] = GlyphNameDescriptions.WiggleCircularConstantLarge,
        [GlyphName.WiggleCircularEnd] = GlyphNameDescriptions.WiggleCircularEnd,
        [GlyphName.WiggleCircularLarge] = GlyphNameDescriptions.WiggleCircularLarge,
        [GlyphName.WiggleCircularLarger] = GlyphNameDescriptions.WiggleCircularLarger,
        [GlyphName.WiggleCircularLargerStill] = GlyphNameDescriptions.WiggleCircularLargerStill,
        [GlyphName.WiggleCircularLargest] = GlyphNameDescriptions.WiggleCircularLargest,
        [GlyphName.WiggleCircularSmall] = GlyphNameDescriptions.WiggleCircularSmall,
        [GlyphName.WiggleCircularStart] = GlyphNameDescriptions.WiggleCircularStart,
        [GlyphName.WiggleGlissando] = GlyphNameDescriptions.WiggleGlissando,
        [GlyphName.WiggleGlissandoGroup1] = GlyphNameDescriptions.WiggleGlissandoGroup1,
        [GlyphName.WiggleGlissandoGroup2] = GlyphNameDescriptions.WiggleGlissandoGroup2,
        [GlyphName.WiggleGlissandoGroup3] = GlyphNameDescriptions.WiggleGlissandoGroup3,
        [GlyphName.WiggleRandom1] = GlyphNameDescriptions.WiggleRandom1,
        [GlyphName.WiggleRandom2] = GlyphNameDescriptions.WiggleRandom2,
        [GlyphName.WiggleRandom3] = GlyphNameDescriptions.WiggleRandom3,
        [GlyphName.WiggleRandom4] = GlyphNameDescriptions.WiggleRandom4,
        [GlyphName.WiggleSawtooth] = GlyphNameDescriptions.WiggleSawtooth,
        [GlyphName.WiggleSawtoothNarrow] = GlyphNameDescriptions.WiggleSawtoothNarrow,
        [GlyphName.WiggleSawtoothWide] = GlyphNameDescriptions.WiggleSawtoothWide,
        [GlyphName.WiggleSquareWave] = GlyphNameDescriptions.WiggleSquareWave,
        [GlyphName.WiggleSquareWaveNarrow] = GlyphNameDescriptions.WiggleSquareWaveNarrow,
        [GlyphName.WiggleSquareWaveWide] = GlyphNameDescriptions.WiggleSquareWaveWide,
        [GlyphName.WiggleTrill] = GlyphNameDescriptions.WiggleTrill,
        [GlyphName.WiggleTrillFast] = GlyphNameDescriptions.WiggleTrillFast,
        [GlyphName.WiggleTrillFaster] = GlyphNameDescriptions.WiggleTrillFaster,
        [GlyphName.WiggleTrillFasterStill] = GlyphNameDescriptions.WiggleTrillFasterStill,
        [GlyphName.WiggleTrillFastest] = GlyphNameDescriptions.WiggleTrillFastest,
        [GlyphName.WiggleTrillSlow] = GlyphNameDescriptions.WiggleTrillSlow,
        [GlyphName.WiggleTrillSlower] = GlyphNameDescriptions.WiggleTrillSlower,
        [GlyphName.WiggleTrillSlowerStill] = GlyphNameDescriptions.WiggleTrillSlowerStill,
        [GlyphName.WiggleTrillSlowest] = GlyphNameDescriptions.WiggleTrillSlowest,
        [GlyphName.WiggleVIbratoLargestSlower] = GlyphNameDescriptions.WiggleVIbratoLargestSlower,
        [GlyphName.WiggleVIbratoMediumSlower] = GlyphNameDescriptions.WiggleVIbratoMediumSlower,
        [GlyphName.WiggleVibrato] = GlyphNameDescriptions.WiggleVibrato,
        [GlyphName.WiggleVibratoLargeFast] = GlyphNameDescriptions.WiggleVibratoLargeFast,
        [GlyphName.WiggleVibratoLargeFaster] = GlyphNameDescriptions.WiggleVibratoLargeFaster,
        [GlyphName.WiggleVibratoLargeFasterStill] = GlyphNameDescriptions.WiggleVibratoLargeFasterStill,
        [GlyphName.WiggleVibratoLargeFastest] = GlyphNameDescriptions.WiggleVibratoLargeFastest,
        [GlyphName.WiggleVibratoLargeSlow] = GlyphNameDescriptions.WiggleVibratoLargeSlow,
        [GlyphName.WiggleVibratoLargeSlower] = GlyphNameDescriptions.WiggleVibratoLargeSlower,
        [GlyphName.WiggleVibratoLargeSlowest] = GlyphNameDescriptions.WiggleVibratoLargeSlowest,
        [GlyphName.WiggleVibratoLargestFast] = GlyphNameDescriptions.WiggleVibratoLargestFast,
        [GlyphName.WiggleVibratoLargestFaster] = GlyphNameDescriptions.WiggleVibratoLargestFaster,
        [GlyphName.WiggleVibratoLargestFasterStill] = GlyphNameDescriptions.WiggleVibratoLargestFasterStill,
        [GlyphName.WiggleVibratoLargestFastest] = GlyphNameDescriptions.WiggleVibratoLargestFastest,
        [GlyphName.WiggleVibratoLargestSlow] = GlyphNameDescriptions.WiggleVibratoLargestSlow,
        [GlyphName.WiggleVibratoLargestSlowest] = GlyphNameDescriptions.WiggleVibratoLargestSlowest,
        [GlyphName.WiggleVibratoMediumFast] = GlyphNameDescriptions.WiggleVibratoMediumFast,
        [GlyphName.WiggleVibratoMediumFaster] = GlyphNameDescriptions.WiggleVibratoMediumFaster,
        [GlyphName.WiggleVibratoMediumFasterStill] = GlyphNameDescriptions.WiggleVibratoMediumFasterStill,
        [GlyphName.WiggleVibratoMediumFastest] = GlyphNameDescriptions.WiggleVibratoMediumFastest,
        [GlyphName.WiggleVibratoMediumSlow] = GlyphNameDescriptions.WiggleVibratoMediumSlow,
        [GlyphName.WiggleVibratoMediumSlowest] = GlyphNameDescriptions.WiggleVibratoMediumSlowest,
        [GlyphName.WiggleVibratoSmallFast] = GlyphNameDescriptions.WiggleVibratoSmallFast,
        [GlyphName.WiggleVibratoSmallFaster] = GlyphNameDescriptions.WiggleVibratoSmallFaster,
        [GlyphName.WiggleVibratoSmallFasterStill] = GlyphNameDescriptions.WiggleVibratoSmallFasterStill,
        [GlyphName.WiggleVibratoSmallFastest] = GlyphNameDescriptions.WiggleVibratoSmallFastest,
        [GlyphName.WiggleVibratoSmallSlow] = GlyphNameDescriptions.WiggleVibratoSmallSlow,
        [GlyphName.WiggleVibratoSmallSlower] = GlyphNameDescriptions.WiggleVibratoSmallSlower,
        [GlyphName.WiggleVibratoSmallSlowest] = GlyphNameDescriptions.WiggleVibratoSmallSlowest,
        [GlyphName.WiggleVibratoSmallestFast] = GlyphNameDescriptions.WiggleVibratoSmallestFast,
        [GlyphName.WiggleVibratoSmallestFaster] = GlyphNameDescriptions.WiggleVibratoSmallestFaster,
        [GlyphName.WiggleVibratoSmallestFasterStill] = GlyphNameDescriptions.WiggleVibratoSmallestFasterStill,
        [GlyphName.WiggleVibratoSmallestFastest] = GlyphNameDescriptions.WiggleVibratoSmallestFastest,
        [GlyphName.WiggleVibratoSmallestSlow] = GlyphNameDescriptions.WiggleVibratoSmallestSlow,
        [GlyphName.WiggleVibratoSmallestSlower] = GlyphNameDescriptions.WiggleVibratoSmallestSlower,
        [GlyphName.WiggleVibratoSmallestSlowest] = GlyphNameDescriptions.WiggleVibratoSmallestSlowest,
        [GlyphName.WiggleVibratoStart] = GlyphNameDescriptions.WiggleVibratoStart,
        [GlyphName.WiggleVibratoWide] = GlyphNameDescriptions.WiggleVibratoWide,
        [GlyphName.WiggleWavy] = GlyphNameDescriptions.WiggleWavy,
        [GlyphName.WiggleWavyNarrow] = GlyphNameDescriptions.WiggleWavyNarrow,
        [GlyphName.WiggleWavyWide] = GlyphNameDescriptions.WiggleWavyWide,
        [GlyphName.WindClosedHole] = GlyphNameDescriptions.WindClosedHole,
        [GlyphName.WindFlatEmbouchure] = GlyphNameDescriptions.WindFlatEmbouchure,
        [GlyphName.WindHalfClosedHole1] = GlyphNameDescriptions.WindHalfClosedHole1,
        [GlyphName.WindHalfClosedHole2] = GlyphNameDescriptions.WindHalfClosedHole2,
        [GlyphName.WindHalfClosedHole3] = GlyphNameDescriptions.WindHalfClosedHole3,
        [GlyphName.WindLessRelaxedEmbouchure] = GlyphNameDescriptions.WindLessRelaxedEmbouchure,
        [GlyphName.WindLessTightEmbouchure] = GlyphNameDescriptions.WindLessTightEmbouchure,
        [GlyphName.WindMouthpiecePop] = GlyphNameDescriptions.WindMouthpiecePop,
        [GlyphName.WindMultiphonicsBlackStem] = GlyphNameDescriptions.WindMultiphonicsBlackStem,
        [GlyphName.WindMultiphonicsBlackWhiteStem] = GlyphNameDescriptions.WindMultiphonicsBlackWhiteStem,
        [GlyphName.WindMultiphonicsWhiteStem] = GlyphNameDescriptions.WindMultiphonicsWhiteStem,
        [GlyphName.WindOpenHole] = GlyphNameDescriptions.WindOpenHole,
        [GlyphName.WindReedPositionIn] = GlyphNameDescriptions.WindReedPositionIn,
        [GlyphName.WindReedPositionNormal] = GlyphNameDescriptions.WindReedPositionNormal,
        [GlyphName.WindReedPositionOut] = GlyphNameDescriptions.WindReedPositionOut,
        [GlyphName.WindRelaxedEmbouchure] = GlyphNameDescriptions.WindRelaxedEmbouchure,
        [GlyphName.WindRimOnly] = GlyphNameDescriptions.WindRimOnly,
        [GlyphName.WindSharpEmbouchure] = GlyphNameDescriptions.WindSharpEmbouchure,
        [GlyphName.WindStrongAirPressure] = GlyphNameDescriptions.WindStrongAirPressure,
        [GlyphName.WindThreeQuartersClosedHole] = GlyphNameDescriptions.WindThreeQuartersClosedHole,
        [GlyphName.WindTightEmbouchure] = GlyphNameDescriptions.WindTightEmbouchure,
        [GlyphName.WindTrillKey] = GlyphNameDescriptions.WindTrillKey,
        [GlyphName.WindVeryTightEmbouchure] = GlyphNameDescriptions.WindVeryTightEmbouchure,
        [GlyphName.WindWeakAirPressure] = GlyphNameDescriptions.WindWeakAirPressure,
    };
}
